{"version":3,"sources":["webpack:///0.dist/bundle-webpack-lazy-loading.js","webpack:///./app-lazy/aot/app-lazy/lazy-loaded-treeview.module.ngfactory.ts","webpack:///./components/lazy-loaded-tree-view/redux/store.ts","webpack:///./~/@angular/http/@angular/http.es5.js","webpack:///./components/lazy-loaded-tree-view/tree-node-service.ts","webpack:///./components/lazy-loaded-tree-view/country-demo.ts","webpack:///./components/lazy-loaded-tree-view/tree-node.ts","webpack:///./components/lazy-loaded-tree-view/tree-view.ts","webpack:///./app-lazy/aot/components/lazy-loaded-tree-view/country-demo.ngfactory.ts","webpack:///./app-lazy/aot/components/lazy-loaded-tree-view/tree-view.ngfactory.ts","webpack:///./app-lazy/lazy-loaded-treeview.module.ts","webpack:///./components/lazy-loaded-tree-view/redux/tree-node-reducer.ts","webpack:///./~/rxjs/add/operator/map.js"],"names":["webpackJsonp","65","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","LazyTreeviewModuleNgFactory","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__lazy_loaded_treeview_module__","__WEBPACK_IMPORTED_MODULE_2__angular_common__","__WEBPACK_IMPORTED_MODULE_3__angular_http__","__WEBPACK_IMPORTED_MODULE_4__angular_router__","__WEBPACK_IMPORTED_MODULE_5__components_lazy_loaded_tree_view_country_demo_ngfactory__","__WEBPACK_IMPORTED_MODULE_6__components_lazy_loaded_tree_view_country_demo__","__extends","this","b","__","constructor","p","hasOwnProperty","prototype","create","LazyTreeviewModuleInjector","_super","parent","call","get","__NgLocalization_4","enumerable","configurable","__BrowserXhr_5","__ResponseOptions_6","__XSRFStrategy_7","__XHRBackend_8","_BrowserXhr_5","_ResponseOptions_6","_XSRFStrategy_7","__RequestOptions_9","__Http_10","_XHRBackend_8","_RequestOptions_9","createInternal","_CommonModule_0","_HttpModule_1","_RouterModule_2","_LazyTreeviewModule_3","_ROUTES_11","path","component","getInternal","token","notFoundResult","_NgLocalization_4","_Http_10","destroyInternal","67","Store","__WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__","__WEBPACK_IMPORTED_MODULE_1__angular_http__","n","__WEBPACK_IMPORTED_MODULE_2__tree_node_reducer__","_http","_this","dispatcher","treeNodes","nodes","subscribe","action","handleAction","name","key","next","url","map","res","json","i","getTreeNodes","asObservable","dispatchAction","ctorParameters","type","68","normalizeMethodName","method","toUpperCase","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","Error","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","view","Uint16Array","length","strLen","charCodeAt","buffer","paramParser","rawParams","Map","split","forEach","param","eqIdx","indexOf","_a","slice","val","list","push","set","standardEncoding","v","encodeURIComponent","replace","_getJsonpConnections","w","window","_jsonpConnections","JSONP_HOME","urlEncodeParams","params","searchParams","URLSearchParams","keys","Array","isArray","element","append","toString","httpRequest","backend","request","createConnection","response","mergeOptions","defaultOpts","providedOpts","newOptions","merge","RequestOptions","search","headers","body","withCredentials","responseType","_createDefaultCookieXSRFStrategy","CookieXSRFStrategy","httpFactory","xhrBackend","requestOptions","Http","jsonpFactory","jsonpBackend","Jsonp","BrowserXhr","XHRBackend","BaseRequestOptions","BaseResponseOptions","ResponseOptions","HttpModule","XSRFStrategy","__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__","build","XMLHttpRequest","decorators","ReadyState","Unsent","Open","HeadersReceived","Loading","Done","Cancelled","ResponseType","Basic","Cors","Default","Opaque","ContentType","NONE","JSON","FORM","FORM_DATA","TEXT","BLOB","ARRAY_BUFFER","ResponseContentType","Text","Json","ArrayBuffer","Blob","Headers","_headers","_normalizedNames","values","delete","fromResponseHeaderString","headersString","line","index","trim","getAll","lcName","toLowerCase","fn","has","from","join","mayBeSetNormalizedName","toJSON","serialized","apply","entries","_b","status","statusText","options","ConnectionBackend","Connection","configureRequest","req","isSuccess","QueryEncoder","encodeKey","k","encodeValue","queryEncoder","paramsMap","clone","appendAll","storedParam","setAll","replaceAll","paramsList","Body","_body","parse","text","encodingHint","String","fromCharCode","Uint8Array","stringify","arrayBuffer","blob","Response","responseOptions","ok","_nextRequestId","BrowserJsonp","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","removeConnection","send","appendChild","cleanup","parentNode","removeChild","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","finished","data","JSONPConnection_","_dom","baseResponseOptions","_finished","TypeError","responseObserver","readyState","_id","callback","lastIndexOf","substring","script","_script","onLoad","event","responseOptions_1","error","_responseData","complete","onError","message","addEventListener","removeEventListener","JSONPBackend","arguments","JSONPBackend_","_browserJSONP","_baseResponseOptions","XSSI_PREFIX","XHRConnection","browserXHR","_xhr","open","responseText","err","setDetectedContentType","setRequestHeader","getBody","abort","contentType","_cookieName","_headerName","xsrfToken","getCookie","_browserXHR","_xsrfStrategy","_mergeSearchParams","_parseParams","objParams","item","_appendParam","Request","paramsArg","prefix","detectContentType","ArrayBuffer$1","detectContentTypeFromBody","FormData","Blob$1","noop","_backend","_defaultOptions","responseObservable","post","put","patch","head","defaultOptions","args","providers","provide","useFactory","deps","useClass","JsonpModule","69","TreeNodeService","__WEBPACK_IMPORTED_MODULE_0__redux_store__","_store","loadTreeNodes","root","70","CountryDemo","__WEBPACK_IMPORTED_MODULE_0__tree_node__","ngOnInit","71","TreeNode","showIcon","expanded","icon","getIcon","expand","72","LazyTreeView","__WEBPACK_IMPORTED_MODULE_1__tree_node_service__","_treeNodeService","items","subscription","ngOnDestroy","unsubscribe","74","View_CountryDemo_0","l","__WEBPACK_IMPORTED_MODULE_1__tree_view_ngfactory__","__WEBPACK_IMPORTED_MODULE_2__components_lazy_loaded_tree_view_tree_view__","__WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_redux_store__","__WEBPACK_IMPORTED_MODULE_4__components_lazy_loaded_tree_view_tree_node_service__","ck","View_CountryDemo_Host_0","RenderType_CountryDemo","__WEBPACK_IMPORTED_MODULE_5__components_lazy_loaded_tree_view_country_demo__","__WEBPACK_IMPORTED_MODULE_6__angular_http__","CountryDemoNgFactory","styles_CountryDemo","encapsulation","styles","75","View_LazyTreeView_2","View_LazyTreeView_0","RenderType_LazyTreeView","__WEBPACK_IMPORTED_MODULE_1__components_lazy_loaded_tree_view_tree_view__","__WEBPACK_IMPORTED_MODULE_2__components_lazy_loaded_tree_view_redux_store__","__WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_tree_node_service__","context","$implicit","View_LazyTreeView_1","en","$event","ad","__WEBPACK_IMPORTED_MODULE_4__angular_common__","klass","ngClass","ngIf","ngForOf","View_LazyTreeView_Host_0","styles_LazyTreeView","77","LazyTreeviewModule","__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__","79","treeNodeReducer","state","85","exports","Observable_1","map_1","Observable"],"mappings":"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","file":"0.dist/bundle-webpack-lazy-loading.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 65:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LazyTreeviewModuleNgFactory\", function() { return LazyTreeviewModuleNgFactory; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lazy_loaded_treeview_module__ = __webpack_require__(77);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_http__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_lazy_loaded_tree_view_country_demo_ngfactory__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_lazy_loaded_tree_view_country_demo__ = __webpack_require__(70);\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n\nvar LazyTreeviewModuleInjector = (function (_super) {\n    __extends(LazyTreeviewModuleInjector, _super);\n    function LazyTreeviewModuleInjector(parent) {\n        return _super.call(this, parent, [__WEBPACK_IMPORTED_MODULE_5__components_lazy_loaded_tree_view_country_demo_ngfactory__[\"a\" /* CountryDemoNgFactory */]], []) || this;\n    }\n    Object.defineProperty(LazyTreeviewModuleInjector.prototype, \"_NgLocalization_4\", {\n        get: function () {\n            if ((this.__NgLocalization_4 == null)) {\n                (this.__NgLocalization_4 = new __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"a\" /* NgLocaleLocalization */](this.parent.get(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"c\" /* LOCALE_ID */])));\n            }\n            return this.__NgLocalization_4;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LazyTreeviewModuleInjector.prototype, \"_BrowserXhr_5\", {\n        get: function () {\n            if ((this.__BrowserXhr_5 == null)) {\n                (this.__BrowserXhr_5 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"a\" /* BrowserXhr */]());\n            }\n            return this.__BrowserXhr_5;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LazyTreeviewModuleInjector.prototype, \"_ResponseOptions_6\", {\n        get: function () {\n            if ((this.__ResponseOptions_6 == null)) {\n                (this.__ResponseOptions_6 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"b\" /* BaseResponseOptions */]());\n            }\n            return this.__ResponseOptions_6;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LazyTreeviewModuleInjector.prototype, \"_XSRFStrategy_7\", {\n        get: function () {\n            if ((this.__XSRFStrategy_7 == null)) {\n                (this.__XSRFStrategy_7 = __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"c\" /* ɵb */]());\n            }\n            return this.__XSRFStrategy_7;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LazyTreeviewModuleInjector.prototype, \"_XHRBackend_8\", {\n        get: function () {\n            if ((this.__XHRBackend_8 == null)) {\n                (this.__XHRBackend_8 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"d\" /* XHRBackend */](this._BrowserXhr_5, this._ResponseOptions_6, this._XSRFStrategy_7));\n            }\n            return this.__XHRBackend_8;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LazyTreeviewModuleInjector.prototype, \"_RequestOptions_9\", {\n        get: function () {\n            if ((this.__RequestOptions_9 == null)) {\n                (this.__RequestOptions_9 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"e\" /* BaseRequestOptions */]());\n            }\n            return this.__RequestOptions_9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LazyTreeviewModuleInjector.prototype, \"_Http_10\", {\n        get: function () {\n            if ((this.__Http_10 == null)) {\n                (this.__Http_10 = __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"f\" /* ɵc */](this._XHRBackend_8, this._RequestOptions_9));\n            }\n            return this.__Http_10;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LazyTreeviewModuleInjector.prototype.createInternal = function () {\n        this._CommonModule_0 = new __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"b\" /* CommonModule */]();\n        this._HttpModule_1 = new __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"g\" /* HttpModule */]();\n        this._RouterModule_2 = new __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"p\" /* RouterModule */](this.parent.get(__WEBPACK_IMPORTED_MODULE_4__angular_router__[\"q\" /* ɵa */], null), this.parent.get(__WEBPACK_IMPORTED_MODULE_4__angular_router__[\"j\" /* Router */], null));\n        this._LazyTreeviewModule_3 = new __WEBPACK_IMPORTED_MODULE_1__lazy_loaded_treeview_module__[\"a\" /* LazyTreeviewModule */]();\n        this._ROUTES_11 = [[{\n                    path: '',\n                    component: __WEBPACK_IMPORTED_MODULE_6__components_lazy_loaded_tree_view_country_demo__[\"a\" /* CountryDemo */]\n                }\n            ]];\n        return this._LazyTreeviewModule_3;\n    };\n    LazyTreeviewModuleInjector.prototype.getInternal = function (token, notFoundResult) {\n        if ((token === __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"b\" /* CommonModule */])) {\n            return this._CommonModule_0;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"g\" /* HttpModule */])) {\n            return this._HttpModule_1;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"p\" /* RouterModule */])) {\n            return this._RouterModule_2;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_1__lazy_loaded_treeview_module__[\"a\" /* LazyTreeviewModule */])) {\n            return this._LazyTreeviewModule_3;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_2__angular_common__[\"h\" /* NgLocalization */])) {\n            return this._NgLocalization_4;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"a\" /* BrowserXhr */])) {\n            return this._BrowserXhr_5;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"h\" /* ResponseOptions */])) {\n            return this._ResponseOptions_6;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"i\" /* XSRFStrategy */])) {\n            return this._XSRFStrategy_7;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"d\" /* XHRBackend */])) {\n            return this._XHRBackend_8;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"j\" /* RequestOptions */])) {\n            return this._RequestOptions_9;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_3__angular_http__[\"k\" /* Http */])) {\n            return this._Http_10;\n        }\n        if ((token === __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"s\" /* ROUTES */])) {\n            return this._ROUTES_11;\n        }\n        return notFoundResult;\n    };\n    LazyTreeviewModuleInjector.prototype.destroyInternal = function () {\n    };\n    return LazyTreeviewModuleInjector;\n}(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"B\" /* ɵNgModuleInjector */]));\nvar LazyTreeviewModuleNgFactory = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"C\" /* NgModuleFactory */](LazyTreeviewModuleInjector, __WEBPACK_IMPORTED_MODULE_1__lazy_loaded_treeview_module__[\"a\" /* LazyTreeviewModule */]);\n//# sourceMappingURL=lazy-loaded-treeview.module.ngfactory.js.map\n\n/***/ }),\n\n/***/ 67:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Store; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(68);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__tree_node_reducer__ = __webpack_require__(79);\n\n\n\nvar Store = (function () {\n    function Store(_http) {\n        var _this = this;\n        this._http = _http;\n        this.dispatcher = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__[\"Subject\"]();\n        this.treeNodes = {};\n        this.nodes = {};\n        this.dispatcher.subscribe(function (action) { return _this.handleAction(action); });\n    }\n    Store.prototype.handleAction = function (action) {\n        var _this = this;\n        if (action.name === 'LOAD_NODES') {\n            if (this.nodes[action.key]) {\n                this.treeNodes[action.key].next(this.nodes[action.key]);\n            }\n            else {\n                this._http\n                    .get(action.url)\n                    .map(function (res) { return res.json(); })\n                    .subscribe(function (res) {\n                    _this.nodes[action.key] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__tree_node_reducer__[\"a\" /* treeNodeReducer */])(res, action);\n                    _this.treeNodes[action.key].next(_this.nodes[action.key]);\n                });\n            }\n        }\n    };\n    Store.prototype.getTreeNodes = function (key) {\n        if (!this.treeNodes.hasOwnProperty(key)) {\n            this.treeNodes[key] = new __WEBPACK_IMPORTED_MODULE_0_rxjs_Subject__[\"Subject\"]();\n        }\n        return this.treeNodes[key].asObservable();\n    };\n    Store.prototype.dispatchAction = function (action) {\n        this.dispatcher.next(action);\n    };\n    Store.ctorParameters = function () { return [{ type: __WEBPACK_IMPORTED_MODULE_1__angular_http__[\"k\" /* Http */] }]; };\n    return Store;\n}());\n\n//# sourceMappingURL=store.js.map\n\n/***/ }),\n\n/***/ 68:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BrowserXhr; });\n/* unused harmony export JSONPBackend */\n/* unused harmony export JSONPConnection */\n/* unused harmony export CookieXSRFStrategy */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return XHRBackend; });\n/* unused harmony export XHRConnection */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return BaseRequestOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return RequestOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BaseResponseOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return ResponseOptions; });\n/* unused harmony export ReadyState */\n/* unused harmony export RequestMethod */\n/* unused harmony export ResponseContentType */\n/* unused harmony export ResponseType */\n/* unused harmony export Headers */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return Http; });\n/* unused harmony export Jsonp */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return HttpModule; });\n/* unused harmony export JsonpModule */\n/* unused harmony export Connection */\n/* unused harmony export ConnectionBackend */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return XSRFStrategy; });\n/* unused harmony export Request */\n/* unused harmony export Response */\n/* unused harmony export QueryEncoder */\n/* unused harmony export URLSearchParams */\n/* unused harmony export VERSION */\n/* unused harmony export ɵg */\n/* unused harmony export ɵa */\n/* unused harmony export ɵf */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return _createDefaultCookieXSRFStrategy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return httpFactory; });\n/* unused harmony export ɵd */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__ = __webpack_require__(6);\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.1.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\nvar Headers = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * @return {?}\n     */\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[((_this._normalizedNames.get(name)))] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\nvar ResponseOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function ResponseOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\nvar BaseResponseOptions = (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    return BaseResponseOptions;\n}(ResponseOptions));\nBaseResponseOptions.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nBaseResponseOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\nvar ConnectionBackend = (function () {\n    function ConnectionBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\nvar Connection = (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\nvar XSRFStrategy = (function () {\n    function XSRFStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n    return XSRFStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} method\n * @return {?}\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\nvar QueryEncoder = (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nvar URLSearchParams = (function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar Body = (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(/** @type {?} */ (this._body)));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = (function () {\n    function BrowserJsonp() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    return BrowserJsonp;\n}());\nBrowserJsonp.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nBrowserJsonp.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPConnection = (function () {\n    function JSONPConnection() {\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @abstract\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = function (data) { };\n    return JSONPConnection;\n}());\nvar JSONPConnection_ = (function (_super) {\n    __extends(JSONPConnection_, _super);\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._dom = _dom;\n        _this.baseResponseOptions = baseResponseOptions;\n        _this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this.request = req;\n        _this.response = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n        return _this;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection_.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection_;\n}(JSONPConnection));\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPBackend = (function (_super) {\n    __extends(JSONPBackend, _super);\n    function JSONPBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return JSONPBackend;\n}(ConnectionBackend));\nvar JSONPBackend_ = (function (_super) {\n    __extends(JSONPBackend_, _super);\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend_.prototype.createConnection = function (request) {\n        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    return JSONPBackend_;\n}(JSONPBackend));\nJSONPBackend_.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nJSONPBackend_.ctorParameters = function () { return [\n    { type: BrowserJsonp, },\n    { type: ResponseOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\nvar XHRConnection = (function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"](function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\nvar CookieXSRFStrategy = (function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var /** @type {?} */ xsrfToken = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__angular_platform_browser__[\"u\" /* ɵgetDOM */])().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nvar XHRBackend = (function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    return XHRBackend;\n}());\nXHRBackend.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nXHRBackend.ctorParameters = function () { return [\n    { type: BrowserXhr, },\n    { type: ResponseOptions, },\n    { type: XSRFStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar RequestOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function RequestOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, params = _b.params, withCredentials = _b.withCredentials, responseType = _b.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?=} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar BaseRequestOptions = (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    return BaseRequestOptions;\n}(RequestOptions));\nBaseRequestOptions.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nBaseRequestOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params) {\n    var /** @type {?} */ searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var /** @type {?} */ value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = ((w) /** TODO #9100 */)['FormData'] || noop;\nvar Blob$1 = ((w) /** TODO #9100 */)['Blob'] || noop;\nvar ArrayBuffer$1 = ((w) /** TODO #9100 */)['ArrayBuffer'] || noop;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return (newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        })));\n    }\n    return (newOptions.merge(new RequestOptions({ method: method, url: url })));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\nvar Http = (function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    return Http;\n}());\nHttp.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nHttp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * \\@experimental\n */\nvar Jsonp = (function (_super) {\n    __extends(Jsonp, _super);\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    return Jsonp;\n}(Http));\nJsonp.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"D\" /* Injectable */] },\n];\n/**\n * @nocollapse\n */\nJsonp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\nvar HttpModule = (function () {\n    function HttpModule() {\n    }\n    return HttpModule;\n}());\nHttpModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"E\" /* NgModule */], args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpModule.ctorParameters = function () { return []; };\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\nvar JsonpModule = (function () {\n    function JsonpModule() {\n    }\n    return JsonpModule;\n}());\nJsonpModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"E\" /* NgModule */], args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    { provide: JSONPBackend, useClass: JSONPBackend_ },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"F\" /* Version */]('4.1.2');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the http package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n//# sourceMappingURL=http.es5.js.map\n\n\n/***/ }),\n\n/***/ 69:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TreeNodeService; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__redux_store__ = __webpack_require__(67);\n\nvar TreeNodeService = (function () {\n    function TreeNodeService(_store) {\n        this._store = _store;\n    }\n    TreeNodeService.prototype.loadTreeNodes = function (root) {\n        if (root.url) {\n            this._store.dispatchAction({ key: root.key, url: root.url, name: 'LOAD_NODES' });\n        }\n    };\n    TreeNodeService.ctorParameters = function () { return [{ type: __WEBPACK_IMPORTED_MODULE_0__redux_store__[\"a\" /* Store */] }]; };\n    return TreeNodeService;\n}());\n\n//# sourceMappingURL=tree-node-service.js.map\n\n/***/ }),\n\n/***/ 70:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CountryDemo; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tree_node__ = __webpack_require__(71);\n\nvar CountryDemo = (function () {\n    function CountryDemo() {\n        this.node = null;\n    }\n    CountryDemo.prototype.ngOnInit = function () {\n        this.node = new __WEBPACK_IMPORTED_MODULE_0__tree_node__[\"a\" /* TreeNode */]('root', './tree-view-data/countries.json', '');\n    };\n    return CountryDemo;\n}());\n\n//# sourceMappingURL=country-demo.js.map\n\n/***/ }),\n\n/***/ 71:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TreeNode; });\nvar TreeNode = (function () {\n    function TreeNode(key, url, name) {\n        this.key = key;\n        this.url = url;\n        this.name = name;\n        this.showIcon = false;\n        this.expanded = false;\n        this.icon = null;\n        if (url) {\n            this.showIcon = true;\n            this.icon = this.getIcon();\n        }\n    }\n    TreeNode.prototype.expand = function () {\n        this.expanded = !this.expanded;\n        this.icon = this.getIcon();\n    };\n    TreeNode.prototype.getIcon = function () {\n        if (this.showIcon === true) {\n            if (this.expanded) {\n                return '- ';\n            }\n            return '+ ';\n        }\n        return null;\n    };\n    return TreeNode;\n}());\n\n//# sourceMappingURL=tree-node.js.map\n\n/***/ }),\n\n/***/ 72:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LazyTreeView; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__redux_store__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tree_node_service__ = __webpack_require__(69);\n\n\nvar LazyTreeView = (function () {\n    function LazyTreeView(_store, _treeNodeService) {\n        this._store = _store;\n        this._treeNodeService = _treeNodeService;\n        this.items = [];\n    }\n    LazyTreeView.prototype.ngOnInit = function () {\n        var _this = this;\n        this.subscription = this._store.getTreeNodes(this.root.key).subscribe(function (res) {\n            _this.items = res;\n        });\n        this._treeNodeService.loadTreeNodes(this.root);\n    };\n    LazyTreeView.prototype.ngOnDestroy = function () {\n        this.subscription.unsubscribe();\n    };\n    LazyTreeView.ctorParameters = function () { return [{ type: __WEBPACK_IMPORTED_MODULE_0__redux_store__[\"a\" /* Store */] }, { type: __WEBPACK_IMPORTED_MODULE_1__tree_node_service__[\"a\" /* TreeNodeService */] }]; };\n    return LazyTreeView;\n}());\n\n//# sourceMappingURL=tree-view.js.map\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export RenderType_CountryDemo */\n/* unused harmony export View_CountryDemo_0 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CountryDemoNgFactory; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tree_view_ngfactory__ = __webpack_require__(75);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_lazy_loaded_tree_view_tree_view__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_redux_store__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_lazy_loaded_tree_view_tree_node_service__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_lazy_loaded_tree_view_country_demo__ = __webpack_require__(70);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_http__ = __webpack_require__(68);\n\n\n\n\n\n\n\nvar styles_CountryDemo = [];\nvar RenderType_CountryDemo = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_13\" /* ɵcrt */]({\n    encapsulation: 2,\n    styles: styles_CountryDemo,\n    data: {}\n});\nfunction View_CountryDemo_0(l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵvid */](0, [\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 1, 'h1', [], null, null, null, null, null)),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['Lazy loaded TreeView using Redux and RxJs'])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n            '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 1, 'lazy-tree-view', [], null, null, null, __WEBPACK_IMPORTED_MODULE_1__tree_view_ngfactory__[\"a\" /* View_LazyTreeView_0 */], __WEBPACK_IMPORTED_MODULE_1__tree_view_ngfactory__[\"b\" /* RenderType_LazyTreeView */])),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_17\" /* ɵdid */](245760, null, 0, __WEBPACK_IMPORTED_MODULE_2__components_lazy_loaded_tree_view_tree_view__[\"a\" /* LazyTreeView */], [\n            __WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_redux_store__[\"a\" /* Store */],\n            __WEBPACK_IMPORTED_MODULE_4__components_lazy_loaded_tree_view_tree_node_service__[\"a\" /* TreeNodeService */]\n        ], { root: [\n                0,\n                'root'\n            ]\n        }, null)\n    ], function (ck, v) {\n        var co = v.component;\n        var currVal_0 = co.node;\n        ck(v, 4, 0, currVal_0);\n    }, null);\n}\nfunction View_CountryDemo_Host_0(l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵvid */](0, [\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 3, 'country-demo', [], null, null, null, View_CountryDemo_0, RenderType_CountryDemo)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_17\" /* ɵdid */](114688, null, 0, __WEBPACK_IMPORTED_MODULE_5__components_lazy_loaded_tree_view_country_demo__[\"a\" /* CountryDemo */], [], null, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_18\" /* ɵprd */](4608, null, __WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_redux_store__[\"a\" /* Store */], __WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_redux_store__[\"a\" /* Store */], [__WEBPACK_IMPORTED_MODULE_6__angular_http__[\"k\" /* Http */]]),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_18\" /* ɵprd */](4608, null, __WEBPACK_IMPORTED_MODULE_4__components_lazy_loaded_tree_view_tree_node_service__[\"a\" /* TreeNodeService */], __WEBPACK_IMPORTED_MODULE_4__components_lazy_loaded_tree_view_tree_node_service__[\"a\" /* TreeNodeService */], [__WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_redux_store__[\"a\" /* Store */]])\n    ], function (ck, v) {\n        ck(v, 1, 0);\n    }, null);\n}\nvar CountryDemoNgFactory = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_19\" /* ɵccf */]('country-demo', __WEBPACK_IMPORTED_MODULE_5__components_lazy_loaded_tree_view_country_demo__[\"a\" /* CountryDemo */], View_CountryDemo_Host_0, {}, {}, []);\n//# sourceMappingURL=country-demo.ngfactory.js.map\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return RenderType_LazyTreeView; });\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = View_LazyTreeView_0;\n/* unused harmony export LazyTreeViewNgFactory */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components_lazy_loaded_tree_view_tree_view__ = __webpack_require__(72);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__components_lazy_loaded_tree_view_redux_store__ = __webpack_require__(67);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_tree_node_service__ = __webpack_require__(69);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(4);\n\n\n\n\n\nvar styles_LazyTreeView = [];\nvar RenderType_LazyTreeView = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_13\" /* ɵcrt */]({\n    encapsulation: 2,\n    styles: styles_LazyTreeView,\n    data: {}\n});\nfunction View_LazyTreeView_2(l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵvid */](0, [\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 4, 'div', [], null, null, null, null, null)),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n      '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 1, 'lazy-tree-view', [], null, null, null, View_LazyTreeView_0, RenderType_LazyTreeView)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_17\" /* ɵdid */](245760, null, 0, __WEBPACK_IMPORTED_MODULE_1__components_lazy_loaded_tree_view_tree_view__[\"a\" /* LazyTreeView */], [\n            __WEBPACK_IMPORTED_MODULE_2__components_lazy_loaded_tree_view_redux_store__[\"a\" /* Store */],\n            __WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_tree_node_service__[\"a\" /* TreeNodeService */]\n        ], { root: [\n                0,\n                'root'\n            ]\n        }, null),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n    ']))\n    ], function (ck, v) {\n        var currVal_0 = v.parent.context.$implicit;\n        ck(v, 3, 0, currVal_0);\n    }, null);\n}\nfunction View_LazyTreeView_1(l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵvid */](0, [\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 12, 'li', [], null, null, null, null, null)),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n\\n    '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 3, 'span', [[\n                'class',\n                'iconButton'\n            ]\n        ], null, [[\n                null,\n                'click'\n            ]\n        ], function (v, en, $event) {\n            var ad = true;\n            if (('click' === en)) {\n                var pd_0 = (v.context.$implicit.expand() !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, null, null)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_17\" /* ɵdid */](278528, null, 0, __WEBPACK_IMPORTED_MODULE_4__angular_common__[\"j\" /* NgClass */], [\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"w\" /* IterableDiffers */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"x\" /* KeyValueDiffers */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Z\" /* ElementRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_0\" /* Renderer */]\n        ], {\n            klass: [\n                0,\n                'klass'\n            ],\n            ngClass: [\n                1,\n                'ngClass'\n            ]\n        }, null),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_20\" /* ɵpod */](['tree-node-no-children']),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, [\n            '',\n            ''\n        ])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n    '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 1, 'span', [], null, null, null, null, null)),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, [\n            '',\n            ''\n        ])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n\\n    '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_21\" /* ɵand */](16777216, null, null, 1, null, View_LazyTreeView_2)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_17\" /* ɵdid */](16384, null, 0, __WEBPACK_IMPORTED_MODULE_4__angular_common__[\"k\" /* NgIf */], [\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_4\" /* ViewContainerRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_5\" /* TemplateRef */]\n        ], { ngIf: [\n                0,\n                'ngIf'\n            ]\n        }, null),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n  ']))\n    ], function (ck, v) {\n        var currVal_0 = 'iconButton';\n        var currVal_1 = ck(v, 4, 0, !v.context.$implicit.showIcon);\n        ck(v, 3, 0, currVal_0, currVal_1);\n        var currVal_4 = v.context.$implicit.expanded;\n        ck(v, 11, 0, currVal_4);\n    }, function (ck, v) {\n        var currVal_2 = v.context.$implicit.icon;\n        ck(v, 5, 0, currVal_2);\n        var currVal_3 = v.context.$implicit.name;\n        ck(v, 8, 0, currVal_3);\n    });\n}\nfunction View_LazyTreeView_0(l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵvid */](0, [\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n  '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 4, 'ul', [], null, null, null, null, null)),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n  '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_21\" /* ɵand */](16777216, null, null, 1, null, View_LazyTreeView_1)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_17\" /* ɵdid */](802816, null, 0, __WEBPACK_IMPORTED_MODULE_4__angular_common__[\"l\" /* NgForOf */], [\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_4\" /* ViewContainerRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_5\" /* TemplateRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"w\" /* IterableDiffers */]\n        ], { ngForOf: [\n                0,\n                'ngForOf'\n            ]\n        }, null),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n  '])),\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_16\" /* ɵted */](null, ['\\n']))\n    ], function (ck, v) {\n        var co = v.component;\n        var currVal_0 = co.items;\n        ck(v, 4, 0, currVal_0);\n    }, null);\n}\nfunction View_LazyTreeView_Host_0(l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵvid */](0, [\n        (l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, null, null, 1, 'lazy-tree-view', [], null, null, null, View_LazyTreeView_0, RenderType_LazyTreeView)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_17\" /* ɵdid */](245760, null, 0, __WEBPACK_IMPORTED_MODULE_1__components_lazy_loaded_tree_view_tree_view__[\"a\" /* LazyTreeView */], [\n            __WEBPACK_IMPORTED_MODULE_2__components_lazy_loaded_tree_view_redux_store__[\"a\" /* Store */],\n            __WEBPACK_IMPORTED_MODULE_3__components_lazy_loaded_tree_view_tree_node_service__[\"a\" /* TreeNodeService */]\n        ], null, null)\n    ], function (ck, v) {\n        ck(v, 1, 0);\n    }, null);\n}\nvar LazyTreeViewNgFactory = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_19\" /* ɵccf */]('lazy-tree-view', __WEBPACK_IMPORTED_MODULE_1__components_lazy_loaded_tree_view_tree_view__[\"a\" /* LazyTreeView */], View_LazyTreeView_Host_0, { root: 'root' }, {}, []);\n//# sourceMappingURL=tree-view.ngfactory.js.map\n\n/***/ }),\n\n/***/ 77:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LazyTreeviewModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__);\n\nvar LazyTreeviewModule = (function () {\n    function LazyTreeviewModule() {\n    }\n    return LazyTreeviewModule;\n}());\n\n//# sourceMappingURL=lazy-loaded-treeview.module.js.map\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return treeNodeReducer; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tree_node__ = __webpack_require__(71);\n\nvar treeNodeReducer = function (state, action) {\n    if (state === void 0) { state = []; }\n    switch (action.name) {\n        case 'LOAD_NODES':\n            return state['nodes'].map(function (n) {\n                return new __WEBPACK_IMPORTED_MODULE_0__tree_node__[\"a\" /* TreeNode */](n.key, n.url, n.name);\n            });\n    }\n};\n//# sourceMappingURL=tree-node-reducer.js.map\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar map_1 = __webpack_require__(33);\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.dist/bundle-webpack-lazy-loading.js","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../lazy-loaded-treeview.module';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/http';\nimport * as import4 from '@angular/router';\nimport * as import5 from '../components/lazy-loaded-tree-view/country-demo.ngfactory';\nimport * as import6 from '../../../components/lazy-loaded-tree-view/country-demo';\nclass LazyTreeviewModuleInjector extends import0.ɵNgModuleInjector<import1.LazyTreeviewModule> {\n  _CommonModule_0:import2.CommonModule;\n  _HttpModule_1:import3.HttpModule;\n  _RouterModule_2:import4.RouterModule;\n  _LazyTreeviewModule_3:import1.LazyTreeviewModule;\n  __NgLocalization_4:import2.NgLocaleLocalization;\n  __BrowserXhr_5:import3.BrowserXhr;\n  __ResponseOptions_6:import3.BaseResponseOptions;\n  __XSRFStrategy_7:any;\n  __XHRBackend_8:import3.XHRBackend;\n  __RequestOptions_9:import3.BaseRequestOptions;\n  __Http_10:any;\n  _ROUTES_11:any[];\n  constructor(parent:import0.Injector) {\n    super(parent,[import5.CountryDemoNgFactory],([] as any[]));\n  }\n  get _NgLocalization_4():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_4 == null)) { (this.__NgLocalization_4 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID))); }\n    return this.__NgLocalization_4;\n  }\n  get _BrowserXhr_5():import3.BrowserXhr {\n    if ((this.__BrowserXhr_5 == null)) { (this.__BrowserXhr_5 = new import3.BrowserXhr()); }\n    return this.__BrowserXhr_5;\n  }\n  get _ResponseOptions_6():import3.BaseResponseOptions {\n    if ((this.__ResponseOptions_6 == null)) { (this.__ResponseOptions_6 = new import3.BaseResponseOptions()); }\n    return this.__ResponseOptions_6;\n  }\n  get _XSRFStrategy_7():any {\n    if ((this.__XSRFStrategy_7 == null)) { (this.__XSRFStrategy_7 = import3.ɵb()); }\n    return this.__XSRFStrategy_7;\n  }\n  get _XHRBackend_8():import3.XHRBackend {\n    if ((this.__XHRBackend_8 == null)) { (this.__XHRBackend_8 = new import3.XHRBackend(this._BrowserXhr_5,this._ResponseOptions_6,this._XSRFStrategy_7)); }\n    return this.__XHRBackend_8;\n  }\n  get _RequestOptions_9():import3.BaseRequestOptions {\n    if ((this.__RequestOptions_9 == null)) { (this.__RequestOptions_9 = new import3.BaseRequestOptions()); }\n    return this.__RequestOptions_9;\n  }\n  get _Http_10():any {\n    if ((this.__Http_10 == null)) { (this.__Http_10 = import3.ɵc(this._XHRBackend_8,this._RequestOptions_9)); }\n    return this.__Http_10;\n  }\n  createInternal():import1.LazyTreeviewModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._HttpModule_1 = new import3.HttpModule();\n    this._RouterModule_2 = new import4.RouterModule(this.parent.get(import4.ɵa,(null as any)),this.parent.get(import4.Router,(null as any)));\n    this._LazyTreeviewModule_3 = new import1.LazyTreeviewModule();\n        this._ROUTES_11 = [[{\n          path: '',\n          component: import6.CountryDemo\n        }\n    ]];\n    return this._LazyTreeviewModule_3;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import3.HttpModule)) { return this._HttpModule_1; }\n    if ((token === import4.RouterModule)) { return this._RouterModule_2; }\n    if ((token === import1.LazyTreeviewModule)) { return this._LazyTreeviewModule_3; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_4; }\n    if ((token === import3.BrowserXhr)) { return this._BrowserXhr_5; }\n    if ((token === import3.ResponseOptions)) { return this._ResponseOptions_6; }\n    if ((token === import3.XSRFStrategy)) { return this._XSRFStrategy_7; }\n    if ((token === import3.XHRBackend)) { return this._XHRBackend_8; }\n    if ((token === import3.RequestOptions)) { return this._RequestOptions_9; }\n    if ((token === import3.Http)) { return this._Http_10; }\n    if ((token === import4.ROUTES)) { return this._ROUTES_11; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const LazyTreeviewModuleNgFactory:import0.NgModuleFactory<import1.LazyTreeviewModule> = new import0.NgModuleFactory<any>(LazyTreeviewModuleInjector,import1.LazyTreeviewModule);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9hcHAtbGF6eS9sYXp5LWxvYWRlZC10cmVldmlldy5tb2R1bGUubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvdG9yL0RldmVsb3BtZW50L2FuZ3VsYXItMi1zYW1wbGVzL2FwcC1sYXp5L2xhenktbG9hZGVkLXRyZWV2aWV3Lm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIgIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=\n\n\n\n// WEBPACK FOOTER //\n// ./app-lazy/aot/app-lazy/lazy-loaded-treeview.module.ngfactory.ts","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {Http,Response} from '@angular/http';\nimport {TreeNode} from '../tree-node';\nimport {treeNodeReducer} from './tree-node-reducer';\n\n@Injectable()\nexport class Store{\n\n  private dispatcher = new Subject<any>();\n  private treeNodes = {};\n\n  private nodes = {};\n\n  constructor(private _http:Http){\n    this.dispatcher.subscribe((action) => this.handleAction(action));\n  }\n\n  private handleAction(action) {\n\n    if(action.name === 'LOAD_NODES') {\n      if (this.nodes[action.key]) {\n        this.treeNodes[action.key].next(this.nodes[action.key]);\n      }\n      else {\n        this._http\n            .get(action.url)\n            .map((res:Response) => res.json())\n            .subscribe(res => {\n              this.nodes[action.key] = treeNodeReducer(res, action);\n              this.treeNodes[action.key].next(this.nodes[action.key]);\n            });\n      }\n    }\n  }\n\n  getTreeNodes(key){\n    if(!this.treeNodes.hasOwnProperty(key)){\n      this.treeNodes[key] = new Subject<Array<TreeNode>>();\n    }\n    return this.treeNodes[key].asObservable();\n  }\n\n  dispatchAction(action){\n    this.dispatcher.next(action);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/lazy-loaded-tree-view/redux/store.ts","var __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.1.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ɵgetDOM } from '@angular/platform-browser';\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * \\@experimental\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = function () { return ((new XMLHttpRequest())); };\n    return BrowserXhr;\n}());\nBrowserXhr.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserXhr.ctorParameters = function () { return []; };\nvar RequestMethod = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\nvar ReadyState = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\nvar ResponseType = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\nvar ContentType = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\nvar ResponseContentType = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * \\@experimental\n */\nvar Headers = (function () {\n    /**\n     * @param {?=} headers\n     */\n    function Headers(headers) {\n        var _this = this;\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * @return {?}\n     */\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[((_this._normalizedNames.get(name)))] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * \\@experimental\n */\nvar ResponseOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function ResponseOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, body = _b.body, status = _b.status, headers = _b.headers, statusText = _b.statusText, type = _b.type, url = _b.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * \\@experimental\n */\nvar BaseResponseOptions = (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    return BaseResponseOptions;\n}(ResponseOptions));\nBaseResponseOptions.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBaseResponseOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * \\@experimental\n * @abstract\n */\nvar ConnectionBackend = (function () {\n    function ConnectionBackend() {\n    }\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * \\@experimental\n * @abstract\n */\nvar Connection = (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * \\@experimental\n * @abstract\n */\nvar XSRFStrategy = (function () {\n    function XSRFStrategy() {\n    }\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n    return XSRFStrategy;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} method\n * @return {?}\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * \\@experimental\n *\n */\nvar QueryEncoder = (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nvar URLSearchParams = (function () {\n    /**\n     * @param {?=} rawParams\n     * @param {?=} queryEncoder\n     */\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar Body = (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(/** @type {?} */ (this._body)));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * \\@experimental\n */\nvar Response = (function (_super) {\n    __extends(Response, _super);\n    /**\n     * @param {?} responseOptions\n     */\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = (function () {\n    function BrowserJsonp() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    return BrowserJsonp;\n}());\nBrowserJsonp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBrowserJsonp.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPConnection = (function () {\n    function JSONPConnection() {\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @abstract\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = function (data) { };\n    return JSONPConnection;\n}());\nvar JSONPConnection_ = (function (_super) {\n    __extends(JSONPConnection_, _super);\n    /**\n     * @param {?} req\n     * @param {?} _dom\n     * @param {?=} baseResponseOptions\n     */\n    function JSONPConnection_(req, _dom, baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._dom = _dom;\n        _this.baseResponseOptions = baseResponseOptions;\n        _this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        _this.request = req;\n        _this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n        return _this;\n    }\n    /**\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection_.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection_;\n}(JSONPConnection));\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * \\@experimental\n * @abstract\n */\nvar JSONPBackend = (function (_super) {\n    __extends(JSONPBackend, _super);\n    function JSONPBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return JSONPBackend;\n}(ConnectionBackend));\nvar JSONPBackend_ = (function (_super) {\n    __extends(JSONPBackend_, _super);\n    /**\n     * @param {?} _browserJSONP\n     * @param {?} _baseResponseOptions\n     */\n    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend_.prototype.createConnection = function (request) {\n        return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    return JSONPBackend_;\n}(JSONPBackend));\nJSONPBackend_.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJSONPBackend_.ctorParameters = function () { return [\n    { type: BrowserJsonp, },\n    { type: ResponseOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * \\@experimental\n */\nvar XHRConnection = (function () {\n    /**\n     * @param {?} req\n     * @param {?} browserXHR\n     * @param {?=} baseResponseOptions\n     */\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * \\@experimental\n */\nvar CookieXSRFStrategy = (function () {\n    /**\n     * @param {?=} _cookieName\n     * @param {?=} _headerName\n     */\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var /** @type {?} */ xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nvar XHRBackend = (function () {\n    /**\n     * @param {?} _browserXHR\n     * @param {?} _baseResponseOptions\n     * @param {?} _xsrfStrategy\n     */\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    return XHRBackend;\n}());\nXHRBackend.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nXHRBackend.ctorParameters = function () { return [\n    { type: BrowserXhr, },\n    { type: ResponseOptions, },\n    { type: XSRFStrategy, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar RequestOptions = (function () {\n    /**\n     * @param {?=} __0\n     */\n    function RequestOptions(_a) {\n        var _b = _a === void 0 ? {} : _a, method = _b.method, headers = _b.headers, body = _b.body, url = _b.url, search = _b.search, params = _b.params, withCredentials = _b.withCredentials, responseType = _b.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?=} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * \\@experimental\n */\nvar BaseRequestOptions = (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    return BaseRequestOptions;\n}(RequestOptions));\nBaseRequestOptions.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBaseRequestOptions.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * \\@experimental\n */\nvar Request = (function (_super) {\n    __extends(Request, _super);\n    /**\n     * @param {?} requestOptions\n     */\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params) {\n    var /** @type {?} */ searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var /** @type {?} */ value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = ((w) /** TODO #9100 */)['FormData'] || noop;\nvar Blob$1 = ((w) /** TODO #9100 */)['Blob'] || noop;\nvar ArrayBuffer$1 = ((w) /** TODO #9100 */)['ArrayBuffer'] || noop;\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return (newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        })));\n    }\n    return (newOptions.merge(new RequestOptions({ method: method, url: url })));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * \\@experimental\n */\nvar Http = (function () {\n    /**\n     * @param {?} _backend\n     * @param {?} _defaultOptions\n     */\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    return Http;\n}());\nHttp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nHttp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * \\@experimental\n */\nvar Jsonp = (function (_super) {\n    __extends(Jsonp, _super);\n    /**\n     * @param {?} backend\n     * @param {?} defaultOptions\n     */\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    return Jsonp;\n}(Http));\nJsonp.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nJsonp.ctorParameters = function () { return [\n    { type: ConnectionBackend, },\n    { type: RequestOptions, },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\n/**\n * @return {?}\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * \\@experimental\n */\nvar HttpModule = (function () {\n    function HttpModule() {\n    }\n    return HttpModule;\n}());\nHttpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                    BrowserXhr,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    XHRBackend,\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nHttpModule.ctorParameters = function () { return []; };\n/**\n * The module that includes jsonp's providers\n *\n * \\@experimental\n */\nvar JsonpModule = (function () {\n    function JsonpModule() {\n    }\n    return JsonpModule;\n}());\nJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    // TODO(pascal): use factory type annotations once supported in DI\n                    // issue: https://github.com/angular/angular/issues/3183\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                    BrowserJsonp,\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\n                    { provide: JSONPBackend, useClass: JSONPBackend_ },\n                ],\n            },] },\n];\n/**\n * @nocollapse\n */\nJsonpModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('4.1.2');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the http package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\nexport { BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION, BrowserJsonp as ɵg, JSONPBackend_ as ɵa, Body as ɵf, _createDefaultCookieXSRFStrategy as ɵb, httpFactory as ɵc, jsonpFactory as ɵd };\n//# sourceMappingURL=http.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/http/@angular/http.es5.js\n// module id = 68\n// module chunks = 0","import {Injectable} from '@angular/core';\nimport {Store} from './redux/store';\n\n@Injectable()\nexport class TreeNodeService{\n\n  constructor(private _store:Store){\n  }\n\n  loadTreeNodes(root){\n    if(root.url) {\n      this._store.dispatchAction({key: root.key, url: root.url, name: 'LOAD_NODES'});\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/lazy-loaded-tree-view/tree-node-service.ts","import {Component} from '@angular/core';\nimport {TreeNode} from './tree-node';\nimport {Store} from './redux/store';\nimport {TreeNodeService} from './tree-node-service';\n\n@Component({\n  selector:'country-demo',\n  template:`<h1>Lazy loaded TreeView using Redux and RxJs</h1>\n            <lazy-tree-view [root]=\"node\"></lazy-tree-view>`,\n  providers:[Store,TreeNodeService]\n})\n\nexport class CountryDemo{\n  node:TreeNode = null;\n\n  ngOnInit(){\n    this.node = new TreeNode('root','./tree-view-data/countries.json', '');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/lazy-loaded-tree-view/country-demo.ts","export class TreeNode{\n  showIcon = false;\n  expanded = false;\n  icon = null;\n\n  constructor(public key, public url, public name){\n    if(url){\n      this.showIcon = true;\n      this.icon = this.getIcon();\n    }\n  }\n\n  expand(){\n    this.expanded = !this.expanded;\n    this.icon = this.getIcon();\n  }\n\n  private getIcon(){\n    if (this.showIcon === true) {\n      if(this.expanded){\n        return '- ';\n      }\n      return '+ ';\n\n    }\n    return null;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/lazy-loaded-tree-view/tree-node.ts","import {Component, Input, OnInit} from '@angular/core';\nimport {TreeNode} from './tree-node';\nimport {Store} from './redux/store';\nimport {TreeNodeService} from './tree-node-service';\n\n@Component({\n  template: `\n  <ul>\n  <li *ngFor=\"let node of items\">\n\n    <span class=\"iconButton\" [ngClass]='{\"tree-node-no-children\": !node.showIcon}' (click)=\"node.expand()\">{{node.icon}}</span>\n    <span>{{ node.name }}</span>\n\n    <div *ngIf=\"node.expanded\">\n      <lazy-tree-view [root]=\"node\"></lazy-tree-view>\n    </div>\n  </li>\n  </ul>\n`,\n  selector:'lazy-tree-view'\n})\n\nexport class LazyTreeView implements OnInit{\n\n  @Input() root:TreeNode;\n  children:any;\n  items = [];\n  subscription;\n\n  constructor(private _store:Store, private _treeNodeService:TreeNodeService){\n  }\n\n  ngOnInit(){\n    this.subscription = this._store.getTreeNodes(this.root.key).subscribe(res => {\n      this.items = res;\n    });\n    this._treeNodeService.loadTreeNodes(this.root);\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/lazy-loaded-tree-view/tree-view.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from './tree-view.ngfactory';\nimport * as import2 from '../../../../components/lazy-loaded-tree-view/tree-view';\nimport * as import3 from '../../../../components/lazy-loaded-tree-view/redux/store';\nimport * as import4 from '../../../../components/lazy-loaded-tree-view/tree-node-service';\nimport * as import5 from '../../../../components/lazy-loaded-tree-view/country-demo';\nimport * as import6 from '@angular/http';\nconst styles_CountryDemo:any[] = ([] as any[]);\nexport const RenderType_CountryDemo:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_CountryDemo,\n  data: {}\n}\n);\nexport function View_CountryDemo_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'h1',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['Lazy loaded TreeView using Redux and RxJs'])),\n    (l()(),import0.ɵted((null as any),['\\n            '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'lazy-tree-view',([] as any[]),(null as any),(null as any),(null as any),import1.View_LazyTreeView_0,import1.RenderType_LazyTreeView)),\n    import0.ɵdid(245760,(null as any),0,import2.LazyTreeView,[\n      import3.Store,\n      import4.TreeNodeService\n    ]\n      ,{root: [\n        0,\n        'root'\n      ]\n    },(null as any))\n  ]\n  ,(ck,v) => {\n    var co:import5.CountryDemo = v.component;\n    const currVal_0:any = co.node;\n    ck(v,4,0,currVal_0);\n  },(null as any));\n}\nfunction View_CountryDemo_Host_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),3,'country-demo',([] as any[]),(null as any),(null as any),(null as any),View_CountryDemo_0,RenderType_CountryDemo)),\n    import0.ɵdid(114688,(null as any),0,import5.CountryDemo,([] as any[]),(null as any),(null as any)),\n    import0.ɵprd(4608,(null as any),import3.Store,import3.Store,[import6.Http]),\n    import0.ɵprd(4608,(null as any),import4.TreeNodeService,import4.TreeNodeService,[import3.Store])\n  ]\n  ,(ck,v) => {\n    ck(v,1,0);\n  },(null as any));\n}\nexport const CountryDemoNgFactory:import0.ComponentFactory<import5.CountryDemo> = import0.ɵccf('country-demo',import5.CountryDemo,View_CountryDemo_Host_0,{},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy9jb3VudHJ5LWRlbW8ubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvdG9yL0RldmVsb3BtZW50L2FuZ3VsYXItMi1zYW1wbGVzL2NvbXBvbmVudHMvbGF6eS1sb2FkZWQtdHJlZS12aWV3L2NvdW50cnktZGVtby50cyIsIm5nOi8vL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy9jb3VudHJ5LWRlbW8udHMuQ291bnRyeURlbW8uaHRtbCIsIm5nOi8vL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy9jb3VudHJ5LWRlbW8udHMuQ291bnRyeURlbW9fSG9zdC5odG1sIl0sInNvdXJjZXNDb250ZW50IjpbIiAiLCI8aDE+TGF6eSBsb2FkZWQgVHJlZVZpZXcgdXNpbmcgUmVkdXggYW5kIFJ4SnM8L2gxPlxuICAgICAgICAgICAgPGxhenktdHJlZS12aWV3IFtyb290XT1cIm5vZGVcIj48L2xhenktdHJlZS12aWV3PiIsIjxjb3VudHJ5LWRlbW8+PC9jb3VudHJ5LWRlbW8+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDQUE7SUFBSTtJQUE4QztJQUN0QztnQkFBQTs7O0lBQUE7T0FBQTtRQUFBO1FBQUE7TUFBQTtJQUFBOzs7O0lBQWdCO0lBQWhCLFNBQWdCLFNBQWhCOzs7OztJQ0RaO2dCQUFBO2dCQUFBO2dCQUFBOzs7SUFBQTs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./app-lazy/aot/components/lazy-loaded-tree-view/country-demo.ngfactory.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../../../components/lazy-loaded-tree-view/tree-view';\nimport * as import2 from '../../../../components/lazy-loaded-tree-view/redux/store';\nimport * as import3 from '../../../../components/lazy-loaded-tree-view/tree-node-service';\nimport * as import4 from '@angular/common';\nconst styles_LazyTreeView:any[] = ([] as any[]);\nexport const RenderType_LazyTreeView:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_LazyTreeView,\n  data: {}\n}\n);\nfunction View_LazyTreeView_2(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),4,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['\\n      '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'lazy-tree-view',([] as any[]),(null as any),(null as any),(null as any),View_LazyTreeView_0,RenderType_LazyTreeView)),\n    import0.ɵdid(245760,(null as any),0,import1.LazyTreeView,[\n      import2.Store,\n      import3.TreeNodeService\n    ]\n      ,{root: [\n        0,\n        'root'\n      ]\n    },(null as any)),\n    (l()(),import0.ɵted((null as any),['\\n    ']))\n  ]\n  ,(ck,v) => {\n    const currVal_0:any = (<any>v.parent).context.$implicit;\n    ck(v,3,0,currVal_0);\n  },(null as any));\n}\nfunction View_LazyTreeView_1(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),12,'li',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['\\n\\n    '])),\n      (l()(),import0.ɵeld(0,(null as any),(null as any),3,'span',[[\n        'class',\n        'iconButton'\n      ]\n      ],(null as any),[[\n        (null as any),\n        'click'\n      ]\n    ],(v,en,$event) => {\n      var ad:boolean = true;\n      if (('click' === en)) {\n        const pd_0:any = ((<any>v.context.$implicit.expand()) !== false);\n        ad = (pd_0 && ad);\n      }\n      return ad;\n    },(null as any),(null as any))),\n    import0.ɵdid(278528,(null as any),0,import4.NgClass,[\n      import0.IterableDiffers,\n      import0.KeyValueDiffers,\n      import0.ElementRef,\n      import0.Renderer\n    ]\n    ,{\n      klass: [\n        0,\n        'klass'\n      ]\n      ,\n      ngClass: [\n        1,\n        'ngClass'\n      ]\n\n    }\n    ,(null as any)),\n    import0.ɵpod(['tree-node-no-children']),\n    (l()(),import0.ɵted((null as any),[\n      '',\n      ''\n    ]\n    )),\n    (l()(),import0.ɵted((null as any),['\\n    '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'span',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),[\n      '',\n      ''\n    ]\n    )),\n    (l()(),import0.ɵted((null as any),['\\n\\n    '])),\n    (l()(),import0.ɵand(16777216,(null as any),(null as any),1,(null as any),View_LazyTreeView_2)),\n    import0.ɵdid(16384,(null as any),0,import4.NgIf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef\n    ]\n      ,{ngIf: [\n        0,\n        'ngIf'\n      ]\n    },(null as any)),\n    (l()(),import0.ɵted((null as any),['\\n  ']))\n  ]\n  ,(ck,v) => {\n    const currVal_0:any = 'iconButton';\n    const currVal_1:any = ck(v,4,0,!v.context.$implicit.showIcon);\n    ck(v,3,0,currVal_0,currVal_1);\n    const currVal_4:any = v.context.$implicit.expanded;\n    ck(v,11,0,currVal_4);\n  },(ck,v) => {\n    const currVal_2:any = v.context.$implicit.icon;\n    ck(v,5,0,currVal_2);\n    const currVal_3:any = v.context.$implicit.name;\n    ck(v,8,0,currVal_3);\n  });\n}\nexport function View_LazyTreeView_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵted((null as any),['\\n  '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),4,'ul',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['\\n  '])),\n    (l()(),import0.ɵand(16777216,(null as any),(null as any),1,(null as any),View_LazyTreeView_1)),\n    import0.ɵdid(802816,(null as any),0,import4.NgForOf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef,\n      import0.IterableDiffers\n    ]\n      ,{ngForOf: [\n        0,\n        'ngForOf'\n      ]\n    },(null as any)),\n    (l()(),import0.ɵted((null as any),['\\n  '])),\n    (l()(),import0.ɵted((null as any),['\\n']))\n  ]\n  ,(ck,v) => {\n    var co:import1.LazyTreeView = v.component;\n    const currVal_0:any = co.items;\n    ck(v,4,0,currVal_0);\n  },(null as any));\n}\nfunction View_LazyTreeView_Host_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'lazy-tree-view',([] as any[]),(null as any),(null as any),(null as any),View_LazyTreeView_0,RenderType_LazyTreeView)),\n    import0.ɵdid(245760,(null as any),0,import1.LazyTreeView,[\n      import2.Store,\n      import3.TreeNodeService\n    ]\n    ,(null as any),(null as any))\n  ]\n  ,(ck,v) => {\n    ck(v,1,0);\n  },(null as any));\n}\nexport const LazyTreeViewNgFactory:import0.ComponentFactory<import1.LazyTreeView> = import0.ɵccf('lazy-tree-view',import1.LazyTreeView,View_LazyTreeView_Host_0,{root: 'root'},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy90cmVlLXZpZXcubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvdG9yL0RldmVsb3BtZW50L2FuZ3VsYXItMi1zYW1wbGVzL2NvbXBvbmVudHMvbGF6eS1sb2FkZWQtdHJlZS12aWV3L3RyZWUtdmlldy50cyIsIm5nOi8vL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy90cmVlLXZpZXcudHMuTGF6eVRyZWVWaWV3Lmh0bWwiLCJuZzovLy9Vc2Vycy90b3IvRGV2ZWxvcG1lbnQvYW5ndWxhci0yLXNhbXBsZXMvY29tcG9uZW50cy9sYXp5LWxvYWRlZC10cmVlLXZpZXcvdHJlZS12aWV3LnRzLkxhenlUcmVlVmlld19Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIlxuICA8dWw+XG4gIDxsaSAqbmdGb3I9XCJsZXQgbm9kZSBvZiBpdGVtc1wiPlxuXG4gICAgPHNwYW4gY2xhc3M9XCJpY29uQnV0dG9uXCIgW25nQ2xhc3NdPSd7XCJ0cmVlLW5vZGUtbm8tY2hpbGRyZW5cIjogIW5vZGUuc2hvd0ljb259JyAoY2xpY2spPVwibm9kZS5leHBhbmQoKVwiPnt7bm9kZS5pY29ufX08L3NwYW4+XG4gICAgPHNwYW4+e3sgbm9kZS5uYW1lIH19PC9zcGFuPlxuXG4gICAgPGRpdiAqbmdJZj1cIm5vZGUuZXhwYW5kZWRcIj5cbiAgICAgIDxsYXp5LXRyZWUtdmlldyBbcm9vdF09XCJub2RlXCI+PC9sYXp5LXRyZWUtdmlldz5cbiAgICA8L2Rpdj5cbiAgPC9saT5cbiAgPC91bD5cbiIsIjxsYXp5LXRyZWUtdmlldz48L2xhenktdHJlZS12aWV3PiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUNPSTtJQUEyQjtJQUN6QjtnQkFBQTs7O0lBQUE7T0FBQTtRQUFBO1FBQUE7TUFBQTtJQUFBO0lBQStDOzs7SUFBL0I7SUFBaEIsU0FBZ0IsU0FBaEI7Ozs7O0lBTko7SUFBK0I7TUFFN0I7UUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBO1FBQUE7TUFBQTtJQUFBO01BQUE7TUFBK0U7UUFBQTtRQUFBO01BQUE7TUFBL0U7SUFBQTtnQkFBQTs7Ozs7SUFBQTtLQUFBO01BQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO01BQUE7O0lBQUE7S0FBQTtnQkFBeUI7SUFBOEU7TUFBQTtNQUFBO0lBQUE7SUFBQTtJQUFvQjtJQUMzSDtJQUFNO01BQUE7TUFBQTtJQUFBO0lBQUE7SUFBc0I7SUFFNUI7Z0JBQUE7OztJQUFBO09BQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtJQUVNOzs7SUFMQTtJQUFtQjtJQUF6QixTQUFNLFVBQW1CLFNBQXpCO0lBR0s7SUFBTCxVQUFLLFNBQUw7O0lBSHVHO0lBQUE7SUFDakc7SUFBQTs7Ozs7SUFMVjtJQUNFO0lBQUk7SUFDSjtnQkFBQTs7OztJQUFBO09BQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtJQVFLO0lBQ0E7Ozs7SUFURDtJQUFKLFNBQUksU0FBSjs7Ozs7SUNGRjtnQkFBQTs7O0lBQUE7S0FBQTs7O0lBQUE7OzsifQ==\n\n\n\n// WEBPACK FOOTER //\n// ./app-lazy/aot/components/lazy-loaded-tree-view/tree-view.ngfactory.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {HttpModule} from '@angular/http';\n\nimport 'rxjs/add/operator/map';\n\nimport {CountryDemo} from '../components/lazy-loaded-tree-view/country-demo';\nimport {LazyTreeView} from '../components/lazy-loaded-tree-view/tree-view';\n\n@NgModule({\n  declarations: [CountryDemo, LazyTreeView],\n  imports: [\n    CommonModule,\n    HttpModule,\n    RouterModule.forChild(\n    [\n      {path: '', component: CountryDemo}\n    ])\n  ]\n})\nexport class LazyTreeviewModule {}\n\n\n// WEBPACK FOOTER //\n// ./app-lazy/lazy-loaded-treeview.module.ts","import {TreeNode} from '../tree-node';\n\nexport const treeNodeReducer = (state: any = [], action) => {\n  switch (action.name) {\n\n    case 'LOAD_NODES':\n      return state['nodes'].map(n => {\n        return new TreeNode(n.key,n.url,n.name);\n      });\n\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./components/lazy-loaded-tree-view/redux/tree-node-reducer.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/map.js\n// module id = 85\n// module chunks = 0"],"sourceRoot":""}