{"version":3,"sources":["webpack:///0.dist/bundle-webpack-lazy-loading.js","webpack:///./node_modules/rxjs/operator/concat.js","webpack:///./app-lazy/aot/components/rxjs-streams/rxjs-streams.ngfactory.ts","webpack:///./app-lazy/lazy-modules/rxjs-streams.module.ts","webpack:///./components/rxjs-streams/rxjs-streams.ts","webpack:///./app-lazy/aot/app-lazy/lazy-modules/rxjs-streams.module.ngfactory.ts","webpack:///./node_modules/rxjs/add/operator/map.js","webpack:///./node_modules/rxjs/observable/forkJoin.js","webpack:///./node_modules/rxjs/observable/ForkJoinObservable.js","webpack:///./node_modules/rxjs/add/operator/mergeMap.js","webpack:///./node_modules/rxjs/add/operator/merge.js","webpack:///./node_modules/rxjs/add/observable/timer.js","webpack:///./node_modules/rxjs/observable/timer.js","webpack:///./node_modules/rxjs/observable/TimerObservable.js","webpack:///./node_modules/rxjs/util/isNumeric.js","webpack:///./node_modules/rxjs/scheduler/async.js","webpack:///./node_modules/rxjs/scheduler/AsyncAction.js","webpack:///./node_modules/rxjs/scheduler/Action.js","webpack:///./node_modules/rxjs/scheduler/AsyncScheduler.js","webpack:///./node_modules/rxjs/Scheduler.js","webpack:///./node_modules/rxjs/util/isDate.js","webpack:///./node_modules/rxjs/add/observable/forkJoin.js","webpack:///./node_modules/rxjs/add/observable/of.js","webpack:///./node_modules/rxjs/add/operator/take.js","webpack:///./node_modules/rxjs/operator/take.js","webpack:///./node_modules/rxjs/util/ArgumentOutOfRangeError.js","webpack:///./node_modules/rxjs/add/operator/concat.js"],"names":["webpackJsonp","100","module","exports","__webpack_require__","concat","observables","_i","arguments","length","this","lift","call","concatStatic","apply","scheduler","args","isScheduler_1","isScheduler","pop","Observable_1","Observable","ArrayObservable_1","ArrayObservable","mergeAll_1","MergeAllOperator","64","__webpack_exports__","View_RxJsStreams_1","_l","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","klass","ngClass","stream1","stream2","_ck","_v","context","$implicit","source","value","View_RxJsStreams_2","View_RxJsStreams_3","View_RxJsStreams_0","en","$event","ad","_co","component","mergeStreams","concatStreams","forkJoinStreams","flatMapStreams","ngForOf","concatStream","mergeStream","forkJoinStream","flatMappedStreams","msg","View_RxJsStreams_Host_0","RenderType_RxJsStreams","RxJsStreams","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__","__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_mergeMap__","n","RxJsStreamsModule","__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_timer__","__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_forkJoin__","__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_take__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_merge__","__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_concat__","prototype","_this","of","flatMap","operand1","subscribe","res","first","timer","map","r","take","second","push","merge","forkJoin","styles_RxJsStreams","encapsulation","styles","data","RxJsStreamsNgFactory","d","RxJsStreamsModuleNgFactory","rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_3__angular_common__","__WEBPACK_IMPORTED_MODULE_4__angular_router__","path","74","map_1","75","ForkJoinObservable_1","ForkJoinObservable","create","76","__extends","b","__","constructor","p","hasOwnProperty","EmptyObservable_1","isArray_1","subscribeToResult_1","OuterSubscriber_1","_super","sources","resultSelector","EmptyObservable","isArray","_subscribe","subscriber","ForkJoinSubscriber","destination","completed","haveValues","len","total","values","Array","i","innerSubscription","subscribeToResult","outerIndex","add","notifyNext","outerValue","innerValue","innerIndex","innerSub","_hasValue","notifyComplete","_a","complete","next","OuterSubscriber","78","mergeMap_1","mergeMap","79","merge_1","84","timer_1","85","TimerObservable_1","TimerObservable","86","isNumeric_1","async_1","isDate_1","dueTime","period","isNumeric","Number","async","isDate","now","initialDelay","dispatch","state","index","action","closed","schedule","87","val","parseFloat","88","AsyncAction_1","AsyncScheduler_1","AsyncScheduler","AsyncAction","89","root_1","Action_1","work","pending","delay","id","recycleAsyncId","requestAsyncId","root","setInterval","flush","bind","clearInterval","undefined","execute","Error","error","_execute","errored","errorValue","e","unsubscribe","_unsubscribe","actions","indexOf","splice","Action","90","Subscription_1","Subscription","91","Scheduler_1","active","scheduled","shift","Scheduler","92","SchedulerAction","Date","93","isNaN","94","forkJoin_1","95","of_1","96","take_1","97","count","TakeOperator","Subscriber_1","ArgumentOutOfRangeError_1","ArgumentOutOfRangeError","TakeSubscriber","_next","Subscriber","98","err","name","stack","message","99","concat_1"],"mappings":"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","file":"0.dist/bundle-webpack-lazy-loading.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 100:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar isScheduler_1 = __webpack_require__(20);\nvar ArrayObservable_1 = __webpack_require__(11);\nvar mergeAll_1 = __webpack_require__(12);\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n/***/ }),\n\n/***/ 64:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// CONCATENATED MODULE: ./app-lazy/lazy-modules/rxjs-streams.module.ts\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_mergeMap__ = __webpack_require__(78);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_mergeMap__);\n\n\nvar RxJsStreamsModule = (function () {\n    function RxJsStreamsModule() {\n    }\n    return RxJsStreamsModule;\n}());\n\n//# sourceMappingURL=rxjs-streams.module.js.map\n// CONCATENATED MODULE: ./components/rxjs-streams/rxjs-streams.ts\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_timer__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_timer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_observable_timer__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_forkJoin__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_forkJoin__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__ = __webpack_require__(95);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_take__ = __webpack_require__(96);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_take___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_take__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_merge__ = __webpack_require__(79);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_merge__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_concat__ = __webpack_require__(99);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_concat___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_concat__);\n\n\n\n\n\n\n\nvar RxJsStreams = (function () {\n    function RxJsStreams() {\n        this.concatStream = [];\n        this.mergeStream = [];\n        this.forkJoinStream = [];\n        this.flatMappedStreams = {};\n    }\n    RxJsStreams.prototype.flatMapStreams = function () {\n        var _this = this;\n        var first = __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].of(10);\n        first.flatMap(function (operand1) {\n            return __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].of(operand1 + 10);\n        })\n            .subscribe(function (res) { return _this.flatMappedStreams = { msg: '10 + 10 = ' + res }; });\n    };\n    RxJsStreams.prototype.concatStreams = function () {\n        var _this = this;\n        var first = __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].timer(10, 500).map(function (r) {\n            return { source: 1, value: r };\n        }).take(4);\n        var second = __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].timer(10, 500).map(function (r) {\n            return { source: 2, value: r };\n        }).take(4);\n        first.concat(second).subscribe(function (res) { return _this.concatStream.push(res); });\n    };\n    RxJsStreams.prototype.mergeStreams = function () {\n        var _this = this;\n        var first = __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].timer(10, 500).map(function (r) {\n            return { source: 1, value: r };\n        }).take(4);\n        var second = __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].timer(10, 500).map(function (r) {\n            return { source: 2, value: r };\n        }).take(4);\n        first.merge(second).subscribe(function (res) { return _this.mergeStream.push(res); });\n    };\n    RxJsStreams.prototype.forkJoinStreams = function () {\n        var _this = this;\n        var first = __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].of({ source: 1, value: 1 });\n        var second = __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].of({ source: 2, value: 1 });\n        __WEBPACK_IMPORTED_MODULE_0_rxjs_Observable__[\"Observable\"].forkJoin(first, second)\n            .subscribe(function (res) { return _this.forkJoinStream = res; });\n    };\n    return RxJsStreams;\n}());\n\n//# sourceMappingURL=rxjs-streams.js.map\n// CONCATENATED MODULE: ./app-lazy/aot/components/rxjs-streams/rxjs-streams.ngfactory.ts\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(4);\n\n\n\nvar styles_RxJsStreams = [];\nvar RenderType_RxJsStreams = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_13\" /* ɵcrt */]({ encapsulation: 2, styles: styles_RxJsStreams,\n    data: {} });\nfunction View_RxJsStreams_1(_l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_37\" /* ɵvid */](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, 0, null, null, 4, 'div', [], null, null, null, null, null)), (_l()(),\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](1, 0, null, null, 3, 'div', [['class', 'floatLeft']], null, null, null, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵdid */](2, 278528, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"i\" /* NgClass */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"y\" /* IterableDiffers */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"z\" /* KeyValueDiffers */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"n\" /* ElementRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"M\" /* Renderer2 */]], { klass: [0, 'klass'], ngClass: [1, 'ngClass'] }, null), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_31\" /* ɵpod */](3, { stream1: 0, stream2: 1 }), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](4, null, ['', '']))], function (_ck, _v) {\n        var currVal_0 = 'floatLeft';\n        var currVal_1 = _ck(_v, 3, 0, (_v.context.$implicit.source === 1), (_v.context.$implicit.source === 2));\n        _ck(_v, 2, 0, currVal_0, currVal_1);\n    }, function (_ck, _v) {\n        var currVal_2 = _v.context.$implicit.value;\n        _ck(_v, 4, 0, currVal_2);\n    });\n}\nfunction View_RxJsStreams_2(_l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_37\" /* ɵvid */](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, 0, null, null, 4, 'div', [], null, null, null, null, null)), (_l()(),\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](1, 0, null, null, 3, 'div', [['class', 'floatLeft']], null, null, null, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵdid */](2, 278528, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"i\" /* NgClass */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"y\" /* IterableDiffers */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"z\" /* KeyValueDiffers */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"n\" /* ElementRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"M\" /* Renderer2 */]], { klass: [0, 'klass'], ngClass: [1, 'ngClass'] }, null), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_31\" /* ɵpod */](3, { stream1: 0, stream2: 1 }), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](4, null, ['', '']))], function (_ck, _v) {\n        var currVal_0 = 'floatLeft';\n        var currVal_1 = _ck(_v, 3, 0, (_v.context.$implicit.source === 1), (_v.context.$implicit.source === 2));\n        _ck(_v, 2, 0, currVal_0, currVal_1);\n    }, function (_ck, _v) {\n        var currVal_2 = _v.context.$implicit.value;\n        _ck(_v, 4, 0, currVal_2);\n    });\n}\nfunction View_RxJsStreams_3(_l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_37\" /* ɵvid */](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, 0, null, null, 4, 'div', [], null, null, null, null, null)), (_l()(),\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](1, 0, null, null, 3, 'div', [], null, null, null, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵdid */](2, 278528, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"i\" /* NgClass */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"y\" /* IterableDiffers */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"z\" /* KeyValueDiffers */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"n\" /* ElementRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"M\" /* Renderer2 */]], { ngClass: [0, 'ngClass'] }, null), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_31\" /* ɵpod */](3, { stream1: 0,\n            stream2: 1 }), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](4, null, ['', '']))], function (_ck, _v) {\n        var currVal_0 = _ck(_v, 3, 0, (_v.context.$implicit.source === 1), (_v.context.$implicit.source === 2));\n        _ck(_v, 2, 0, currVal_0);\n    }, function (_ck, _v) {\n        var currVal_1 = _v.context.$implicit.value;\n        _ck(_v, 4, 0, currVal_1);\n    });\n}\nfunction View_RxJsStreams_0(_l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_37\" /* ɵvid */](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, 0, null, null, 1, 'div', [['class',\n                'stream1']], null, null, null, null, null)),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['Stream1'])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](2, 0, null, null, 1, 'div', [['class', 'stream2']], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['Stream2'])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](4, 0, null, null, 0, 'br', [], null, null, null, null, null)),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](5, 0, null, null, 1, 'button', [], null, [[null, 'click']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('click' === en)) {\n                var pd_0 = (_co.mergeStreams() !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['Merge Streams'])),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](7, 0, null, null, 1, 'button', [], null, [[null, 'click']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('click' === en)) {\n                var pd_0 = (_co.concatStreams() !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['Concat Streams'])),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](9, 0, null, null, 1, 'button', [], null, [[null, 'click']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('click' === en)) {\n                var pd_0 = (_co.forkJoinStreams() !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['ForkJoin Streams'])),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](11, 0, null, null, 1, 'button', [], null, [[null, 'click']], function (_v, en, $event) {\n            var ad = true;\n            var _co = _v.component;\n            if (('click' === en)) {\n                var pd_0 = (_co.flatMapStreams() !== false);\n                ad = (pd_0 && ad);\n            }\n            return ad;\n        }, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['FlatMap Streams'])),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](13, 0, null, null, 4, 'div', [['class', 'stream-section']], null, null, null, null, null)),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](14, 0, null, null, 1, 'h4', [], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['Concatenated Streams'])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵand */](16777216, null, null, 1, null, View_RxJsStreams_1)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵdid */](17, 802816, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"j\" /* NgForOf */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Y\" /* ViewContainerRef */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"V\" /* TemplateRef */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"y\" /* IterableDiffers */]], { ngForOf: [0,\n                'ngForOf'] }, null), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](18, 0, null, null, 4, 'div', [['class', 'stream-section']], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](19, 0, null, null, 1, 'h4', [], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['Merged Streams'])), (_l()(),\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵand */](16777216, null, null, 1, null, View_RxJsStreams_2)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵdid */](22, 802816, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"j\" /* NgForOf */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Y\" /* ViewContainerRef */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"V\" /* TemplateRef */],\n            __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"y\" /* IterableDiffers */]], { ngForOf: [0, 'ngForOf'] }, null), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](23, 0, null, null, 4, 'div', [['class', 'stream-section']], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](24, 0, null, null, 1, 'h4', [], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['ForkJoined Streams'])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_10\" /* ɵand */](16777216, null, null, 1, null, View_RxJsStreams_3)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵdid */](27, 802816, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"j\" /* NgForOf */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Y\" /* ViewContainerRef */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"V\" /* TemplateRef */], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"y\" /* IterableDiffers */]], { ngForOf: [0, 'ngForOf'] }, null), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](28, 0, null, null, 0, 'br', [], null, null, null, null, null)),\n        (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](29, 0, null, null, 4, 'div', [], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](30, 0, null, null, 1, 'h4', [], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](-1, null, ['Flatmapped Streams'])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](32, 0, null, null, 1, 'div', [], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_35\" /* ɵted */](33, null, ['', '']))], function (_ck, _v) {\n        var _co = _v.component;\n        var currVal_0 = _co.concatStream;\n        _ck(_v, 17, 0, currVal_0);\n        var currVal_1 = _co.mergeStream;\n        _ck(_v, 22, 0, currVal_1);\n        var currVal_2 = _co.forkJoinStream;\n        _ck(_v, 27, 0, currVal_2);\n    }, function (_ck, _v) {\n        var _co = _v.component;\n        var currVal_3 = _co.flatMappedStreams.msg;\n        _ck(_v, 33, 0, currVal_3);\n    });\n}\nfunction View_RxJsStreams_Host_0(_l) {\n    return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_37\" /* ɵvid */](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_15\" /* ɵeld */](0, 0, null, null, 1, 'rxjs-streams', [], null, null, null, View_RxJsStreams_0, RenderType_RxJsStreams)),\n        __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_14\" /* ɵdid */](1, 49152, null, 0, RxJsStreams, [], null, null)], null, null);\n}\nvar RxJsStreamsNgFactory = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_11\" /* ɵccf */]('rxjs-streams', RxJsStreams, View_RxJsStreams_Host_0, {}, {}, []);\n//# sourceMappingURL=rxjs-streams.ngfactory.js.map\n// CONCATENATED MODULE: ./app-lazy/aot/app-lazy/lazy-modules/rxjs-streams.module.ngfactory.ts\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RxJsStreamsModuleNgFactory\", function() { return RxJsStreamsModuleNgFactory; });\n/* harmony import */ var rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_common__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__(17);\n\n\n\n\n\n\nvar RxJsStreamsModuleNgFactory = rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_12\" /* ɵcmf */](RxJsStreamsModule, [], function (_l) {\n    return rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_26\" /* ɵmod */]([rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_27\" /* ɵmpd */](512, rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"k\" /* ComponentFactoryResolver */], rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_8\" /* ɵCodegenComponentFactoryResolver */], [[8, [RxJsStreamsNgFactory]], [3, rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"k\" /* ComponentFactoryResolver */]], rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"E\" /* NgModuleRef */]]),\n        rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_27\" /* ɵmpd */](4608, __WEBPACK_IMPORTED_MODULE_3__angular_common__[\"m\" /* NgLocalization */], __WEBPACK_IMPORTED_MODULE_3__angular_common__[\"l\" /* NgLocaleLocalization */], [rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"A\" /* LOCALE_ID */], [2,\n                __WEBPACK_IMPORTED_MODULE_3__angular_common__[\"t\" /* ɵa */]]]), rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_27\" /* ɵmpd */](512, __WEBPACK_IMPORTED_MODULE_3__angular_common__[\"c\" /* CommonModule */], __WEBPACK_IMPORTED_MODULE_3__angular_common__[\"c\" /* CommonModule */], []),\n        rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_27\" /* ɵmpd */](512, __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"m\" /* RouterModule */], __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"m\" /* RouterModule */], [[2, __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"r\" /* ɵa */]], [2, __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"k\" /* Router */]]]), rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_27\" /* ɵmpd */](512, RxJsStreamsModule, RxJsStreamsModule, []), rxjs_streams_module_ngfactory___WEBPACK_IMPORTED_MODULE_0__angular_core__[\"_27\" /* ɵmpd */](1024, __WEBPACK_IMPORTED_MODULE_4__angular_router__[\"i\" /* ROUTES */], function () {\n            return [[{ path: '', component: RxJsStreams }]];\n        }, [])]);\n});\n//# sourceMappingURL=rxjs-streams.module.ngfactory.js.map\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar map_1 = __webpack_require__(33);\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ForkJoinObservable_1 = __webpack_require__(76);\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ }),\n\n/***/ 76:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(0);\nvar EmptyObservable_1 = __webpack_require__(18);\nvar isArray_1 = __webpack_require__(19);\nvar subscribeToResult_1 = __webpack_require__(10);\nvar OuterSubscriber_1 = __webpack_require__(9);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * @param sources\n     * @return {any}\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n/***/ }),\n\n/***/ 78:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar mergeMap_1 = __webpack_require__(21);\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar merge_1 = __webpack_require__(35);\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ }),\n\n/***/ 84:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar timer_1 = __webpack_require__(85);\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n/***/ }),\n\n/***/ 85:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar TimerObservable_1 = __webpack_require__(86);\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = __webpack_require__(87);\nvar Observable_1 = __webpack_require__(0);\nvar async_1 = __webpack_require__(88);\nvar isScheduler_1 = __webpack_require__(20);\nvar isDate_1 = __webpack_require__(93);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar isArray_1 = __webpack_require__(19);\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n/***/ }),\n\n/***/ 88:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar AsyncAction_1 = __webpack_require__(89);\nvar AsyncScheduler_1 = __webpack_require__(91);\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n/***/ }),\n\n/***/ 89:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = __webpack_require__(2);\nvar Action_1 = __webpack_require__(90);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n/***/ }),\n\n/***/ 90:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(7);\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n/***/ }),\n\n/***/ 91:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = __webpack_require__(92);\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n/***/ }),\n\n/***/ 93:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n/***/ }),\n\n/***/ 94:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar forkJoin_1 = __webpack_require__(75);\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ }),\n\n/***/ 95:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar of_1 = __webpack_require__(37);\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n/***/ }),\n\n/***/ 96:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar take_1 = __webpack_require__(97);\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map\n\n/***/ }),\n\n/***/ 97:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = __webpack_require__(1);\nvar ArgumentOutOfRangeError_1 = __webpack_require__(98);\nvar EmptyObservable_1 = __webpack_require__(18);\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeOperator(count));\n    }\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map\n\n/***/ }),\n\n/***/ 98:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n/***/ }),\n\n/***/ 99:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar concat_1 = __webpack_require__(100);\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.dist/bundle-webpack-lazy-loading.js","\"use strict\";\nvar Observable_1 = require('../Observable');\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/concat.js\n// module id = 100\n// module chunks = 0","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as i0 from '@angular/core';\nimport * as i1 from '@angular/common';\nimport * as i2 from '../../../../components/rxjs-streams/rxjs-streams';\nconst styles_RxJsStreams:any[] = ([] as any[]);\nexport const RenderType_RxJsStreams:i0.RendererType2 = i0.ɵcrt({encapsulation:2,styles:styles_RxJsStreams,\n    data:{}});\nfunction View_RxJsStreams_1(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,0,(null as any),(null as any),4,'div',([] as any[]),\n      (null as any),(null as any),(null as any),(null as any),(null as any))),(_l()(),\n      i0.ɵeld(1,0,(null as any),(null as any),3,'div',[['class','floatLeft']],(null as any),\n          (null as any),(null as any),(null as any),(null as any))),i0.ɵdid(2,278528,\n      (null as any),0,i1.NgClass,[i0.IterableDiffers,i0.KeyValueDiffers,i0.ElementRef,\n          i0.Renderer2],{klass:[0,'klass'],ngClass:[1,'ngClass']},(null as any)),i0.ɵpod(3,\n      {stream1:0,stream2:1}),(_l()(),i0.ɵted(4,(null as any),['','']))],(_ck,_v) => {\n    const currVal_0:any = 'floatLeft';\n    const currVal_1:any = _ck(_v,3,0,(_v.context.$implicit.source === 1),(_v.context.$implicit.source === 2));\n    _ck(_v,2,0,currVal_0,currVal_1);\n  },(_ck,_v) => {\n    const currVal_2:any = _v.context.$implicit.value;\n    _ck(_v,4,0,currVal_2);\n  });\n}\nfunction View_RxJsStreams_2(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,0,(null as any),(null as any),4,'div',([] as any[]),\n      (null as any),(null as any),(null as any),(null as any),(null as any))),(_l()(),\n      i0.ɵeld(1,0,(null as any),(null as any),3,'div',[['class','floatLeft']],(null as any),\n          (null as any),(null as any),(null as any),(null as any))),i0.ɵdid(2,278528,\n      (null as any),0,i1.NgClass,[i0.IterableDiffers,i0.KeyValueDiffers,i0.ElementRef,\n          i0.Renderer2],{klass:[0,'klass'],ngClass:[1,'ngClass']},(null as any)),i0.ɵpod(3,\n      {stream1:0,stream2:1}),(_l()(),i0.ɵted(4,(null as any),['','']))],(_ck,_v) => {\n    const currVal_0:any = 'floatLeft';\n    const currVal_1:any = _ck(_v,3,0,(_v.context.$implicit.source === 1),(_v.context.$implicit.source === 2));\n    _ck(_v,2,0,currVal_0,currVal_1);\n  },(_ck,_v) => {\n    const currVal_2:any = _v.context.$implicit.value;\n    _ck(_v,4,0,currVal_2);\n  });\n}\nfunction View_RxJsStreams_3(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,0,(null as any),(null as any),4,'div',([] as any[]),\n      (null as any),(null as any),(null as any),(null as any),(null as any))),(_l()(),\n      i0.ɵeld(1,0,(null as any),(null as any),3,'div',([] as any[]),(null as any),\n          (null as any),(null as any),(null as any),(null as any))),i0.ɵdid(2,278528,\n      (null as any),0,i1.NgClass,[i0.IterableDiffers,i0.KeyValueDiffers,i0.ElementRef,\n          i0.Renderer2],{ngClass:[0,'ngClass']},(null as any)),i0.ɵpod(3,{stream1:0,\n      stream2:1}),(_l()(),i0.ɵted(4,(null as any),['','']))],(_ck,_v) => {\n    const currVal_0:any = _ck(_v,3,0,(_v.context.$implicit.source === 1),(_v.context.$implicit.source === 2));\n    _ck(_v,2,0,currVal_0);\n  },(_ck,_v) => {\n    const currVal_1:any = _v.context.$implicit.value;\n    _ck(_v,4,0,currVal_1);\n  });\n}\nexport function View_RxJsStreams_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,0,(null as any),(null as any),1,'div',[['class',\n      'stream1']],(null as any),(null as any),(null as any),(null as any),(null as any))),\n      (_l()(),i0.ɵted(-1,(null as any),['Stream1'])),(_l()(),i0.ɵeld(2,0,(null as any),\n          (null as any),1,'div',[['class','stream2']],(null as any),(null as any),\n          (null as any),(null as any),(null as any))),(_l()(),i0.ɵted(-1,(null as any),\n          ['Stream2'])),(_l()(),i0.ɵeld(4,0,(null as any),(null as any),0,'br',([] as any[]),\n          (null as any),(null as any),(null as any),(null as any),(null as any))),\n      (_l()(),i0.ɵeld(5,0,(null as any),(null as any),1,'button',([] as any[]),(null as any),\n          [[(null as any),'click']],(_v,en,$event) => {\n            var ad:boolean = true;\n            var _co:i2.RxJsStreams = _v.component;\n            if (('click' === en)) {\n              const pd_0:any = ((<any>_co.mergeStreams()) !== false);\n              ad = (pd_0 && ad);\n            }\n            return ad;\n          },(null as any),(null as any))),(_l()(),i0.ɵted(-1,(null as any),['Merge Streams'])),\n      (_l()(),i0.ɵeld(7,0,(null as any),(null as any),1,'button',([] as any[]),(null as any),\n          [[(null as any),'click']],(_v,en,$event) => {\n            var ad:boolean = true;\n            var _co:i2.RxJsStreams = _v.component;\n            if (('click' === en)) {\n              const pd_0:any = ((<any>_co.concatStreams()) !== false);\n              ad = (pd_0 && ad);\n            }\n            return ad;\n          },(null as any),(null as any))),(_l()(),i0.ɵted(-1,(null as any),['Concat Streams'])),\n      (_l()(),i0.ɵeld(9,0,(null as any),(null as any),1,'button',([] as any[]),(null as any),\n          [[(null as any),'click']],(_v,en,$event) => {\n            var ad:boolean = true;\n            var _co:i2.RxJsStreams = _v.component;\n            if (('click' === en)) {\n              const pd_0:any = ((<any>_co.forkJoinStreams()) !== false);\n              ad = (pd_0 && ad);\n            }\n            return ad;\n          },(null as any),(null as any))),(_l()(),i0.ɵted(-1,(null as any),['ForkJoin Streams'])),\n      (_l()(),i0.ɵeld(11,0,(null as any),(null as any),1,'button',([] as any[]),(null as any),\n          [[(null as any),'click']],(_v,en,$event) => {\n            var ad:boolean = true;\n            var _co:i2.RxJsStreams = _v.component;\n            if (('click' === en)) {\n              const pd_0:any = ((<any>_co.flatMapStreams()) !== false);\n              ad = (pd_0 && ad);\n            }\n            return ad;\n          },(null as any),(null as any))),(_l()(),i0.ɵted(-1,(null as any),['FlatMap Streams'])),\n      (_l()(),i0.ɵeld(13,0,(null as any),(null as any),4,'div',[['class','stream-section']],\n          (null as any),(null as any),(null as any),(null as any),(null as any))),\n      (_l()(),i0.ɵeld(14,0,(null as any),(null as any),1,'h4',([] as any[]),(null as any),\n          (null as any),(null as any),(null as any),(null as any))),(_l()(),i0.ɵted(-1,\n          (null as any),['Concatenated Streams'])),(_l()(),i0.ɵand(16777216,(null as any),\n          (null as any),1,(null as any),View_RxJsStreams_1)),i0.ɵdid(17,802816,(null as any),\n          0,i1.NgForOf,[i0.ViewContainerRef,i0.TemplateRef,i0.IterableDiffers],{ngForOf:[0,\n              'ngForOf']},(null as any)),(_l()(),i0.ɵeld(18,0,(null as any),(null as any),\n          4,'div',[['class','stream-section']],(null as any),(null as any),(null as any),\n          (null as any),(null as any))),(_l()(),i0.ɵeld(19,0,(null as any),(null as any),\n          1,'h4',([] as any[]),(null as any),(null as any),(null as any),(null as any),\n          (null as any))),(_l()(),i0.ɵted(-1,(null as any),['Merged Streams'])),(_l()(),\n          i0.ɵand(16777216,(null as any),(null as any),1,(null as any),View_RxJsStreams_2)),\n      i0.ɵdid(22,802816,(null as any),0,i1.NgForOf,[i0.ViewContainerRef,i0.TemplateRef,\n          i0.IterableDiffers],{ngForOf:[0,'ngForOf']},(null as any)),(_l()(),i0.ɵeld(23,\n          0,(null as any),(null as any),4,'div',[['class','stream-section']],(null as any),\n          (null as any),(null as any),(null as any),(null as any))),(_l()(),i0.ɵeld(24,\n          0,(null as any),(null as any),1,'h4',([] as any[]),(null as any),(null as any),\n          (null as any),(null as any),(null as any))),(_l()(),i0.ɵted(-1,(null as any),\n          ['ForkJoined Streams'])),(_l()(),i0.ɵand(16777216,(null as any),(null as any),\n          1,(null as any),View_RxJsStreams_3)),i0.ɵdid(27,802816,(null as any),0,i1.NgForOf,\n          [i0.ViewContainerRef,i0.TemplateRef,i0.IterableDiffers],{ngForOf:[0,'ngForOf']},\n          (null as any)),(_l()(),i0.ɵeld(28,0,(null as any),(null as any),0,'br',([] as any[]),\n          (null as any),(null as any),(null as any),(null as any),(null as any))),\n      (_l()(),i0.ɵeld(29,0,(null as any),(null as any),4,'div',([] as any[]),(null as any),\n          (null as any),(null as any),(null as any),(null as any))),(_l()(),i0.ɵeld(30,\n          0,(null as any),(null as any),1,'h4',([] as any[]),(null as any),(null as any),\n          (null as any),(null as any),(null as any))),(_l()(),i0.ɵted(-1,(null as any),\n          ['Flatmapped Streams'])),(_l()(),i0.ɵeld(32,0,(null as any),(null as any),\n          1,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),\n          (null as any))),(_l()(),i0.ɵted(33,(null as any),['','']))],(_ck,_v) => {\n    var _co:i2.RxJsStreams = _v.component;\n    const currVal_0:any = _co.concatStream;\n    _ck(_v,17,0,currVal_0);\n    const currVal_1:any = _co.mergeStream;\n    _ck(_v,22,0,currVal_1);\n    const currVal_2:any = _co.forkJoinStream;\n    _ck(_v,27,0,currVal_2);\n  },(_ck,_v) => {\n    var _co:i2.RxJsStreams = _v.component;\n    const currVal_3:any = _co.flatMappedStreams.msg;\n    _ck(_v,33,0,currVal_3);\n  });\n}\nexport function View_RxJsStreams_Host_0(_l:any):i0.ɵViewDefinition {\n  return i0.ɵvid(0,[(_l()(),i0.ɵeld(0,0,(null as any),(null as any),1,'rxjs-streams',\n      ([] as any[]),(null as any),(null as any),(null as any),View_RxJsStreams_0,RenderType_RxJsStreams)),\n      i0.ɵdid(1,49152,(null as any),0,i2.RxJsStreams,([] as any[]),(null as any),(null as any))],\n      (null as any),(null as any));\n}\nexport const RxJsStreamsNgFactory:i0.ComponentFactory<i2.RxJsStreams> = i0.ɵccf('rxjs-streams',\n    i2.RxJsStreams,View_RxJsStreams_Host_0,{},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3RvcmdlaXJoZWxnZXZvbGQvZGV2ZWxvcG1lbnQvYW5ndWxhci0yLXNhbXBsZXMvY29tcG9uZW50cy9yeGpzLXN0cmVhbXMvcnhqcy1zdHJlYW1zLm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy90b3JnZWlyaGVsZ2V2b2xkL2RldmVsb3BtZW50L2FuZ3VsYXItMi1zYW1wbGVzL2NvbXBvbmVudHMvcnhqcy1zdHJlYW1zL3J4anMtc3RyZWFtcy5uZ2ZhY3RvcnkudHMiLCIvVXNlcnMvdG9yZ2VpcmhlbGdldm9sZC9kZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL3J4anMtc3RyZWFtcy9yeGpzLXN0cmVhbXMudHMuUnhKc1N0cmVhbXMuaHRtbCIsIiJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiXG4gIDxkaXYgY2xhc3M9XCJzdHJlYW0xXCI+U3RyZWFtMTwvZGl2PlxuICA8ZGl2IGNsYXNzPVwic3RyZWFtMlwiPlN0cmVhbTI8L2Rpdj5cbiAgPGJyLz5cbiAgPGJ1dHRvbiAoY2xpY2spPVwibWVyZ2VTdHJlYW1zKClcIj5NZXJnZSBTdHJlYW1zPC9idXR0b24+XG4gIDxidXR0b24gKGNsaWNrKT1cImNvbmNhdFN0cmVhbXMoKVwiPkNvbmNhdCBTdHJlYW1zPC9idXR0b24+XG4gIDxidXR0b24gKGNsaWNrKT1cImZvcmtKb2luU3RyZWFtcygpXCI+Rm9ya0pvaW4gU3RyZWFtczwvYnV0dG9uPlxuICA8YnV0dG9uIChjbGljayk9XCJmbGF0TWFwU3RyZWFtcygpXCI+RmxhdE1hcCBTdHJlYW1zPC9idXR0b24+XG5cbiAgPGRpdiBjbGFzcz1cInN0cmVhbS1zZWN0aW9uXCI+XG4gICAgPGg0PkNvbmNhdGVuYXRlZCBTdHJlYW1zPC9oND5cbiAgICA8ZGl2ICpuZ0Zvcj1cImxldCBpdGVtIG9mIGNvbmNhdFN0cmVhbVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImZsb2F0TGVmdFwiIFtuZ0NsYXNzXT1cIntzdHJlYW0xOml0ZW0uc291cmNlID09PSAxLHN0cmVhbTI6aXRlbS5zb3VyY2UgPT09IDJ9XCI+e3tpdGVtLnZhbHVlfX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cInN0cmVhbS1zZWN0aW9uXCI+XG4gICAgPGg0Pk1lcmdlZCBTdHJlYW1zPC9oND5cbiAgICA8ZGl2ICpuZ0Zvcj1cImxldCBpdGVtIG9mIG1lcmdlU3RyZWFtXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiZmxvYXRMZWZ0XCIgW25nQ2xhc3NdPVwie3N0cmVhbTE6aXRlbS5zb3VyY2UgPT09IDEsc3RyZWFtMjppdGVtLnNvdXJjZSA9PT0gMn1cIj57e2l0ZW0udmFsdWV9fTwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cblxuICA8ZGl2IGNsYXNzPVwic3RyZWFtLXNlY3Rpb25cIj5cbiAgICA8aDQ+Rm9ya0pvaW5lZCBTdHJlYW1zPC9oND5cbiAgICA8ZGl2ICpuZ0Zvcj1cImxldCBpdGVtIG9mIGZvcmtKb2luU3RyZWFtXCI+XG4gICAgICA8ZGl2IFtuZ0NsYXNzXT1cIntzdHJlYW0xOml0ZW0uc291cmNlID09PSAxLHN0cmVhbTI6aXRlbS5zb3VyY2UgPT09IDJ9XCI+e3tpdGVtLnZhbHVlfX08L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG5cbiAgPGJyLz5cbiAgPGRpdj5cbiAgICA8aDQ+RmxhdG1hcHBlZCBTdHJlYW1zPC9oND5cbiAgICA8ZGl2Pnt7ZmxhdE1hcHBlZFN0cmVhbXMubXNnfX08L2Rpdj5cbiAgPC9kaXY+XG4iLCI8cnhqcy1zdHJlYW1zPjwvcnhqcy1zdHJlYW1zPiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztvQkNXSTtNQUFBLHdFQUNFO2FBQUE7VUFBQSxpRUFBQTtNQUFBO3NCQUFBLGtFQUF1QjtNQUFBLHVCQUFrRTtJQUFwRjtJQUFrQjtJQUF2QixXQUFLLFVBQWtCLFNBQXZCOztJQUF5RjtJQUFBOzs7O29CQU0zRjtNQUFBLHdFQUNFO2FBQUE7VUFBQSxpRUFBQTtNQUFBO3NCQUFBLGtFQUF1QjtNQUFBLHVCQUFrRTtJQUFwRjtJQUFrQjtJQUF2QixXQUFLLFVBQWtCLFNBQXZCOztJQUF5RjtJQUFBOzs7O29CQU0zRjtNQUFBLHdFQUNFO2FBQUE7VUFBQSxpRUFBQTtNQUFBO3NCQUFBLGdEQUFLO01BQUEsWUFBa0U7SUFBbEU7SUFBTCxXQUFLLFNBQUw7O0lBQXVFO0lBQUE7Ozs7b0JBekIzRTtNQUFBO01BQXFCLCtDQUNyQjtVQUFBO1VBQUEsNENBQXFCO1VBQUEsY0FDckI7VUFBQTtNQUNBO1VBQUE7WUFBQTtZQUFBO1lBQVE7Y0FBQTtjQUFBO1lBQUE7WUFBUjtVQUFBLGdDQUFpQztNQUNqQztVQUFBO1lBQUE7WUFBQTtZQUFRO2NBQUE7Y0FBQTtZQUFBO1lBQVI7VUFBQSxnQ0FBa0M7TUFDbEM7VUFBQTtZQUFBO1lBQUE7WUFBUTtjQUFBO2NBQUE7WUFBQTtZQUFSO1VBQUEsZ0NBQW9DO01BQ3BDO1VBQUE7WUFBQTtZQUFBO1lBQVE7Y0FBQTtjQUFBO1lBQUE7WUFBUjtVQUFBLGdDQUFtQztNQUVuQztVQUFBO01BQ0U7VUFBQSwwREFBSTtVQUFBLHlDQUNKO1VBQUEsMERBQUE7VUFBQTtjQUFBLDJCQUtGO1VBQUE7VUFBQSw4QkFDRTtVQUFBO1VBQUEsZ0JBQUksc0RBQ0o7aUJBQUE7YUFBQTs0QkFBQSx5Q0FLRjtVQUFBO1VBQUEsMERBQ0U7VUFBQTtVQUFBLDRDQUFJO1VBQUEseUJBQ0o7VUFBQSw0Q0FBQTtVQUFBO1VBQUEsZUFLRjtVQUFBO01BQ0E7VUFBQSwwREFDRTtVQUFBO1VBQUEsNENBQUk7VUFBQSx5QkFDSjtVQUFBO1VBQUEsZ0JBQUs7O0lBdEJBO0lBQUwsWUFBSyxTQUFMO0lBT0s7SUFBTCxZQUFLLFNBQUw7SUFPSztJQUFMLFlBQUssU0FBTDs7O0lBUUs7SUFBQTs7OztvQkNqQ1Q7TUFBQTthQUFBOzs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./app-lazy/aot/components/rxjs-streams/rxjs-streams.ngfactory.ts","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\n\nimport {RxJsStreams} from '../../components/rxjs-streams/rxjs-streams';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\n\n@NgModule({\n  declarations: [RxJsStreams],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(\n    [\n      {path: '', component: RxJsStreams}\n    ])\n  ]\n})\nexport class RxJsStreamsModule {}\n\n\n// WEBPACK FOOTER //\n// ./app-lazy/lazy-modules/rxjs-streams.module.ts","import {Component} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport 'rxjs/add/observable/timer';\nimport 'rxjs/add/observable/forkJoin';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/merge';\nimport 'rxjs/add/operator/concat';\n\n@Component({\n  selector:'rxjs-streams',\n  template: `\n  <div class=\"stream1\">Stream1</div>\n  <div class=\"stream2\">Stream2</div>\n  <br/>\n  <button (click)=\"mergeStreams()\">Merge Streams</button>\n  <button (click)=\"concatStreams()\">Concat Streams</button>\n  <button (click)=\"forkJoinStreams()\">ForkJoin Streams</button>\n  <button (click)=\"flatMapStreams()\">FlatMap Streams</button>\n\n  <div class=\"stream-section\">\n    <h4>Concatenated Streams</h4>\n    <div *ngFor=\"let item of concatStream\">\n      <div class=\"floatLeft\" [ngClass]=\"{stream1:item.source === 1,stream2:item.source === 2}\">{{item.value}}</div>\n    </div>\n  </div>\n\n  <div class=\"stream-section\">\n    <h4>Merged Streams</h4>\n    <div *ngFor=\"let item of mergeStream\">\n      <div class=\"floatLeft\" [ngClass]=\"{stream1:item.source === 1,stream2:item.source === 2}\">{{item.value}}</div>\n    </div>\n  </div>\n\n  <div class=\"stream-section\">\n    <h4>ForkJoined Streams</h4>\n    <div *ngFor=\"let item of forkJoinStream\">\n      <div [ngClass]=\"{stream1:item.source === 1,stream2:item.source === 2}\">{{item.value}}</div>\n    </div>\n  </div>\n\n  <br/>\n  <div>\n    <h4>Flatmapped Streams</h4>\n    <div>{{flatMappedStreams.msg}}</div>\n  </div>\n`\n})\nexport class RxJsStreams{\n\n  concatStream = [];\n  mergeStream = [];\n  forkJoinStream = [];\n  flatMappedStreams:any = {};\n\n  flatMapStreams(){\n    let first = Observable.of(10);\n\n    first.flatMap((operand1) => {\n      return Observable.of(operand1 + 10);\n    })\n    .subscribe(res => this.flatMappedStreams = {msg: '10 + 10 = ' + res});\n  }\n\n  concatStreams(){\n    let first = Observable.timer(10,500).map(r => {\n      return {source:1,value:r};\n    }).take(4);\n\n    let second = Observable.timer(10,500).map(r => {\n      return {source:2,value:r};\n    }).take(4);\n\n    first.concat(second).subscribe(res => this.concatStream.push(res));\n  }\n\n  mergeStreams(){\n    let first = Observable.timer(10,500).map(r => {\n      return {source:1,value:r};\n    }).take(4);\n\n    let second = Observable.timer(10,500).map(r => {\n      return {source:2,value:r};\n    }).take(4);\n\n    first.merge(second).subscribe(res => this.mergeStream.push(res));\n  }\n\n  forkJoinStreams(){\n    let first = Observable.of({source:1,value:1});\n\n    let second = Observable.of({source:2,value:1});\n\n    Observable.forkJoin(first,second)\n              .subscribe((res:Array<any>) => this.forkJoinStream = res);\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./components/rxjs-streams/rxjs-streams.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as i0 from '@angular/core';\nimport * as i1 from '../../../lazy-modules/rxjs-streams.module';\nimport * as i2 from '../../components/rxjs-streams/rxjs-streams.ngfactory';\nimport * as i3 from '@angular/common';\nimport * as i4 from '@angular/router';\nimport * as i5 from '../../../../components/rxjs-streams/rxjs-streams';\nexport const RxJsStreamsModuleNgFactory:i0.NgModuleFactory<i1.RxJsStreamsModule> = i0.ɵcmf(i1.RxJsStreamsModule,\n    ([] as any[]),(_l:any) => {\n      return i0.ɵmod([i0.ɵmpd(512,i0.ComponentFactoryResolver,i0.ɵCodegenComponentFactoryResolver,\n          [[8,[i2.RxJsStreamsNgFactory]],[3,i0.ComponentFactoryResolver],i0.NgModuleRef]),\n          i0.ɵmpd(4608,i3.NgLocalization,i3.NgLocaleLocalization,[i0.LOCALE_ID,[2,\n              i3.ɵa]]),i0.ɵmpd(512,i3.CommonModule,i3.CommonModule,([] as any[])),\n          i0.ɵmpd(512,i4.RouterModule,i4.RouterModule,[[2,i4.ɵa],[2,i4.Router]]),i0.ɵmpd(512,\n              i1.RxJsStreamsModule,i1.RxJsStreamsModule,([] as any[])),i0.ɵmpd(1024,\n              i4.ROUTES,() => {\n                return [[{path:'',component:i5.RxJsStreams}]];\n              },([] as any[]))]);\n    });\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3RvcmdlaXJoZWxnZXZvbGQvZGV2ZWxvcG1lbnQvYW5ndWxhci0yLXNhbXBsZXMvYXBwLWxhenkvbGF6eS1tb2R1bGVzL3J4anMtc3RyZWFtcy5tb2R1bGUubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL1VzZXJzL3RvcmdlaXJoZWxnZXZvbGQvZGV2ZWxvcG1lbnQvYW5ndWxhci0yLXNhbXBsZXMvYXBwLWxhenkvbGF6eS1tb2R1bGVzL3J4anMtc3RyZWFtcy5tb2R1bGUubmdmYWN0b3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIiAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./app-lazy/aot/app-lazy/lazy-modules/rxjs-streams.module.ngfactory.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar map_1 = require('../../operator/map');\nObservable_1.Observable.prototype.map = map_1.map;\n//# sourceMappingURL=map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/map.js\n// module id = 74\n// module chunks = 0 1 2 4 8","\"use strict\";\nvar ForkJoinObservable_1 = require('./ForkJoinObservable');\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/forkJoin.js\n// module id = 75\n// module chunks = 0 2 5 6 7","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isArray_1 = require('../util/isArray');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * @param sources\n     * @return {any}\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/ForkJoinObservable.js\n// module id = 76\n// module chunks = 0 2 5 6 7","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/mergeMap.js\n// module id = 78\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../operator/merge');\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/merge.js\n// module id = 79\n// module chunks = 0 1","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timer_1 = require('../../observable/timer');\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/timer.js\n// module id = 84\n// module chunks = 0","\"use strict\";\nvar TimerObservable_1 = require('./TimerObservable');\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/timer.js\n// module id = 85\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar isDate_1 = require('../util/isDate');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` IScheduler to provide a notion of time, but you\n     * may pass any IScheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/TimerObservable.js\n// module id = 86\n// module chunks = 0","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/isNumeric.js\n// module id = 87\n// module chunks = 0","\"use strict\";\nvar AsyncAction_1 = require('./AsyncAction');\nvar AsyncScheduler_1 = require('./AsyncScheduler');\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);\n//# sourceMappingURL=async.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/async.js\n// module id = 88\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar root_1 = require('../util/root');\nvar Action_1 = require('./Action');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        _super.call(this, scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return root_1.root.clearInterval(id) && undefined || undefined;\n    };\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.delay = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n    };\n    return AsyncAction;\n}(Action_1.Action));\nexports.AsyncAction = AsyncAction;\n//# sourceMappingURL=AsyncAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/AsyncAction.js\n// module id = 89\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\n/**\n * A unit of work to be executed in a {@link Scheduler}. An action is typically\n * created from within a Scheduler and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        _super.call(this);\n    }\n    /**\n     * Schedules this action on its parent Scheduler for execution. May be passed\n     * some context object, `state`. May happen at some point in the future,\n     * according to the `delay` parameter, if specified.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler.\n     * @return {void}\n     */\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription_1.Subscription));\nexports.Action = Action;\n//# sourceMappingURL=Action.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/Action.js\n// module id = 90\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scheduler_1 = require('../Scheduler');\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler() {\n        _super.apply(this, arguments);\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler_1.Scheduler));\nexports.AsyncScheduler = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/scheduler/AsyncScheduler.js\n// module id = 91\n// module chunks = 0","\"use strict\";\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n */\nvar Scheduler = (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };\n    return Scheduler;\n}());\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=Scheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/Scheduler.js\n// module id = 92\n// module chunks = 0","\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/isDate.js\n// module id = 93\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar forkJoin_1 = require('../../observable/forkJoin');\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/forkJoin.js\n// module id = 94\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/of.js\n// module id = 95\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar take_1 = require('../../operator/take');\nObservable_1.Observable.prototype.take = take_1.take;\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/take.js\n// module id = 96\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nfunction take(count) {\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeOperator(count));\n    }\n}\nexports.take = take;\nvar TakeOperator = (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeSubscriber = (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operator/take.js\n// module id = 97\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nvar ArgumentOutOfRangeError = (function (_super) {\n    __extends(ArgumentOutOfRangeError, _super);\n    function ArgumentOutOfRangeError() {\n        var err = _super.call(this, 'argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ArgumentOutOfRangeError;\n}(Error));\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/ArgumentOutOfRangeError.js\n// module id = 98\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../operator/concat');\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/concat.js\n// module id = 99\n// module chunks = 0"],"sourceRoot":""}