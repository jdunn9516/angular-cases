/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core';
import * as import1 from '../../../components/input-output/input-output-demo';
import * as import2 from './input-output.ngfactory';
import * as import3 from '../../../components/input-output/input-output';
const styles_InputOutputDemo:any[] = ([] as any[]);
export const RenderType_InputOutputDemo:import0.RendererTypeV2 = import0.ɵcreateRendererTypeV2({
  encapsulation: 2,
  styles: styles_InputOutputDemo,
  data: {animation: ([] as any[])}
}
);
export function View_InputOutputDemo_0():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
      import0.ɵelementDef(0,(null as any),(null as any),1,'button',([] as any[]),(null as any),[[
        (null as any),
        'click'
      ]
    ],(view,eventName,$event) => {
      var allowDefault:boolean = true;
      var comp:import1.InputOutputDemo = view.component;
      if (('click' === eventName)) {
        const pd_0:any = ((<any>comp.update()) !== false);
        allowDefault = (pd_0 && allowDefault);
      }
      return allowDefault;
    },(null as any),(null as any)),
    import0.ɵtextDef((null as any),['Update']),
    import0.ɵtextDef((null as any),['\n              ']),
    import0.ɵelementDef(0,(null as any),(null as any),2,'input-output',[
      [
        'fixedValue',
        'another hard coded value'
      ]
      ,
      [
        'plain',
        'just a simple attribute'
      ]

    ]
      ,(null as any),[[
        (null as any),
        'stringChanged'
      ]
    ],(view,eventName,$event) => {
      var allowDefault:boolean = true;
      var comp:import1.InputOutputDemo = view.component;
      if (('stringChanged' === eventName)) {
        const pd_0:any = ((<any>comp.myStringChanged($event)) !== false);
        allowDefault = (pd_0 && allowDefault);
      }
      return allowDefault;
    },import2.View_InputOutput_0,import2.RenderType_InputOutput),
    import0.ɵdirectiveDef(1025,(null as any),0,import3.InputOutput,[
      import0.ElementRef,
      [
        8,
        'just a simple attribute'
      ]

    ]
    ,{
      counter: [
        0,
        'counter'
      ]
      ,
      fixedValue: [
        1,
        'fixedValue'
      ]
      ,
      sum: [
        2,
        'sum'
      ]
      ,
      headline: [
        3,
        'headline'
      ]
      ,
      growingString: [
        4,
        'growingString'
      ]

    }
    ,{stringChanged: 'stringChanged'}),
    import0.ɵtextDef((null as any),['\n              '])
  ]
  ,(check,view) => {
    var comp:import1.InputOutputDemo = view.component;
    const currVal_0:any = comp.count;
    const currVal_1:any = 'another hard coded value';
    const currVal_2:any = comp.runningTotal;
    const currVal_3:any = comp.myTitle;
    const currVal_4:any = comp.myString;
    check(view,4,0,currVal_0,currVal_1,currVal_2,currVal_3,currVal_4);
  },(null as any));
}
const RenderType_InputOutputDemo_Host:import0.RendererTypeV2 = import0.ɵcreateRendererTypeV2({
  encapsulation: 2,
  styles: ([] as any[]),
  data: {animation: ([] as any[])}
}
);
function View_InputOutputDemo_Host_0():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
    import0.ɵelementDef(0,(null as any),(null as any),1,'ng-component',([] as any[]),(null as any),(null as any),(null as any),View_InputOutputDemo_0,RenderType_InputOutputDemo),
    import0.ɵdirectiveDef(1024,(null as any),0,import1.InputOutputDemo,([] as any[]),(null as any),(null as any))
  ]
  ,(null as any),(null as any));
}
export const InputOutputDemoNgFactory:import0.ComponentFactory<import1.InputOutputDemo> = import0.ɵcreateComponentFactory('ng-component',import1.InputOutputDemo,View_InputOutputDemo_Host_0);