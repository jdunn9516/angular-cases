/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '../../../components/input-output/input-output-demo';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from './input-output.ngfactory';
import * as import11 from '@angular/core/src/linker/element_ref';
import * as import12 from '../../../components/input-output/input-output';
export class Wrapper_InputOutputDemo {
  context:import0.InputOutputDemo;
  changed:boolean;
  constructor() {
    this.changed = false;
    this.context = new import0.InputOutputDemo();
  }
  detectChangesInInputProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
  detectChangesInHostProps(view:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
}
var renderType_InputOutputDemo_Host:import2.RenderComponentType = (null as any);
class _View_InputOutputDemo_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _InputOutputDemo_0_4:Wrapper_InputOutputDemo;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_InputOutputDemo_Host0,renderType_InputOutputDemo_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'ng-component',import4.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_InputOutputDemo0(this.viewUtils,this.injector(0),this._appEl_0);
    this._InputOutputDemo_0_4 = new Wrapper_InputOutputDemo();
    this._appEl_0.initComponent(this._InputOutputDemo_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._InputOutputDemo_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.InputOutputDemo) && (0 === requestNodeIndex))) { return this._InputOutputDemo_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InputOutputDemo_0_4.detectChangesInInputProps(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._InputOutputDemo_0_4.detectChangesInHostProps(this,this._el_0,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_InputOutputDemo_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_InputOutputDemo_Host === (null as any))) { (renderType_InputOutputDemo_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_InputOutputDemo_Host0(viewUtils,parentInjector,declarationEl);
}
export const InputOutputDemoNgFactory:import9.ComponentFactory<import0.InputOutputDemo> = new import9.ComponentFactory<import0.InputOutputDemo>('ng-component',viewFactory_InputOutputDemo_Host0,import0.InputOutputDemo);
const styles_InputOutputDemo:any[] = ([] as any[]);
var renderType_InputOutputDemo:import2.RenderComponentType = (null as any);
class _View_InputOutputDemo0 extends import1.AppView<import0.InputOutputDemo> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  /*private*/ _appEl_3:import3.AppElement;
  _InputOutput_3_4:import10.Wrapper_InputOutput;
  _text_4:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement) {
    super(_View_InputOutputDemo0,renderType_InputOutputDemo,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = import4.createRenderElement(this.renderer,parentRenderNode,'button',import4.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'Update',(null as any));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n              ',(null as any));
    this._el_3 = import4.createRenderElement(this.renderer,parentRenderNode,'input-output',new import4.InlineArray4(4,'fixedValue','another hard coded value','plain','just a simple attribute'),(null as any));
    this._appEl_3 = new import3.AppElement(3,(null as any),this,this._el_3);
    var compView_3:any = import10.viewFactory_InputOutput0(this.viewUtils,this.injector(3),this._appEl_3);
    this._InputOutput_3_4 = new import10.Wrapper_InputOutput(new import11.ElementRef(this._el_3),'just a simple attribute');
    this._appEl_3.initComponent(this._InputOutput_3_4.context,([] as any[]),compView_3);
    this._text_4 = this.renderer.createText((null as any),'\n              ',(null as any));
    compView_3.create(this._InputOutput_3_4.context,([] as any[]),(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_3,'stringChanged',this.eventHandler(this._handle_stringChanged_3_0.bind(this)));
    const subscription_0:any = this._InputOutput_3_4.context.stringChanged.subscribe(this.eventHandler(this._handle_stringChanged_3_0.bind(this)));
    this.init(([] as any[]),[
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.InputOutput) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._InputOutput_3_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.count;
    this._InputOutput_3_4.check_counter(currVal_3_0_0,throwOnChange,false);
    const currVal_3_0_1:any = 'another hard coded value';
    this._InputOutput_3_4.check_fixedValue(currVal_3_0_1,throwOnChange,false);
    const currVal_3_0_2:any = this.context.runningTotal;
    this._InputOutput_3_4.check_sum(currVal_3_0_2,throwOnChange,false);
    const currVal_3_0_3:any = this.context.myTitle;
    this._InputOutput_3_4.check_headline(currVal_3_0_3,throwOnChange,false);
    const currVal_3_0_4:any = this.context.myString;
    this._InputOutput_3_4.check_growingString(currVal_3_0_4,throwOnChange,false);
    this._InputOutput_3_4.detectChangesInInputProps(this,this._el_3,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this._InputOutput_3_4.detectChangesInHostProps(this,this._el_3,throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0_0:any = ((<any>this.context.update()) !== false);
    return (true && pd_0_0);
  }
  private _handle_stringChanged_3_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_3_0:any = ((<any>this.context.myStringChanged($event)) !== false);
    return (true && pd_3_0);
  }
}
export function viewFactory_InputOutputDemo0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import3.AppElement):import1.AppView<import0.InputOutputDemo> {
  if ((renderType_InputOutputDemo === (null as any))) { (renderType_InputOutputDemo = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,styles_InputOutputDemo,{})); }
  return new _View_InputOutputDemo0(viewUtils,parentInjector,declarationEl);
}