/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
 /* tslint:disable */


import * as import0 from '@angular/core';
import * as import1 from '../../../components/lazy-loaded-tree-view/tree-view';
import * as import2 from '../../../components/lazy-loaded-tree-view/redux/store';
import * as import3 from '../../../components/lazy-loaded-tree-view/tree-node-service';
import * as import4 from '@angular/common';
const styles_LazyTreeView:any[] = ([] as any[]);
export const RenderType_LazyTreeView:import0.RendererType2 = import0.ɵcrt({
  encapsulation: 2,
  styles: styles_LazyTreeView,
  data: {}
}
);
function View_LazyTreeView_2(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),4,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵted((null as any),['\n      '])),
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'lazy-tree-view',([] as any[]),(null as any),(null as any),(null as any),View_LazyTreeView_0,RenderType_LazyTreeView)),
    import0.ɵdid(122880,(null as any),0,import1.LazyTreeView,[
      import2.Store,
      import3.TreeNodeService
    ]
      ,{root: [
        0,
        'root'
      ]
    },(null as any)),
    (l()(),import0.ɵted((null as any),['\n    ']))
  ]
  ,(ck,v) => {
    const currVal_0:any = (<any>v.parent).context.$implicit;
    ck(v,3,0,currVal_0);
  },(null as any));
}
function View_LazyTreeView_1(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),12,'li',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵted((null as any),['\n\n    '])),
      (l()(),import0.ɵeld(0,(null as any),(null as any),3,'span',[[
        'class',
        'iconButton'
      ]
      ],(null as any),[[
        (null as any),
        'click'
      ]
    ],(v,en,$event) => {
      var ad:boolean = true;
      if (('click' === en)) {
        const pd_0:any = ((<any>v.context.$implicit.expand()) !== false);
        ad = (pd_0 && ad);
      }
      return ad;
    },(null as any),(null as any))),
    import0.ɵdid(139264,(null as any),0,import4.NgClass,[
      import0.IterableDiffers,
      import0.KeyValueDiffers,
      import0.ElementRef,
      import0.Renderer
    ]
    ,{
      klass: [
        0,
        'klass'
      ]
      ,
      ngClass: [
        1,
        'ngClass'
      ]

    }
    ,(null as any)),
    import0.ɵpod(['tree-node-no-children']),
    (l()(),import0.ɵted((null as any),[
      '',
      ''
    ]
    )),
    (l()(),import0.ɵted((null as any),['\n    '])),
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'span',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵted((null as any),[
      '',
      ''
    ]
    )),
    (l()(),import0.ɵted((null as any),['\n\n    '])),
    (l()(),import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_LazyTreeView_2)),
    import0.ɵdid(8192,(null as any),0,import4.NgIf,[
      import0.ViewContainerRef,
      import0.TemplateRef
    ]
      ,{ngIf: [
        0,
        'ngIf'
      ]
    },(null as any)),
    (l()(),import0.ɵted((null as any),['\n  ']))
  ]
  ,(ck,v) => {
    const currVal_0:any = 'iconButton';
    const currVal_1:any = ck(v,4,0,!v.context.$implicit.showIcon);
    ck(v,3,0,currVal_0,currVal_1);
    const currVal_4:any = v.context.$implicit.expanded;
    ck(v,11,0,currVal_4);
  },(ck,v) => {
    const currVal_2:any = v.context.$implicit.icon;
    ck(v,5,0,currVal_2);
    const currVal_3:any = v.context.$implicit.name;
    ck(v,8,0,currVal_3);
  });
}
export function View_LazyTreeView_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),4,'ul',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),
    (l()(),import0.ɵted((null as any),['\n  '])),
    (l()(),import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_LazyTreeView_1)),
    import0.ɵdid(401408,(null as any),0,import4.NgForOf,[
      import0.ViewContainerRef,
      import0.TemplateRef,
      import0.IterableDiffers
    ]
      ,{ngForOf: [
        0,
        'ngForOf'
      ]
    },(null as any)),
    (l()(),import0.ɵted((null as any),['\n'])),
    (l()(),import0.ɵted((null as any),['\n\n']))
  ]
  ,(ck,v) => {
    var co:import1.LazyTreeView = v.component;
    const currVal_0:any = co.items;
    ck(v,3,0,currVal_0);
  },(null as any));
}
function View_LazyTreeView_Host_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'lazy-tree-view',([] as any[]),(null as any),(null as any),(null as any),View_LazyTreeView_0,RenderType_LazyTreeView)),
    import0.ɵdid(122880,(null as any),0,import1.LazyTreeView,[
      import2.Store,
      import3.TreeNodeService
    ]
    ,(null as any),(null as any))
  ]
  ,(ck,v) => {
    ck(v,1,0);
  },(null as any));
}
export const LazyTreeViewNgFactory:import0.ComponentFactory<import1.LazyTreeView> = import0.ɵccf('lazy-tree-view',import1.LazyTreeView,View_LazyTreeView_Host_0,{root: 'root'},{},([] as any[]));
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy90cmVlLXZpZXcubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvdG9yL0RldmVsb3BtZW50L2FuZ3VsYXItMi1zYW1wbGVzL2NvbXBvbmVudHMvbGF6eS1sb2FkZWQtdHJlZS12aWV3L3RyZWUtdmlldy50cyIsIm5nOi8vL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy90cmVlLXZpZXcuaHRtbCIsIm5nOi8vL1VzZXJzL3Rvci9EZXZlbG9wbWVudC9hbmd1bGFyLTItc2FtcGxlcy9jb21wb25lbnRzL2xhenktbG9hZGVkLXRyZWUtdmlldy90cmVlLXZpZXcudHMuTGF6eVRyZWVWaWV3X0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiPHVsPlxuICA8bGkgKm5nRm9yPVwibGV0IG5vZGUgb2YgaXRlbXNcIj5cblxuICAgIDxzcGFuIGNsYXNzPVwiaWNvbkJ1dHRvblwiIFtuZ0NsYXNzXT0ne1widHJlZS1ub2RlLW5vLWNoaWxkcmVuXCI6ICFub2RlLnNob3dJY29ufScgKGNsaWNrKT1cIm5vZGUuZXhwYW5kKClcIj57e25vZGUuaWNvbn19PC9zcGFuPlxuICAgIDxzcGFuPnt7IG5vZGUubmFtZSB9fTwvc3Bhbj5cblxuICAgIDxkaXYgKm5nSWY9XCJub2RlLmV4cGFuZGVkXCI+XG4gICAgICA8bGF6eS10cmVlLXZpZXcgW3Jvb3RdPVwibm9kZVwiPjwvbGF6eS10cmVlLXZpZXc+XG4gICAgPC9kaXY+XG4gIDwvbGk+XG48L3VsPlxuXG4iLCI8bGF6eS10cmVlLXZpZXc+PC9sYXp5LXRyZWUtdmlldz4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lDTUk7SUFBMkI7SUFDekI7Z0JBQUE7OztJQUFBO09BQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtJQUErQzs7O0lBQS9CO0lBQWhCLFNBQWdCLFNBQWhCOzs7OztJQU5KO0lBQStCO01BRTdCO1FBQUE7UUFBQTtNQUFBO01BQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtNQUFBO01BQStFO1FBQUE7UUFBQTtNQUFBO01BQS9FO0lBQUE7Z0JBQUE7Ozs7O0lBQUE7S0FBQTtNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7Z0JBQXlCO0lBQThFO01BQUE7TUFBQTtJQUFBO0lBQUE7SUFBb0I7SUFDM0g7SUFBTTtNQUFBO01BQUE7SUFBQTtJQUFBO0lBQXNCO0lBRTVCO2dCQUFBOzs7SUFBQTtPQUFBO1FBQUE7UUFBQTtNQUFBO0lBQUE7SUFFTTs7O0lBTEE7SUFBbUI7SUFBekIsU0FBTSxVQUFtQixTQUF6QjtJQUdLO0lBQUwsVUFBSyxTQUFMOztJQUh1RztJQUFBO0lBQ2pHO0lBQUE7Ozs7O0lBSlY7SUFBSTtJQUNGO2dCQUFBOzs7O0lBQUE7T0FBQTtRQUFBO1FBQUE7TUFBQTtJQUFBO0lBUUs7SUFDRjs7OztJQVRDO0lBQUosU0FBSSxTQUFKOzs7OztJQ0RGO2dCQUFBOzs7SUFBQTtLQUFBOzs7SUFBQTs7OyJ9
