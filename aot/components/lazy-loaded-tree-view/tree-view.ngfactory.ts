/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core';
import * as import1 from '../../../components/lazy-loaded-tree-view/tree-view';
import * as import2 from '../../../components/lazy-loaded-tree-view/redux/store';
import * as import3 from '../../../components/lazy-loaded-tree-view/tree-node-service';
import * as import4 from '@angular/common';
const styles_LazyTreeView:any[] = ([] as any[]);
export const RenderType_LazyTreeView:import0.RendererTypeV2 = import0.ɵcreateRendererTypeV2({
  encapsulation: 2,
  styles: styles_LazyTreeView,
  data: {animation: ([] as any[])}
}
);
function View_LazyTreeView_2():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
    import0.ɵelementDef(0,(null as any),(null as any),4,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),
    import0.ɵtextDef((null as any),['\n      ']),
    import0.ɵelementDef(0,(null as any),(null as any),1,'lazy-tree-view',([] as any[]),(null as any),(null as any),(null as any),View_LazyTreeView_0,RenderType_LazyTreeView),
    import0.ɵdirectiveDef(1027,(null as any),0,import1.LazyTreeView,[
      import2.Store,
      import3.TreeNodeService
    ]
      ,{root: [
        0,
        'root'
      ]
    },(null as any)),
    import0.ɵtextDef((null as any),['\n    '])
  ]
  ,(check,view) => {
    var comp:any = view.component;
    const currVal_0:any = view.parent.context.$implicit;
    check(view,3,0,currVal_0);
  },(null as any));
}
function View_LazyTreeView_1():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
    import0.ɵelementDef(0,(null as any),(null as any),12,'li',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),
    import0.ɵtextDef((null as any),['\n\n    ']),
      import0.ɵelementDef(0,(null as any),(null as any),3,'span',[[
        'class',
        'iconButton'
      ]
      ],(null as any),[[
        (null as any),
        'click'
      ]
    ],(view,eventName,$event) => {
      var allowDefault:boolean = true;
      var comp:any = view.component;
      if (('click' === eventName)) {
        const pd_0:any = ((<any>view.context.$implicit.expand()) !== false);
        allowDefault = (pd_0 && allowDefault);
      }
      return allowDefault;
    },(null as any),(null as any)),
    import0.ɵdirectiveDef(4,(null as any),0,import4.NgClass,[
      import0.IterableDiffers,
      import0.KeyValueDiffers,
      import0.ElementRef,
      import0.Renderer
    ]
    ,{
      klass: [
        0,
        'klass'
      ]
      ,
      ngClass: [
        1,
        'ngClass'
      ]

    }
    ,(null as any)),
    import0.ɵpureObjectDef(['tree-node-no-children']),
    import0.ɵtextDef((null as any),[
      '',
      ''
    ]
    ),
    import0.ɵtextDef((null as any),['\n    ']),
    import0.ɵelementDef(0,(null as any),(null as any),1,'span',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),
    import0.ɵtextDef((null as any),[
      '',
      ''
    ]
    ),
    import0.ɵtextDef((null as any),['\n\n    ']),
    import0.ɵanchorDef(256,(null as any),(null as any),1,(null as any),View_LazyTreeView_2),
    import0.ɵdirectiveDef(0,(null as any),0,import4.NgIf,[
      import0.ViewContainerRef,
      import0.TemplateRef
    ]
      ,{ngIf: [
        0,
        'ngIf'
      ]
    },(null as any)),
    import0.ɵtextDef((null as any),['\n  '])
  ]
  ,(check,view) => {
    var comp:any = view.component;
    const currVal_0:any = 'iconButton';
    const currVal_1:any = check(view,4,0,!view.context.$implicit.showIcon);
    check(view,3,0,currVal_0,currVal_1);
    const currVal_2:any = view.context.$implicit.expanded;
    check(view,11,0,currVal_2);
  },(check,view) => {
    var comp:any = view.component;
    const currVal_0:any = view.context.$implicit.icon;
    check(view,5,0,currVal_0);
    const currVal_1:any = view.context.$implicit.name;
    check(view,8,0,currVal_1);
  });
}
export function View_LazyTreeView_0():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
    import0.ɵelementDef(0,(null as any),(null as any),4,'ul',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),
    import0.ɵtextDef((null as any),['\n  ']),
    import0.ɵanchorDef(256,(null as any),(null as any),1,(null as any),View_LazyTreeView_1),
    import0.ɵdirectiveDef(12,(null as any),0,import4.NgForOf,[
      import0.ViewContainerRef,
      import0.TemplateRef,
      import0.IterableDiffers
    ]
      ,{ngForOf: [
        0,
        'ngForOf'
      ]
    },(null as any)),
    import0.ɵtextDef((null as any),['\n']),
    import0.ɵtextDef((null as any),['\n\n'])
  ]
  ,(check,view) => {
    var comp:import1.LazyTreeView = view.component;
    const currVal_0:any = comp.items;
    check(view,3,0,currVal_0);
  },(null as any));
}
const RenderType_LazyTreeView_Host:import0.RendererTypeV2 = import0.ɵcreateRendererTypeV2({
  encapsulation: 2,
  styles: ([] as any[]),
  data: {animation: ([] as any[])}
}
);
function View_LazyTreeView_Host_0():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
    import0.ɵelementDef(0,(null as any),(null as any),1,'lazy-tree-view',([] as any[]),(null as any),(null as any),(null as any),View_LazyTreeView_0,RenderType_LazyTreeView),
    import0.ɵdirectiveDef(1027,(null as any),0,import1.LazyTreeView,[
      import2.Store,
      import3.TreeNodeService
    ]
    ,(null as any),(null as any))
  ]
  ,(check,view) => {
    check(view,1,0);
  },(null as any));
}
export const LazyTreeViewNgFactory:import0.ComponentFactory<import1.LazyTreeView> = import0.ɵcreateComponentFactory('lazy-tree-view',import1.LazyTreeView,View_LazyTreeView_Host_0);