/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core';
import * as import1 from '@angular/common';
import * as import2 from '../../../components/rxjs-buffering/rxjs-buffering';
const styles_RxJsBuffering:any[] = ([] as any[]);
export const RenderType_RxJsBuffering:import0.RendererTypeV2 = import0.ɵcreateRendererTypeV2({
  encapsulation: 2,
  styles: styles_RxJsBuffering,
  data: {animation: ([] as any[])}
}
);
function View_RxJsBuffering_1():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
      import0.ɵelementDef(0,(null as any),(null as any),1,'div',[[
        'class',
        'box'
      ]
      ],(null as any),[[
        (null as any),
        'click'
      ]
    ],(view,eventName,$event) => {
      var allowDefault:boolean = true;
      var comp:any = view.component;
      if (('click' === eventName)) {
        const pd_0:any = ((<any>comp.add(view.context.$implicit)) !== false);
        allowDefault = (pd_0 && allowDefault);
      }
      return allowDefault;
    },(null as any),(null as any)),
    import0.ɵtextDef((null as any),[
      '',
      ''
    ]
    )
  ]
  ,(null as any),(check,view) => {
    var comp:any = view.component;
    const currVal_0:any = view.context.$implicit;
    check(view,1,0,currVal_0);
  });
}
function View_RxJsBuffering_2():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
      import0.ɵelementDef(0,(null as any),(null as any),1,'div',[[
        'class',
        'sum'
      ]
    ],(null as any),(null as any),(null as any),(null as any),(null as any)),
    import0.ɵtextDef((null as any),[
      'SUM: ',
      ''
    ]
    )
  ]
  ,(null as any),(check,view) => {
    var comp:any = view.component;
    const currVal_0:any = comp.calculation.sum;
    check(view,1,0,currVal_0);
  });
}
export function View_RxJsBuffering_0():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
    import0.ɵtextDef((null as any),['\n    ']),
    import0.ɵelementDef(0,(null as any),(null as any),1,'h3',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any)),
    import0.ɵtextDef((null as any),['Click three numbers to add']),
    import0.ɵtextDef((null as any),['\n    ']),
    import0.ɵanchorDef(256,(null as any),(null as any),1,(null as any),View_RxJsBuffering_1),
    import0.ɵdirectiveDef(12,(null as any),0,import1.NgForOf,[
      import0.ViewContainerRef,
      import0.TemplateRef,
      import0.IterableDiffers
    ]
      ,{ngForOf: [
        0,
        'ngForOf'
      ]
    },(null as any)),
    import0.ɵtextDef((null as any),['\n    ']),
    import0.ɵanchorDef(256,(null as any),(null as any),1,(null as any),View_RxJsBuffering_2),
    import0.ɵdirectiveDef(0,(null as any),0,import1.NgIf,[
      import0.ViewContainerRef,
      import0.TemplateRef
    ]
      ,{ngIf: [
        0,
        'ngIf'
      ]
    },(null as any)),
    import0.ɵtextDef((null as any),['\n  '])
  ]
  ,(check,view) => {
    var comp:import2.RxJsBuffering = view.component;
    const currVal_0:any = comp.numbers;
    check(view,5,0,currVal_0);
    const currVal_1:any = comp.showSum;
    check(view,8,0,currVal_1);
  },(null as any));
}
const RenderType_RxJsBuffering_Host:import0.RendererTypeV2 = import0.ɵcreateRendererTypeV2({
  encapsulation: 2,
  styles: ([] as any[]),
  data: {animation: ([] as any[])}
}
);
function View_RxJsBuffering_Host_0():import0.ɵViewDefinition {
  return import0.ɵviewDef(0,[
    import0.ɵelementDef(0,(null as any),(null as any),1,'ng-component',([] as any[]),(null as any),(null as any),(null as any),View_RxJsBuffering_0,RenderType_RxJsBuffering),
    import0.ɵdirectiveDef(1025,(null as any),0,import2.RxJsBuffering,([] as any[]),(null as any),(null as any))
  ]
  ,(check,view) => {
    check(view,1,0);
  },(null as any));
}
export const RxJsBufferingNgFactory:import0.ComponentFactory<import2.RxJsBuffering> = import0.ɵcreateComponentFactory('ng-component',import2.RxJsBuffering,View_RxJsBuffering_Host_0);