/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from '../../../components/text-editor/text-editor';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/common/src/directives/ng_for';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import13 from '@angular/common/src/directives/ng_class';
import * as import14 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import15 from '@angular/core/src/linker/element_ref';
var renderType_TextEditor_Host:import0.RenderComponentType = (null as any);
class _View_TextEditor_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TextEditor_0_4:import3.TextEditor;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TextEditor_Host0,renderType_TextEditor_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('editor',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_TextEditor0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TextEditor_0_4 = new import3.TextEditor();
    this._appEl_0.initComponent(this._TextEditor_0_4,[],compView_0);
    compView_0.create(this._TextEditor_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.TextEditor) && (0 === requestNodeIndex))) { return this._TextEditor_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._TextEditor_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TextEditor_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_TextEditor_Host === (null as any))) { (renderType_TextEditor_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_TextEditor_Host0(viewUtils,parentInjector,declarationEl);
}
export const TextEditorNgFactory:import9.ComponentFactory<import3.TextEditor> = new import9.ComponentFactory<import3.TextEditor>('editor',viewFactory_TextEditor_Host0,import3.TextEditor);
const styles_TextEditor:any[] = [];
var renderType_TextEditor:import0.RenderComponentType = (null as any);
class _View_TextEditor0 extends import1.AppView<import3.TextEditor> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _anchor_10:any;
  /*private*/ _appEl_10:import2.AppElement;
  _TemplateRef_10_5:any;
  _NgFor_10_6:import10.NgFor;
  _text_11:any;
  _text_12:any;
  _el_13:any;
  _el_14:any;
  _text_15:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TextEditor0,renderType_TextEditor,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'h1',(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'Text editor based on Observables',(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._el_4 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','alert alert-success');
    this.renderer.setElementAttribute(this._el_4,'role','alert');
    this._text_5 = this.renderer.createText(this._el_4,'\n    Supports typing of letters and numbers. Basic text selection and cursor placement is also supported.\n',(null as any));
    this._text_6 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._el_7 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_7,'class','editor');
    this._text_8 = this.renderer.createText(this._el_7,'\n',(null as any));
    this._el_9 = this.renderer.createElement(this._el_7,'div',(null as any));
    this.renderer.setElementAttribute(this._el_9,'class','page noselect');
    this.renderer.setElementAttribute(this._el_9,'id','page');
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_9,(null as any));
    this._appEl_10 = new import2.AppElement(10,9,this,this._anchor_10);
    this._TemplateRef_10_5 = new import11.TemplateRef_(this._appEl_10,viewFactory_TextEditor1);
    this._NgFor_10_6 = new import10.NgFor(this._appEl_10.vcRef,this._TemplateRef_10_5,this.parentInjector.get(import12.IterableDiffers),this.ref);
    this._text_11 = this.renderer.createText(this._el_7,'\n',(null as any));
    this._text_12 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._el_13 = this.renderer.createElement(parentRenderNode,'h4',(null as any));
    this._el_14 = this.renderer.createElement(this._el_13,'a',(null as any));
    this.renderer.setElementAttribute(this._el_14,'href','http://www.syntaxsuccess.com/viewarticle/observables-in-angular-2.0');
    this._text_15 = this.renderer.createText(this._el_14,'Read more here',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._anchor_10,
      this._text_11,
      this._text_12,
      this._el_13,
      this._el_14,
      this._text_15
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import10.NgFor) && (10 === requestNodeIndex))) { return this._NgFor_10_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_0:any = this.context.currentDocument.characters;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgFor_10_6.ngForOf = currVal_0;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_0,currVal_0);
      this._expr_0 = currVal_0;
    }
    if ((changes !== (null as any))) { this._NgFor_10_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_10_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_TextEditor0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.TextEditor> {
  if ((renderType_TextEditor === (null as any))) { (renderType_TextEditor = viewUtils.createRenderComponentType('/Users/tor/Development/angular-2-samples/components/text-editor/text-editor.html',0,import8.ViewEncapsulation.None,styles_TextEditor,{})); }
  return new _View_TextEditor0(viewUtils,parentInjector,declarationEl);
}
class _View_TextEditor1 extends import1.AppView<any> {
  _el_0:any;
  _NgClass_0_3:import13.NgClass;
  _text_1:any;
  _map_0:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TextEditor1,renderType_TextEditor,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'span',(null as any));
    this._NgClass_0_3 = new import13.NgClass(this.parent.parentInjector.get(import12.IterableDiffers),this.parent.parentInjector.get(import14.KeyValueDiffers),new import15.ElementRef(this._el_0),this.renderer);
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._map_0 = import4.pureProxy2((p0:any,p1:any):{[key: string]:any} => {
      return {
        currentChar: p0,
        selectedChar: p1
      }
      ;
    });
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import13.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgClass_0_3; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this._map_0(this.context.$implicit.isCurrent,this.context.$implicit.isSelected);
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgClass_0_3.ngClass = currVal_0;
      this._expr_0 = currVal_0;
    }
    if (!throwOnChange) { this._NgClass_0_3.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = import4.interpolate(1,'',this.context.$implicit.value,'');
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setText(this._text_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TextEditor1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_TextEditor1(viewUtils,parentInjector,declarationEl);
}