(function () {
'use strict';

var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};



function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var root = createCommonjsModule(function (module, exports) {
"use strict";
/**
 * window: browser in DOM main thread
 * self: browser in WebWorker
 * global: Node.js/other
 */
exports.root = (typeof window == 'object' && window.window === window && window
    || typeof self == 'object' && self.self === self && self
    || typeof commonjsGlobal == 'object' && commonjsGlobal.global === commonjsGlobal && commonjsGlobal);
if (!exports.root) {
    throw new Error('RxJS could not find any global context (window, self, global)');
}

});

var isFunction = createCommonjsModule(function (module, exports) {
"use strict";
function isFunction(x) {
    return typeof x === 'function';
}
exports.isFunction = isFunction;

});

var isArray = createCommonjsModule(function (module, exports) {
"use strict";
exports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });

});

var isObject = createCommonjsModule(function (module, exports) {
"use strict";
function isObject(x) {
    return x != null && typeof x === 'object';
}
exports.isObject = isObject;

});

var errorObject = createCommonjsModule(function (module, exports) {
"use strict";
// typeof any so that it we don't have to cast when comparing a result to the error object
exports.errorObject = { e: {} };

});

var tryCatch = createCommonjsModule(function (module, exports) {
"use strict";
var errorObject_1 = errorObject;
var tryCatchTarget;
function tryCatcher() {
    try {
        return tryCatchTarget.apply(this, arguments);
    }
    catch (e) {
        errorObject_1.errorObject.e = e;
        return errorObject_1.errorObject;
    }
}
function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
}
exports.tryCatch = tryCatch;


});

var UnsubscriptionError = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */
var UnsubscriptionError = (function (_super) {
    __extends(UnsubscriptionError, _super);
    function UnsubscriptionError(errors) {
        _super.call(this);
        this.errors = errors;
        var err = Error.call(this, errors ?
            errors.length + " errors occurred during unsubscription:\n  " + errors.map(function (err, i) { return ((i + 1) + ") " + err.toString()); }).join('\n  ') : '');
        this.name = err.name = 'UnsubscriptionError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return UnsubscriptionError;
}(Error));
exports.UnsubscriptionError = UnsubscriptionError;

});

var Subscription = createCommonjsModule(function (module, exports) {
"use strict";
var isArray_1 = isArray;
var isObject_1 = isObject;
var isFunction_1 = isFunction;
var tryCatch_1 = tryCatch;
var errorObject_1 = errorObject;
var UnsubscriptionError_1 = UnsubscriptionError;
/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */
var Subscription = (function () {
    /**
     * @param {function(): void} [unsubscribe] A function describing how to
     * perform the disposal of resources when the `unsubscribe` method is called.
     */
    function Subscription(unsubscribe) {
        /**
         * A flag to indicate whether this Subscription has already been unsubscribed.
         * @type {boolean}
         */
        this.closed = false;
        if (unsubscribe) {
            this._unsubscribe = unsubscribe;
        }
    }
    /**
     * Disposes the resources held by the subscription. May, for instance, cancel
     * an ongoing Observable execution or cancel any other type of work that
     * started when the Subscription was created.
     * @return {void}
     */
    Subscription.prototype.unsubscribe = function () {
        var hasErrors = false;
        var errors;
        if (this.closed) {
            return;
        }
        this.closed = true;
        var _a = this, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
        this._subscriptions = null;
        if (isFunction_1.isFunction(_unsubscribe)) {
            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);
            if (trial === errorObject_1.errorObject) {
                hasErrors = true;
                (errors = errors || []).push(errorObject_1.errorObject.e);
            }
        }
        if (isArray_1.isArray(_subscriptions)) {
            var index = -1;
            var len = _subscriptions.length;
            while (++index < len) {
                var sub = _subscriptions[index];
                if (isObject_1.isObject(sub)) {
                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);
                    if (trial === errorObject_1.errorObject) {
                        hasErrors = true;
                        errors = errors || [];
                        var err = errorObject_1.errorObject.e;
                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                            errors = errors.concat(err.errors);
                        }
                        else {
                            errors.push(err);
                        }
                    }
                }
            }
        }
        if (hasErrors) {
            throw new UnsubscriptionError_1.UnsubscriptionError(errors);
        }
    };
    /**
     * Adds a tear down to be called during the unsubscribe() of this
     * Subscription.
     *
     * If the tear down being added is a subscription that is already
     * unsubscribed, is the same reference `add` is being called on, or is
     * `Subscription.EMPTY`, it will not be added.
     *
     * If this subscription is already in an `closed` state, the passed
     * tear down logic will be executed immediately.
     *
     * @param {TeardownLogic} teardown The additional logic to execute on
     * teardown.
     * @return {Subscription} Returns the Subscription used or created to be
     * added to the inner subscriptions list. This Subscription can be used with
     * `remove()` to remove the passed teardown logic from the inner subscriptions
     * list.
     */
    Subscription.prototype.add = function (teardown) {
        if (!teardown || (teardown === Subscription.EMPTY)) {
            return Subscription.EMPTY;
        }
        if (teardown === this) {
            return this;
        }
        var sub = teardown;
        switch (typeof teardown) {
            case 'function':
                sub = new Subscription(teardown);
            case 'object':
                if (sub.closed || typeof sub.unsubscribe !== 'function') {
                    break;
                }
                else if (this.closed) {
                    sub.unsubscribe();
                }
                else {
                    (this._subscriptions || (this._subscriptions = [])).push(sub);
                }
                break;
            default:
                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
        }
        return sub;
    };
    /**
     * Removes a Subscription from the internal list of subscriptions that will
     * unsubscribe during the unsubscribe process of this Subscription.
     * @param {Subscription} subscription The subscription to remove.
     * @return {void}
     */
    Subscription.prototype.remove = function (subscription) {
        // HACK: This might be redundant because of the logic in `add()`
        if (subscription == null || (subscription === this) || (subscription === Subscription.EMPTY)) {
            return;
        }
        var subscriptions = this._subscriptions;
        if (subscriptions) {
            var subscriptionIndex = subscriptions.indexOf(subscription);
            if (subscriptionIndex !== -1) {
                subscriptions.splice(subscriptionIndex, 1);
            }
        }
    };
    Subscription.EMPTY = (function (empty) {
        empty.closed = true;
        return empty;
    }(new Subscription()));
    return Subscription;
}());
exports.Subscription = Subscription;

});

var Observer = createCommonjsModule(function (module, exports) {
"use strict";
exports.empty = {
    closed: true,
    next: function (value) { },
    error: function (err) { throw err; },
    complete: function () { }
};

});

var rxSubscriber = createCommonjsModule(function (module, exports) {
"use strict";
var root_1 = root;
var Symbol = root_1.root.Symbol;
exports.$$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?
    Symbol.for('rxSubscriber') : '@@rxSubscriber';

});

var Subscriber = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isFunction_1 = isFunction;
var Subscription_1 = Subscription;
var Observer_1 = Observer;
var rxSubscriber_1 = rxSubscriber;
/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */
var Subscriber = (function (_super) {
    __extends(Subscriber, _super);
    /**
     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
     * defined Observer or a `next` callback function.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     */
    function Subscriber(destinationOrNext, error, complete) {
        _super.call(this);
        this.syncErrorValue = null;
        this.syncErrorThrown = false;
        this.syncErrorThrowable = false;
        this.isStopped = false;
        switch (arguments.length) {
            case 0:
                this.destination = Observer_1.empty;
                break;
            case 1:
                if (!destinationOrNext) {
                    this.destination = Observer_1.empty;
                    break;
                }
                if (typeof destinationOrNext === 'object') {
                    if (destinationOrNext instanceof Subscriber) {
                        this.destination = destinationOrNext;
                        this.destination.add(this);
                    }
                    else {
                        this.syncErrorThrowable = true;
                        this.destination = new SafeSubscriber(this, destinationOrNext);
                    }
                    break;
                }
            default:
                this.syncErrorThrowable = true;
                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);
                break;
        }
    }
    Subscriber.prototype[rxSubscriber_1.$$rxSubscriber] = function () { return this; };
    /**
     * A static factory for a Subscriber, given a (potentially partial) definition
     * of an Observer.
     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
     * Observer represented by the given arguments.
     */
    Subscriber.create = function (next, error, complete) {
        var subscriber = new Subscriber(next, error, complete);
        subscriber.syncErrorThrowable = false;
        return subscriber;
    };
    /**
     * The {@link Observer} callback to receive notifications of type `next` from
     * the Observable, with a value. The Observable may call this method 0 or more
     * times.
     * @param {T} [value] The `next` value.
     * @return {void}
     */
    Subscriber.prototype.next = function (value) {
        if (!this.isStopped) {
            this._next(value);
        }
    };
    /**
     * The {@link Observer} callback to receive notifications of type `error` from
     * the Observable, with an attached {@link Error}. Notifies the Observer that
     * the Observable has experienced an error condition.
     * @param {any} [err] The `error` exception.
     * @return {void}
     */
    Subscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            this.isStopped = true;
            this._error(err);
        }
    };
    /**
     * The {@link Observer} callback to receive a valueless notification of type
     * `complete` from the Observable. Notifies the Observer that the Observable
     * has finished sending push-based notifications.
     * @return {void}
     */
    Subscriber.prototype.complete = function () {
        if (!this.isStopped) {
            this.isStopped = true;
            this._complete();
        }
    };
    Subscriber.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
    };
    Subscriber.prototype._next = function (value) {
        this.destination.next(value);
    };
    Subscriber.prototype._error = function (err) {
        this.destination.error(err);
        this.unsubscribe();
    };
    Subscriber.prototype._complete = function () {
        this.destination.complete();
        this.unsubscribe();
    };
    return Subscriber;
}(Subscription_1.Subscription));
exports.Subscriber = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SafeSubscriber = (function (_super) {
    __extends(SafeSubscriber, _super);
    function SafeSubscriber(_parent, observerOrNext, error, complete) {
        _super.call(this);
        this._parent = _parent;
        var next;
        var context = this;
        if (isFunction_1.isFunction(observerOrNext)) {
            next = observerOrNext;
        }
        else if (observerOrNext) {
            context = observerOrNext;
            next = observerOrNext.next;
            error = observerOrNext.error;
            complete = observerOrNext.complete;
            if (isFunction_1.isFunction(context.unsubscribe)) {
                this.add(context.unsubscribe.bind(context));
            }
            context.unsubscribe = this.unsubscribe.bind(this);
        }
        this._context = context;
        this._next = next;
        this._error = error;
        this._complete = complete;
    }
    SafeSubscriber.prototype.next = function (value) {
        if (!this.isStopped && this._next) {
            var _parent = this._parent;
            if (!_parent.syncErrorThrowable) {
                this.__tryOrUnsub(this._next, value);
            }
            else if (this.__tryOrSetError(_parent, this._next, value)) {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var _parent = this._parent;
            if (this._error) {
                if (!_parent.syncErrorThrowable) {
                    this.__tryOrUnsub(this._error, err);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parent, this._error, err);
                    this.unsubscribe();
                }
            }
            else if (!_parent.syncErrorThrowable) {
                this.unsubscribe();
                throw err;
            }
            else {
                _parent.syncErrorValue = err;
                _parent.syncErrorThrown = true;
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _parent = this._parent;
            if (this._complete) {
                if (!_parent.syncErrorThrowable) {
                    this.__tryOrUnsub(this._complete);
                    this.unsubscribe();
                }
                else {
                    this.__tryOrSetError(_parent, this._complete);
                    this.unsubscribe();
                }
            }
            else {
                this.unsubscribe();
            }
        }
    };
    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            this.unsubscribe();
            throw err;
        }
    };
    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
        try {
            fn.call(this._context, value);
        }
        catch (err) {
            parent.syncErrorValue = err;
            parent.syncErrorThrown = true;
            return true;
        }
        return false;
    };
    SafeSubscriber.prototype._unsubscribe = function () {
        var _parent = this._parent;
        this._context = null;
        this._parent = null;
        _parent.unsubscribe();
    };
    return SafeSubscriber;
}(Subscriber));

});

var toSubscriber = createCommonjsModule(function (module, exports) {
"use strict";
var Subscriber_1 = Subscriber;
var rxSubscriber_1 = rxSubscriber;
var Observer_1 = Observer;
function toSubscriber(nextOrObserver, error, complete) {
    if (nextOrObserver) {
        if (nextOrObserver instanceof Subscriber_1.Subscriber) {
            return nextOrObserver;
        }
        if (nextOrObserver[rxSubscriber_1.$$rxSubscriber]) {
            return nextOrObserver[rxSubscriber_1.$$rxSubscriber]();
        }
    }
    if (!nextOrObserver && !error && !complete) {
        return new Subscriber_1.Subscriber(Observer_1.empty);
    }
    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
}
exports.toSubscriber = toSubscriber;

});

var observable = createCommonjsModule(function (module, exports) {
"use strict";
var root_1 = root;
function getSymbolObservable(context) {
    var $$observable;
    var Symbol = context.Symbol;
    if (typeof Symbol === 'function') {
        if (Symbol.observable) {
            $$observable = Symbol.observable;
        }
        else {
            $$observable = Symbol('observable');
            Symbol.observable = $$observable;
        }
    }
    else {
        $$observable = '@@observable';
    }
    return $$observable;
}
exports.getSymbolObservable = getSymbolObservable;
exports.$$observable = getSymbolObservable(root_1.root);

});

var $$observable = observable.$$observable;

var Observable = createCommonjsModule(function (module, exports) {
"use strict";
var root_1 = root;
var toSubscriber_1 = toSubscriber;
var observable_1 = observable;
/**
 * A representation of any set of values over any amount of time. This the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */
var Observable = (function () {
    /**
     * @constructor
     * @param {Function} subscribe the function that is  called when the Observable is
     * initially subscribed to. This function is given a Subscriber, to which new values
     * can be `next`ed, or an `error` method can be called to raise an error, or
     * `complete` can be called to notify of a successful completion.
     */
    function Observable(subscribe) {
        this._isScalar = false;
        if (subscribe) {
            this._subscribe = subscribe;
        }
    }
    /**
     * Creates a new Observable, with this Observable as the source, and the passed
     * operator defined as the new observable's operator.
     * @method lift
     * @param {Operator} operator the operator defining the operation to take on the observable
     * @return {Observable} a new observable with the Operator applied
     */
    Observable.prototype.lift = function (operator) {
        var observable$$1 = new Observable();
        observable$$1.source = this;
        observable$$1.operator = operator;
        return observable$$1;
    };
    Observable.prototype.subscribe = function (observerOrNext, error, complete) {
        var operator = this.operator;
        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
        if (operator) {
            operator.call(sink, this.source);
        }
        else {
            sink.add(this._subscribe(sink));
        }
        if (sink.syncErrorThrowable) {
            sink.syncErrorThrowable = false;
            if (sink.syncErrorThrown) {
                throw sink.syncErrorValue;
            }
        }
        return sink;
    };
    /**
     * @method forEach
     * @param {Function} next a handler for each value emitted by the observable
     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
     * @return {Promise} a promise that either resolves on observable completion or
     *  rejects with the handled error
     */
    Observable.prototype.forEach = function (next, PromiseCtor) {
        var _this = this;
        if (!PromiseCtor) {
            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
                PromiseCtor = root_1.root.Rx.config.Promise;
            }
            else if (root_1.root.Promise) {
                PromiseCtor = root_1.root.Promise;
            }
        }
        if (!PromiseCtor) {
            throw new Error('no Promise impl found');
        }
        return new PromiseCtor(function (resolve, reject) {
            var subscription = _this.subscribe(function (value) {
                if (subscription) {
                    // if there is a subscription, then we can surmise
                    // the next handling is asynchronous. Any errors thrown
                    // need to be rejected explicitly and unsubscribe must be
                    // called manually
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        subscription.unsubscribe();
                    }
                }
                else {
                    // if there is NO subscription, then we're getting a nexted
                    // value synchronously during subscription. We can just call it.
                    // If it errors, Observable's `subscribe` will ensure the
                    // unsubscription logic is called, then synchronously rethrow the error.
                    // After that, Promise will trap the error and send it
                    // down the rejection path.
                    next(value);
                }
            }, reject, resolve);
        });
    };
    Observable.prototype._subscribe = function (subscriber) {
        return this.source.subscribe(subscriber);
    };
    /**
     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
     * @method Symbol.observable
     * @return {Observable} this instance of the observable
     */
    Observable.prototype[observable_1.$$observable] = function () {
        return this;
    };
    // HACK: Since TypeScript inherits static properties too, we have to
    // fight against TypeScript here so Subject can have a different static create signature
    /**
     * Creates a new cold Observable by calling the Observable constructor
     * @static true
     * @owner Observable
     * @method create
     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
     * @return {Observable} a new cold observable
     */
    Observable.create = function (subscribe) {
        return new Observable(subscribe);
    };
    return Observable;
}());
exports.Observable = Observable;

});

var Observable$$1 = Observable.Observable;

var ScalarObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = Observable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ScalarObservable = (function (_super) {
    __extends(ScalarObservable, _super);
    function ScalarObservable(value, scheduler) {
        _super.call(this);
        this.value = value;
        this.scheduler = scheduler;
        this._isScalar = true;
        if (scheduler) {
            this._isScalar = false;
        }
    }
    ScalarObservable.create = function (value, scheduler) {
        return new ScalarObservable(value, scheduler);
    };
    ScalarObservable.dispatch = function (state) {
        var done = state.done, value = state.value, subscriber = state.subscriber;
        if (done) {
            subscriber.complete();
            return;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return;
        }
        state.done = true;
        this.schedule(state);
    };
    ScalarObservable.prototype._subscribe = function (subscriber) {
        var value = this.value;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ScalarObservable.dispatch, 0, {
                done: false, value: value, subscriber: subscriber
            });
        }
        else {
            subscriber.next(value);
            if (!subscriber.closed) {
                subscriber.complete();
            }
        }
    };
    return ScalarObservable;
}(Observable_1.Observable));
exports.ScalarObservable = ScalarObservable;

});

var EmptyObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = Observable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var EmptyObservable = (function (_super) {
    __extends(EmptyObservable, _super);
    function EmptyObservable(scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits a complete notification.
     *
     * <span class="informal">Just emits 'complete', and nothing else.
     * </span>
     *
     * <img src="./img/empty.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the complete notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then complete.</caption>
     * var result = Rx.Observable.empty().startWith(7);
     * result.subscribe(x => console.log(x));
     *
     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()
     * );
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following to the console:
     * // x is equal to the count on the interval eg(0,1,2,3,...)
     * // x will occur every 1000ms
     * // if x % 2 is equal to 1 print abc
     * // if x % 2 is not equal to 1 nothing will be output
     *
     * @see {@link create}
     * @see {@link never}
     * @see {@link of}
     * @see {@link throw}
     *
     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling
     * the emission of the complete notification.
     * @return {Observable} An "empty" Observable: emits only the complete
     * notification.
     * @static true
     * @name empty
     * @owner Observable
     */
    EmptyObservable.create = function (scheduler) {
        return new EmptyObservable(scheduler);
    };
    EmptyObservable.dispatch = function (arg) {
        var subscriber = arg.subscriber;
        subscriber.complete();
    };
    EmptyObservable.prototype._subscribe = function (subscriber) {
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });
        }
        else {
            subscriber.complete();
        }
    };
    return EmptyObservable;
}(Observable_1.Observable));
exports.EmptyObservable = EmptyObservable;

});

var isScheduler = createCommonjsModule(function (module, exports) {
"use strict";
function isScheduler(value) {
    return value && typeof value.schedule === 'function';
}
exports.isScheduler = isScheduler;

});

var ArrayObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = Observable;
var ScalarObservable_1 = ScalarObservable;
var EmptyObservable_1 = EmptyObservable;
var isScheduler_1 = isScheduler;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayObservable = (function (_super) {
    __extends(ArrayObservable, _super);
    function ArrayObservable(array, scheduler) {
        _super.call(this);
        this.array = array;
        this.scheduler = scheduler;
        if (!scheduler && array.length === 1) {
            this._isScalar = true;
            this.value = array[0];
        }
    }
    ArrayObservable.create = function (array, scheduler) {
        return new ArrayObservable(array, scheduler);
    };
    /**
     * Creates an Observable that emits some values you specify as arguments,
     * immediately one after the other, and then emits a complete notification.
     *
     * <span class="informal">Emits the arguments you provide, then completes.
     * </span>
     *
     * <img src="./img/of.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the arguments given, and the complete notification thereafter. It can
     * be used for composing with other Observables, such as with {@link concat}.
     * By default, it uses a `null` Scheduler, which means the `next`
     * notifications are sent synchronously, although with a different Scheduler
     * it is possible to determine when those notifications will be delivered.
     *
     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>
     * var numbers = Rx.Observable.of(10, 20, 30);
     * var letters = Rx.Observable.of('a', 'b', 'c');
     * var interval = Rx.Observable.interval(1000);
     * var result = numbers.concat(letters).concat(interval);
     * result.subscribe(x => console.log(x));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link throw}
     *
     * @param {...T} values Arguments that represent `next` values to be emitted.
     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling
     * the emissions of the `next` notifications.
     * @return {Observable<T>} An Observable that emits each given input value.
     * @static true
     * @name of
     * @owner Observable
     */
    ArrayObservable.of = function () {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i - 0] = arguments[_i];
        }
        var scheduler = array[array.length - 1];
        if (isScheduler_1.isScheduler(scheduler)) {
            array.pop();
        }
        else {
            scheduler = null;
        }
        var len = array.length;
        if (len > 1) {
            return new ArrayObservable(array, scheduler);
        }
        else if (len === 1) {
            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);
        }
        else {
            return new EmptyObservable_1.EmptyObservable(scheduler);
        }
    };
    ArrayObservable.dispatch = function (state) {
        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(array[index]);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        this.schedule(state);
    };
    ArrayObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var array = this.array;
        var count = array.length;
        var scheduler = this.scheduler;
        if (scheduler) {
            return scheduler.schedule(ArrayObservable.dispatch, 0, {
                array: array, index: index, count: count, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < count && !subscriber.closed; i++) {
                subscriber.next(array[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayObservable;
}(Observable_1.Observable));
exports.ArrayObservable = ArrayObservable;

});

var OuterSubscriber = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var OuterSubscriber = (function (_super) {
    __extends(OuterSubscriber, _super);
    function OuterSubscriber() {
        _super.apply(this, arguments);
    }
    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function (error, innerSub) {
        this.destination.error(error);
    };
    OuterSubscriber.prototype.notifyComplete = function (innerSub) {
        this.destination.complete();
    };
    return OuterSubscriber;
}(Subscriber_1.Subscriber));
exports.OuterSubscriber = OuterSubscriber;

});

var isPromise$1 = createCommonjsModule(function (module, exports) {
"use strict";
function isPromise(value) {
    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
}
exports.isPromise = isPromise;

});

var iterator = createCommonjsModule(function (module, exports) {
"use strict";
var root_1 = root;
function symbolIteratorPonyfill(root$$1) {
    var Symbol = root$$1.Symbol;
    if (typeof Symbol === 'function') {
        if (!Symbol.iterator) {
            Symbol.iterator = Symbol('iterator polyfill');
        }
        return Symbol.iterator;
    }
    else {
        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)
        var Set_1 = root$$1.Set;
        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {
            return '@@iterator';
        }
        var Map_1 = root$$1.Map;
        // required for compatability with es6-shim
        if (Map_1) {
            var keys = Object.getOwnPropertyNames(Map_1.prototype);
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.
                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {
                    return key;
                }
            }
        }
        return '@@iterator';
    }
}
exports.symbolIteratorPonyfill = symbolIteratorPonyfill;
exports.$$iterator = symbolIteratorPonyfill(root_1.root);

});

var InnerSubscriber = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var InnerSubscriber = (function (_super) {
    __extends(InnerSubscriber, _super);
    function InnerSubscriber(parent, outerValue, outerIndex) {
        _super.call(this);
        this.parent = parent;
        this.outerValue = outerValue;
        this.outerIndex = outerIndex;
        this.index = 0;
    }
    InnerSubscriber.prototype._next = function (value) {
        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
    };
    InnerSubscriber.prototype._error = function (error) {
        this.parent.notifyError(error, this);
        this.unsubscribe();
    };
    InnerSubscriber.prototype._complete = function () {
        this.parent.notifyComplete(this);
        this.unsubscribe();
    };
    return InnerSubscriber;
}(Subscriber_1.Subscriber));
exports.InnerSubscriber = InnerSubscriber;

});

var subscribeToResult = createCommonjsModule(function (module, exports) {
"use strict";
var root_1 = root;
var isArray_1 = isArray;
var isPromise_1 = isPromise$1;
var isObject_1 = isObject;
var Observable_1 = Observable;
var iterator_1 = iterator;
var InnerSubscriber_1 = InnerSubscriber;
var observable_1 = observable;
function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);
    if (destination.closed) {
        return null;
    }
    if (result instanceof Observable_1.Observable) {
        if (result._isScalar) {
            destination.next(result.value);
            destination.complete();
            return null;
        }
        else {
            return result.subscribe(destination);
        }
    }
    else if (isArray_1.isArray(result)) {
        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {
            destination.next(result[i]);
        }
        if (!destination.closed) {
            destination.complete();
        }
    }
    else if (isPromise_1.isPromise(result)) {
        result.then(function (value) {
            if (!destination.closed) {
                destination.next(value);
                destination.complete();
            }
        }, function (err) { return destination.error(err); })
            .then(null, function (err) {
            // Escaping the Promise trap: globally throw unhandled errors
            root_1.root.setTimeout(function () { throw err; });
        });
        return destination;
    }
    else if (result && typeof result[iterator_1.$$iterator] === 'function') {
        var iterator$$1 = result[iterator_1.$$iterator]();
        do {
            var item = iterator$$1.next();
            if (item.done) {
                destination.complete();
                break;
            }
            destination.next(item.value);
            if (destination.closed) {
                break;
            }
        } while (true);
    }
    else if (result && typeof result[observable_1.$$observable] === 'function') {
        var obs = result[observable_1.$$observable]();
        if (typeof obs.subscribe !== 'function') {
            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));
        }
        else {
            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));
        }
    }
    else {
        var value = isObject_1.isObject(result) ? 'an invalid object' : "'" + result + "'";
        var msg = ("You provided " + value + " where a stream was expected.")
            + ' You can provide an Observable, Promise, Array, or Iterable.';
        destination.error(new TypeError(msg));
    }
    return null;
}
exports.subscribeToResult = subscribeToResult;

});

var mergeAll = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = OuterSubscriber;
var subscribeToResult_1 = subscribeToResult;
/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */
function mergeAll(concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    return this.lift(new MergeAllOperator(concurrent));
}
exports.mergeAll = mergeAll;
var MergeAllOperator = (function () {
    function MergeAllOperator(concurrent) {
        this.concurrent = concurrent;
    }
    MergeAllOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeAllSubscriber(observer, this.concurrent));
    };
    return MergeAllOperator;
}());
exports.MergeAllOperator = MergeAllOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeAllSubscriber = (function (_super) {
    __extends(MergeAllSubscriber, _super);
    function MergeAllSubscriber(destination, concurrent) {
        _super.call(this, destination);
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
    }
    MergeAllSubscriber.prototype._next = function (observable) {
        if (this.active < this.concurrent) {
            this.active++;
            this.add(subscribeToResult_1.subscribeToResult(this, observable));
        }
        else {
            this.buffer.push(observable);
        }
    };
    MergeAllSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeAllSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeAllSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeAllSubscriber = MergeAllSubscriber;

});



var mergeAll$$1 = mergeAll.mergeAll;

var merge$3 = createCommonjsModule(function (module, exports) {
"use strict";
var ArrayObservable_1 = ArrayObservable;
var mergeAll_1 = mergeAll;
var isScheduler_1 = isScheduler;
/* tslint:disable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (either the source or an
 * Observable given as argument), and simply forwards (without doing any
 * transformation) all the values from all the input Observables to the output
 * Observable. The output Observable only completes once all input Observables
 * have completed. Any error delivered by an input Observable will be immediately
 * emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = clicks.merge(timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = timer1.merge(timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {Observable} other An input Observable to merge with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The Scheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @method merge
 * @owner Observable
 */
function merge() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return this.lift.call(mergeStatic.apply(void 0, [this].concat(observables)));
}
exports.merge = merge;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (as arguments), and simply
 * forwards (without doing any transformation) all the values from all the input
 * Observables to the output Observable. The output Observable only completes
 * once all input Observables have completed. Any error delivered by an input
 * Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = Rx.Observable.merge(clicks, timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // timer will emit ascending values, one every second(1000ms) to console
 * // clicks logs MouseEvents to console everytime the "document" is clicked
 * // Since the two streams are merged you see these happening
 * // as they occur.
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - First timer1 and timer2 will run concurrently
 * // - timer1 will emit a value every 1000ms for 10 iterations
 * // - timer2 will emit a value every 2000ms for 6 iterations
 * // - after timer1 hits it's max iteration, timer2 will
 * //   continue, and timer3 will start to run concurrently with timer2
 * // - when timer2 hits it's max iteration it terminates, and
 * //   timer3 will continue to emit a value every 500ms until it is complete
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {...Observable} observables Input Observables to merge together.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The Scheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @static true
 * @name merge
 * @owner Observable
 */
function mergeStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = null;
    var last = observables[observables.length - 1];
    if (isScheduler_1.isScheduler(last)) {
        scheduler = observables.pop();
        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
            concurrent = observables.pop();
        }
    }
    else if (typeof last === 'number') {
        concurrent = observables.pop();
    }
    if (scheduler === null && observables.length === 1) {
        return observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));
}
exports.mergeStatic = mergeStatic;

});

var merge$1 = createCommonjsModule(function (module, exports) {
"use strict";
var merge_1 = merge$3;
exports.merge = merge_1.mergeStatic;

});

var merge$$1 = merge$1.merge;

var ObjectUnsubscribedError = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */
var ObjectUnsubscribedError = (function (_super) {
    __extends(ObjectUnsubscribedError, _super);
    function ObjectUnsubscribedError() {
        var err = _super.call(this, 'object unsubscribed');
        this.name = err.name = 'ObjectUnsubscribedError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ObjectUnsubscribedError;
}(Error));
exports.ObjectUnsubscribedError = ObjectUnsubscribedError;

});

var SubjectSubscription = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = Subscription;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SubjectSubscription = (function (_super) {
    __extends(SubjectSubscription, _super);
    function SubjectSubscription(subject, subscriber) {
        _super.call(this);
        this.subject = subject;
        this.subscriber = subscriber;
        this.closed = false;
    }
    SubjectSubscription.prototype.unsubscribe = function () {
        if (this.closed) {
            return;
        }
        this.closed = true;
        var subject = this.subject;
        var observers = subject.observers;
        this.subject = null;
        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
            return;
        }
        var subscriberIndex = observers.indexOf(this.subscriber);
        if (subscriberIndex !== -1) {
            observers.splice(subscriberIndex, 1);
        }
    };
    return SubjectSubscription;
}(Subscription_1.Subscription));
exports.SubjectSubscription = SubjectSubscription;

});

var Subject = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = Observable;
var Subscriber_1 = Subscriber;
var Subscription_1 = Subscription;
var ObjectUnsubscribedError_1 = ObjectUnsubscribedError;
var SubjectSubscription_1 = SubjectSubscription;
var rxSubscriber_1 = rxSubscriber;
/**
 * @class SubjectSubscriber<T>
 */
var SubjectSubscriber = (function (_super) {
    __extends(SubjectSubscriber, _super);
    function SubjectSubscriber(destination) {
        _super.call(this, destination);
        this.destination = destination;
    }
    return SubjectSubscriber;
}(Subscriber_1.Subscriber));
exports.SubjectSubscriber = SubjectSubscriber;
/**
 * @class Subject<T>
 */
var Subject = (function (_super) {
    __extends(Subject, _super);
    function Subject() {
        _super.call(this);
        this.observers = [];
        this.closed = false;
        this.isStopped = false;
        this.hasError = false;
        this.thrownError = null;
    }
    Subject.prototype[rxSubscriber_1.$$rxSubscriber] = function () {
        return new SubjectSubscriber(this);
    };
    Subject.prototype.lift = function (operator) {
        var subject = new AnonymousSubject(this, this);
        subject.operator = operator;
        return subject;
    };
    Subject.prototype.next = function (value) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        if (!this.isStopped) {
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].next(value);
            }
        }
    };
    Subject.prototype.error = function (err) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.hasError = true;
        this.thrownError = err;
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].error(err);
        }
        this.observers.length = 0;
    };
    Subject.prototype.complete = function () {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        this.isStopped = true;
        var observers = this.observers;
        var len = observers.length;
        var copy = observers.slice();
        for (var i = 0; i < len; i++) {
            copy[i].complete();
        }
        this.observers.length = 0;
    };
    Subject.prototype.unsubscribe = function () {
        this.isStopped = true;
        this.closed = true;
        this.observers = null;
    };
    Subject.prototype._subscribe = function (subscriber) {
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscriber.error(this.thrownError);
            return Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscriber.complete();
            return Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
    };
    Subject.prototype.asObservable = function () {
        var observable = new Observable_1.Observable();
        observable.source = this;
        return observable;
    };
    Subject.create = function (destination, source) {
        return new AnonymousSubject(destination, source);
    };
    return Subject;
}(Observable_1.Observable));
exports.Subject = Subject;
/**
 * @class AnonymousSubject<T>
 */
var AnonymousSubject = (function (_super) {
    __extends(AnonymousSubject, _super);
    function AnonymousSubject(destination, source) {
        _super.call(this);
        this.destination = destination;
        this.source = source;
    }
    AnonymousSubject.prototype.next = function (value) {
        var destination = this.destination;
        if (destination && destination.next) {
            destination.next(value);
        }
    };
    AnonymousSubject.prototype.error = function (err) {
        var destination = this.destination;
        if (destination && destination.error) {
            this.destination.error(err);
        }
    };
    AnonymousSubject.prototype.complete = function () {
        var destination = this.destination;
        if (destination && destination.complete) {
            this.destination.complete();
        }
    };
    AnonymousSubject.prototype._subscribe = function (subscriber) {
        var source = this.source;
        if (source) {
            return this.source.subscribe(subscriber);
        }
        else {
            return Subscription_1.Subscription.EMPTY;
        }
    };
    return AnonymousSubject;
}(Subject));
exports.AnonymousSubject = AnonymousSubject;

});


var Subject$$1 = Subject.Subject;

var ConnectableObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = Subject;
var Observable_1 = Observable;
var Subscriber_1 = Subscriber;
var Subscription_1 = Subscription;
/**
 * @class ConnectableObservable<T>
 */
var ConnectableObservable = (function (_super) {
    __extends(ConnectableObservable, _super);
    function ConnectableObservable(source, subjectFactory) {
        _super.call(this);
        this.source = source;
        this.subjectFactory = subjectFactory;
        this._refCount = 0;
    }
    ConnectableObservable.prototype._subscribe = function (subscriber) {
        return this.getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype.getSubject = function () {
        var subject = this._subject;
        if (!subject || subject.isStopped) {
            this._subject = this.subjectFactory();
        }
        return this._subject;
    };
    ConnectableObservable.prototype.connect = function () {
        var connection = this._connection;
        if (!connection) {
            connection = this._connection = new Subscription_1.Subscription();
            connection.add(this.source
                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
            if (connection.closed) {
                this._connection = null;
                connection = Subscription_1.Subscription.EMPTY;
            }
            else {
                this._connection = connection;
            }
        }
        return connection;
    };
    ConnectableObservable.prototype.refCount = function () {
        return this.lift(new RefCountOperator(this));
    };
    return ConnectableObservable;
}(Observable_1.Observable));
exports.ConnectableObservable = ConnectableObservable;
exports.connectableObservableDescriptor = {
    operator: { value: null },
    _refCount: { value: 0, writable: true },
    _subscribe: { value: ConnectableObservable.prototype._subscribe },
    getSubject: { value: ConnectableObservable.prototype.getSubject },
    connect: { value: ConnectableObservable.prototype.connect },
    refCount: { value: ConnectableObservable.prototype.refCount }
};
var ConnectableSubscriber = (function (_super) {
    __extends(ConnectableSubscriber, _super);
    function ConnectableSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    ConnectableSubscriber.prototype._error = function (err) {
        this._unsubscribe();
        _super.prototype._error.call(this, err);
    };
    ConnectableSubscriber.prototype._complete = function () {
        this._unsubscribe();
        _super.prototype._complete.call(this);
    };
    ConnectableSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (connectable) {
            this.connectable = null;
            var connection = connectable._connection;
            connectable._refCount = 0;
            connectable._subject = null;
            connectable._connection = null;
            if (connection) {
                connection.unsubscribe();
            }
        }
    };
    return ConnectableSubscriber;
}(Subject_1.SubjectSubscriber));
var RefCountOperator = (function () {
    function RefCountOperator(connectable) {
        this.connectable = connectable;
    }
    RefCountOperator.prototype.call = function (subscriber, source) {
        var connectable = this.connectable;
        connectable._refCount++;
        var refCounter = new RefCountSubscriber(subscriber, connectable);
        var subscription = source.subscribe(refCounter);
        if (!refCounter.closed) {
            refCounter.connection = connectable.connect();
        }
        return subscription;
    };
    return RefCountOperator;
}());
var RefCountSubscriber = (function (_super) {
    __extends(RefCountSubscriber, _super);
    function RefCountSubscriber(destination, connectable) {
        _super.call(this, destination);
        this.connectable = connectable;
    }
    RefCountSubscriber.prototype._unsubscribe = function () {
        var connectable = this.connectable;
        if (!connectable) {
            this.connection = null;
            return;
        }
        this.connectable = null;
        var refCount = connectable._refCount;
        if (refCount <= 0) {
            this.connection = null;
            return;
        }
        connectable._refCount = refCount - 1;
        if (refCount > 1) {
            this.connection = null;
            return;
        }
        ///
        // Compare the local RefCountSubscriber's connection Subscription to the
        // connection Subscription on the shared ConnectableObservable. In cases
        // where the ConnectableObservable source synchronously emits values, and
        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,
        // execution continues to here before the RefCountOperator has a chance to
        // supply the RefCountSubscriber with the shared connection Subscription.
        // For example:
        // ```
        // Observable.range(0, 10)
        //   .publish()
        //   .refCount()
        //   .take(5)
        //   .subscribe();
        // ```
        // In order to account for this case, RefCountSubscriber should only dispose
        // the ConnectableObservable's shared connection Subscription if the
        // connection Subscription exists, *and* either:
        //   a. RefCountSubscriber doesn't have a reference to the shared connection
        //      Subscription yet, or,
        //   b. RefCountSubscriber's connection Subscription reference is identical
        //      to the shared connection Subscription
        ///
        var connection = this.connection;
        var sharedConnection = connectable._connection;
        this.connection = null;
        if (sharedConnection && (!connection || sharedConnection === connection)) {
            sharedConnection.unsubscribe();
        }
    };
    return RefCountSubscriber;
}(Subscriber_1.Subscriber));

});

var multicast = createCommonjsModule(function (module, exports) {
"use strict";
var ConnectableObservable_1 = ConnectableObservable;
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that emits the results of invoking a specified selector on items
 * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * @param {Function|Subject} Factory function to create an intermediate subject through
 * which the source sequence's elements will be multicast to the selector function
 * or Subject to push source elements into.
 * @param {Function} Optional selector function that can use the multicasted source stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the given source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable} an Observable that emits the results of invoking the selector
 * on the items emitted by a `ConnectableObservable` that shares a single subscription to
 * the underlying stream.
 * @method multicast
 * @owner Observable
 */
function multicast(subjectOrSubjectFactory, selector) {
    var subjectFactory;
    if (typeof subjectOrSubjectFactory === 'function') {
        subjectFactory = subjectOrSubjectFactory;
    }
    else {
        subjectFactory = function subjectFactory() {
            return subjectOrSubjectFactory;
        };
    }
    if (typeof selector === 'function') {
        return this.lift(new MulticastOperator(subjectFactory, selector));
    }
    var connectable = Object.create(this, ConnectableObservable_1.connectableObservableDescriptor);
    connectable.source = this;
    connectable.subjectFactory = subjectFactory;
    return connectable;
}
exports.multicast = multicast;
var MulticastOperator = (function () {
    function MulticastOperator(subjectFactory, selector) {
        this.subjectFactory = subjectFactory;
        this.selector = selector;
    }
    MulticastOperator.prototype.call = function (subscriber, source) {
        var selector = this.selector;
        var subject = this.subjectFactory();
        var subscription = selector(subject).subscribe(subscriber);
        subscription.add(source.subscribe(subject));
        return subscription;
    };
    return MulticastOperator;
}());
exports.MulticastOperator = MulticastOperator;

});

var share = createCommonjsModule(function (module, exports) {
"use strict";
var multicast_1 = multicast;
var Subject_1 = Subject;
function shareSubjectFactory() {
    return new Subject_1.Subject();
}
/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 * This is an alias for .publish().refCount().
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers
 * @method share
 * @owner Observable
 */
function share() {
    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();
}
exports.share = share;


});

var share$$1 = share.share;

var _slicedToArray$2=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _get$1=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _typeof$1=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass$2=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray$2(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn$2(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits$2(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck$2(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */var OpaqueToken=function(){/**
     * @param {?} _desc
     */function OpaqueToken(_desc){_classCallCheck$2(this,OpaqueToken);this._desc=_desc;}/**
     * @return {?}
     */_createClass$2(OpaqueToken,[{key:'toString',value:function toString(){return'Token '+this._desc;}}]);return OpaqueToken;}();/**
 * Creates a token that can be used in a DI Provider.
 *
 * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a
 * runtime representation) such as when injecting an interface, callable type, array or
 * parametrized type.
 *
 * `InjectionToken` is parametrize on `T` which is the type of object which will be returned by the
 * `Injector`. This provides additional level of type safety.
 *
 * ```
 * interface MyInterface {...}
 * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));
 * // myInterface is inferred to be MyInterface.
 * ```
 *
 * ### Example
 *
 * {\@example core/di/ts/injector_spec.ts region='Injector'}
 *
 * \@stable
 */var InjectionToken=function(_OpaqueToken){_inherits$2(InjectionToken,_OpaqueToken);/**
     * @param {?} desc
     */function InjectionToken(desc){_classCallCheck$2(this,InjectionToken);return _possibleConstructorReturn$2(this,(InjectionToken.__proto__||Object.getPrototypeOf(InjectionToken)).call(this,desc));}/**
     * @return {?}
     */_createClass$2(InjectionToken,[{key:'toString',value:function toString(){return'InjectionToken '+this._desc;}}]);return InjectionToken;}(OpaqueToken);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var globalScope$2=void 0;if(typeof window==='undefined'){if(typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope){// TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
globalScope$2=self;}else{globalScope$2=global;}}else{globalScope$2=window;}/**
 * @param {?} fn
 * @return {?}
 */function scheduleMicroTask(fn){Zone.current.scheduleMicroTask('scheduleMicrotask',fn);}// Need to declare a new variable for global here since TypeScript
// exports the original value of the symbol.
var global$1$1=globalScope$2;/**
 * @param {?} type
 * @return {?}
 */function getTypeNameForDebugging$1(type){return type['name']||(typeof type==='undefined'?'undefined':_typeof$1(type));}// TODO: remove calls to assert in production environment
// Note: Can't just export this and import in in other files
// as `assert` is a reserved keyword in Dart
global$1$1.assert=function assert(condition){// TODO: to be fixed properly via #2830, noop for now
};/**
 * @param {?} obj
 * @return {?}
 */function isPresent$2(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank$2(obj){return obj==null;}/**
 * @param {?} token
 * @return {?}
 */function stringify$2(token){if(typeof token==='string'){return token;}if(token==null){return''+token;}if(token.overriddenName){return''+token.overriddenName;}if(token.name){return''+token.name;}var/** @type {?} */res=token.toString();var/** @type {?} */newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function looseIdentical(a,b){return a===b||typeof a==='number'&&typeof b==='number'&&isNaN(a)&&isNaN(b);}/**
 * @param {?} o
 * @return {?}
 */function isJsObject$1(o){return o!==null&&(typeof o==='function'||(typeof o==='undefined'?'undefined':_typeof$1(o))==='object');}/**
 * @param {?} obj
 * @return {?}
 */function print(obj){// tslint:disable-next-line:no-console
console.log(obj);}/**
 * @param {?} obj
 * @return {?}
 */function _warn(obj){console.warn(obj);}var _symbolIterator$1=null;/**
 * @return {?}
 */function getSymbolIterator$1(){if(!_symbolIterator$1){if(globalScope$2.Symbol&&Symbol.iterator){_symbolIterator$1=Symbol.iterator;}else{// es6-shim specific logic
var/** @type {?} */keys=Object.getOwnPropertyNames(Map.prototype);for(var/** @type {?} */i=0;i<keys.length;++i){var/** @type {?} */key=keys[i];if(key!=='entries'&&key!=='size'&&Map.prototype[key]===Map.prototype['entries']){_symbolIterator$1=key;}}}}return _symbolIterator$1;}/**
 * @param {?} obj
 * @return {?}
 */function isPrimitive(obj){return!isJsObject$1(obj);}var _nextClassId=0;var Reflect=global$1$1.Reflect;/**
 * @param {?} annotation
 * @return {?}
 */function extractAnnotation(annotation){if(typeof annotation==='function'&&annotation.hasOwnProperty('annotation')){// it is a decorator, extract annotation
annotation=annotation.annotation;}return annotation;}/**
 * @param {?} fnOrArray
 * @param {?} key
 * @return {?}
 */function applyParams(fnOrArray,key){if(fnOrArray===Object||fnOrArray===String||fnOrArray===Function||fnOrArray===Number||fnOrArray===Array){throw new Error('Can not use native '+stringify$2(fnOrArray)+' as constructor');}if(typeof fnOrArray==='function'){return fnOrArray;}if(Array.isArray(fnOrArray)){var/** @type {?} */annotations=fnOrArray;var/** @type {?} */annoLength=annotations.length-1;var/** @type {?} */fn=fnOrArray[annoLength];if(typeof fn!=='function'){throw new Error('Last position of Class method array must be Function in key '+key+' was \''+stringify$2(fn)+'\'');}if(annoLength!=fn.length){throw new Error('Number of annotations ('+annoLength+') does not match number of arguments ('+fn.length+') in the function: '+stringify$2(fn));}var/** @type {?} */paramsAnnotations=[];for(var/** @type {?} */i=0,/** @type {?} */ii=annotations.length-1;i<ii;i++){var/** @type {?} */paramAnnotations=[];paramsAnnotations.push(paramAnnotations);var/** @type {?} */annotation=annotations[i];if(Array.isArray(annotation)){for(var/** @type {?} */j=0;j<annotation.length;j++){paramAnnotations.push(extractAnnotation(annotation[j]));}}else if(typeof annotation==='function'){paramAnnotations.push(extractAnnotation(annotation));}else{paramAnnotations.push(annotation);}}Reflect.defineMetadata('parameters',paramsAnnotations,fn);return fn;}throw new Error('Only Function or Array is supported in Class definition for key \''+key+'\' is \''+stringify$2(fnOrArray)+'\'');}/**
 * Provides a way for expressing ES6 classes with parameter annotations in ES5.
 *
 * ## Basic Example
 *
 * ```
 * var Greeter = ng.Class({
 *   constructor: function(name) {
 *     this.name = name;
 *   },
 *
 *   greet: function() {
 *     alert('Hello ' + this.name + '!');
 *   }
 * });
 * ```
 *
 * is equivalent to ES6:
 *
 * ```
 * class Greeter {
 *   constructor(name) {
 *     this.name = name;
 *   }
 *
 *   greet() {
 *     alert('Hello ' + this.name + '!');
 *   }
 * }
 * ```
 *
 * or equivalent to ES5:
 *
 * ```
 * var Greeter = function (name) {
 *   this.name = name;
 * }
 *
 * Greeter.prototype.greet = function () {
 *   alert('Hello ' + this.name + '!');
 * }
 * ```
 *
 * ### Example with parameter annotations
 *
 * ```
 * var MyService = ng.Class({
 *   constructor: [String, [new Optional(), Service], function(name, myService) {
 *     ...
 *   }]
 * });
 * ```
 *
 * is equivalent to ES6:
 *
 * ```
 * class MyService {
 *   constructor(name: string, \@Optional() myService: Service) {
 *     ...
 *   }
 * }
 * ```
 *
 * ### Example with inheritance
 *
 * ```
 * var Shape = ng.Class({
 *   constructor: (color) {
 *     this.color = color;
 *   }
 * });
 *
 * var Square = ng.Class({
 *   extends: Shape,
 *   constructor: function(color, size) {
 *     Shape.call(this, color);
 *     this.size = size;
 *   }
 * });
 * ```
 * @suppress {globalThis}
 * \@stable
 * @param {?} clsDef
 * @return {?}
 */function Class(clsDef){var/** @type {?} */constructor=applyParams(clsDef.hasOwnProperty('constructor')?clsDef.constructor:undefined,'constructor');var/** @type {?} */proto=constructor.prototype;if(clsDef.hasOwnProperty('extends')){if(typeof clsDef.extends==='function'){constructor.prototype=proto=Object.create(clsDef.extends.prototype);}else{throw new Error('Class definition \'extends\' property must be a constructor function was: '+stringify$2(clsDef.extends));}}for(var/** @type {?} */key in clsDef){if(key!=='extends'&&key!=='prototype'&&clsDef.hasOwnProperty(key)){proto[key]=applyParams(clsDef[key],key);}}if(this&&this.annotations instanceof Array){Reflect.defineMetadata('annotations',this.annotations,constructor);}var/** @type {?} */constructorName=constructor['name'];if(!constructorName||constructorName==='constructor'){constructor['overriddenName']='class'+_nextClassId++;}return constructor;}/**
 * @suppress {globalThis}
 * @param {?} name
 * @param {?} props
 * @param {?=} parentClass
 * @param {?=} chainFn
 * @return {?}
 */function makeDecorator(name,props,parentClass){var chainFn=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var/** @type {?} */metaCtor=makeMetadataCtor([props]);/**
     * @param {?} objOrType
     * @return {?}
     */function DecoratorFactory(objOrType){if(!(Reflect&&Reflect.getOwnMetadata)){throw'reflect-metadata shim is required when using class decorators';}if(this instanceof DecoratorFactory){metaCtor.call(this,objOrType);return this;}var/** @type {?} */annotationInstance=new DecoratorFactory(objOrType);var/** @type {?} */chainAnnotation=typeof this==='function'&&Array.isArray(this.annotations)?this.annotations:[];chainAnnotation.push(annotationInstance);var/** @type {?} */TypeDecorator=function TypeDecorator(cls){var/** @type {?} */annotations=Reflect.getOwnMetadata('annotations',cls)||[];annotations.push(annotationInstance);Reflect.defineMetadata('annotations',annotations,cls);return cls;};TypeDecorator.annotations=chainAnnotation;TypeDecorator.Class=Class;if(chainFn)chainFn(TypeDecorator);return TypeDecorator;}if(parentClass){DecoratorFactory.prototype=Object.create(parentClass.prototype);}DecoratorFactory.prototype.toString=function(){return'@'+name;};DecoratorFactory.annotationCls=DecoratorFactory;return DecoratorFactory;}/**
 * @param {?} props
 * @return {?}
 */function makeMetadataCtor(props){return function ctor(){var _this2=this;for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}props.forEach(function(prop,i){var/** @type {?} */argVal=args[i];if(Array.isArray(prop)){// plain parameter
_this2[prop[0]]=argVal===undefined?prop[1]:argVal;}else{for(var/** @type {?} */propName in prop){_this2[propName]=argVal&&argVal.hasOwnProperty(propName)?argVal[propName]:prop[propName];}}});};}/**
 * @param {?} name
 * @param {?} props
 * @param {?=} parentClass
 * @return {?}
 */function makeParamDecorator(name,props,parentClass){var/** @type {?} */metaCtor=makeMetadataCtor(props);/**
     * @param {...?} args
     * @return {?}
     */function ParamDecoratorFactory(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}if(this instanceof ParamDecoratorFactory){metaCtor.apply(this,args);return this;}var/** @type {?} */annotationInstance=new(Function.prototype.bind.apply(ParamDecoratorFactory,[null].concat(args)))();ParamDecorator.annotation=annotationInstance;return ParamDecorator;/**
         * @param {?} cls
         * @param {?} unusedKey
         * @param {?} index
         * @return {?}
         */function ParamDecorator(cls,unusedKey,index){var/** @type {?} */parameters=Reflect.getOwnMetadata('parameters',cls)||[];// there might be gaps if some in between parameters do not have annotations.
// we pad with nulls.
while(parameters.length<=index){parameters.push(null);}parameters[index]=parameters[index]||[];parameters[index].push(annotationInstance);Reflect.defineMetadata('parameters',parameters,cls);return cls;}}if(parentClass){ParamDecoratorFactory.prototype=Object.create(parentClass.prototype);}ParamDecoratorFactory.prototype.toString=function(){return'@'+name;};ParamDecoratorFactory.annotationCls=ParamDecoratorFactory;return ParamDecoratorFactory;}/**
 * @param {?} name
 * @param {?} props
 * @param {?=} parentClass
 * @return {?}
 */function makePropDecorator(name,props,parentClass){var/** @type {?} */metaCtor=makeMetadataCtor(props);/**
     * @param {...?} args
     * @return {?}
     */function PropDecoratorFactory(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}if(this instanceof PropDecoratorFactory){metaCtor.apply(this,args);return this;}var/** @type {?} */decoratorInstance=new(Function.prototype.bind.apply(PropDecoratorFactory,[null].concat(args)))();return function PropDecorator(target,name){var/** @type {?} */meta=Reflect.getOwnMetadata('propMetadata',target.constructor)||{};meta[name]=meta.hasOwnProperty(name)&&meta[name]||[];meta[name].unshift(decoratorInstance);Reflect.defineMetadata('propMetadata',meta,target.constructor);};}if(parentClass){PropDecoratorFactory.prototype=Object.create(parentClass.prototype);}PropDecoratorFactory.prototype.toString=function(){return'@'+name;};PropDecoratorFactory.annotationCls=PropDecoratorFactory;return PropDecoratorFactory;}/**
 * This token can be used to create a virtual provider that will populate the
 * `entryComponents` fields of components and ng modules based on its `useValue`.
 * All components that are referenced in the `useValue` value (either directly
 * or in a nested array or map) will be added to the `entryComponents` property.
 *
 * ### Example
 * The following example shows how the router can populate the `entryComponents`
 * field of an NgModule based on the router configuration which refers
 * to components.
 *
 * ```typescript
 * // helper function inside the router
 * function provideRoutes(routes) {
 *   return [
 *     {provide: ROUTES, useValue: routes},
 *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}
 *   ];
 * }
 *
 * // user code
 * let routes = [
 *   {path: '/root', component: RootComp},
 *   {path: '/teams', component: TeamsComp}
 * ];
 *
 * @NgModule({
 *   providers: [provideRoutes(routes)]
 * })
 * class ModuleWithRoutes {}
 * ```
 *
 * @experimental
 */var ANALYZE_FOR_ENTRY_COMPONENTS=new InjectionToken('AnalyzeForEntryComponents');/**
 * Attribute decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Attribute=makeParamDecorator('Attribute',[['attributeName',undefined]]);/**
 * Base class for query metadata.
 *
 * See {\@link ContentChildren}, {\@link ContentChild}, {\@link ViewChildren}, {\@link ViewChild} for
 * more information.
 *
 * \@stable
 * @abstract
 */var Query=function Query(){_classCallCheck$2(this,Query);};/**
 * ContentChildren decorator and metadata.
 *
 *  @stable
 *  @Annotation
 */var ContentChildren=makePropDecorator('ContentChildren',[['selector',undefined],{first:false,isViewQuery:false,descendants:false,read:undefined}],Query);/**
 * ContentChild decorator and metadata.
 *
 * @stable
 * @Annotation
 */var ContentChild=makePropDecorator('ContentChild',[['selector',undefined],{first:true,isViewQuery:false,descendants:true,read:undefined}],Query);/**
 * ViewChildren decorator and metadata.
 *
 * @stable
 * @Annotation
 */var ViewChildren=makePropDecorator('ViewChildren',[['selector',undefined],{first:false,isViewQuery:true,descendants:true,read:undefined}],Query);/**
 * ViewChild decorator and metadata.
 *
 * @stable
 * @Annotation
 */var ViewChild=makePropDecorator('ViewChild',[['selector',undefined],{first:true,isViewQuery:true,descendants:true,read:undefined}],Query);var ChangeDetectionStrategy={};ChangeDetectionStrategy.OnPush=0;ChangeDetectionStrategy.Default=1;ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush]="OnPush";ChangeDetectionStrategy[ChangeDetectionStrategy.Default]="Default";var ChangeDetectorStatus={};ChangeDetectorStatus.CheckOnce=0;ChangeDetectorStatus.Checked=1;ChangeDetectorStatus.CheckAlways=2;ChangeDetectorStatus.Detached=3;ChangeDetectorStatus.Errored=4;ChangeDetectorStatus.Destroyed=5;ChangeDetectorStatus[ChangeDetectorStatus.CheckOnce]="CheckOnce";ChangeDetectorStatus[ChangeDetectorStatus.Checked]="Checked";ChangeDetectorStatus[ChangeDetectorStatus.CheckAlways]="CheckAlways";ChangeDetectorStatus[ChangeDetectorStatus.Detached]="Detached";ChangeDetectorStatus[ChangeDetectorStatus.Errored]="Errored";ChangeDetectorStatus[ChangeDetectorStatus.Destroyed]="Destroyed";/**
 * @param {?} changeDetectionStrategy
 * @return {?}
 */var Directive=makeDecorator('Directive',{selector:undefined,inputs:undefined,outputs:undefined,host:undefined,providers:undefined,exportAs:undefined,queries:undefined});/**
 * Component decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Component=makeDecorator('Component',{selector:undefined,inputs:undefined,outputs:undefined,host:undefined,exportAs:undefined,moduleId:undefined,providers:undefined,viewProviders:undefined,changeDetection:ChangeDetectionStrategy.Default,queries:undefined,templateUrl:undefined,template:undefined,styleUrls:undefined,styles:undefined,animations:undefined,encapsulation:undefined,interpolation:undefined,entryComponents:undefined},Directive);/**
 * Pipe decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Pipe=makeDecorator('Pipe',{name:undefined,pure:true});/**
 * Input decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Input=makePropDecorator('Input',[['bindingPropertyName',undefined]]);/**
 * Output decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Output=makePropDecorator('Output',[['bindingPropertyName',undefined]]);/**
 * HostBinding decorator and metadata.
 *
 * @stable
 * @Annotation
 */var HostBinding=makePropDecorator('HostBinding',[['hostPropertyName',undefined]]);/**
 * HostListener decorator and metadata.
 *
 * @stable
 * @Annotation
 */var HostListener=makePropDecorator('HostListener',[['eventName',undefined],['args',[]]]);/**
 * Defines a schema that will allow:
 * - any non-Angular elements with a `-` in their name,
 * - any properties on elements with a `-` in their name which is the common rule for custom
 * elements.
 *
 * @stable
 */var NgModule=makeDecorator('NgModule',{providers:undefined,declarations:undefined,imports:undefined,exports:undefined,entryComponents:undefined,bootstrap:undefined,schemas:undefined,id:undefined});/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ViewEncapsulation={};ViewEncapsulation.Emulated=0;ViewEncapsulation.Native=1;ViewEncapsulation.None=2;ViewEncapsulation[ViewEncapsulation.Emulated]="Emulated";ViewEncapsulation[ViewEncapsulation.Native]="Native";ViewEncapsulation[ViewEncapsulation.None]="None";/**
 * Metadata properties available for configuring Views.
 *
 * For details on the `\@Component` annotation, see {\@link Component}.
 *
 * ### Example
 *
 * ```
 * \@Component({
 *   selector: 'greet',
 *   template: 'Hello {{name}}!',
 * })
 * class Greet {
 *   name: string;
 *
 *   constructor() {
 *     this.name = 'World';
 *   }
 * }
 * ```
 *
 * @deprecated Use Component instead.
 *
 * {\@link Component}
 */var Version=function(){/**
     * @param {?} full
     */function Version(full){_classCallCheck$2(this,Version);this.full=full;}/**
     * @return {?}
     */_createClass$2(Version,[{key:'major',get:function get(){return this.full.split('.')[0];}/**
     * @return {?}
     */},{key:'minor',get:function get(){return this.full.split('.')[1];}/**
     * @return {?}
     */},{key:'patch',get:function get(){return this.full.split('.').slice(2).join('.');}}]);return Version;}();/**
 * @stable
 */var VERSION$2=new Version('4.0.0-rc.1');/**
 * Inject decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Inject=makeParamDecorator('Inject',[['token',undefined]]);/**
 * Optional decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Optional=makeParamDecorator('Optional',[]);/**
 * Injectable decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Injectable=makeDecorator('Injectable',[]);/**
 * Self decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Self=makeParamDecorator('Self',[]);/**
 * SkipSelf decorator and metadata.
 *
 * @stable
 * @Annotation
 */var SkipSelf=makeParamDecorator('SkipSelf',[]);/**
 * Host decorator and metadata.
 *
 * @stable
 * @Annotation
 */var Host=makeParamDecorator('Host',[]);/**
 * Allows to refer to references which are not yet defined.
 *
 * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of
 * DI is declared,
 * but not yet defined. It is also used when the `token` which we use when creating a query is not
 * yet defined.
 *
 * ### Example
 * {\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}
 * \@experimental
 * @param {?} forwardRefFn
 * @return {?}
 */function forwardRef(forwardRefFn){forwardRefFn.__forward_ref__=forwardRef;forwardRefFn.toString=function(){return stringify$2(this());};return forwardRefFn;}/**
 * Lazily retrieves the reference value from a forwardRef.
 *
 * Acts as the identity function when given a non-forward-ref value.
 *
 * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))
 *
 * {\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}
 *
 * See: {\@link forwardRef}
 * \@experimental
 * @param {?} type
 * @return {?}
 */function resolveForwardRef(type){if(typeof type==='function'&&type.hasOwnProperty('__forward_ref__')&&type.__forward_ref__===forwardRef){return type();}else{return type;}}var _THROW_IF_NOT_FOUND=new Object();var THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;var _NullInjector=function(){function _NullInjector(){_classCallCheck$2(this,_NullInjector);}_createClass$2(_NullInjector,[{key:'get',/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_THROW_IF_NOT_FOUND;if(notFoundValue===_THROW_IF_NOT_FOUND){throw new Error('No provider for '+stringify$2(token)+'!');}return notFoundValue;}}]);return _NullInjector;}();/**
 * \@whatItDoes Injector interface
 * \@howToUse
 * ```
 * const injector: Injector = ...;
 * injector.get(...);
 * ```
 *
 * \@description
 * For more details, see the {\@linkDocs guide/dependency-injection "Dependency Injection Guide"}.
 *
 * ### Example
 *
 * {\@example core/di/ts/injector_spec.ts region='Injector'}
 *
 * `Injector` returns itself when given `Injector` as a token:
 * {\@example core/di/ts/injector_spec.ts region='injectInjector'}
 *
 * \@stable
 * @abstract
 */var Injector=function(){function Injector(){_classCallCheck$2(this,Injector);}_createClass$2(Injector,[{key:'get',/**
     * Retrieves an instance from the injector based on the provided token.
     * If not found:
     * - Throws {\@link NoProviderError} if no `notFoundValue` that is not equal to
     * Injector.THROW_IF_NOT_FOUND is given
     * - Returns the `notFoundValue` otherwise
     * @abstract
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */value:function get(token,notFoundValue){}/**
     * @deprecated from v4.0.0 use Type<T> or InjectToken<T>
     * @suppress {duplicate}
     * @abstract
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'get',value:function get(token,notFoundValue){}}]);return Injector;}();Injector.THROW_IF_NOT_FOUND=_THROW_IF_NOT_FOUND;Injector.NULL=new _NullInjector();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var ERROR_TYPE='ngType';var ERROR_DEBUG_CONTEXT='ngDebugContext';var ERROR_ORIGINAL_ERROR='ngOriginalError';/**
 * @param {?} error
 * @return {?}
 */function getType(error){return error[ERROR_TYPE];}/**
 * @param {?} error
 * @return {?}
 */function getDebugContext(error){return error[ERROR_DEBUG_CONTEXT];}/**
 * @param {?} error
 * @return {?}
 */function getOriginalError(error){return error[ERROR_ORIGINAL_ERROR];}/**
 * \@whatItDoes Provides a hook for centralized exception handling.
 *
 * \@description
 *
 * The default implementation of `ErrorHandler` prints error messages to the `console`. To
 * intercept error handling, write a custom exception handler that replaces this default as
 * appropriate for your app.
 *
 * ### Example
 *
 * ```
 * class MyErrorHandler implements ErrorHandler {
 *   handleError(error) {
 *     // do something with the exception
 *   }
 * }
 *
 * \@NgModule({
 *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]
 * })
 * class MyModule {}
 * ```
 *
 * \@stable
 */var ErrorHandler=function(){/**
     * @param {?=} rethrowError
     */function ErrorHandler(){var rethrowError=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;_classCallCheck$2(this,ErrorHandler);/**
         * @internal
         */this._console=console;this.rethrowError=rethrowError;}/**
     * @param {?} error
     * @return {?}
     */_createClass$2(ErrorHandler,[{key:'handleError',value:function handleError(error){this._console.error('EXCEPTION: '+this._extractMessage(error));if(error instanceof Error){var/** @type {?} */originalError=this._findOriginalError(error);var/** @type {?} */originalStack=this._findOriginalStack(error);var/** @type {?} */context=this._findContext(error);if(originalError){this._console.error('ORIGINAL EXCEPTION: '+this._extractMessage(originalError));}if(originalStack){this._console.error('ORIGINAL STACKTRACE:');this._console.error(originalStack);}if(context){this._console.error('ERROR CONTEXT:');this._console.error(context);}}// We rethrow exceptions, so operations like 'bootstrap' will result in an error
// when an error happens. If we do not rethrow, bootstrap will always succeed.
if(this.rethrowError)throw error;}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_extractMessage',value:function _extractMessage(error){return error instanceof Error?error.message:error.toString();}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_findContext',value:function _findContext(error){if(error){return getDebugContext(error)?getDebugContext(error):this._findContext(getOriginalError(error));}return null;}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_findOriginalError',value:function _findOriginalError(error){var/** @type {?} */e=getOriginalError(error);while(e&&getOriginalError(e)){e=getOriginalError(e);}return e;}/**
     * \@internal
     * @param {?} error
     * @return {?}
     */},{key:'_findOriginalStack',value:function _findOriginalStack(error){var/** @type {?} */e=error;var/** @type {?} */stack=e.stack;while(e instanceof Error&&getOriginalError(e)){e=getOriginalError(e);if(e instanceof Error&&e.stack){stack=e.stack;}}return stack;}}]);return ErrorHandler;}();/**
 * @param {?} message
 * @param {?} originalError
 * @return {?}
 */function wrappedError(message,originalError){var/** @type {?} */msg=message+' caused by: '+(originalError instanceof Error?originalError.message:originalError);var/** @type {?} */error=Error(msg);error[ERROR_ORIGINAL_ERROR]=originalError;return error;}/**
 * @param {?} keys
 * @return {?}
 */function findFirstClosedCycle(keys){var/** @type {?} */res=[];for(var/** @type {?} */i=0;i<keys.length;++i){if(res.indexOf(keys[i])>-1){res.push(keys[i]);return res;}res.push(keys[i]);}return res;}/**
 * @param {?} keys
 * @return {?}
 */function constructResolvingPath(keys){if(keys.length>1){var/** @type {?} */reversed=findFirstClosedCycle(keys.slice().reverse());var/** @type {?} */tokenStrs=reversed.map(function(k){return stringify$2(k.token);});return' ('+tokenStrs.join(' -> ')+')';}return'';}/**
 * @param {?} injector
 * @param {?} key
 * @param {?} constructResolvingMessage
 * @param {?=} originalError
 * @return {?}
 */function injectionError(injector,key,constructResolvingMessage,originalError){var/** @type {?} */error=originalError?wrappedError('',originalError):Error();error.addKey=addKey;error.keys=[key];error.injectors=[injector];error.constructResolvingMessage=constructResolvingMessage;error.message=error.constructResolvingMessage();error[ERROR_ORIGINAL_ERROR]=originalError;return error;}/**
 * @this {?}
 * @param {?} injector
 * @param {?} key
 * @return {?}
 */function addKey(injector,key){this.injectors.push(injector);this.keys.push(key);this.message=this.constructResolvingMessage();}/**
 * Thrown when trying to retrieve a dependency by key from {\@link Injector}, but the
 * {\@link Injector} does not have a {\@link Provider} for the given key.
 *
 * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor(b:B) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 * @param {?} injector
 * @param {?} key
 * @return {?}
 */function noProviderError(injector,key){return injectionError(injector,key,function(){var/** @type {?} */first=stringify$2(this.keys[0].token);return'No provider for '+first+'!'+constructResolvingPath(this.keys);});}/**
 * Thrown when dependencies form a cycle.
 *
 * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))
 *
 * ```typescript
 * var injector = Injector.resolveAndCreate([
 *   {provide: "one", useFactory: (two) => "two", deps: [[new Inject("two")]]},
 *   {provide: "two", useFactory: (one) => "one", deps: [[new Inject("one")]]}
 * ]);
 *
 * expect(() => injector.get("one")).toThrowError();
 * ```
 *
 * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.
 * @param {?} injector
 * @param {?} key
 * @return {?}
 */function cyclicDependencyError(injector,key){return injectionError(injector,key,function(){return'Cannot instantiate cyclic dependency!'+constructResolvingPath(this.keys);});}/**
 * Thrown when a constructing type returns with an Error.
 *
 * The `InstantiationError` class contains the original error plus the dependency graph which caused
 * this object to be instantiated.
 *
 * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor() {
 *     throw new Error('message');
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([A]);
 * try {
 *   injector.get(A);
 * } catch (e) {
 *   expect(e instanceof InstantiationError).toBe(true);
 *   expect(e.originalException.message).toEqual("message");
 *   expect(e.originalStack).toBeDefined();
 * }
 * ```
 * @param {?} injector
 * @param {?} originalException
 * @param {?} originalStack
 * @param {?} key
 * @return {?}
 */function instantiationError(injector,originalException,originalStack,key){return injectionError(injector,key,function(){var/** @type {?} */first=stringify$2(this.keys[0].token);return getOriginalError(this).message+': Error during instantiation of '+first+'!'+constructResolvingPath(this.keys)+'.';},originalException);}/**
 * Thrown when an object other then {\@link Provider} (or `Type`) is passed to {\@link Injector}
 * creation.
 *
 * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate(["not a type"])).toThrowError();
 * ```
 * @param {?} provider
 * @return {?}
 */function invalidProviderError(provider){return Error('Invalid provider - only instances of Provider and Type are allowed, got: '+provider);}/**
 * Thrown when the class has no annotation information.
 *
 * Lack of annotation information prevents the {\@link Injector} from determining which dependencies
 * need to be injected into the constructor.
 *
 * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))
 *
 * ```typescript
 * class A {
 *   constructor(b) {}
 * }
 *
 * expect(() => Injector.resolveAndCreate([A])).toThrowError();
 * ```
 *
 * This error is also thrown when the class not marked with {\@link Injectable} has parameter types.
 *
 * ```typescript
 * class B {}
 *
 * class A {
 *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.
 * }
 *
 * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();
 * ```
 * \@stable
 * @param {?} typeOrFunc
 * @param {?} params
 * @return {?}
 */function noAnnotationError(typeOrFunc,params){var/** @type {?} */signature=[];for(var/** @type {?} */i=0,/** @type {?} */ii=params.length;i<ii;i++){var/** @type {?} */parameter=params[i];if(!parameter||parameter.length==0){signature.push('?');}else{signature.push(parameter.map(stringify$2).join(' '));}}return Error('Cannot resolve all parameters for \''+stringify$2(typeOrFunc)+'\'('+signature.join(', ')+'). '+'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \''+stringify$2(typeOrFunc)+'\' is decorated with Injectable.');}/**
 * Thrown when getting an object by index.
 *
 * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))
 *
 * ```typescript
 * class A {}
 *
 * var injector = Injector.resolveAndCreate([A]);
 *
 * expect(() => injector.getAt(100)).toThrowError();
 * ```
 * \@stable
 * @param {?} index
 * @return {?}
 */function outOfBoundsError(index){return Error('Index '+index+' is out-of-bounds.');}/**
 * Thrown when a multi provider and a regular provider are bound to the same token.
 *
 * ### Example
 *
 * ```typescript
 * expect(() => Injector.resolveAndCreate([
 *   { provide: "Strings", useValue: "string1", multi: true},
 *   { provide: "Strings", useValue: "string2", multi: false}
 * ])).toThrowError();
 * ```
 * @param {?} provider1
 * @param {?} provider2
 * @return {?}
 */function mixingMultiProvidersWithRegularProvidersError(provider1,provider2){return Error('Cannot mix multi providers and regular providers, got: '+provider1+' '+provider2);}/**
 * A unique object used for retrieving items from the {\@link ReflectiveInjector}.
 *
 * Keys have:
 * - a system-wide unique `id`.
 * - a `token`.
 *
 * `Key` is used internally by {\@link ReflectiveInjector} because its system-wide unique `id` allows
 * the
 * injector to store created objects in a more efficient way.
 *
 * `Key` should not be created directly. {\@link ReflectiveInjector} creates keys automatically when
 * resolving
 * providers.
 * \@experimental
 */var ReflectiveKey=function(){/**
     * Private
     * @param {?} token
     * @param {?} id
     */function ReflectiveKey(token,id){_classCallCheck$2(this,ReflectiveKey);this.token=token;this.id=id;if(!token){throw new Error('Token must be defined!');}}/**
     * Returns a stringified token.
     * @return {?}
     */_createClass$2(ReflectiveKey,[{key:'displayName',get:function get(){return stringify$2(this.token);}/**
     * Retrieves a `Key` for a token.
     * @param {?} token
     * @return {?}
     */}],[{key:'get',value:function get(token){return _globalKeyRegistry.get(resolveForwardRef(token));}/**
     * @return {?} the number of keys registered in the system.
     */},{key:'numberOfKeys',get:function get(){return _globalKeyRegistry.numberOfKeys;}}]);return ReflectiveKey;}();/**
 * \@internal
 */var KeyRegistry=function(){function KeyRegistry(){_classCallCheck$2(this,KeyRegistry);this._allKeys=new Map();}/**
     * @param {?} token
     * @return {?}
     */_createClass$2(KeyRegistry,[{key:'get',value:function get(token){if(token instanceof ReflectiveKey)return token;if(this._allKeys.has(token)){return this._allKeys.get(token);}var/** @type {?} */newKey=new ReflectiveKey(token,ReflectiveKey.numberOfKeys);this._allKeys.set(token,newKey);return newKey;}/**
     * @return {?}
     */},{key:'numberOfKeys',get:function get(){return this._allKeys.size;}}]);return KeyRegistry;}();var _globalKeyRegistry=new KeyRegistry();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @whatItDoes Represents a type that a Component or other object is instances of.
 *
 * @description
 *
 * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by
 * the `MyCustomComponent` constructor function.
 *
 * @stable
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Type=Function;/**
 * @param {?} v
 * @return {?}
 */function isType(v){return typeof v==='function';}/**
 * Attention: This regex has to hold even if the code is minified!
 */var DELEGATE_CTOR=/^function\s+\S+\(\)\s*{\s*("use strict";)?\s*(return\s+)?(\S+\s+!==\s+null\s+&&\s+)?\S+\.apply\(this,\s*arguments\)/;var ReflectionCapabilities=function(){/**
     * @param {?=} reflect
     */function ReflectionCapabilities(reflect){_classCallCheck$2(this,ReflectionCapabilities);this._reflect=reflect||global$1$1.Reflect;}/**
     * @return {?}
     */_createClass$2(ReflectionCapabilities,[{key:'isReflectionEnabled',value:function isReflectionEnabled(){return true;}/**
     * @param {?} t
     * @return {?}
     */},{key:'factory',value:function factory(t){return function(){for(var _len4=arguments.length,args=Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}return new(Function.prototype.bind.apply(t,[null].concat(args)))();};}/**
     * \@internal
     * @param {?} paramTypes
     * @param {?} paramAnnotations
     * @return {?}
     */},{key:'_zipTypesAndAnnotations',value:function _zipTypesAndAnnotations(paramTypes,paramAnnotations){var/** @type {?} */result=void 0;if(typeof paramTypes==='undefined'){result=new Array(paramAnnotations.length);}else{result=new Array(paramTypes.length);}for(var/** @type {?} */i=0;i<result.length;i++){// TS outputs Object for parameters without types, while Traceur omits
// the annotations. For now we preserve the Traceur behavior to aid
// migration, but this can be revisited.
if(typeof paramTypes==='undefined'){result[i]=[];}else if(paramTypes[i]!=Object){result[i]=[paramTypes[i]];}else{result[i]=[];}if(paramAnnotations&&isPresent$2(paramAnnotations[i])){result[i]=result[i].concat(paramAnnotations[i]);}}return result;}/**
     * @param {?} type
     * @param {?} parentCtor
     * @return {?}
     */},{key:'_ownParameters',value:function _ownParameters(type,parentCtor){// If we have no decorators, we only have function.length as metadata.
// In that case, to detect whether a child class declared an own constructor or not,
// we need to look inside of that constructor to check whether it is
// just calling the parent.
// This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439
// that sets 'design:paramtypes' to []
// if a class inherits from another class but has no ctor declared itself.
if(DELEGATE_CTOR.exec(type.toString())){return null;}// Prefer the direct API.
if(type.parameters&&type.parameters!==parentCtor.parameters){return type.parameters;}// API of tsickle for lowering decorators to properties on the class.
var/** @type {?} */tsickleCtorParams=type.ctorParameters;if(tsickleCtorParams&&tsickleCtorParams!==parentCtor.ctorParameters){// Newer tsickle uses a function closure
// Retain the non-function case for compatibility with older tsickle
var/** @type {?} */ctorParameters=typeof tsickleCtorParams==='function'?tsickleCtorParams():tsickleCtorParams;var/** @type {?} */paramTypes=ctorParameters.map(function(ctorParam){return ctorParam&&ctorParam.type;});var/** @type {?} */paramAnnotations=ctorParameters.map(function(ctorParam){return ctorParam&&convertTsickleDecoratorIntoMetadata(ctorParam.decorators);});return this._zipTypesAndAnnotations(paramTypes,paramAnnotations);}// API for metadata created by invoking the decorators.
if(isPresent$2(this._reflect)&&isPresent$2(this._reflect.getOwnMetadata)){var/** @type {?} */_paramAnnotations=this._reflect.getOwnMetadata('parameters',type);var/** @type {?} */_paramTypes=this._reflect.getOwnMetadata('design:paramtypes',type);if(_paramTypes||_paramAnnotations){return this._zipTypesAndAnnotations(_paramTypes,_paramAnnotations);}}// If a class has no decorators, at least create metadata
// based on function.length.
// Note: We know that this is a real constructor as we checked
// the content of the constructor above.
return new Array(type.length).fill(undefined);}/**
     * @param {?} type
     * @return {?}
     */},{key:'parameters',value:function parameters(type){// Note: only report metadata if we have at least one class decorator
// to stay in sync with the static reflector.
if(!isType(type)){return[];}var/** @type {?} */parentCtor=getParentCtor(type);var/** @type {?} */parameters=this._ownParameters(type,parentCtor);if(!parameters&&parentCtor!==Object){parameters=this.parameters(parentCtor);}return parameters||[];}/**
     * @param {?} typeOrFunc
     * @param {?} parentCtor
     * @return {?}
     */},{key:'_ownAnnotations',value:function _ownAnnotations(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.annotations&&typeOrFunc.annotations!==parentCtor.annotations){var/** @type {?} */annotations=typeOrFunc.annotations;if(typeof annotations==='function'&&annotations.annotations){annotations=annotations.annotations;}return annotations;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.decorators&&typeOrFunc.decorators!==parentCtor.decorators){return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);}// API for metadata created by invoking the decorators.
if(this._reflect&&this._reflect.getOwnMetadata){return this._reflect.getOwnMetadata('annotations',typeOrFunc);}}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'annotations',value:function annotations(typeOrFunc){if(!isType(typeOrFunc)){return[];}var/** @type {?} */parentCtor=getParentCtor(typeOrFunc);var/** @type {?} */ownAnnotations=this._ownAnnotations(typeOrFunc,parentCtor)||[];var/** @type {?} */parentAnnotations=parentCtor!==Object?this.annotations(parentCtor):[];return parentAnnotations.concat(ownAnnotations);}/**
     * @param {?} typeOrFunc
     * @param {?} parentCtor
     * @return {?}
     */},{key:'_ownPropMetadata',value:function _ownPropMetadata(typeOrFunc,parentCtor){// Prefer the direct API.
if(typeOrFunc.propMetadata&&typeOrFunc.propMetadata!==parentCtor.propMetadata){var/** @type {?} */propMetadata=typeOrFunc.propMetadata;if(typeof propMetadata==='function'&&propMetadata.propMetadata){propMetadata=propMetadata.propMetadata;}return propMetadata;}// API of tsickle for lowering decorators to properties on the class.
if(typeOrFunc.propDecorators&&typeOrFunc.propDecorators!==parentCtor.propDecorators){var/** @type {?} */propDecorators=typeOrFunc.propDecorators;var/** @type {?} */_propMetadata={};Object.keys(propDecorators).forEach(function(prop){_propMetadata[prop]=convertTsickleDecoratorIntoMetadata(propDecorators[prop]);});return _propMetadata;}// API for metadata created by invoking the decorators.
if(this._reflect&&this._reflect.getOwnMetadata){return this._reflect.getOwnMetadata('propMetadata',typeOrFunc);}}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(typeOrFunc){if(!isType(typeOrFunc)){return{};}var/** @type {?} */parentCtor=getParentCtor(typeOrFunc);var/** @type {?} */propMetadata={};if(parentCtor!==Object){var/** @type {?} */parentPropMetadata=this.propMetadata(parentCtor);Object.keys(parentPropMetadata).forEach(function(propName){propMetadata[propName]=parentPropMetadata[propName];});}var/** @type {?} */ownPropMetadata=this._ownPropMetadata(typeOrFunc,parentCtor);if(ownPropMetadata){Object.keys(ownPropMetadata).forEach(function(propName){var/** @type {?} */decorators=[];if(propMetadata.hasOwnProperty(propName)){decorators.push.apply(decorators,_toConsumableArray$2(propMetadata[propName]));}decorators.push.apply(decorators,_toConsumableArray$2(ownPropMetadata[propName]));propMetadata[propName]=decorators;});}return propMetadata;}/**
     * @param {?} type
     * @param {?} lcProperty
     * @return {?}
     */},{key:'hasLifecycleHook',value:function hasLifecycleHook(type,lcProperty){return type instanceof Type&&lcProperty in type.prototype;}/**
     * @param {?} name
     * @return {?}
     */},{key:'getter',value:function getter(name){return new Function('o','return o.'+name+';');}/**
     * @param {?} name
     * @return {?}
     */},{key:'setter',value:function setter(name){return new Function('o','v','return o.'+name+' = v;');}/**
     * @param {?} name
     * @return {?}
     */},{key:'method',value:function method(name){var/** @type {?} */functionBody='if (!o.'+name+') throw new Error(\'"'+name+'" is undefined\');\n        return o.'+name+'.apply(o, args);';return new Function('o','args',functionBody);}/**
     * @param {?} type
     * @return {?}
     */},{key:'importUri',value:function importUri(type){// StaticSymbol
if((typeof type==='undefined'?'undefined':_typeof$1(type))==='object'&&type['filePath']){return type['filePath'];}// Runtime type
return'./'+stringify$2(type);}/**
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @param {?} runtime
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members,runtime){return runtime;}/**
     * @param {?} enumIdentifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(enumIdentifier,name){return enumIdentifier[name];}}]);return ReflectionCapabilities;}();/**
 * @param {?} decoratorInvocations
 * @return {?}
 */function convertTsickleDecoratorIntoMetadata(decoratorInvocations){if(!decoratorInvocations){return[];}return decoratorInvocations.map(function(decoratorInvocation){var/** @type {?} */decoratorType=decoratorInvocation.type;var/** @type {?} */annotationCls=decoratorType.annotationCls;var/** @type {?} */annotationArgs=decoratorInvocation.args?decoratorInvocation.args:[];return new(Function.prototype.bind.apply(annotationCls,[null].concat(_toConsumableArray$2(annotationArgs))))();});}/**
 * @param {?} ctor
 * @return {?}
 */function getParentCtor(ctor){var/** @type {?} */parentProto=Object.getPrototypeOf(ctor.prototype);var/** @type {?} */parentCtor=parentProto?parentProto.constructor:null;// Note: We always use `Object` as the null value
// to simplify checking later on.
return parentCtor||Object;}/**
 * Provides read-only access to reflection data about symbols. Used internally by Angular
 * to power dependency injection and compilation.
 * @abstract
 */var ReflectorReader=function(){function ReflectorReader(){_classCallCheck$2(this,ReflectorReader);}_createClass$2(ReflectorReader,[{key:'parameters',/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */value:function parameters(typeOrFunc){}/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'annotations',value:function annotations(typeOrFunc){}/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(typeOrFunc){}/**
     * @abstract
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'importUri',value:function importUri(typeOrFunc){}/**
     * @abstract
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @param {?} runtime
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members,runtime){}/**
     * @abstract
     * @param {?} identifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(identifier,name){}}]);return ReflectorReader;}();/**
 * Provides access to reflection data about symbols. Used internally by Angular
 * to power dependency injection and compilation.
 */var Reflector=function(_ReflectorReader){_inherits$2(Reflector,_ReflectorReader);/**
     * @param {?} reflectionCapabilities
     */function Reflector(reflectionCapabilities){_classCallCheck$2(this,Reflector);var _this3=_possibleConstructorReturn$2(this,(Reflector.__proto__||Object.getPrototypeOf(Reflector)).call(this));_this3.reflectionCapabilities=reflectionCapabilities;return _this3;}/**
     * @param {?} caps
     * @return {?}
     */_createClass$2(Reflector,[{key:'updateCapabilities',value:function updateCapabilities(caps){this.reflectionCapabilities=caps;}/**
     * @param {?} type
     * @return {?}
     */},{key:'factory',value:function factory(type){return this.reflectionCapabilities.factory(type);}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'parameters',value:function parameters(typeOrFunc){return this.reflectionCapabilities.parameters(typeOrFunc);}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'annotations',value:function annotations(typeOrFunc){return this.reflectionCapabilities.annotations(typeOrFunc);}/**
     * @param {?} typeOrFunc
     * @return {?}
     */},{key:'propMetadata',value:function propMetadata(typeOrFunc){return this.reflectionCapabilities.propMetadata(typeOrFunc);}/**
     * @param {?} type
     * @param {?} lcProperty
     * @return {?}
     */},{key:'hasLifecycleHook',value:function hasLifecycleHook(type,lcProperty){return this.reflectionCapabilities.hasLifecycleHook(type,lcProperty);}/**
     * @param {?} name
     * @return {?}
     */},{key:'getter',value:function getter(name){return this.reflectionCapabilities.getter(name);}/**
     * @param {?} name
     * @return {?}
     */},{key:'setter',value:function setter(name){return this.reflectionCapabilities.setter(name);}/**
     * @param {?} name
     * @return {?}
     */},{key:'method',value:function method(name){return this.reflectionCapabilities.method(name);}/**
     * @param {?} type
     * @return {?}
     */},{key:'importUri',value:function importUri(type){return this.reflectionCapabilities.importUri(type);}/**
     * @param {?} name
     * @param {?} moduleUrl
     * @param {?} members
     * @param {?} runtime
     * @return {?}
     */},{key:'resolveIdentifier',value:function resolveIdentifier(name,moduleUrl,members,runtime){return this.reflectionCapabilities.resolveIdentifier(name,moduleUrl,members,runtime);}/**
     * @param {?} identifier
     * @param {?} name
     * @return {?}
     */},{key:'resolveEnum',value:function resolveEnum(identifier,name){return this.reflectionCapabilities.resolveEnum(identifier,name);}}]);return Reflector;}(ReflectorReader);/**
 * The {@link Reflector} used internally in Angular to access metadata
 * about symbols.
 */var reflector=new Reflector(new ReflectionCapabilities());/**
 * `Dependency` is used by the framework to extend DI.
 * This is internal to Angular and should not be used directly.
 */var ReflectiveDependency=function(){/**
     * @param {?} key
     * @param {?} optional
     * @param {?} visibility
     */function ReflectiveDependency(key,optional,visibility){_classCallCheck$2(this,ReflectiveDependency);this.key=key;this.optional=optional;this.visibility=visibility;}/**
     * @param {?} key
     * @return {?}
     */_createClass$2(ReflectiveDependency,null,[{key:'fromKey',value:function fromKey(key){return new ReflectiveDependency(key,false,null);}}]);return ReflectiveDependency;}();var _EMPTY_LIST=[];var ResolvedReflectiveProvider_=function(){/**
     * @param {?} key
     * @param {?} resolvedFactories
     * @param {?} multiProvider
     */function ResolvedReflectiveProvider_(key,resolvedFactories,multiProvider){_classCallCheck$2(this,ResolvedReflectiveProvider_);this.key=key;this.resolvedFactories=resolvedFactories;this.multiProvider=multiProvider;}/**
     * @return {?}
     */_createClass$2(ResolvedReflectiveProvider_,[{key:'resolvedFactory',get:function get(){return this.resolvedFactories[0];}}]);return ResolvedReflectiveProvider_;}();/**
 * An internal resolved representation of a factory function created by resolving {\@link
 * Provider}.
 * \@experimental
 */var ResolvedReflectiveFactory=/**
     * @param {?} factory
     * @param {?} dependencies
     */function ResolvedReflectiveFactory(factory,dependencies){_classCallCheck$2(this,ResolvedReflectiveFactory);this.factory=factory;this.dependencies=dependencies;};/**
 * Resolve a single provider.
 * @param {?} provider
 * @return {?}
 */function resolveReflectiveFactory(provider){var/** @type {?} */factoryFn=void 0;var/** @type {?} */resolvedDeps=void 0;if(provider.useClass){var/** @type {?} */useClass=resolveForwardRef(provider.useClass);factoryFn=reflector.factory(useClass);resolvedDeps=_dependenciesFor(useClass);}else if(provider.useExisting){factoryFn=function factoryFn(aliasInstance){return aliasInstance;};resolvedDeps=[ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];}else if(provider.useFactory){factoryFn=provider.useFactory;resolvedDeps=constructDependencies(provider.useFactory,provider.deps);}else{factoryFn=function factoryFn(){return provider.useValue;};resolvedDeps=_EMPTY_LIST;}return new ResolvedReflectiveFactory(factoryFn,resolvedDeps);}/**
 * Converts the {\@link Provider} into {\@link ResolvedProvider}.
 *
 * {\@link Injector} internally only uses {\@link ResolvedProvider}, {\@link Provider} contains
 * convenience provider syntax.
 * @param {?} provider
 * @return {?}
 */function resolveReflectiveProvider(provider){return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide),[resolveReflectiveFactory(provider)],provider.multi);}/**
 * Resolve a list of Providers.
 * @param {?} providers
 * @return {?}
 */function resolveReflectiveProviders(providers){var/** @type {?} */normalized=_normalizeProviders(providers,[]);var/** @type {?} */resolved=normalized.map(resolveReflectiveProvider);var/** @type {?} */resolvedProviderMap=mergeResolvedReflectiveProviders(resolved,new Map());return Array.from(resolvedProviderMap.values());}/**
 * Merges a list of ResolvedProviders into a list where
 * each key is contained exactly once and multi providers
 * have been merged.
 * @param {?} providers
 * @param {?} normalizedProvidersMap
 * @return {?}
 */function mergeResolvedReflectiveProviders(providers,normalizedProvidersMap){for(var/** @type {?} */i=0;i<providers.length;i++){var/** @type {?} */provider=providers[i];var/** @type {?} */existing=normalizedProvidersMap.get(provider.key.id);if(existing){if(provider.multiProvider!==existing.multiProvider){throw mixingMultiProvidersWithRegularProvidersError(existing,provider);}if(provider.multiProvider){for(var/** @type {?} */j=0;j<provider.resolvedFactories.length;j++){existing.resolvedFactories.push(provider.resolvedFactories[j]);}}else{normalizedProvidersMap.set(provider.key.id,provider);}}else{var/** @type {?} */resolvedProvider=void 0;if(provider.multiProvider){resolvedProvider=new ResolvedReflectiveProvider_(provider.key,provider.resolvedFactories.slice(),provider.multiProvider);}else{resolvedProvider=provider;}normalizedProvidersMap.set(provider.key.id,resolvedProvider);}}return normalizedProvidersMap;}/**
 * @param {?} providers
 * @param {?} res
 * @return {?}
 */function _normalizeProviders(providers,res){providers.forEach(function(b){if(b instanceof Type){res.push({provide:b,useClass:b});}else if(b&&(typeof b==='undefined'?'undefined':_typeof$1(b))=='object'&&b.provide!==undefined){res.push(/** @type {?} */b);}else if(b instanceof Array){_normalizeProviders(b,res);}else{throw invalidProviderError(b);}});return res;}/**
 * @param {?} typeOrFunc
 * @param {?} dependencies
 * @return {?}
 */function constructDependencies(typeOrFunc,dependencies){if(!dependencies){return _dependenciesFor(typeOrFunc);}else{var/** @type {?} */params=dependencies.map(function(t){return[t];});return dependencies.map(function(t){return _extractToken(typeOrFunc,t,params);});}}/**
 * @param {?} typeOrFunc
 * @return {?}
 */function _dependenciesFor(typeOrFunc){var/** @type {?} */params=reflector.parameters(typeOrFunc);if(!params)return[];if(params.some(function(p){return p==null;})){throw noAnnotationError(typeOrFunc,params);}return params.map(function(p){return _extractToken(typeOrFunc,p,params);});}/**
 * @param {?} typeOrFunc
 * @param {?} metadata
 * @param {?} params
 * @return {?}
 */function _extractToken(typeOrFunc,metadata,params){var/** @type {?} */token=null;var/** @type {?} */optional=false;if(!Array.isArray(metadata)){if(metadata instanceof Inject){return _createDependency(metadata['token'],optional,null);}else{return _createDependency(metadata,optional,null);}}var/** @type {?} */visibility=null;for(var/** @type {?} */i=0;i<metadata.length;++i){var/** @type {?} */paramMetadata=metadata[i];if(paramMetadata instanceof Type){token=paramMetadata;}else if(paramMetadata instanceof Inject){token=paramMetadata['token'];}else if(paramMetadata instanceof Optional){optional=true;}else if(paramMetadata instanceof Self||paramMetadata instanceof SkipSelf){visibility=paramMetadata;}else if(paramMetadata instanceof InjectionToken){token=paramMetadata;}}token=resolveForwardRef(token);if(token!=null){return _createDependency(token,optional,visibility);}else{throw noAnnotationError(typeOrFunc,params);}}/**
 * @param {?} token
 * @param {?} optional
 * @param {?} visibility
 * @return {?}
 */function _createDependency(token,optional,visibility){return new ReflectiveDependency(ReflectiveKey.get(token),optional,visibility);}// Threshold for the dynamic version
var UNDEFINED=new Object();/**
 * A ReflectiveDependency injection container used for instantiating objects and resolving
 * dependencies.
 *
 * An `Injector` is a replacement for a `new` operator, which can automatically resolve the
 * constructor dependencies.
 *
 * In typical use, application code asks for the dependencies in the constructor and they are
 * resolved by the `Injector`.
 *
 * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))
 *
 * The following example creates an `Injector` configured to create `Engine` and `Car`.
 *
 * ```typescript
 * \@Injectable()
 * class Engine {
 * }
 *
 * \@Injectable()
 * class Car {
 *   constructor(public engine:Engine) {}
 * }
 *
 * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
 * var car = injector.get(Car);
 * expect(car instanceof Car).toBe(true);
 * expect(car.engine instanceof Engine).toBe(true);
 * ```
 *
 * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`
 * resolve all of the object's dependencies automatically.
 *
 * \@stable
 * @abstract
 */var ReflectiveInjector=function(){function ReflectiveInjector(){_classCallCheck$2(this,ReflectiveInjector);}_createClass$2(ReflectiveInjector,[{key:'parent',/**
     * Parent of this injector.
     *
     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.
     * -->
     *
     * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))
     *
     * ```typescript
     * var parent = ReflectiveInjector.resolveAndCreate([]);
     * var child = parent.resolveAndCreateChild([]);
     * expect(child.parent).toBe(parent);
     * ```
     * @abstract
     * @return {?}
     */value:function parent(){}/**
     * Resolves an array of providers and creates a child injector from those providers.
     *
     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.
     * -->
     *
     * The passed-in providers can be an array of `Type`, {\@link Provider},
     * or a recursive array of more providers.
     *
     * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))
     *
     * ```typescript
     * class ParentProvider {}
     * class ChildProvider {}
     *
     * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);
     * var child = parent.resolveAndCreateChild([ChildProvider]);
     *
     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);
     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);
     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));
     * ```
     *
     * This function is slower than the corresponding `createChildFromResolved`
     * because it needs to resolve the passed-in providers first.
     * See {\@link Injector#resolve} and {\@link Injector#createChildFromResolved}.
     * @abstract
     * @param {?} providers
     * @return {?}
     */},{key:'resolveAndCreateChild',value:function resolveAndCreateChild(providers){}/**
     * Creates a child injector from previously resolved providers.
     *
     * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.
     * -->
     *
     * This API is the recommended way to construct injectors in performance-sensitive parts.
     *
     * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))
     *
     * ```typescript
     * class ParentProvider {}
     * class ChildProvider {}
     *
     * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);
     * var childProviders = ReflectiveInjector.resolve([ChildProvider]);
     *
     * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);
     * var child = parent.createChildFromResolved(childProviders);
     *
     * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);
     * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);
     * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));
     * ```
     * @abstract
     * @param {?} providers
     * @return {?}
     */},{key:'createChildFromResolved',value:function createChildFromResolved(providers){}/**
     * Resolves a provider and instantiates an object in the context of the injector.
     *
     * The created object does not get cached by the injector.
     *
     * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);
     *
     * var car = injector.resolveAndInstantiate(Car);
     * expect(car.engine).toBe(injector.get(Engine));
     * expect(car).not.toBe(injector.resolveAndInstantiate(Car));
     * ```
     * @abstract
     * @param {?} provider
     * @return {?}
     */},{key:'resolveAndInstantiate',value:function resolveAndInstantiate(provider){}/**
     * Instantiates an object using a resolved provider in the context of the injector.
     *
     * The created object does not get cached by the injector.
     *
     * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Engine]);
     * var carProvider = ReflectiveInjector.resolve([Car])[0];
     * var car = injector.instantiateResolved(carProvider);
     * expect(car.engine).toBe(injector.get(Engine));
     * expect(car).not.toBe(injector.instantiateResolved(carProvider));
     * ```
     * @abstract
     * @param {?} provider
     * @return {?}
     */},{key:'instantiateResolved',value:function instantiateResolved(provider){}/**
     * @abstract
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'get',value:function get(token,notFoundValue){}}],[{key:'resolve',/**
     * Turns an array of provider definitions into an array of resolved providers.
     *
     * A resolution is a process of flattening multiple nested arrays and converting individual
     * providers into an array of {\@link ResolvedReflectiveProvider}s.
     *
     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);
     *
     * expect(providers.length).toEqual(2);
     *
     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);
     * expect(providers[0].key.displayName).toBe("Car");
     * expect(providers[0].dependencies.length).toEqual(1);
     * expect(providers[0].factory).toBeDefined();
     *
     * expect(providers[1].key.displayName).toBe("Engine");
     * });
     * ```
     *
     * See {\@link ReflectiveInjector#fromResolvedProviders} for more info.
     * @param {?} providers
     * @return {?}
     */value:function resolve(providers){return resolveReflectiveProviders(providers);}/**
     * Resolves an array of providers and creates an injector from those providers.
     *
     * The passed-in providers can be an array of `Type`, {\@link Provider},
     * or a recursive array of more providers.
     *
     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     *
     * This function is slower than the corresponding `fromResolvedProviders`
     * because it needs to resolve the passed-in providers first.
     * See {\@link Injector#resolve} and {\@link Injector#fromResolvedProviders}.
     * @param {?} providers
     * @param {?=} parent
     * @return {?}
     */},{key:'resolveAndCreate',value:function resolveAndCreate(providers){var parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders,parent);}/**
     * Creates an injector from previously resolved providers.
     *
     * This API is the recommended way to construct injectors in performance-sensitive parts.
     *
     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))
     *
     * ```typescript
     * \@Injectable()
     * class Engine {
     * }
     *
     * \@Injectable()
     * class Car {
     *   constructor(public engine:Engine) {}
     * }
     *
     * var providers = ReflectiveInjector.resolve([Car, Engine]);
     * var injector = ReflectiveInjector.fromResolvedProviders(providers);
     * expect(injector.get(Car) instanceof Car).toBe(true);
     * ```
     * \@experimental
     * @param {?} providers
     * @param {?=} parent
     * @return {?}
     */},{key:'fromResolvedProviders',value:function fromResolvedProviders(providers){var parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return new ReflectiveInjector_(providers,parent);}}]);return ReflectiveInjector;}();var ReflectiveInjector_=function(){/**
     * Private
     * @param {?} _providers
     * @param {?=} _parent
     */function ReflectiveInjector_(_providers){var _parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;_classCallCheck$2(this,ReflectiveInjector_);/** @internal */this._constructionCounter=0;this._providers=_providers;this._parent=_parent;var len=_providers.length;this.keyIds=new Array(len);this.objs=new Array(len);for(var i=0;i<len;i++){this.keyIds[i]=_providers[i].key.id;this.objs[i]=UNDEFINED;}}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */_createClass$2(ReflectiveInjector_,[{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:THROW_IF_NOT_FOUND;return this._getByKey(ReflectiveKey.get(token),null,notFoundValue);}/**
     * @return {?}
     */},{key:'resolveAndCreateChild',/**
     * @param {?} providers
     * @return {?}
     */value:function resolveAndCreateChild(providers){var/** @type {?} */ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return this.createChildFromResolved(ResolvedReflectiveProviders);}/**
     * @param {?} providers
     * @return {?}
     */},{key:'createChildFromResolved',value:function createChildFromResolved(providers){var/** @type {?} */inj=new ReflectiveInjector_(providers);inj._parent=this;return inj;}/**
     * @param {?} provider
     * @return {?}
     */},{key:'resolveAndInstantiate',value:function resolveAndInstantiate(provider){return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);}/**
     * @param {?} provider
     * @return {?}
     */},{key:'instantiateResolved',value:function instantiateResolved(provider){return this._instantiateProvider(provider);}/**
     * @param {?} index
     * @return {?}
     */},{key:'getProviderAtIndex',value:function getProviderAtIndex(index){if(index<0||index>=this._providers.length){throw outOfBoundsError(index);}return this._providers[index];}/**
     * \@internal
     * @param {?} provider
     * @return {?}
     */},{key:'_new',value:function _new(provider){if(this._constructionCounter++>this._getMaxNumberOfObjects()){throw cyclicDependencyError(this,provider.key);}return this._instantiateProvider(provider);}/**
     * @return {?}
     */},{key:'_getMaxNumberOfObjects',value:function _getMaxNumberOfObjects(){return this.objs.length;}/**
     * @param {?} provider
     * @return {?}
     */},{key:'_instantiateProvider',value:function _instantiateProvider(provider){if(provider.multiProvider){var/** @type {?} */res=new Array(provider.resolvedFactories.length);for(var/** @type {?} */i=0;i<provider.resolvedFactories.length;++i){res[i]=this._instantiate(provider,provider.resolvedFactories[i]);}return res;}else{return this._instantiate(provider,provider.resolvedFactories[0]);}}/**
     * @param {?} provider
     * @param {?} ResolvedReflectiveFactory
     * @return {?}
     */},{key:'_instantiate',value:function _instantiate(provider,ResolvedReflectiveFactory){var _this4=this;var/** @type {?} */factory=ResolvedReflectiveFactory.factory;var/** @type {?} */deps=void 0;try{deps=ResolvedReflectiveFactory.dependencies.map(function(dep){return _this4._getByReflectiveDependency(dep);});}catch(e){if(e.addKey){e.addKey(this,provider.key);}throw e;}var/** @type {?} */obj=void 0;try{obj=factory.apply(undefined,_toConsumableArray$2(deps));}catch(e){throw instantiationError(this,e,e.stack,provider.key);}return obj;}/**
     * @param {?} dep
     * @return {?}
     */},{key:'_getByReflectiveDependency',value:function _getByReflectiveDependency(dep){return this._getByKey(dep.key,dep.visibility,dep.optional?null:THROW_IF_NOT_FOUND);}/**
     * @param {?} key
     * @param {?} visibility
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'_getByKey',value:function _getByKey(key,visibility,notFoundValue){if(key===INJECTOR_KEY){return this;}if(visibility instanceof Self){return this._getByKeySelf(key,notFoundValue);}else{return this._getByKeyDefault(key,notFoundValue,visibility);}}/**
     * @param {?} keyId
     * @return {?}
     */},{key:'_getObjByKeyId',value:function _getObjByKeyId(keyId){for(var/** @type {?} */i=0;i<this.keyIds.length;i++){if(this.keyIds[i]===keyId){if(this.objs[i]===UNDEFINED){this.objs[i]=this._new(this._providers[i]);}return this.objs[i];}}return UNDEFINED;}/**
     * \@internal
     * @param {?} key
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'_throwOrNull',value:function _throwOrNull(key,notFoundValue){if(notFoundValue!==THROW_IF_NOT_FOUND){return notFoundValue;}else{throw noProviderError(this,key);}}/**
     * \@internal
     * @param {?} key
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'_getByKeySelf',value:function _getByKeySelf(key,notFoundValue){var/** @type {?} */obj=this._getObjByKeyId(key.id);return obj!==UNDEFINED?obj:this._throwOrNull(key,notFoundValue);}/**
     * \@internal
     * @param {?} key
     * @param {?} notFoundValue
     * @param {?} visibility
     * @return {?}
     */},{key:'_getByKeyDefault',value:function _getByKeyDefault(key,notFoundValue,visibility){var/** @type {?} */inj=void 0;if(visibility instanceof SkipSelf){inj=this._parent;}else{inj=this;}while(inj instanceof ReflectiveInjector_){var/** @type {?} */inj_=inj;var/** @type {?} */obj=inj_._getObjByKeyId(key.id);if(obj!==UNDEFINED)return obj;inj=inj_._parent;}if(inj!==null){return inj.get(key.token,notFoundValue);}else{return this._throwOrNull(key,notFoundValue);}}/**
     * @return {?}
     */},{key:'toString',/**
     * @return {?}
     */value:function toString(){return this.displayName;}},{key:'parent',get:function get(){return this._parent;}},{key:'displayName',get:function get(){var/** @type {?} */providers=_mapProviders(this,function(b){return' "'+b.key.displayName+'" ';}).join(', ');return'ReflectiveInjector(providers: ['+providers+'])';}}]);return ReflectiveInjector_;}();var INJECTOR_KEY=ReflectiveKey.get(Injector);/**
 * @param {?} injector
 * @param {?} fn
 * @return {?}
 */function _mapProviders(injector,fn){var/** @type {?} */res=new Array(injector._providers.length);for(var/** @type {?} */i=0;i<injector._providers.length;++i){res[i]=fn(injector.getProviderAtIndex(i));}return res;}/**
 * Wraps Javascript Objects
 */var StringMapWrapper$1=function(){function StringMapWrapper(){_classCallCheck$2(this,StringMapWrapper);}_createClass$2(StringMapWrapper,null,[{key:'merge',/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */value:function merge$$2(m1,m2){var/** @type {?} */m={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(m1)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var k=_step.value;m[k]=m1[k];}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(m2)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _k=_step2.value;m[_k]=m2[_k];}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return m;}/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */},{key:'equals',value:function equals(m1,m2){var/** @type {?} */k1=Object.keys(m1);var/** @type {?} */k2=Object.keys(m2);if(k1.length!=k2.length){return false;}for(var/** @type {?} */i=0;i<k1.length;i++){var/** @type {?} */key=k1[i];if(m1[key]!==m2[key]){return false;}}return true;}}]);return StringMapWrapper;}();var ListWrapper=function(){function ListWrapper(){_classCallCheck$2(this,ListWrapper);}_createClass$2(ListWrapper,null,[{key:'findLast',/**
     * @param {?} arr
     * @param {?} condition
     * @return {?}
     */value:function findLast(arr,condition){for(var/** @type {?} */i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
     * @param {?} list
     * @param {?} items
     * @return {?}
     */},{key:'removeAll',value:function removeAll(list,items){for(var/** @type {?} */i=0;i<items.length;++i){var/** @type {?} */index=list.indexOf(items[i]);if(index>-1){list.splice(index,1);}}}/**
     * @param {?} list
     * @param {?} el
     * @return {?}
     */},{key:'remove',value:function remove(list,el){var/** @type {?} */index=list.indexOf(el);if(index>-1){list.splice(index,1);return true;}return false;}/**
     * @param {?} a
     * @param {?} b
     * @return {?}
     */},{key:'equals',value:function equals(a,b){if(a.length!=b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i]!==b[i])return false;}return true;}/**
     * @param {?} list
     * @return {?}
     */},{key:'flatten',value:function flatten(list){return list.reduce(function(flat,item){var/** @type {?} */flatItem=Array.isArray(item)?ListWrapper.flatten(item):item;return flat.concat(flatItem);},[]);}}]);return ListWrapper;}();/**
 * @param {?} obj
 * @return {?}
 */function isListLikeIterable$1(obj){if(!isJsObject$1(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&getSymbolIterator$1()in obj;// JS Iterable have a Symbol.iterator prop
}/**
 * @param {?} a
 * @param {?} b
 * @param {?} comparator
 * @return {?}
 */function areIterablesEqual(a,b,comparator){var/** @type {?} */iterator1=a[getSymbolIterator$1()]();var/** @type {?} */iterator2=b[getSymbolIterator$1()]();while(true){var/** @type {?} */item1=iterator1.next();var/** @type {?} */item2=iterator2.next();if(item1.done&&item2.done)return true;if(item1.done||item2.done)return false;if(!comparator(item1.value,item2.value))return false;}}/**
 * @param {?} obj
 * @param {?} fn
 * @return {?}
 */function iterateListLike(obj,fn){if(Array.isArray(obj)){for(var/** @type {?} */i=0;i<obj.length;i++){fn(obj[i]);}}else{var/** @type {?} */iterator=obj[getSymbolIterator$1()]();var/** @type {?} */item=void 0;while(!(item=iterator.next()).done){fn(item.value);}}}/**
 * Determine if the argument is shaped like a Promise
 * @param {?} obj
 * @return {?}
 */function isPromise(obj){// allow any Promise/A+ compliant thenable.
// It's up to the caller to ensure that obj.then conforms to the spec
return!!obj&&typeof obj.then==='function';}/**
 * Determine if the argument is an Observable
 * @param {?} obj
 * @return {?}
 */function isObservable(obj){return!!(obj&&obj[$$observable]);}/**
 * A function that will be executed when an application is initialized.
 * @experimental
 */var APP_INITIALIZER=new InjectionToken('Application Initializer');/**
 * A class that reflects the state of running {\@link APP_INITIALIZER}s.
 *
 * \@experimental
 */var ApplicationInitStatus=function(){/**
     * @param {?} appInits
     */function ApplicationInitStatus(appInits){var _this5=this;_classCallCheck$2(this,ApplicationInitStatus);this._done=false;var asyncInitPromises=[];if(appInits){for(var i=0;i<appInits.length;i++){var initResult=appInits[i]();if(isPromise(initResult)){asyncInitPromises.push(initResult);}}}this._donePromise=Promise.all(asyncInitPromises).then(function(){_this5._done=true;});if(asyncInitPromises.length===0){this._done=true;}}/**
     * @return {?}
     */_createClass$2(ApplicationInitStatus,[{key:'done',get:function get(){return this._done;}/**
     * @return {?}
     */},{key:'donePromise',get:function get(){return this._donePromise;}}]);return ApplicationInitStatus;}();ApplicationInitStatus.decorators=[{type:Injectable}];/** @nocollapse */ApplicationInitStatus.ctorParameters=function(){return[{type:Array,decorators:[{type:Inject,args:[APP_INITIALIZER]},{type:Optional}]}];};/**
 * A DI Token representing a unique string id assigned to the application by Angular and used
 * primarily for prefixing application attributes and CSS styles when
 * {@link ViewEncapsulation#Emulated} is being used.
 *
 * If you need to avoid randomly generated value to be used as an application id, you can provide
 * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}
 * using this token.
 * @experimental
 */var APP_ID=new InjectionToken('AppId');/**
 * @return {?}
 */function _appIdRandomProviderFactory(){return''+_randomChar()+_randomChar()+_randomChar();}/**
 * Providers that will generate a random APP_ID_TOKEN.
 * @experimental
 */var APP_ID_RANDOM_PROVIDER={provide:APP_ID,useFactory:_appIdRandomProviderFactory,deps:/** @type {?} */[]};/**
 * @return {?}
 */function _randomChar(){return String.fromCharCode(97+Math.floor(Math.random()*25));}/**
 * A function that will be executed when a platform is initialized.
 * @experimental
 */var PLATFORM_INITIALIZER=new InjectionToken('Platform Initializer');/**
 * A token that indicates an opaque platform id.
 * @experimental
 */var PLATFORM_ID=new InjectionToken('Platform ID');/**
 * All callbacks provided via this token will be called for every component that is bootstrapped.
 * Signature of the callback:
 *
 * `(componentRef: ComponentRef) => void`.
 *
 * @experimental
 */var APP_BOOTSTRAP_LISTENER=new InjectionToken('appBootstrapListener');/**
 * A token which indicates the root directory of the application
 * @experimental
 */var PACKAGE_ROOT_URL=new InjectionToken('Application Packages Root URL');var Console=function(){function Console(){_classCallCheck$2(this,Console);}_createClass$2(Console,[{key:'log',/**
     * @param {?} message
     * @return {?}
     */value:function log(message){print(message);}/**
     * @param {?} message
     * @return {?}
     */},{key:'warn',value:function warn(message){_warn(message);}}]);return Console;}();Console.decorators=[{type:Injectable}];/** @nocollapse */Console.ctorParameters=function(){return[];};/**
 * Combination of NgModuleFactory and ComponentFactorys.
 *
 * \@experimental
 */function _throwError(){throw new Error('Runtime compiler is not loaded');}/**
 * Low-level service for running the angular compiler during runtime
 * to create {\@link ComponentFactory}s, which
 * can later be used to create and render a Component instance.
 *
 * Each `\@NgModule` provides an own `Compiler` to its injector,
 * that will use the directives/pipes of the ng module for compilation
 * of components.
 * \@stable
 */var Compiler=function(){function Compiler(){_classCallCheck$2(this,Compiler);}_createClass$2(Compiler,[{key:'compileModuleSync',/**
     * Compiles the given NgModule and all of its components. All templates of the components listed
     * in `entryComponents` have to be inlined.
     * @param {?} moduleType
     * @return {?}
     */value:function compileModuleSync(moduleType){throw _throwError();}/**
     * Compiles the given NgModule and all of its components
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAsync',value:function compileModuleAsync(moduleType){throw _throwError();}/**
     * Same as {\@link compileModuleSync} but also creates ComponentFactories for all components.
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsSync',value:function compileModuleAndAllComponentsSync(moduleType){throw _throwError();}/**
     * Same as {\@link compileModuleAsync} but also creates ComponentFactories for all components.
     * @param {?} moduleType
     * @return {?}
     */},{key:'compileModuleAndAllComponentsAsync',value:function compileModuleAndAllComponentsAsync(moduleType){throw _throwError();}/**
     * Exposes the CSS-style selectors that have been used in `ngContent` directives within
     * the template of the given component.
     * This is used by the `upgrade` library to compile the appropriate transclude content
     * in the AngularJS wrapper component.
     * @param {?} component
     * @return {?}
     */},{key:'getNgContentSelectors',value:function getNgContentSelectors(component){throw _throwError();}/**
     * Clears all caches.
     * @return {?}
     */},{key:'clearCache',value:function clearCache(){}/**
     * Clears the cache for the given component/ngModule.
     * @param {?} type
     * @return {?}
     */},{key:'clearCacheFor',value:function clearCacheFor(type){}}]);return Compiler;}();Compiler.decorators=[{type:Injectable}];/** @nocollapse */Compiler.ctorParameters=function(){return[];};/**
 * Token to provide CompilerOptions in the platform injector.
 *
 * @experimental
 */var COMPILER_OPTIONS=new InjectionToken('compilerOptions');/**
 * A factory for creating a Compiler
 *
 * \@experimental
 * @abstract
 */var CompilerFactory=function(){function CompilerFactory(){_classCallCheck$2(this,CompilerFactory);}_createClass$2(CompilerFactory,[{key:'createCompiler',/**
     * @abstract
     * @param {?=} options
     * @return {?}
     */value:function createCompiler(options){}}]);return CompilerFactory;}();var ElementRef=/**
     * @param {?} nativeElement
     */function ElementRef(nativeElement){_classCallCheck$2(this,ElementRef);this.nativeElement=nativeElement;};/**
 * Use by directives and components to emit custom Events.
 *
 * ### Examples
 *
 * In the following example, `Zippy` alternatively emits `open` and `close` events when its
 * title gets clicked:
 *
 * ```
 * \@Component({
 *   selector: 'zippy',
 *   template: `
 *   <div class="zippy">
 *     <div (click)="toggle()">Toggle</div>
 *     <div [hidden]="!visible">
 *       <ng-content></ng-content>
 *     </div>
 *  </div>`})
 * export class Zippy {
 *   visible: boolean = true;
 *   \@Output() open: EventEmitter<any> = new EventEmitter();
 *   \@Output() close: EventEmitter<any> = new EventEmitter();
 *
 *   toggle() {
 *     this.visible = !this.visible;
 *     if (this.visible) {
 *       this.open.emit(null);
 *     } else {
 *       this.close.emit(null);
 *     }
 *   }
 * }
 * ```
 *
 * The events payload can be accessed by the parameter `$event` on the components output event
 * handler:
 *
 * ```
 * <zippy (open)="onOpen($event)" (close)="onClose($event)"></zippy>
 * ```
 *
 * Uses Rx.Observable but provides an adapter to make it work as specified here:
 * https://github.com/jhusain/observable-spec
 *
 * Once a reference implementation of the spec is available, switch to it.
 * \@stable
 */var EventEmitter$1=function(_Subject){_inherits$2(EventEmitter,_Subject);/**
     * Creates an instance of [EventEmitter], which depending on [isAsync],
     * delivers events synchronously or asynchronously.
     * @param {?=} isAsync
     */function EventEmitter(){var isAsync=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;_classCallCheck$2(this,EventEmitter);var _this6=_possibleConstructorReturn$2(this,(EventEmitter.__proto__||Object.getPrototypeOf(EventEmitter)).call(this));_this6.__isAsync=isAsync;return _this6;}/**
     * @param {?=} value
     * @return {?}
     */_createClass$2(EventEmitter,[{key:'emit',value:function emit(value){_get$1(EventEmitter.prototype.__proto__||Object.getPrototypeOf(EventEmitter.prototype),'next',this).call(this,value);}/**
     * @param {?=} generatorOrNext
     * @param {?=} error
     * @param {?=} complete
     * @return {?}
     */},{key:'subscribe',value:function subscribe(generatorOrNext,error,complete){var/** @type {?} */schedulerFn=void 0;var/** @type {?} */errorFn=function errorFn(err){return null;};var/** @type {?} */completeFn=function completeFn(){return null;};if(generatorOrNext&&(typeof generatorOrNext==='undefined'?'undefined':_typeof$1(generatorOrNext))==='object'){schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext.next(value);});}:function(value){generatorOrNext.next(value);};if(generatorOrNext.error){errorFn=this.__isAsync?function(err){setTimeout(function(){return generatorOrNext.error(err);});}:function(err){generatorOrNext.error(err);};}if(generatorOrNext.complete){completeFn=this.__isAsync?function(){setTimeout(function(){return generatorOrNext.complete();});}:function(){generatorOrNext.complete();};}}else{schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext(value);});}:function(value){generatorOrNext(value);};if(error){errorFn=this.__isAsync?function(err){setTimeout(function(){return error(err);});}:function(err){error(err);};}if(complete){completeFn=this.__isAsync?function(){setTimeout(function(){return complete();});}:function(){complete();};}}return _get$1(EventEmitter.prototype.__proto__||Object.getPrototypeOf(EventEmitter.prototype),'subscribe',this).call(this,schedulerFn,errorFn,completeFn);}}]);return EventEmitter;}(Subject$$1);/**
 * An injectable service for executing work inside or outside of the Angular zone.
 *
 * The most common use of this service is to optimize performance when starting a work consisting of
 * one or more asynchronous tasks that don't require UI updates or error handling to be handled by
 * Angular. Such tasks can be kicked off via {\@link runOutsideAngular} and if needed, these tasks
 * can reenter the Angular zone via {\@link run}.
 *
 * <!-- TODO: add/fix links to:
 *   - docs explaining zones and the use of zones in Angular and change-detection
 *   - link to runOutsideAngular/run (throughout this file!)
 *   -->
 *
 * ### Example
 *
 * ```
 * import {Component, NgZone} from '\@angular/core';
 * import {NgIf} from '\@angular/common';
 *
 * \@Component({
 *   selector: 'ng-zone-demo'.
 *   template: `
 *     <h2>Demo: NgZone</h2>
 *
 *     <p>Progress: {{progress}}%</p>
 *     <p *ngIf="progress >= 100">Done processing {{label}} of Angular zone!</p>
 *
 *     <button (click)="processWithinAngularZone()">Process within Angular zone</button>
 *     <button (click)="processOutsideOfAngularZone()">Process outside of Angular zone</button>
 *   `,
 * })
 * export class NgZoneDemo {
 *   progress: number = 0;
 *   label: string;
 *
 *   constructor(private _ngZone: NgZone) {}
 *
 *   // Loop inside the Angular zone
 *   // so the UI DOES refresh after each setTimeout cycle
 *   processWithinAngularZone() {
 *     this.label = 'inside';
 *     this.progress = 0;
 *     this._increaseProgress(() => console.log('Inside Done!'));
 *   }
 *
 *   // Loop outside of the Angular zone
 *   // so the UI DOES NOT refresh after each setTimeout cycle
 *   processOutsideOfAngularZone() {
 *     this.label = 'outside';
 *     this.progress = 0;
 *     this._ngZone.runOutsideAngular(() => {
 *       this._increaseProgress(() => {
 *       // reenter the Angular zone and display done
 *       this._ngZone.run(() => {console.log('Outside Done!') });
 *     }}));
 *   }
 *
 *   _increaseProgress(doneCallback: () => void) {
 *     this.progress += 1;
 *     console.log(`Current progress: ${this.progress}%`);
 *
 *     if (this.progress < 100) {
 *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)
 *     } else {
 *       doneCallback();
 *     }
 *   }
 * }
 * ```
 *
 * \@experimental
 */var NgZone=function(){/**
     * @param {?} __0
     */function NgZone(_ref2){var _ref2$enableLongStack=_ref2.enableLongStackTrace,enableLongStackTrace=_ref2$enableLongStack===undefined?false:_ref2$enableLongStack;_classCallCheck$2(this,NgZone);this._hasPendingMicrotasks=false;this._hasPendingMacrotasks=false;this._isStable=true;this._nesting=0;this._onUnstable=new EventEmitter$1(false);this._onMicrotaskEmpty=new EventEmitter$1(false);this._onStable=new EventEmitter$1(false);this._onErrorEvents=new EventEmitter$1(false);if(typeof Zone=='undefined'){throw new Error('Angular requires Zone.js prolyfill.');}Zone.assertZonePatched();this.outer=this.inner=Zone.current;if(Zone['wtfZoneSpec']){this.inner=this.inner.fork(Zone['wtfZoneSpec']);}if(enableLongStackTrace&&Zone['longStackTraceZoneSpec']){this.inner=this.inner.fork(Zone['longStackTraceZoneSpec']);}this.forkInnerZoneWithAngularBehavior();}/**
     * @return {?}
     */_createClass$2(NgZone,[{key:'run',/**
     * Executes the `fn` function synchronously within the Angular zone and returns value returned by
     * the function.
     *
     * Running functions via `run` allows you to reenter Angular zone from a task that was executed
     * outside of the Angular zone (typically started via {\@link runOutsideAngular}).
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * within the Angular zone.
     *
     * If a synchronous error happens it will be rethrown and not reported via `onError`.
     * @param {?} fn
     * @return {?}
     */value:function run(fn){return this.inner.run(fn);}/**
     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not
     * rethrown.
     * @param {?} fn
     * @return {?}
     */},{key:'runGuarded',value:function runGuarded(fn){return this.inner.runGuarded(fn);}/**
     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by
     * the function.
     *
     * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that
     * doesn't trigger Angular change-detection or is subject to Angular's error handling.
     *
     * Any future tasks or microtasks scheduled from within this function will continue executing from
     * outside of the Angular zone.
     *
     * Use {\@link run} to reenter the Angular zone and do work that updates the application model.
     * @param {?} fn
     * @return {?}
     */},{key:'runOutsideAngular',value:function runOutsideAngular(fn){return this.outer.run(fn);}/**
     * Notifies when code enters Angular Zone. This gets fired first on VM Turn.
     * @return {?}
     */},{key:'checkStable',/**
     * @return {?}
     */value:function checkStable(){var _this7=this;if(this._nesting==0&&!this._hasPendingMicrotasks&&!this._isStable){try{this._nesting++;this._onMicrotaskEmpty.emit(null);}finally{this._nesting--;if(!this._hasPendingMicrotasks){try{this.runOutsideAngular(function(){return _this7._onStable.emit(null);});}finally{this._isStable=true;}}}}}/**
     * @return {?}
     */},{key:'forkInnerZoneWithAngularBehavior',value:function forkInnerZoneWithAngularBehavior(){var _this8=this;this.inner=this.inner.fork({name:'angular',properties:/** @type {?} */{'isAngularZone':true},onInvokeTask:function onInvokeTask(delegate,current,target,task,applyThis,applyArgs){try{_this8.onEnter();return delegate.invokeTask(target,task,applyThis,applyArgs);}finally{_this8.onLeave();}},onInvoke:function onInvoke(delegate,current,target,callback,applyThis,applyArgs,source){try{_this8.onEnter();return delegate.invoke(target,callback,applyThis,applyArgs,source);}finally{_this8.onLeave();}},onHasTask:function onHasTask(delegate,current,target,hasTaskState){delegate.hasTask(target,hasTaskState);if(current===target){// We are only interested in hasTask events which originate from our zone
// (A child hasTask event is not interesting to us)
if(hasTaskState.change=='microTask'){_this8.setHasMicrotask(hasTaskState.microTask);}else if(hasTaskState.change=='macroTask'){_this8.setHasMacrotask(hasTaskState.macroTask);}}},onHandleError:function onHandleError(delegate,current,target,error){delegate.handleError(target,error);_this8.triggerError(error);return false;}});}/**
     * @return {?}
     */},{key:'onEnter',value:function onEnter(){this._nesting++;if(this._isStable){this._isStable=false;this._onUnstable.emit(null);}}/**
     * @return {?}
     */},{key:'onLeave',value:function onLeave(){this._nesting--;this.checkStable();}/**
     * @param {?} hasMicrotasks
     * @return {?}
     */},{key:'setHasMicrotask',value:function setHasMicrotask(hasMicrotasks){this._hasPendingMicrotasks=hasMicrotasks;this.checkStable();}/**
     * @param {?} hasMacrotasks
     * @return {?}
     */},{key:'setHasMacrotask',value:function setHasMacrotask(hasMacrotasks){this._hasPendingMacrotasks=hasMacrotasks;}/**
     * @param {?} error
     * @return {?}
     */},{key:'triggerError',value:function triggerError(error){this._onErrorEvents.emit(error);}},{key:'onUnstable',get:function get(){return this._onUnstable;}/**
     * Notifies when there is no more microtasks enqueue in the current VM Turn.
     * This is a hint for Angular to do change detection, which may enqueue more microtasks.
     * For this reason this event can fire multiple times per VM Turn.
     * @return {?}
     */},{key:'onMicrotaskEmpty',get:function get(){return this._onMicrotaskEmpty;}/**
     * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which
     * implies we are about to relinquish VM turn.
     * This event gets called just once.
     * @return {?}
     */},{key:'onStable',get:function get(){return this._onStable;}/**
     * Notify that an error has been delivered.
     * @return {?}
     */},{key:'onError',get:function get(){return this._onErrorEvents;}/**
     * Whether there are no outstanding microtasks or macrotasks.
     * @return {?}
     */},{key:'isStable',get:function get(){return this._isStable;}/**
     * @return {?}
     */},{key:'hasPendingMicrotasks',get:function get(){return this._hasPendingMicrotasks;}/**
     * @return {?}
     */},{key:'hasPendingMacrotasks',get:function get(){return this._hasPendingMacrotasks;}}],[{key:'isInAngularZone',value:function isInAngularZone(){return Zone.current.get('isAngularZone')===true;}/**
     * @return {?}
     */},{key:'assertInAngularZone',value:function assertInAngularZone(){if(!NgZone.isInAngularZone()){throw new Error('Expected to be in Angular Zone, but it is not!');}}/**
     * @return {?}
     */},{key:'assertNotInAngularZone',value:function assertNotInAngularZone(){if(NgZone.isInAngularZone()){throw new Error('Expected to not be in Angular Zone, but it is!');}}}]);return NgZone;}();var AnimationQueue=function(){/**
     * @param {?} _zone
     */function AnimationQueue(_zone){_classCallCheck$2(this,AnimationQueue);this._zone=_zone;this.entries=[];}/**
     * @param {?} player
     * @return {?}
     */_createClass$2(AnimationQueue,[{key:'enqueue',value:function enqueue(player){this.entries.push(player);}/**
     * @return {?}
     */},{key:'flush',value:function flush(){var _this9=this;// given that each animation player may set aside
// microtasks and rely on DOM-based events, this
// will cause Angular to run change detection after
// each request. This sidesteps the issue. If a user
// hooks into an animation via (@anim.start) or (@anim.done)
// then those methods will automatically trigger change
// detection by wrapping themselves inside of a zone
if(this.entries.length){this._zone.runOutsideAngular(function(){// this code is wrapped into a single promise such that the
// onStart and onDone player callbacks are triggered outside
// of the digest cycle of animations
Promise.resolve(null).then(function(){return _this9._triggerAnimations();});});}}/**
     * @return {?}
     */},{key:'_triggerAnimations',value:function _triggerAnimations(){NgZone.assertNotInAngularZone();while(this.entries.length){var/** @type {?} */player=this.entries.shift();// in the event that an animation throws an error then we do
// not want to re-run animations on any previous animations
// if they have already been kicked off beforehand
if(!player.hasStarted()){player.play();}}}}]);return AnimationQueue;}();AnimationQueue.decorators=[{type:Injectable}];/** @nocollapse */AnimationQueue.ctorParameters=function(){return[{type:NgZone}];};var DefaultIterableDifferFactory=function(){function DefaultIterableDifferFactory(){_classCallCheck$2(this,DefaultIterableDifferFactory);}/**
     * @param {?} obj
     * @return {?}
     */_createClass$2(DefaultIterableDifferFactory,[{key:'supports',value:function supports(obj){return isListLikeIterable$1(obj);}/**
     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter
     * @param {?=} cdRefOrTrackBy
     * @param {?=} trackByFn
     * @return {?}
     */},{key:'create',value:function create(cdRefOrTrackBy,trackByFn){return new DefaultIterableDiffer(trackByFn||cdRefOrTrackBy);}}]);return DefaultIterableDifferFactory;}();var trackByIdentity=function trackByIdentity(index,item){return item;};/**
 * @deprecated v4.0.0 - Should not be part of public API.
 */var DefaultIterableDiffer=function(){/**
     * @param {?=} _trackByFn
     */function DefaultIterableDiffer(_trackByFn){_classCallCheck$2(this,DefaultIterableDiffer);this._trackByFn=_trackByFn;this._length=null;this._collection=null;this._linkedRecords=null;this._unlinkedRecords=null;this._previousItHead=null;this._itHead=null;this._itTail=null;this._additionsHead=null;this._additionsTail=null;this._movesHead=null;this._movesTail=null;this._removalsHead=null;this._removalsTail=null;this._identityChangesHead=null;this._identityChangesTail=null;this._trackByFn=this._trackByFn||trackByIdentity;}/**
     * @return {?}
     */_createClass$2(DefaultIterableDiffer,[{key:'forEachItem',/**
     * @param {?} fn
     * @return {?}
     */value:function forEachItem(fn){var/** @type {?} */record=void 0;for(record=this._itHead;record!==null;record=record._next){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachOperation',value:function forEachOperation(fn){var/** @type {?} */nextIt=this._itHead;var/** @type {?} */nextRemove=this._removalsHead;var/** @type {?} */addRemoveOffset=0;var/** @type {?} */moveOffsets=null;while(nextIt||nextRemove){// Figure out which is the next record to process
// Order: remove, add, move
var/** @type {?} */record=!nextRemove||nextIt&&nextIt.currentIndex<getPreviousIndex(nextRemove,addRemoveOffset,moveOffsets)?nextIt:nextRemove;var/** @type {?} */adjPreviousIndex=getPreviousIndex(record,addRemoveOffset,moveOffsets);var/** @type {?} */currentIndex=record.currentIndex;// consume the item, and adjust the addRemoveOffset and update moveDistance if necessary
if(record===nextRemove){addRemoveOffset--;nextRemove=nextRemove._nextRemoved;}else{nextIt=nextIt._next;if(record.previousIndex==null){addRemoveOffset++;}else{// INVARIANT:  currentIndex < previousIndex
if(!moveOffsets)moveOffsets=[];var/** @type {?} */localMovePreviousIndex=adjPreviousIndex-addRemoveOffset;var/** @type {?} */localCurrentIndex=currentIndex-addRemoveOffset;if(localMovePreviousIndex!=localCurrentIndex){for(var/** @type {?} */i=0;i<localMovePreviousIndex;i++){var/** @type {?} */offset=i<moveOffsets.length?moveOffsets[i]:moveOffsets[i]=0;var/** @type {?} */index=offset+i;if(localCurrentIndex<=index&&index<localMovePreviousIndex){moveOffsets[i]=offset+1;}}var/** @type {?} */previousIndex=record.previousIndex;moveOffsets[previousIndex]=localCurrentIndex-localMovePreviousIndex;}}}if(adjPreviousIndex!==currentIndex){fn(record,adjPreviousIndex,currentIndex);}}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachPreviousItem',value:function forEachPreviousItem(fn){var/** @type {?} */record=void 0;for(record=this._previousItHead;record!==null;record=record._nextPrevious){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachAddedItem',value:function forEachAddedItem(fn){var/** @type {?} */record=void 0;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachMovedItem',value:function forEachMovedItem(fn){var/** @type {?} */record=void 0;for(record=this._movesHead;record!==null;record=record._nextMoved){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachRemovedItem',value:function forEachRemovedItem(fn){var/** @type {?} */record=void 0;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachIdentityChange',value:function forEachIdentityChange(fn){var/** @type {?} */record=void 0;for(record=this._identityChangesHead;record!==null;record=record._nextIdentityChange){fn(record);}}/**
     * @param {?} collection
     * @return {?}
     */},{key:'diff',value:function diff(collection){if(isBlank$2(collection))collection=[];if(!isListLikeIterable$1(collection)){throw new Error('Error trying to diff \''+collection+'\'');}if(this.check(collection)){return this;}else{return null;}}/**
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(){}/**
     * @param {?} collection
     * @return {?}
     */},{key:'check',value:function check(collection){var _this10=this;this._reset();var/** @type {?} */record=this._itHead;var/** @type {?} */mayBeDirty=false;var/** @type {?} */index=void 0;var/** @type {?} */item=void 0;var/** @type {?} */itemTrackBy=void 0;if(Array.isArray(collection)){this._length=collection.length;for(var/** @type {?} */_index2=0;_index2<this._length;_index2++){item=collection[_index2];itemTrackBy=this._trackByFn(_index2,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=this._mismatch(record,item,itemTrackBy,_index2);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=this._verifyReinsertion(record,item,itemTrackBy,_index2);}if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);}record=record._next;}}else{index=0;iterateListLike(collection,function(item){itemTrackBy=_this10._trackByFn(index,item);if(record===null||!looseIdentical(record.trackById,itemTrackBy)){record=_this10._mismatch(record,item,itemTrackBy,index);mayBeDirty=true;}else{if(mayBeDirty){// TODO(misko): can we limit this to duplicates only?
record=_this10._verifyReinsertion(record,item,itemTrackBy,index);}if(!looseIdentical(record.item,item))_this10._addIdentityChange(record,item);}record=record._next;index++;});this._length=index;}this._truncate(record);this._collection=collection;return this.isDirty;}/**
     * @return {?}
     */},{key:'_reset',/**
     * Reset the state of the change objects to show no changes. This means set previousKey to
     * currentKey, and clear all of the queues (additions, moves, removals).
     * Set the previousIndexes of moved and added items to their currentIndexes
     * Reset the list of additions, moves and removals
     *
     * \@internal
     * @return {?}
     */value:function _reset(){if(this.isDirty){var/** @type {?} */record=void 0;var/** @type {?} */nextRecord=void 0;for(record=this._previousItHead=this._itHead;record!==null;record=record._next){record._nextPrevious=record._next;}for(record=this._additionsHead;record!==null;record=record._nextAdded){record.previousIndex=record.currentIndex;}this._additionsHead=this._additionsTail=null;for(record=this._movesHead;record!==null;record=nextRecord){record.previousIndex=record.currentIndex;nextRecord=record._nextMoved;}this._movesHead=this._movesTail=null;this._removalsHead=this._removalsTail=null;this._identityChangesHead=this._identityChangesTail=null;}}/**
     * This is the core function which handles differences between collections.
     *
     * - `record` is the record which we saw at this position last time. If null then it is a new
     *   item.
     * - `item` is the current item in the collection
     * - `index` is the position of the item in the collection
     *
     * \@internal
     * @param {?} record
     * @param {?} item
     * @param {?} itemTrackBy
     * @param {?} index
     * @return {?}
     */},{key:'_mismatch',value:function _mismatch(record,item,itemTrackBy,index){// The previous record after which we will append the current one.
var/** @type {?} */previousRecord=void 0;if(record===null){previousRecord=this._itTail;}else{previousRecord=record._prev;// Remove the record from the collection since we know it does not match the item.
this._remove(record);}// Attempt to see if we have seen the item before.
record=this._linkedRecords===null?null:this._linkedRecords.get(itemTrackBy,index);if(record!==null){// We have seen this before, we need to move it forward in the collection.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._moveAfter(record,previousRecord,index);}else{// Never seen it, check evicted list.
record=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy);if(record!==null){// It is an item which we have evicted earlier: reinsert it back into the list.
// But first we need to check if identity changed, so we can update in view if necessary
if(!looseIdentical(record.item,item))this._addIdentityChange(record,item);this._reinsertAfter(record,previousRecord,index);}else{// It is a new item: add it.
record=this._addAfter(new IterableChangeRecord_(item,itemTrackBy),previousRecord,index);}}return record;}/**
     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)
     *
     * Use case: `[a, a]` => `[b, a, a]`
     *
     * If we did not have this check then the insertion of `b` would:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) leave `a` at index `1` as is. <-- this is wrong!
     *   3) reinsert `a` at index 2. <-- this is wrong!
     *
     * The correct behavior is:
     *   1) evict first `a`
     *   2) insert `b` at `0` index.
     *   3) reinsert `a` at index 1.
     *   3) move `a` at from `1` to `2`.
     *
     *
     * Double check that we have not evicted a duplicate item. We need to check if the item type may
     * have already been removed:
     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted
     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a
     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'
     * at the end.
     *
     * \@internal
     * @param {?} record
     * @param {?} item
     * @param {?} itemTrackBy
     * @param {?} index
     * @return {?}
     */},{key:'_verifyReinsertion',value:function _verifyReinsertion(record,item,itemTrackBy,index){var/** @type {?} */reinsertRecord=this._unlinkedRecords===null?null:this._unlinkedRecords.get(itemTrackBy);if(reinsertRecord!==null){record=this._reinsertAfter(reinsertRecord,record._prev,index);}else if(record.currentIndex!=index){record.currentIndex=index;this._addToMoves(record,index);}return record;}/**
     * Get rid of any excess {\@link IterableChangeRecord_}s from the previous collection
     *
     * - `record` The first excess {\@link IterableChangeRecord_}.
     *
     * \@internal
     * @param {?} record
     * @return {?}
     */},{key:'_truncate',value:function _truncate(record){// Anything after that needs to be removed;
while(record!==null){var/** @type {?} */nextRecord=record._next;this._addToRemovals(this._unlink(record));record=nextRecord;}if(this._unlinkedRecords!==null){this._unlinkedRecords.clear();}if(this._additionsTail!==null){this._additionsTail._nextAdded=null;}if(this._movesTail!==null){this._movesTail._nextMoved=null;}if(this._itTail!==null){this._itTail._next=null;}if(this._removalsTail!==null){this._removalsTail._nextRemoved=null;}if(this._identityChangesTail!==null){this._identityChangesTail._nextIdentityChange=null;}}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_reinsertAfter',value:function _reinsertAfter(record,prevRecord,index){if(this._unlinkedRecords!==null){this._unlinkedRecords.remove(record);}var/** @type {?} */prev=record._prevRemoved;var/** @type {?} */next=record._nextRemoved;if(prev===null){this._removalsHead=next;}else{prev._nextRemoved=next;}if(next===null){this._removalsTail=prev;}else{next._prevRemoved=prev;}this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_moveAfter',value:function _moveAfter(record,prevRecord,index){this._unlink(record);this._insertAfter(record,prevRecord,index);this._addToMoves(record,index);return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_addAfter',value:function _addAfter(record,prevRecord,index){this._insertAfter(record,prevRecord,index);if(this._additionsTail===null){// todo(vicb)
// assert(this._additionsHead === null);
this._additionsTail=this._additionsHead=record;}else{// todo(vicb)
// assert(_additionsTail._nextAdded === null);
// assert(record._nextAdded === null);
this._additionsTail=this._additionsTail._nextAdded=record;}return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} prevRecord
     * @param {?} index
     * @return {?}
     */},{key:'_insertAfter',value:function _insertAfter(record,prevRecord,index){// todo(vicb)
// assert(record != prevRecord);
// assert(record._next === null);
// assert(record._prev === null);
var/** @type {?} */next=prevRecord===null?this._itHead:prevRecord._next;// todo(vicb)
// assert(next != record);
// assert(prevRecord != record);
record._next=next;record._prev=prevRecord;if(next===null){this._itTail=record;}else{next._prev=record;}if(prevRecord===null){this._itHead=record;}else{prevRecord._next=record;}if(this._linkedRecords===null){this._linkedRecords=new _DuplicateMap();}this._linkedRecords.put(record);record.currentIndex=index;return record;}/**
     * \@internal
     * @param {?} record
     * @return {?}
     */},{key:'_remove',value:function _remove(record){return this._addToRemovals(this._unlink(record));}/**
     * \@internal
     * @param {?} record
     * @return {?}
     */},{key:'_unlink',value:function _unlink(record){if(this._linkedRecords!==null){this._linkedRecords.remove(record);}var/** @type {?} */prev=record._prev;var/** @type {?} */next=record._next;// todo(vicb)
// assert((record._prev = null) === null);
// assert((record._next = null) === null);
if(prev===null){this._itHead=next;}else{prev._next=next;}if(next===null){this._itTail=prev;}else{next._prev=prev;}return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} toIndex
     * @return {?}
     */},{key:'_addToMoves',value:function _addToMoves(record,toIndex){// todo(vicb)
// assert(record._nextMoved === null);
if(record.previousIndex===toIndex){return record;}if(this._movesTail===null){// todo(vicb)
// assert(_movesHead === null);
this._movesTail=this._movesHead=record;}else{// todo(vicb)
// assert(_movesTail._nextMoved === null);
this._movesTail=this._movesTail._nextMoved=record;}return record;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToRemovals',value:function _addToRemovals(record){if(this._unlinkedRecords===null){this._unlinkedRecords=new _DuplicateMap();}this._unlinkedRecords.put(record);record.currentIndex=null;record._nextRemoved=null;if(this._removalsTail===null){// todo(vicb)
// assert(_removalsHead === null);
this._removalsTail=this._removalsHead=record;record._prevRemoved=null;}else{// todo(vicb)
// assert(_removalsTail._nextRemoved === null);
// assert(record._nextRemoved === null);
record._prevRemoved=this._removalsTail;this._removalsTail=this._removalsTail._nextRemoved=record;}return record;}/**
     * \@internal
     * @param {?} record
     * @param {?} item
     * @return {?}
     */},{key:'_addIdentityChange',value:function _addIdentityChange(record,item){record.item=item;if(this._identityChangesTail===null){this._identityChangesTail=this._identityChangesHead=record;}else{this._identityChangesTail=this._identityChangesTail._nextIdentityChange=record;}return record;}/**
     * @return {?}
     */},{key:'toString',value:function toString(){var/** @type {?} */list=[];this.forEachItem(function(record){return list.push(record);});var/** @type {?} */previous=[];this.forEachPreviousItem(function(record){return previous.push(record);});var/** @type {?} */additions=[];this.forEachAddedItem(function(record){return additions.push(record);});var/** @type {?} */moves=[];this.forEachMovedItem(function(record){return moves.push(record);});var/** @type {?} */removals=[];this.forEachRemovedItem(function(record){return removals.push(record);});var/** @type {?} */identityChanges=[];this.forEachIdentityChange(function(record){return identityChanges.push(record);});return'collection: '+list.join(', ')+'\n'+'previous: '+previous.join(', ')+'\n'+'additions: '+additions.join(', ')+'\n'+'moves: '+moves.join(', ')+'\n'+'removals: '+removals.join(', ')+'\n'+'identityChanges: '+identityChanges.join(', ')+'\n';}},{key:'collection',get:function get(){return this._collection;}/**
     * @return {?}
     */},{key:'length',get:function get(){return this._length;}},{key:'isDirty',get:function get(){return this._additionsHead!==null||this._movesHead!==null||this._removalsHead!==null||this._identityChangesHead!==null;}}]);return DefaultIterableDiffer;}();/**
 * \@stable
 */var IterableChangeRecord_=function(){/**
     * @param {?} item
     * @param {?} trackById
     */function IterableChangeRecord_(item,trackById){_classCallCheck$2(this,IterableChangeRecord_);this.item=item;this.trackById=trackById;this.currentIndex=null;this.previousIndex=null;/** @internal */this._nextPrevious=null;/** @internal */this._prev=null;/** @internal */this._next=null;/** @internal */this._prevDup=null;/** @internal */this._nextDup=null;/** @internal */this._prevRemoved=null;/** @internal */this._nextRemoved=null;/** @internal */this._nextAdded=null;/** @internal */this._nextMoved=null;/** @internal */this._nextIdentityChange=null;}/**
     * @return {?}
     */_createClass$2(IterableChangeRecord_,[{key:'toString',value:function toString(){return this.previousIndex===this.currentIndex?stringify$2(this.item):stringify$2(this.item)+'['+stringify$2(this.previousIndex)+'->'+stringify$2(this.currentIndex)+']';}}]);return IterableChangeRecord_;}();var _DuplicateItemRecordList=function(){function _DuplicateItemRecordList(){_classCallCheck$2(this,_DuplicateItemRecordList);/** @internal */this._head=null;/** @internal */this._tail=null;}/**
     * Append the record to the list of duplicates.
     *
     * Note: by design all records in the list of duplicates hold the same value in record.item.
     * @param {?} record
     * @return {?}
     */_createClass$2(_DuplicateItemRecordList,[{key:'add',value:function add(record){if(this._head===null){this._head=this._tail=record;record._nextDup=null;record._prevDup=null;}else{// todo(vicb)
// assert(record.item ==  _head.item ||
//       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);
this._tail._nextDup=record;record._prevDup=this._tail;record._nextDup=null;this._tail=record;}}/**
     * @param {?} trackById
     * @param {?} afterIndex
     * @return {?}
     */},{key:'get',value:function get(trackById,afterIndex){var/** @type {?} */record=void 0;for(record=this._head;record!==null;record=record._nextDup){if((afterIndex===null||afterIndex<record.currentIndex)&&looseIdentical(record.trackById,trackById)){return record;}}return null;}/**
     * Remove one {\@link IterableChangeRecord_} from the list of duplicates.
     *
     * Returns whether the list of duplicates is empty.
     * @param {?} record
     * @return {?}
     */},{key:'remove',value:function remove(record){// todo(vicb)
// assert(() {
//  // verify that the record being removed is in the list.
//  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {
//    if (identical(cursor, record)) return true;
//  }
//  return false;
//});
var/** @type {?} */prev=record._prevDup;var/** @type {?} */next=record._nextDup;if(prev===null){this._head=next;}else{prev._nextDup=next;}if(next===null){this._tail=prev;}else{next._prevDup=prev;}return this._head===null;}}]);return _DuplicateItemRecordList;}();var _DuplicateMap=function(){function _DuplicateMap(){_classCallCheck$2(this,_DuplicateMap);this.map=new Map();}/**
     * @param {?} record
     * @return {?}
     */_createClass$2(_DuplicateMap,[{key:'put',value:function put(record){var/** @type {?} */key=record.trackById;var/** @type {?} */duplicates=this.map.get(key);if(!duplicates){duplicates=new _DuplicateItemRecordList();this.map.set(key,duplicates);}duplicates.add(record);}/**
     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we
     * have already iterated over, we use the afterIndex to pretend it is not there.
     *
     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we
     * have any more `a`s needs to return the last `a` not the first or second.
     * @param {?} trackById
     * @param {?=} afterIndex
     * @return {?}
     */},{key:'get',value:function get(trackById){var afterIndex=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */key=trackById;var/** @type {?} */recordList=this.map.get(key);return recordList?recordList.get(trackById,afterIndex):null;}/**
     * Removes a {\@link IterableChangeRecord_} from the list of duplicates.
     *
     * The list of duplicates also is removed from the map if it gets empty.
     * @param {?} record
     * @return {?}
     */},{key:'remove',value:function remove(record){var/** @type {?} */key=record.trackById;var/** @type {?} */recordList=this.map.get(key);// Remove the list of duplicates when it gets empty
if(recordList.remove(record)){this.map.delete(key);}return record;}/**
     * @return {?}
     */},{key:'clear',/**
     * @return {?}
     */value:function clear(){this.map.clear();}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return'_DuplicateMap('+stringify$2(this.map)+')';}},{key:'isEmpty',get:function get(){return this.map.size===0;}}]);return _DuplicateMap;}();/**
 * @param {?} item
 * @param {?} addRemoveOffset
 * @param {?} moveOffsets
 * @return {?}
 */function getPreviousIndex(item,addRemoveOffset,moveOffsets){var/** @type {?} */previousIndex=item.previousIndex;if(previousIndex===null)return previousIndex;var/** @type {?} */moveOffset=0;if(moveOffsets&&previousIndex<moveOffsets.length){moveOffset=moveOffsets[previousIndex];}return previousIndex+addRemoveOffset+moveOffset;}var DefaultKeyValueDifferFactory=function(){function DefaultKeyValueDifferFactory(){_classCallCheck$2(this,DefaultKeyValueDifferFactory);}/**
     * @param {?} obj
     * @return {?}
     */_createClass$2(DefaultKeyValueDifferFactory,[{key:'supports',value:function supports(obj){return obj instanceof Map||isJsObject$1(obj);}/**
     * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter
     * @param {?=} cd
     * @return {?}
     */},{key:'create',value:function create(cd){return new DefaultKeyValueDiffer();}}]);return DefaultKeyValueDifferFactory;}();var DefaultKeyValueDiffer=function(){function DefaultKeyValueDiffer(){_classCallCheck$2(this,DefaultKeyValueDiffer);this._records=new Map();this._mapHead=null;this._previousMapHead=null;this._changesHead=null;this._changesTail=null;this._additionsHead=null;this._additionsTail=null;this._removalsHead=null;this._removalsTail=null;}/**
     * @return {?}
     */_createClass$2(DefaultKeyValueDiffer,[{key:'forEachItem',/**
     * @param {?} fn
     * @return {?}
     */value:function forEachItem(fn){var/** @type {?} */record=void 0;for(record=this._mapHead;record!==null;record=record._next){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachPreviousItem',value:function forEachPreviousItem(fn){var/** @type {?} */record=void 0;for(record=this._previousMapHead;record!==null;record=record._nextPrevious){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachChangedItem',value:function forEachChangedItem(fn){var/** @type {?} */record=void 0;for(record=this._changesHead;record!==null;record=record._nextChanged){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachAddedItem',value:function forEachAddedItem(fn){var/** @type {?} */record=void 0;for(record=this._additionsHead;record!==null;record=record._nextAdded){fn(record);}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEachRemovedItem',value:function forEachRemovedItem(fn){var/** @type {?} */record=void 0;for(record=this._removalsHead;record!==null;record=record._nextRemoved){fn(record);}}/**
     * @param {?} map
     * @return {?}
     */},{key:'diff',value:function diff(map){if(!map){map=new Map();}else if(!(map instanceof Map||isJsObject$1(map))){throw new Error('Error trying to diff \''+map+'\'');}return this.check(map)?this:null;}/**
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(){}/**
     * @param {?} map
     * @return {?}
     */},{key:'check',value:function check(map){var _this11=this;this._reset();var/** @type {?} */records=this._records;var/** @type {?} */oldSeqRecord=this._mapHead;var/** @type {?} */lastOldSeqRecord=null;var/** @type {?} */lastNewSeqRecord=null;var/** @type {?} */seqChanged=false;this._forEach(map,function(value,key){var/** @type {?} */newSeqRecord=void 0;if(oldSeqRecord&&key===oldSeqRecord.key){newSeqRecord=oldSeqRecord;_this11._maybeAddToChanges(newSeqRecord,value);}else{seqChanged=true;if(oldSeqRecord!==null){_this11._removeFromSeq(lastOldSeqRecord,oldSeqRecord);_this11._addToRemovals(oldSeqRecord);}if(records.has(key)){newSeqRecord=records.get(key);_this11._maybeAddToChanges(newSeqRecord,value);}else{newSeqRecord=new KeyValueChangeRecord_(key);records.set(key,newSeqRecord);newSeqRecord.currentValue=value;_this11._addToAdditions(newSeqRecord);}}if(seqChanged){if(_this11._isInRemovals(newSeqRecord)){_this11._removeFromRemovals(newSeqRecord);}if(lastNewSeqRecord==null){_this11._mapHead=newSeqRecord;}else{lastNewSeqRecord._next=newSeqRecord;}}lastOldSeqRecord=oldSeqRecord;lastNewSeqRecord=newSeqRecord;oldSeqRecord=oldSeqRecord&&oldSeqRecord._next;});this._truncate(lastOldSeqRecord,oldSeqRecord);return this.isDirty;}/**
     * \@internal
     * @return {?}
     */},{key:'_reset',value:function _reset(){if(this.isDirty){var/** @type {?} */record=void 0;// Record the state of the mapping
for(record=this._previousMapHead=this._mapHead;record!==null;record=record._next){record._nextPrevious=record._next;}for(record=this._changesHead;record!==null;record=record._nextChanged){record.previousValue=record.currentValue;}for(record=this._additionsHead;record!=null;record=record._nextAdded){record.previousValue=record.currentValue;}this._changesHead=this._changesTail=null;this._additionsHead=this._additionsTail=null;this._removalsHead=this._removalsTail=null;}}/**
     * @param {?} lastRecord
     * @param {?} record
     * @return {?}
     */},{key:'_truncate',value:function _truncate(lastRecord,record){while(record!==null){if(lastRecord===null){this._mapHead=null;}else{lastRecord._next=null;}var/** @type {?} */nextRecord=record._next;this._addToRemovals(record);lastRecord=record;record=nextRecord;}for(var/** @type {?} */rec=this._removalsHead;rec!==null;rec=rec._nextRemoved){rec.previousValue=rec.currentValue;rec.currentValue=null;this._records.delete(rec.key);}}/**
     * @param {?} record
     * @param {?} newValue
     * @return {?}
     */},{key:'_maybeAddToChanges',value:function _maybeAddToChanges(record,newValue){if(!looseIdentical(newValue,record.currentValue)){record.previousValue=record.currentValue;record.currentValue=newValue;this._addToChanges(record);}}/**
     * @param {?} record
     * @return {?}
     */},{key:'_isInRemovals',value:function _isInRemovals(record){return record===this._removalsHead||record._nextRemoved!==null||record._prevRemoved!==null;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToRemovals',value:function _addToRemovals(record){if(this._removalsHead===null){this._removalsHead=this._removalsTail=record;}else{this._removalsTail._nextRemoved=record;record._prevRemoved=this._removalsTail;this._removalsTail=record;}}/**
     * @param {?} prev
     * @param {?} record
     * @return {?}
     */},{key:'_removeFromSeq',value:function _removeFromSeq(prev,record){var/** @type {?} */next=record._next;if(prev===null){this._mapHead=next;}else{prev._next=next;}record._next=null;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_removeFromRemovals',value:function _removeFromRemovals(record){var/** @type {?} */prev=record._prevRemoved;var/** @type {?} */next=record._nextRemoved;if(prev===null){this._removalsHead=next;}else{prev._nextRemoved=next;}if(next===null){this._removalsTail=prev;}else{next._prevRemoved=prev;}record._prevRemoved=record._nextRemoved=null;}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToAdditions',value:function _addToAdditions(record){if(this._additionsHead===null){this._additionsHead=this._additionsTail=record;}else{this._additionsTail._nextAdded=record;this._additionsTail=record;}}/**
     * @param {?} record
     * @return {?}
     */},{key:'_addToChanges',value:function _addToChanges(record){if(this._changesHead===null){this._changesHead=this._changesTail=record;}else{this._changesTail._nextChanged=record;this._changesTail=record;}}/**
     * @return {?}
     */},{key:'toString',value:function toString(){var/** @type {?} */items=[];var/** @type {?} */previous=[];var/** @type {?} */changes=[];var/** @type {?} */additions=[];var/** @type {?} */removals=[];var/** @type {?} */record=void 0;for(record=this._mapHead;record!==null;record=record._next){items.push(stringify$2(record));}for(record=this._previousMapHead;record!==null;record=record._nextPrevious){previous.push(stringify$2(record));}for(record=this._changesHead;record!==null;record=record._nextChanged){changes.push(stringify$2(record));}for(record=this._additionsHead;record!==null;record=record._nextAdded){additions.push(stringify$2(record));}for(record=this._removalsHead;record!==null;record=record._nextRemoved){removals.push(stringify$2(record));}return'map: '+items.join(', ')+'\n'+'previous: '+previous.join(', ')+'\n'+'additions: '+additions.join(', ')+'\n'+'changes: '+changes.join(', ')+'\n'+'removals: '+removals.join(', ')+'\n';}/**
     * \@internal
     * @param {?} obj
     * @param {?} fn
     * @return {?}
     */},{key:'_forEach',value:function _forEach(obj,fn){if(obj instanceof Map){obj.forEach(fn);}else{Object.keys(obj).forEach(function(k){return fn(obj[k],k);});}}},{key:'isDirty',get:function get(){return this._additionsHead!==null||this._changesHead!==null||this._removalsHead!==null;}}]);return DefaultKeyValueDiffer;}();/**
 * \@stable
 */var KeyValueChangeRecord_=function(){/**
     * @param {?} key
     */function KeyValueChangeRecord_(key){_classCallCheck$2(this,KeyValueChangeRecord_);this.key=key;this.previousValue=null;this.currentValue=null;/** @internal */this._nextPrevious=null;/** @internal */this._next=null;/** @internal */this._nextAdded=null;/** @internal */this._nextRemoved=null;/** @internal */this._prevRemoved=null;/** @internal */this._nextChanged=null;}/**
     * @return {?}
     */_createClass$2(KeyValueChangeRecord_,[{key:'toString',value:function toString(){return looseIdentical(this.previousValue,this.currentValue)?stringify$2(this.key):stringify$2(this.key)+'['+stringify$2(this.previousValue)+'->'+stringify$2(this.currentValue)+']';}}]);return KeyValueChangeRecord_;}();/**
 * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.
 * \@stable
 */var IterableDiffers=function(){/**
     * @param {?} factories
     */function IterableDiffers(factories){_classCallCheck$2(this,IterableDiffers);this.factories=factories;}/**
     * @param {?} factories
     * @param {?=} parent
     * @return {?}
     */_createClass$2(IterableDiffers,[{key:'find',/**
     * @param {?} iterable
     * @return {?}
     */value:function find(iterable){var/** @type {?} */factory=this.factories.find(function(f){return f.supports(iterable);});if(isPresent$2(factory)){return factory;}else{throw new Error('Cannot find a differ supporting object \''+iterable+'\' of type \''+getTypeNameForDebugging$1(iterable)+'\'');}}}],[{key:'create',value:function create(factories,parent){if(isPresent$2(parent)){var/** @type {?} */copied=parent.factories.slice();factories=factories.concat(copied);return new IterableDiffers(factories);}else{return new IterableDiffers(factories);}}/**
     * Takes an array of {\@link IterableDifferFactory} and returns a provider used to extend the
     * inherited {\@link IterableDiffers} instance with the provided factories and return a new
     * {\@link IterableDiffers} instance.
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {\@link IterableDiffer} available.
     *
     * ### Example
     *
     * ```
     * \@Component({
     *   viewProviders: [
     *     IterableDiffers.extend([new ImmutableListDiffer()])
     *   ]
     * })
     * ```
     * @param {?} factories
     * @return {?}
     */},{key:'extend',value:function extend(factories){return{provide:IterableDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling IterableDiffers.extend inside of dependencies passed
// to
// bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend IterableDiffers without a parent injector');}return IterableDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[IterableDiffers,new SkipSelf(),new Optional()]]};}}]);return IterableDiffers;}();/**
 * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.
 * \@stable
 */var KeyValueDiffers=function(){/**
     * @param {?} factories
     */function KeyValueDiffers(factories){_classCallCheck$2(this,KeyValueDiffers);this.factories=factories;}/**
     * @param {?} factories
     * @param {?=} parent
     * @return {?}
     */_createClass$2(KeyValueDiffers,[{key:'find',/**
     * @param {?} kv
     * @return {?}
     */value:function find(kv){var/** @type {?} */factory=this.factories.find(function(f){return f.supports(kv);});if(factory){return factory;}throw new Error('Cannot find a differ supporting object \''+kv+'\'');}}],[{key:'create',value:function create(factories,parent){if(parent){var/** @type {?} */copied=parent.factories.slice();factories=factories.concat(copied);}return new KeyValueDiffers(factories);}/**
     * Takes an array of {\@link KeyValueDifferFactory} and returns a provider used to extend the
     * inherited {\@link KeyValueDiffers} instance with the provided factories and return a new
     * {\@link KeyValueDiffers} instance.
     *
     * The following example shows how to extend an existing list of factories,
     * which will only be applied to the injector for this component and its children.
     * This step is all that's required to make a new {\@link KeyValueDiffer} available.
     *
     * ### Example
     *
     * ```
     * \@Component({
     *   viewProviders: [
     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])
     *   ]
     * })
     * ```
     * @param {?} factories
     * @return {?}
     */},{key:'extend',value:function extend(factories){return{provide:KeyValueDiffers,useFactory:function useFactory(parent){if(!parent){// Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed
// to bootstrap(), which would override default pipes instead of extending them.
throw new Error('Cannot extend KeyValueDiffers without a parent injector');}return KeyValueDiffers.create(factories,parent);},// Dependency technically isn't optional, but we can provide a better error message this way.
deps:[[KeyValueDiffers,new SkipSelf(),new Optional()]]};}}]);return KeyValueDiffers;}();/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function devModeEqual(a,b){if(isListLikeIterable$1(a)&&isListLikeIterable$1(b)){return areIterablesEqual(a,b,devModeEqual);}else if(!isListLikeIterable$1(a)&&!isPrimitive(a)&&!isListLikeIterable$1(b)&&!isPrimitive(b)){return true;}else{return looseIdentical(a,b);}}/**
 * Indicates that the result of a {\@link Pipe} transformation has changed even though the
 * reference
 * has not changed.
 *
 * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.
 *
 * Example:
 *
 * ```
 * if (this._latestValue === this._latestReturnedValue) {
 *    return this._latestReturnedValue;
 *  } else {
 *    this._latestReturnedValue = this._latestValue;
 *    return WrappedValue.wrap(this._latestValue); // this will force update
 *  }
 * ```
 * \@stable
 */var WrappedValue=function(){/**
     * @param {?} wrapped
     */function WrappedValue(wrapped){_classCallCheck$2(this,WrappedValue);this.wrapped=wrapped;}/**
     * @param {?} value
     * @return {?}
     */_createClass$2(WrappedValue,null,[{key:'wrap',value:function wrap(value){return new WrappedValue(value);}}]);return WrappedValue;}();/**
 * Helper class for unwrapping WrappedValue s
 */var ValueUnwrapper=function(){function ValueUnwrapper(){_classCallCheck$2(this,ValueUnwrapper);this.hasWrappedValue=false;}/**
     * @param {?} value
     * @return {?}
     */_createClass$2(ValueUnwrapper,[{key:'unwrap',value:function unwrap(value){if(value instanceof WrappedValue){this.hasWrappedValue=true;return value.wrapped;}return value;}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this.hasWrappedValue=false;}}]);return ValueUnwrapper;}();/**
 * Represents a basic change from a previous to a new value.
 * \@stable
 */var SimpleChange=function(){/**
     * @param {?} previousValue
     * @param {?} currentValue
     * @param {?} firstChange
     */function SimpleChange(previousValue,currentValue,firstChange){_classCallCheck$2(this,SimpleChange);this.previousValue=previousValue;this.currentValue=currentValue;this.firstChange=firstChange;}/**
     * Check whether the new value is the first value assigned.
     * @return {?}
     */_createClass$2(SimpleChange,[{key:'isFirstChange',value:function isFirstChange(){return this.firstChange;}}]);return SimpleChange;}();/**
 * \@stable
 * @abstract
 */var ChangeDetectorRef=function(){function ChangeDetectorRef(){_classCallCheck$2(this,ChangeDetectorRef);}_createClass$2(ChangeDetectorRef,[{key:'markForCheck',/**
     * Marks all {\@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.
     *
     * <!-- TODO: Add a link to a chapter on OnPush components -->
     *
     * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))
     *
     * ```typescript
     * \@Component({
     *   selector: 'cmp',
     *   changeDetection: ChangeDetectionStrategy.OnPush,
     *   template: `Number of ticks: {{numberOfTicks}}`
     * })
     * class Cmp {
     *   numberOfTicks = 0;
     *
     *   constructor(ref: ChangeDetectorRef) {
     *     setInterval(() => {
     *       this.numberOfTicks ++
     *       // the following is required, otherwise the view will not be updated
     *       this.ref.markForCheck();
     *     }, 1000);
     *   }
     * }
     *
     * \@Component({
     *   selector: 'app',
     *   changeDetection: ChangeDetectionStrategy.OnPush,
     *   template: `
     *     <cmp><cmp>
     *   `,
     * })
     * class App {
     * }
     * ```
     * @abstract
     * @return {?}
     */value:function markForCheck(){}/**
     * Detaches the change detector from the change detector tree.
     *
     * The detached change detector will not be checked until it is reattached.
     *
     * This can also be used in combination with {\@link ChangeDetectorRef#detectChanges} to implement
     * local change
     * detection checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds. We can do that by detaching
     * the component's change detector and doing a local check every five seconds.
     *
     * ```typescript
     * class DataProvider {
     *   // in a real application the returned data will be different every time
     *   get data() {
     *     return [1,2,3,4,5];
     *   }
     * }
     *
     * \@Component({
     *   selector: 'giant-list',
     *   template: `
     *     <li *ngFor="let d of dataProvider.data">Data {{d}}</lig>
     *   `,
     * })
     * class GiantList {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {
     *     ref.detach();
     *     setInterval(() => {
     *       this.ref.detectChanges();
     *     }, 5000);
     *   }
     * }
     *
     * \@Component({
     *   selector: 'app',
     *   providers: [DataProvider],
     *   template: `
     *     <giant-list><giant-list>
     *   `,
     * })
     * class App {
     * }
     * ```
     * @abstract
     * @return {?}
     */},{key:'detach',value:function detach(){}/**
     * Checks the change detector and its children.
     *
     * This can also be used in combination with {\@link ChangeDetectorRef#detach} to implement local
     * change detection
     * checks.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->
     *
     * ### Example
     *
     * The following example defines a component with a large list of readonly data.
     * Imagine, the data changes constantly, many times per second. For performance reasons,
     * we want to check and update the list every five seconds.
     *
     * We can do that by detaching the component's change detector and doing a local change detection
     * check
     * every five seconds.
     *
     * See {\@link ChangeDetectorRef#detach} for more information.
     * @abstract
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(){}/**
     * Checks the change detector and its children, and throws if any changes are detected.
     *
     * This is used in development mode to verify that running change detection doesn't introduce
     * other changes.
     * @abstract
     * @return {?}
     */},{key:'checkNoChanges',value:function checkNoChanges(){}/**
     * Reattach the change detector to the change detector tree.
     *
     * This also marks OnPush ancestors as to be checked. This reattached change detector will be
     * checked during the next change detection run.
     *
     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->
     *
     * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))
     *
     * The following example creates a component displaying `live` data. The component will detach
     * its change detector from the main change detector tree when the component's live property
     * is set to false.
     *
     * ```typescript
     * class DataProvider {
     *   data = 1;
     *
     *   constructor() {
     *     setInterval(() => {
     *       this.data = this.data * 2;
     *     }, 500);
     *   }
     * }
     *
     * \@Component({
     *   selector: 'live-data',
     *   inputs: ['live'],
     *   template: 'Data: {{dataProvider.data}}'
     * })
     * class LiveData {
     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}
     *
     *   set live(value) {
     *     if (value)
     *       this.ref.reattach();
     *     else
     *       this.ref.detach();
     *   }
     * }
     *
     * \@Component({
     *   selector: 'app',
     *   providers: [DataProvider],
     *   template: `
     *     Live Update: <input type="checkbox" [(ngModel)]="live">
     *     <live-data [live]="live"><live-data>
     *   `,
     * })
     * class App {
     *   live = true;
     * }
     * ```
     * @abstract
     * @return {?}
     */},{key:'reattach',value:function reattach(){}}]);return ChangeDetectorRef;}();/**
 * Structural diffing for `Object`s and `Map`s.
 */var keyValDiff=[new DefaultKeyValueDifferFactory()];/**
 * Structural diffing for `Iterable` types such as `Array`s.
 */var iterableDiff=[new DefaultIterableDifferFactory()];var defaultIterableDiffers=new IterableDiffers(iterableDiff);var defaultKeyValueDiffers=new KeyValueDiffers(keyValDiff);/**
 * @deprecated Use `RendererTypeV2` (and `RendererV2`) instead.
 */var RenderDebugInfo=function(){function RenderDebugInfo(){_classCallCheck$2(this,RenderDebugInfo);}_createClass$2(RenderDebugInfo,[{key:'injector',/**
     * @abstract
     * @return {?}
     */value:function injector(){}/**
     * @abstract
     * @return {?}
     */},{key:'component',value:function component(){}/**
     * @abstract
     * @return {?}
     */},{key:'providerTokens',value:function providerTokens(){}/**
     * @abstract
     * @return {?}
     */},{key:'references',value:function references(){}/**
     * @abstract
     * @return {?}
     */},{key:'context',value:function context(){}/**
     * @abstract
     * @return {?}
     */},{key:'source',value:function source(){}}]);return RenderDebugInfo;}();/**
 * @deprecated Use the `RendererV2` instead.
 * @abstract
 */var RendererV1=function(){function RendererV1(){_classCallCheck$2(this,RendererV1);}_createClass$2(RendererV1,[{key:'selectRootElement',/**
     * @abstract
     * @param {?} selectorOrNode
     * @param {?=} debugInfo
     * @return {?}
     */value:function selectRootElement(selectorOrNode,debugInfo){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?} name
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createElement',value:function createElement(parentElement,name,debugInfo){}/**
     * @abstract
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement,debugInfo){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?} value
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value,debugInfo){}/**
     * @abstract
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){}/**
     * @abstract
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){}/**
     * @abstract
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){}/**
     * @abstract
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){}/**
     * @abstract
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} attributeName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,attributeName,attributeValue){}/**
     * Used only in debug mode to serialize property changes to dom nodes as attributes.
     * @abstract
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){}/**
     * @abstract
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?=} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){}/**
     * @abstract
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){}/**
     * @abstract
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */},{key:'animate',value:function animate(element,startingStyles,keyframes,duration,delay,easing,previousPlayers){}}]);return RendererV1;}();var RendererV2Interceptor=new InjectionToken('RendererV2Interceptor');/**
 * Injectable service that provides a low-level interface for modifying the UI.
 *
 * Use this service to bypass Angular's templating and make custom UI changes that can't be
 * expressed declaratively. For example if you need to set a property or an attribute whose name is
 * not statically known, use {\@link #setElementProperty} or {\@link #setElementAttribute}
 * respectively.
 *
 * If you are implementing a custom renderer, you must implement this interface.
 *
 * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.
 *
 * @deprecated Use `RendererFactoryV2` instead.
 * @abstract
 */var RootRenderer=function(){function RootRenderer(){_classCallCheck$2(this,RootRenderer);}_createClass$2(RootRenderer,[{key:'renderComponent',/**
     * @abstract
     * @param {?} componentType
     * @return {?}
     */value:function renderComponent(componentType){}}]);return RootRenderer;}();/**
 * \@experimental
 * @abstract
 */var RendererFactoryV2=function(){function RendererFactoryV2(){_classCallCheck$2(this,RendererFactoryV2);}_createClass$2(RendererFactoryV2,[{key:'createRenderer',/**
     * @abstract
     * @param {?} hostElement
     * @param {?} type
     * @return {?}
     */value:function createRenderer(hostElement,type){}}]);return RendererFactoryV2;}();/**
 * \@experimental
 * @abstract
 */var RendererV2=function(){function RendererV2(){_classCallCheck$2(this,RendererV2);}_createClass$2(RendererV2,[{key:'data',/**
     * This field can be used to store arbitrary data on this renderer instance.
     * This is useful for renderers that delegate to other renderers.
     * @abstract
     * @return {?}
     */value:function data(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * @abstract
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'createElement',value:function createElement(name,namespace){}/**
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'createComment',value:function createComment(value){}/**
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(value){}/**
     * @abstract
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){}/**
     * @abstract
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){}/**
     * @abstract
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){}/**
     * @abstract
     * @param {?} selectorOrNode
     * @return {?}
     */},{key:'selectRootElement',value:function selectRootElement(selectorOrNode){}/**
     * Attention: On WebWorkers, this will always return a value,
     * as we are asking for a result synchronously. I.e.
     * the caller can't rely on checking whether this is null or not.
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){}/**
     * Attention: On WebWorkers, this will always return a value,
     * as we are asking for a result synchronously. I.e.
     * the caller can't rely on checking whether this is null or not.
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(node){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @param {?=} namespace
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(el,name,value,namespace){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(el,name,namespace){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'addClass',value:function addClass(el,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'removeClass',value:function removeClass(el,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} style
     * @param {?} value
     * @param {?} hasVendorPrefix
     * @param {?} hasImportant
     * @return {?}
     */},{key:'setStyle',value:function setStyle(el,style,value,hasVendorPrefix,hasImportant){}/**
     * @abstract
     * @param {?} el
     * @param {?} style
     * @param {?} hasVendorPrefix
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(el,style,hasVendorPrefix){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){}/**
     * @abstract
     * @param {?} node
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(node,value){}/**
     * @abstract
     * @param {?} target
     * @param {?} eventName
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(target,eventName,callback){}}]);return RendererV2;}();var SecurityContext={};SecurityContext.NONE=0;SecurityContext.HTML=1;SecurityContext.STYLE=2;SecurityContext.SCRIPT=3;SecurityContext.URL=4;SecurityContext.RESOURCE_URL=5;SecurityContext[SecurityContext.NONE]="NONE";SecurityContext[SecurityContext.HTML]="HTML";SecurityContext[SecurityContext.STYLE]="STYLE";SecurityContext[SecurityContext.SCRIPT]="SCRIPT";SecurityContext[SecurityContext.URL]="URL";SecurityContext[SecurityContext.RESOURCE_URL]="RESOURCE_URL";/**
 * Sanitizer is used by the views to sanitize potentially dangerous values.
 *
 * \@stable
 * @abstract
 */var Sanitizer=function(){function Sanitizer(){_classCallCheck$2(this,Sanitizer);}_createClass$2(Sanitizer,[{key:'sanitize',/**
     * @abstract
     * @param {?} context
     * @param {?} value
     * @return {?}
     */value:function sanitize(context,value){}}]);return Sanitizer;}();/**
 * An error thrown if application changes model breaking the top-down data flow.
 *
 * This exception is only thrown in dev mode.
 *
 * <!-- TODO: Add a link once the dev mode option is configurable -->
 *
 * ### Example
 *
 * ```typescript
 * \@Component({
 *   selector: 'parent',
 *   template: '<child [prop]="parentProp"></child>',
 * })
 * class Parent {
 *   parentProp = 'init';
 * }
 *
 * \@Directive({selector: 'child', inputs: ['prop']})
 * class Child {
 *   constructor(public parent: Parent) {}
 *
 *   set prop(v) {
 *     // this updates the parent property, which is disallowed during change detection
 *     // this will result in ExpressionChangedAfterItHasBeenCheckedError
 *     this.parent.parentProp = 'updated';
 *   }
 * }
 * ```
 * @param {?} oldValue
 * @param {?} currValue
 * @param {?} isFirstCheck
 * @return {?}
 */function expressionChangedAfterItHasBeenCheckedError(oldValue,currValue,isFirstCheck){var/** @type {?} */msg='Expression has changed after it was checked. Previous value: \''+oldValue+'\'. Current value: \''+currValue+'\'.';if(isFirstCheck){msg+=' It seems like the view has been created after its parent and its children have been dirty checked.'+' Has it been created in a change detection hook ?';}var/** @type {?} */error=Error(msg);error[ERROR_TYPE]=expressionChangedAfterItHasBeenCheckedError;return error;}/**
 * Thrown when an exception was raised during view creation, change detection or destruction.
 *
 * This error wraps the original exception to attach additional contextual information that can
 * be useful for debugging.
 * @param {?} originalError
 * @param {?} context
 * @return {?}
 */function viewWrappedError(originalError,context){var/** @type {?} */error=wrappedError('Error in '+context.source,originalError);error[ERROR_DEBUG_CONTEXT]=context;error[ERROR_TYPE]=viewWrappedError;return error;}/**
 * Thrown when a destroyed view is used.
 *
 * This error indicates a bug in the framework.
 *
 * This is an internal Angular error.
 * @param {?} details
 * @return {?}
 */function viewDestroyedError(details){return Error('Attempt to use a destroyed view: '+details);}var ViewUtils=function(){/**
     * @param {?} _renderer
     * @param {?} sanitizer
     * @param {?} animationQueue
     */function ViewUtils(_renderer,sanitizer,animationQueue){_classCallCheck$2(this,ViewUtils);this._renderer=_renderer;this.animationQueue=animationQueue;this.sanitizer=sanitizer;}/**
     * \@internal
     * @param {?} renderComponentType
     * @return {?}
     */_createClass$2(ViewUtils,[{key:'renderComponent',value:function renderComponent(renderComponentType){return this._renderer.renderComponent(renderComponentType);}}]);return ViewUtils;}();ViewUtils.decorators=[{type:Injectable}];/** @nocollapse */ViewUtils.ctorParameters=function(){return[{type:RootRenderer},{type:Sanitizer},{type:AnimationQueue}];};function addToArray(e,array){array.push(e);}/**
 * @param {?} valueCount
 * @param {?} constAndInterp
 * @return {?}
 */function inlineInterpolate(valueCount,c0,a1,c1,a2,c2,a3,c3,a4,c4,a5,c5,a6,c6,a7,c7,a8,c8,a9,c9){switch(valueCount){case 1:return c0+_toStringWithNull(a1)+c1;case 2:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2;case 3:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3;case 4:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4;case 5:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5;case 6:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6;case 7:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7;case 8:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8;case 9:return c0+_toStringWithNull(a1)+c1+_toStringWithNull(a2)+c2+_toStringWithNull(a3)+c3+_toStringWithNull(a4)+c4+_toStringWithNull(a5)+c5+_toStringWithNull(a6)+c6+_toStringWithNull(a7)+c7+_toStringWithNull(a8)+c8+_toStringWithNull(a9)+c9;default:throw new Error('Does not support more than 9 expressions');}}/**
 * @param {?} v
 * @return {?}
 */function _toStringWithNull(v){return v!=null?v.toString():'';}/**
 * @param {?} view
 * @param {?} oldValue
 * @param {?} newValue
 * @param {?} forceUpdate
 * @return {?}
 */var InlineArray0=function(){function InlineArray0(){_classCallCheck$2(this,InlineArray0);this.length=0;}/**
     * @param {?} index
     * @return {?}
     */_createClass$2(InlineArray0,[{key:'get',value:function get(index){return undefined;}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){}}]);return InlineArray0;}();var InlineArray2=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     */function InlineArray2(length,_v0,_v1){_classCallCheck$2(this,InlineArray2);this.length=length;this._v0=_v0;this._v1=_v1;}/**
     * @param {?} index
     * @return {?}
     */_createClass$2(InlineArray2,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;}}}]);return InlineArray2;}();var InlineArray4=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     * @param {?=} _v2
     * @param {?=} _v3
     */function InlineArray4(length,_v0,_v1,_v2,_v3){_classCallCheck$2(this,InlineArray4);this.length=length;this._v0=_v0;this._v1=_v1;this._v2=_v2;this._v3=_v3;}/**
     * @param {?} index
     * @return {?}
     */_createClass$2(InlineArray4,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;case 2:return this._v2;case 3:return this._v3;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;case 2:this._v2=value;break;case 3:this._v3=value;break;}}}]);return InlineArray4;}();var InlineArray8=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     * @param {?=} _v2
     * @param {?=} _v3
     * @param {?=} _v4
     * @param {?=} _v5
     * @param {?=} _v6
     * @param {?=} _v7
     */function InlineArray8(length,_v0,_v1,_v2,_v3,_v4,_v5,_v6,_v7){_classCallCheck$2(this,InlineArray8);this.length=length;this._v0=_v0;this._v1=_v1;this._v2=_v2;this._v3=_v3;this._v4=_v4;this._v5=_v5;this._v6=_v6;this._v7=_v7;}/**
     * @param {?} index
     * @return {?}
     */_createClass$2(InlineArray8,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;case 2:return this._v2;case 3:return this._v3;case 4:return this._v4;case 5:return this._v5;case 6:return this._v6;case 7:return this._v7;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;case 2:this._v2=value;break;case 3:this._v3=value;break;case 4:this._v4=value;break;case 5:this._v5=value;break;case 6:this._v6=value;break;case 7:this._v7=value;break;}}}]);return InlineArray8;}();var InlineArray16=function(){/**
     * @param {?} length
     * @param {?=} _v0
     * @param {?=} _v1
     * @param {?=} _v2
     * @param {?=} _v3
     * @param {?=} _v4
     * @param {?=} _v5
     * @param {?=} _v6
     * @param {?=} _v7
     * @param {?=} _v8
     * @param {?=} _v9
     * @param {?=} _v10
     * @param {?=} _v11
     * @param {?=} _v12
     * @param {?=} _v13
     * @param {?=} _v14
     * @param {?=} _v15
     */function InlineArray16(length,_v0,_v1,_v2,_v3,_v4,_v5,_v6,_v7,_v8,_v9,_v10,_v11,_v12,_v13,_v14,_v15){_classCallCheck$2(this,InlineArray16);this.length=length;this._v0=_v0;this._v1=_v1;this._v2=_v2;this._v3=_v3;this._v4=_v4;this._v5=_v5;this._v6=_v6;this._v7=_v7;this._v8=_v8;this._v9=_v9;this._v10=_v10;this._v11=_v11;this._v12=_v12;this._v13=_v13;this._v14=_v14;this._v15=_v15;}/**
     * @param {?} index
     * @return {?}
     */_createClass$2(InlineArray16,[{key:'get',value:function get(index){switch(index){case 0:return this._v0;case 1:return this._v1;case 2:return this._v2;case 3:return this._v3;case 4:return this._v4;case 5:return this._v5;case 6:return this._v6;case 7:return this._v7;case 8:return this._v8;case 9:return this._v9;case 10:return this._v10;case 11:return this._v11;case 12:return this._v12;case 13:return this._v13;case 14:return this._v14;case 15:return this._v15;default:return undefined;}}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){switch(index){case 0:this._v0=value;break;case 1:this._v1=value;break;case 2:this._v2=value;break;case 3:this._v3=value;break;case 4:this._v4=value;break;case 5:this._v5=value;break;case 6:this._v6=value;break;case 7:this._v7=value;break;case 8:this._v8=value;break;case 9:this._v9=value;break;case 10:this._v10=value;break;case 11:this._v11=value;break;case 12:this._v12=value;break;case 13:this._v13=value;break;case 14:this._v14=value;break;case 15:this._v15=value;break;}}}]);return InlineArray16;}();var InlineArrayDynamic=function(){/**
     * @param {?} length
     * @param {...?} values
     */function InlineArrayDynamic(length){_classCallCheck$2(this,InlineArrayDynamic);this.length=length;for(var _len6=arguments.length,values=Array(_len6>1?_len6-1:0),_key6=1;_key6<_len6;_key6++){values[_key6-1]=arguments[_key6];}this._values=values;}/**
     * @param {?} index
     * @return {?}
     */_createClass$2(InlineArrayDynamic,[{key:'get',value:function get(index){return this._values[index];}/**
     * @param {?} index
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(index,value){this._values[index]=value;}}]);return InlineArrayDynamic;}();var EMPTY_INLINE_ARRAY=new InlineArray0();/**
 * This is a private API only used by the compiler to read the view class.
 * @param {?} componentFactory
 * @return {?}
 */var ComponentRef=function(){function ComponentRef(){_classCallCheck$2(this,ComponentRef);}_createClass$2(ComponentRef,[{key:'location',/**
     * Location of the Host Element of this Component Instance.
     * @abstract
     * @return {?}
     */value:function location(){}/**
     * The injector on which the component instance exists.
     * @abstract
     * @return {?}
     */},{key:'injector',value:function injector(){}/**
     * The instance of the Component.
     * @abstract
     * @return {?}
     */},{key:'instance',value:function instance(){}/**
     * The {\@link ViewRef} of the Host View of this Component instance.
     * @abstract
     * @return {?}
     */},{key:'hostView',value:function hostView(){}/**
     * The {\@link ChangeDetectorRef} of the Component instance.
     * @abstract
     * @return {?}
     */},{key:'changeDetectorRef',value:function changeDetectorRef(){}/**
     * The component type.
     * @abstract
     * @return {?}
     */},{key:'componentType',value:function componentType(){}/**
     * Destroys the component instance and all of the data structures associated with it.
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * Allows to register a callback that will be called when the component is destroyed.
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}}]);return ComponentRef;}();/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var ComponentRef_=function(_ComponentRef){_inherits$2(ComponentRef_,_ComponentRef);/**
     * @param {?} _index
     * @param {?} _parentView
     * @param {?} _nativeElement
     * @param {?} _component
     */function ComponentRef_(_index,_parentView,_nativeElement,_component){_classCallCheck$2(this,ComponentRef_);var _this12=_possibleConstructorReturn$2(this,(ComponentRef_.__proto__||Object.getPrototypeOf(ComponentRef_)).call(this));_this12._index=_index;_this12._parentView=_parentView;_this12._nativeElement=_nativeElement;_this12._component=_component;return _this12;}/**
     * @return {?}
     */_createClass$2(ComponentRef_,[{key:'destroy',/**
     * @return {?}
     */value:function destroy(){this._parentView.detachAndDestroy();}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){this.hostView.onDestroy(callback);}},{key:'location',get:function get(){return new ElementRef(this._nativeElement);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this._parentView.injector(this._index);}/**
     * @return {?}
     */},{key:'instance',get:function get(){return this._component;}},{key:'hostView',/**
     * @return {?}
     */get:function get(){return this._parentView.ref;}},{key:'changeDetectorRef',/**
     * @return {?}
     */get:function get(){return this._parentView.ref;}},{key:'componentType',/**
     * @return {?}
     */get:function get(){return this._component.constructor;}}]);return ComponentRef_;}(ComponentRef);/**
 * \@stable
 */var ComponentFactory=function(){/**
     * @param {?} selector
     * @param {?} _viewClass
     * @param {?} componentType
     */function ComponentFactory(selector,_viewClass,componentType){_classCallCheck$2(this,ComponentFactory);this.selector=selector;this.componentType=componentType;this._viewClass=_viewClass;}/**
     * Creates a new component.
     * @param {?} injector
     * @param {?=} projectableNodes
     * @param {?=} rootSelectorOrNode
     * @return {?}
     */_createClass$2(ComponentFactory,[{key:'create',value:function create(injector){var projectableNodes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var rootSelectorOrNode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */vu=injector.get(ViewUtils);if(!projectableNodes){projectableNodes=[];}var/** @type {?} */hostView=new this._viewClass(vu,null,null,null);return hostView.createHostView(rootSelectorOrNode,injector,projectableNodes);}}]);return ComponentFactory;}();/**
 * @param {?} component
 * @return {?}
 */function noComponentFactoryError(component){var/** @type {?} */error=Error('No component factory found for '+stringify$2(component)+'. Did you add it to @NgModule.entryComponents?');error[ERROR_COMPONENT]=component;return error;}var ERROR_COMPONENT='ngComponent';var _NullComponentFactoryResolver=function(){function _NullComponentFactoryResolver(){_classCallCheck$2(this,_NullComponentFactoryResolver);}_createClass$2(_NullComponentFactoryResolver,[{key:'resolveComponentFactory',/**
     * @param {?} component
     * @return {?}
     */value:function resolveComponentFactory(component){throw noComponentFactoryError(component);}}]);return _NullComponentFactoryResolver;}();/**
 * \@stable
 * @abstract
 */var ComponentFactoryResolver=function(){function ComponentFactoryResolver(){_classCallCheck$2(this,ComponentFactoryResolver);}_createClass$2(ComponentFactoryResolver,[{key:'resolveComponentFactory',/**
     * @abstract
     * @param {?} component
     * @return {?}
     */value:function resolveComponentFactory(component){}}]);return ComponentFactoryResolver;}();ComponentFactoryResolver.NULL=new _NullComponentFactoryResolver();var CodegenComponentFactoryResolver=function(){/**
     * @param {?} factories
     * @param {?} _parent
     */function CodegenComponentFactoryResolver(factories,_parent){_classCallCheck$2(this,CodegenComponentFactoryResolver);this._parent=_parent;this._factories=new Map();for(var i=0;i<factories.length;i++){var factory=factories[i];this._factories.set(factory.componentType,factory);}}/**
     * @param {?} component
     * @return {?}
     */_createClass$2(CodegenComponentFactoryResolver,[{key:'resolveComponentFactory',value:function resolveComponentFactory(component){var/** @type {?} */result=this._factories.get(component);if(!result){result=this._parent.resolveComponentFactory(component);}return result;}}]);return CodegenComponentFactoryResolver;}();var trace=void 0;var events=void 0;/**
 * @return {?}
 */function detectWTF(){var/** @type {?} */wtf=global$1$1[/** TODO #9100 */'wtf'];if(wtf){trace=wtf['trace'];if(trace){events=trace['events'];return true;}}return false;}/**
 * @param {?} signature
 * @param {?=} flags
 * @return {?}
 */function createScope(signature){var flags=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return events.createScope(signature,flags);}/**
 * @param {?} scope
 * @param {?=} returnValue
 * @return {?}
 */function leave(scope,returnValue){trace.leaveScope(scope,returnValue);return returnValue;}/**
 * @param {?} rangeType
 * @param {?} action
 * @return {?}
 */var wtfEnabled=detectWTF();/**
 * @param {?=} arg0
 * @param {?=} arg1
 * @return {?}
 */function noopScope(arg0,arg1){return null;}/**
 * Create trace scope.
 *
 * Scopes must be strictly nested and are analogous to stack frames, but
 * do not have to follow the stack frames. Instead it is recommended that they follow logical
 * nesting. You may want to use
 * [Event
 * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)
 * as they are defined in WTF.
 *
 * Used to mark scope entry. The return value is used to leave the scope.
 *
 *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');
 *
 *     someMethod() {
 *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI
 *        // DO SOME WORK HERE
 *        return wtfLeave(s, 123); // Return value 123
 *     }
 *
 * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can
 * negatively impact the performance of your application. For this reason we recommend that
 * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and
 * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to
 * exception, will produce incorrect trace, but presence of exception signifies logic error which
 * needs to be fixed before the app should be profiled. Add try-finally only when you expect that
 * an exception is expected during normal execution while profiling.
 *
 * @experimental
 */var wtfCreateScope=wtfEnabled?createScope:function(signature,flags){return noopScope;};/**
 * Used to mark end of Scope.
 *
 * - `scope` to end.
 * - `returnValue` (optional) to be passed to the WTF.
 *
 * Returns the `returnValue for easy chaining.
 * @experimental
 */var wtfLeave=wtfEnabled?leave:function(s,r){return r;};/**
 * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.
 * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been
 * enabled.
 *
 *     someMethod() {
 *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');
 *        var future = new Future.delay(5).then((_) {
 *          wtfEndTimeRange(s);
 *        });
 *     }
 * @experimental
 */var Testability=function(){/**
     * @param {?} _ngZone
     */function Testability(_ngZone){_classCallCheck$2(this,Testability);this._ngZone=_ngZone;/** @internal */this._pendingCount=0;/** @internal */this._isZoneStable=true;/**
         * Whether any work was done since the last 'whenStable' callback. This is
         * useful to detect if this could have potentially destabilized another
         * component while it is stabilizing.
         * @internal
         */this._didWork=false;/** @internal */this._callbacks=[];this._watchAngularEvents();}/**
     * \@internal
     * @return {?}
     */_createClass$2(Testability,[{key:'_watchAngularEvents',value:function _watchAngularEvents(){var _this13=this;this._ngZone.onUnstable.subscribe({next:function next(){_this13._didWork=true;_this13._isZoneStable=false;}});this._ngZone.runOutsideAngular(function(){_this13._ngZone.onStable.subscribe({next:function next(){NgZone.assertNotInAngularZone();scheduleMicroTask(function(){_this13._isZoneStable=true;_this13._runCallbacksIfReady();});}});});}/**
     * @return {?}
     */},{key:'increasePendingRequestCount',value:function increasePendingRequestCount(){this._pendingCount+=1;this._didWork=true;return this._pendingCount;}/**
     * @return {?}
     */},{key:'decreasePendingRequestCount',value:function decreasePendingRequestCount(){this._pendingCount-=1;if(this._pendingCount<0){throw new Error('pending async requests below zero');}this._runCallbacksIfReady();return this._pendingCount;}/**
     * @return {?}
     */},{key:'isStable',value:function isStable(){return this._isZoneStable&&this._pendingCount==0&&!this._ngZone.hasPendingMacrotasks;}/**
     * \@internal
     * @return {?}
     */},{key:'_runCallbacksIfReady',value:function _runCallbacksIfReady(){var _this14=this;if(this.isStable()){// Schedules the call backs in a new frame so that it is always async.
scheduleMicroTask(function(){while(_this14._callbacks.length!==0){_this14._callbacks.pop()(_this14._didWork);}_this14._didWork=false;});}else{// Not Ready
this._didWork=true;}}/**
     * @param {?} callback
     * @return {?}
     */},{key:'whenStable',value:function whenStable(callback){this._callbacks.push(callback);this._runCallbacksIfReady();}/**
     * @return {?}
     */},{key:'getPendingRequestCount',value:function getPendingRequestCount(){return this._pendingCount;}/**
     * @deprecated use findProviders
     * @param {?} using
     * @param {?} provider
     * @param {?} exactMatch
     * @return {?}
     */},{key:'findBindings',value:function findBindings(using,provider,exactMatch){// TODO(juliemr): implement.
return[];}/**
     * @param {?} using
     * @param {?} provider
     * @param {?} exactMatch
     * @return {?}
     */},{key:'findProviders',value:function findProviders(using,provider,exactMatch){// TODO(juliemr): implement.
return[];}}]);return Testability;}();Testability.decorators=[{type:Injectable}];/** @nocollapse */Testability.ctorParameters=function(){return[{type:NgZone}];};/**
 * A global registry of {\@link Testability} instances for specific elements.
 * \@experimental
 */var TestabilityRegistry=function(){function TestabilityRegistry(){_classCallCheck$2(this,TestabilityRegistry);/** @internal */this._applications=new Map();_testabilityGetter.addToWindow(this);}/**
     * @param {?} token
     * @param {?} testability
     * @return {?}
     */_createClass$2(TestabilityRegistry,[{key:'registerApplication',value:function registerApplication(token,testability){this._applications.set(token,testability);}/**
     * @param {?} elem
     * @return {?}
     */},{key:'getTestability',value:function getTestability(elem){return this._applications.get(elem);}/**
     * @return {?}
     */},{key:'getAllTestabilities',value:function getAllTestabilities(){return Array.from(this._applications.values());}/**
     * @return {?}
     */},{key:'getAllRootElements',value:function getAllRootElements(){return Array.from(this._applications.keys());}/**
     * @param {?} elem
     * @param {?=} findInAncestors
     * @return {?}
     */},{key:'findTestabilityInTree',value:function findTestabilityInTree(elem){var findInAncestors=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return _testabilityGetter.findTestabilityInTree(this,elem,findInAncestors);}}]);return TestabilityRegistry;}();TestabilityRegistry.decorators=[{type:Injectable}];/** @nocollapse */TestabilityRegistry.ctorParameters=function(){return[];};var _NoopGetTestability=function(){function _NoopGetTestability(){_classCallCheck$2(this,_NoopGetTestability);}_createClass$2(_NoopGetTestability,[{key:'addToWindow',/**
     * @param {?} registry
     * @return {?}
     */value:function addToWindow(registry){}/**
     * @param {?} registry
     * @param {?} elem
     * @param {?} findInAncestors
     * @return {?}
     */},{key:'findTestabilityInTree',value:function findTestabilityInTree(registry,elem,findInAncestors){return null;}}]);return _NoopGetTestability;}();/**
 * Set the {\@link GetTestability} implementation used by the Angular testing framework.
 * \@experimental
 * @param {?} getter
 * @return {?}
 */function setTestabilityGetter(getter){_testabilityGetter=getter;}var _testabilityGetter=new _NoopGetTestability();var _devMode=true;var _runModeLocked=false;var _platform=void 0;var ALLOW_MULTIPLE_PLATFORMS=new InjectionToken('AllowMultipleToken');/**
 * Disable Angular's development mode, which turns off assertions and other
 * checks within the framework.
 *
 * One important assertion this disables verifies that a change detection pass
 * does not result in additional changes to any bindings (also known as
 * unidirectional data flow).
 *
 * \@stable
 * @return {?}
 */function enableProdMode(){if(_runModeLocked){throw new Error('Cannot enable prod mode after platform setup.');}_devMode=false;}/**
 * Returns whether Angular is in development mode. After called once,
 * the value is locked and won't change any more.
 *
 * By default, this is true, unless a user calls `enableProdMode` before calling this.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @return {?}
 */function isDevMode(){_runModeLocked=true;return _devMode;}/**
 * A token for third-party components that can register themselves with NgProbe.
 *
 * \@experimental
 */var NgProbeToken$1=/**
     * @param {?} name
     * @param {?} token
     */function NgProbeToken(name,token){_classCallCheck$2(this,NgProbeToken);this.name=name;this.token=token;};/**
 * Creates a platform.
 * Platforms have to be eagerly created via this function.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @param {?} injector
 * @return {?}
 */function createPlatform(injector){if(_platform&&!_platform.destroyed&&!_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){throw new Error('There can be only one platform. Destroy the previous one to create a new one.');}_platform=injector.get(PlatformRef);var/** @type {?} */inits=injector.get(PLATFORM_INITIALIZER,null);if(inits)inits.forEach(function(init){return init();});return _platform;}/**
 * Creates a factory for a platform
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @param {?} parentPlatformFactory
 * @param {?} name
 * @param {?=} providers
 * @return {?}
 */function createPlatformFactory(parentPlatformFactory,name){var providers=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var/** @type {?} */marker=new InjectionToken('Platform: '+name);return function(){var extraProviders=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var/** @type {?} */platform=getPlatform();if(!platform||platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,false)){if(parentPlatformFactory){parentPlatformFactory(providers.concat(extraProviders).concat({provide:marker,useValue:true}));}else{createPlatform(ReflectiveInjector.resolveAndCreate(providers.concat(extraProviders).concat({provide:marker,useValue:true})));}}return assertPlatform(marker);};}/**
 * Checks that there currently is a platform which contains the given token as a provider.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @param {?} requiredToken
 * @return {?}
 */function assertPlatform(requiredToken){var/** @type {?} */platform=getPlatform();if(!platform){throw new Error('No platform exists!');}if(!platform.injector.get(requiredToken,null)){throw new Error('A platform with a different configuration has been created. Please destroy it first.');}return platform;}/**
 * Destroy the existing platform.
 *
 * \@experimental APIs related to application bootstrap are currently under review.
 * @return {?}
 */function getPlatform(){return _platform&&!_platform.destroyed?_platform:null;}/**
 * The Angular platform is the entry point for Angular on a web page. Each page
 * has exactly one platform, and services (such as reflection) which are common
 * to every Angular application running on the page are bound in its scope.
 *
 * A page's platform is initialized implicitly when {\@link bootstrap}() is called, or
 * explicitly by calling {\@link createPlatform}().
 *
 * \@stable
 * @abstract
 */var PlatformRef=function(){function PlatformRef(){_classCallCheck$2(this,PlatformRef);}_createClass$2(PlatformRef,[{key:'bootstrapModuleFactory',/**
     * Creates an instance of an `\@NgModule` for the given platform
     * for offline compilation.
     *
     * ## Simple Example
     *
     * ```typescript
     * my_module.ts:
     *
     * \@NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * main.ts:
     * import {MyModuleNgFactory} from './my_module.ngfactory';
     * import {platformBrowser} from '\@angular/platform-browser';
     *
     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);
     * ```
     *
     * \@experimental APIs related to application bootstrap are currently under review.
     * @abstract
     * @param {?} moduleFactory
     * @return {?}
     */value:function bootstrapModuleFactory(moduleFactory){}/**
     * Creates an instance of an `\@NgModule` for a given platform using the given runtime compiler.
     *
     * ## Simple Example
     *
     * ```typescript
     * \@NgModule({
     *   imports: [BrowserModule]
     * })
     * class MyModule {}
     *
     * let moduleRef = platformBrowser().bootstrapModule(MyModule);
     * ```
     * \@stable
     * @abstract
     * @param {?} moduleType
     * @param {?=} compilerOptions
     * @return {?}
     */},{key:'bootstrapModule',value:function bootstrapModule(moduleType,compilerOptions){}/**
     * Register a listener to be called when the platform is disposed.
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}/**
     * Retrieve the platform {\@link Injector}, which is the parent injector for
     * every Angular application on the page and provides singleton providers.
     * @abstract
     * @return {?}
     */},{key:'injector',value:function injector(){}/**
     * Destroy the Angular platform and all Angular applications on the page.
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroyed',value:function destroyed(){}}]);return PlatformRef;}();/**
 * @param {?} errorHandler
 * @param {?} callback
 * @return {?}
 */function _callAndReportToErrorHandler(errorHandler,callback){try{var/** @type {?} */result=callback();if(isPromise(result)){return result.catch(function(e){errorHandler.handleError(e);// rethrow as the exception handler might not do it
throw e;});}return result;}catch(e){errorHandler.handleError(e);// rethrow as the exception handler might not do it
throw e;}}/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var PlatformRef_=function(_PlatformRef){_inherits$2(PlatformRef_,_PlatformRef);/**
     * @param {?} _injector
     */function PlatformRef_(_injector){_classCallCheck$2(this,PlatformRef_);var _this15=_possibleConstructorReturn$2(this,(PlatformRef_.__proto__||Object.getPrototypeOf(PlatformRef_)).call(this));_this15._injector=_injector;_this15._modules=[];_this15._destroyListeners=[];_this15._destroyed=false;return _this15;}/**
     * @param {?} callback
     * @return {?}
     */_createClass$2(PlatformRef_,[{key:'onDestroy',value:function onDestroy(callback){this._destroyListeners.push(callback);}/**
     * @return {?}
     */},{key:'destroy',/**
     * @return {?}
     */value:function destroy(){if(this._destroyed){throw new Error('The platform has already been destroyed!');}this._modules.slice().forEach(function(module){return module.destroy();});this._destroyListeners.forEach(function(listener){return listener();});this._destroyed=true;}/**
     * @param {?} moduleFactory
     * @return {?}
     */},{key:'bootstrapModuleFactory',value:function bootstrapModuleFactory(moduleFactory){return this._bootstrapModuleFactoryWithZone(moduleFactory,null);}/**
     * @param {?} moduleFactory
     * @param {?} ngZone
     * @return {?}
     */},{key:'_bootstrapModuleFactoryWithZone',value:function _bootstrapModuleFactoryWithZone(moduleFactory,ngZone){var _this16=this;// Note: We need to create the NgZone _before_ we instantiate the module,
// as instantiating the module creates some providers eagerly.
// So we create a mini parent injector that just contains the new NgZone and
// pass that as parent to the NgModuleFactory.
if(!ngZone)ngZone=new NgZone({enableLongStackTrace:isDevMode()});// Attention: Don't use ApplicationRef.run here,
// as we want to be sure that all possible constructor calls are inside `ngZone.run`!
return ngZone.run(function(){var/** @type {?} */ngZoneInjector=ReflectiveInjector.resolveAndCreate([{provide:NgZone,useValue:ngZone}],_this16.injector);var/** @type {?} */moduleRef=moduleFactory.create(ngZoneInjector);var/** @type {?} */exceptionHandler=moduleRef.injector.get(ErrorHandler,null);if(!exceptionHandler){throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');}moduleRef.onDestroy(function(){return ListWrapper.remove(_this16._modules,moduleRef);});ngZone.onError.subscribe({next:function next(error){exceptionHandler.handleError(error);}});return _callAndReportToErrorHandler(exceptionHandler,function(){var/** @type {?} */initStatus=moduleRef.injector.get(ApplicationInitStatus);return initStatus.donePromise.then(function(){_this16._moduleDoBootstrap(moduleRef);return moduleRef;});});});}/**
     * @param {?} moduleType
     * @param {?=} compilerOptions
     * @return {?}
     */},{key:'bootstrapModule',value:function bootstrapModule(moduleType){var compilerOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return this._bootstrapModuleWithZone(moduleType,compilerOptions,null);}/**
     * @param {?} moduleType
     * @param {?=} compilerOptions
     * @param {?=} ngZone
     * @return {?}
     */},{key:'_bootstrapModuleWithZone',value:function _bootstrapModuleWithZone(moduleType){var _this17=this;var compilerOptions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var ngZone=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */compilerFactory=this.injector.get(CompilerFactory);var/** @type {?} */compiler=compilerFactory.createCompiler(Array.isArray(compilerOptions)?compilerOptions:[compilerOptions]);return compiler.compileModuleAsync(moduleType).then(function(moduleFactory){return _this17._bootstrapModuleFactoryWithZone(moduleFactory,ngZone);});}/**
     * @param {?} moduleRef
     * @return {?}
     */},{key:'_moduleDoBootstrap',value:function _moduleDoBootstrap(moduleRef){var/** @type {?} */appRef=moduleRef.injector.get(ApplicationRef);if(moduleRef.bootstrapFactories.length>0){moduleRef.bootstrapFactories.forEach(function(compFactory){return appRef.bootstrap(compFactory);});}else if(moduleRef.instance.ngDoBootstrap){moduleRef.instance.ngDoBootstrap(appRef);}else{throw new Error('The module '+stringify$2(moduleRef.instance.constructor)+' was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. '+'Please define one of these.');}this._modules.push(moduleRef);}},{key:'injector',get:function get(){return this._injector;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return this._destroyed;}}]);return PlatformRef_;}(PlatformRef);PlatformRef_.decorators=[{type:Injectable}];/** @nocollapse */PlatformRef_.ctorParameters=function(){return[{type:Injector}];};/**
 * A reference to an Angular application running on a page.
 *
 * For more about Angular applications, see the documentation for {\@link bootstrap}.
 *
 * \@stable
 * @abstract
 */var ApplicationRef=function(){function ApplicationRef(){_classCallCheck$2(this,ApplicationRef);}_createClass$2(ApplicationRef,[{key:'bootstrap',/**
     * Bootstrap a new component at the root level of the application.
     *
     * ### Bootstrap process
     *
     * When bootstrapping a new root component into an application, Angular mounts the
     * specified application component onto DOM elements identified by the [componentType]'s
     * selector and kicks off automatic change detection to finish initializing the component.
     *
     * ### Example
     * {\@example core/ts/platform/platform.ts region='longform'}
     * @abstract
     * @param {?} componentFactory
     * @return {?}
     */value:function bootstrap(componentFactory){}/**
     * Invoke this method to explicitly process change detection and its side-effects.
     *
     * In development mode, `tick()` also performs a second change detection cycle to ensure that no
     * further changes are detected. If additional changes are picked up during this second cycle,
     * bindings in the app have side-effects that cannot be resolved in a single change detection
     * pass.
     * In this case, Angular throws an error, since an Angular application can only have one change
     * detection pass during which all change detection must complete.
     * @abstract
     * @return {?}
     */},{key:'tick',value:function tick(){}/**
     * Get a list of component types registered to this application.
     * This list is populated even before the component is created.
     * @abstract
     * @return {?}
     */},{key:'componentTypes',value:function componentTypes(){}/**
     * Get a list of components registered to this application.
     * @abstract
     * @return {?}
     */},{key:'components',value:function components(){}/**
     * Attaches a view so that it will be dirty checked.
     * The view will be automatically detached when it is destroyed.
     * This will throw if the view is already attached to a ViewContainer.
     * @abstract
     * @param {?} view
     * @return {?}
     */},{key:'attachView',value:function attachView(view){}/**
     * Detaches a view from dirty checking again.
     * @abstract
     * @param {?} view
     * @return {?}
     */},{key:'detachView',value:function detachView(view){}/**
     * Returns the number of attached views.
     * @abstract
     * @return {?}
     */},{key:'viewCount',value:function viewCount(){}/**
     * Returns an Observable that indicates when the application is stable or unstable.
     * @abstract
     * @return {?}
     */},{key:'isStable',value:function isStable(){}}]);return ApplicationRef;}();/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var ApplicationRef_=function(_ApplicationRef){_inherits$2(ApplicationRef_,_ApplicationRef);/**
     * @param {?} _zone
     * @param {?} _console
     * @param {?} _injector
     * @param {?} _exceptionHandler
     * @param {?} _componentFactoryResolver
     * @param {?} _initStatus
     * @param {?} _testabilityRegistry
     * @param {?} _testability
     */function ApplicationRef_(_zone,_console,_injector,_exceptionHandler,_componentFactoryResolver,_initStatus,_testabilityRegistry,_testability){_classCallCheck$2(this,ApplicationRef_);var _this18=_possibleConstructorReturn$2(this,(ApplicationRef_.__proto__||Object.getPrototypeOf(ApplicationRef_)).call(this));_this18._zone=_zone;_this18._console=_console;_this18._injector=_injector;_this18._exceptionHandler=_exceptionHandler;_this18._componentFactoryResolver=_componentFactoryResolver;_this18._initStatus=_initStatus;_this18._testabilityRegistry=_testabilityRegistry;_this18._testability=_testability;_this18._bootstrapListeners=[];_this18._rootComponents=[];_this18._rootComponentTypes=[];_this18._views=[];_this18._runningTick=false;_this18._enforceNoNewChanges=false;_this18._stable=true;_this18._enforceNoNewChanges=isDevMode();_this18._zone.onMicrotaskEmpty.subscribe({next:function next(){_this18._zone.run(function(){_this18.tick();});}});var isCurrentlyStable=new Observable$$1(function(observer){_this18._stable=_this18._zone.isStable&&!_this18._zone.hasPendingMacrotasks&&!_this18._zone.hasPendingMicrotasks;_this18._zone.runOutsideAngular(function(){observer.next(_this18._stable);observer.complete();});});var isStable=new Observable$$1(function(observer){var stableSub=_this18._zone.onStable.subscribe(function(){NgZone.assertNotInAngularZone();// Check whether there are no pending macro/micro tasks in the next tick
// to allow for NgZone to update the state.
scheduleMicroTask(function(){if(!_this18._stable&&!_this18._zone.hasPendingMacrotasks&&!_this18._zone.hasPendingMicrotasks){_this18._stable=true;observer.next(true);}});});var unstableSub=_this18._zone.onUnstable.subscribe(function(){NgZone.assertInAngularZone();if(_this18._stable){_this18._stable=false;_this18._zone.runOutsideAngular(function(){observer.next(false);});}});return function(){stableSub.unsubscribe();unstableSub.unsubscribe();};});_this18._isStable=merge$$1(isCurrentlyStable,share$$1.call(isStable));return _this18;}/**
     * @param {?} viewRef
     * @return {?}
     */_createClass$2(ApplicationRef_,[{key:'attachView',value:function attachView(viewRef){var/** @type {?} */view=viewRef;this._views.push(view);view.attachToAppRef(this);}/**
     * @param {?} viewRef
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRef){var/** @type {?} */view=viewRef;ListWrapper.remove(this._views,view);view.detachFromAppRef();}/**
     * @param {?} componentOrFactory
     * @return {?}
     */},{key:'bootstrap',value:function bootstrap(componentOrFactory){var _this19=this;if(!this._initStatus.done){throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');}var/** @type {?} */componentFactory=void 0;if(componentOrFactory instanceof ComponentFactory){componentFactory=componentOrFactory;}else{componentFactory=this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);}this._rootComponentTypes.push(componentFactory.componentType);var/** @type {?} */compRef=componentFactory.create(this._injector,[],componentFactory.selector);compRef.onDestroy(function(){_this19._unloadComponent(compRef);});var/** @type {?} */testability=compRef.injector.get(Testability,null);if(testability){compRef.injector.get(TestabilityRegistry).registerApplication(compRef.location.nativeElement,testability);}this._loadComponent(compRef);if(isDevMode()){this._console.log('Angular is running in the development mode. Call enableProdMode() to enable the production mode.');}return compRef;}/**
     * @param {?} componentRef
     * @return {?}
     */},{key:'_loadComponent',value:function _loadComponent(componentRef){this.attachView(componentRef.hostView);this.tick();this._rootComponents.push(componentRef);// Get the listeners lazily to prevent DI cycles.
var/** @type {?} */listeners=this._injector.get(APP_BOOTSTRAP_LISTENER,[]).concat(this._bootstrapListeners);listeners.forEach(function(listener){return listener(componentRef);});}/**
     * @param {?} componentRef
     * @return {?}
     */},{key:'_unloadComponent',value:function _unloadComponent(componentRef){this.detachView(componentRef.hostView);ListWrapper.remove(this._rootComponents,componentRef);}/**
     * @return {?}
     */},{key:'tick',value:function tick(){if(this._runningTick){throw new Error('ApplicationRef.tick is called recursively');}var/** @type {?} */scope=ApplicationRef_._tickScope();try{this._runningTick=true;this._views.forEach(function(view){return view.detectChanges();});if(this._enforceNoNewChanges){this._views.forEach(function(view){return view.checkNoChanges();});}}finally{this._runningTick=false;wtfLeave(scope);}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){// TODO(alxhub): Dispose of the NgZone.
this._views.slice().forEach(function(view){return view.destroy();});}/**
     * @return {?}
     */},{key:'viewCount',get:function get(){return this._views.length;}/**
     * @return {?}
     */},{key:'componentTypes',get:function get(){return this._rootComponentTypes;}/**
     * @return {?}
     */},{key:'components',get:function get(){return this._rootComponents;}/**
     * @return {?}
     */},{key:'isStable',get:function get(){return this._isStable;}}]);return ApplicationRef_;}(ApplicationRef);/** @internal */ApplicationRef_._tickScope=wtfCreateScope('ApplicationRef#tick()');ApplicationRef_.decorators=[{type:Injectable}];/** @nocollapse */ApplicationRef_.ctorParameters=function(){return[{type:NgZone},{type:Console},{type:Injector},{type:ErrorHandler},{type:ComponentFactoryResolver},{type:ApplicationInitStatus},{type:TestabilityRegistry,decorators:[{type:Optional}]},{type:Testability,decorators:[{type:Optional}]}];};/**
 * Represents an instance of an NgModule created via a {\@link NgModuleFactory}.
 *
 * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this
 * NgModule Instance.
 *
 * \@stable
 * @abstract
 */var NgModuleRef=function(){function NgModuleRef(){_classCallCheck$2(this,NgModuleRef);}_createClass$2(NgModuleRef,[{key:'injector',/**
     * The injector that contains all of the providers of the NgModule.
     * @abstract
     * @return {?}
     */value:function injector(){}/**
     * The ComponentFactoryResolver to get hold of the ComponentFactories
     * declared in the `entryComponents` property of the module.
     * @abstract
     * @return {?}
     */},{key:'componentFactoryResolver',value:function componentFactoryResolver(){}/**
     * The NgModule instance.
     * @abstract
     * @return {?}
     */},{key:'instance',value:function instance(){}/**
     * Destroys the module instance and all of the data structures associated with it.
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * Allows to register a callback that will be called when the module is destroyed.
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}}]);return NgModuleRef;}();/**
 * \@experimental
 */var NgModuleFactory=function(){/**
     * @param {?} _injectorClass
     * @param {?} _moduleType
     */function NgModuleFactory(_injectorClass,_moduleType){_classCallCheck$2(this,NgModuleFactory);this._injectorClass=_injectorClass;this._moduleType=_moduleType;}/**
     * @return {?}
     */_createClass$2(NgModuleFactory,[{key:'create',/**
     * @param {?} parentInjector
     * @return {?}
     */value:function create(parentInjector){if(!parentInjector){parentInjector=Injector.NULL;}var/** @type {?} */instance=new this._injectorClass(parentInjector);instance.create();return instance;}},{key:'moduleType',get:function get(){return this._moduleType;}}]);return NgModuleFactory;}();var _UNDEFINED=new Object();/**
 * @abstract
 */var NgModuleInjector=function(_CodegenComponentFact){_inherits$2(NgModuleInjector,_CodegenComponentFact);/**
     * @param {?} parent
     * @param {?} factories
     * @param {?} bootstrapFactories
     */function NgModuleInjector(parent,factories,bootstrapFactories){_classCallCheck$2(this,NgModuleInjector);var _this20=_possibleConstructorReturn$2(this,(NgModuleInjector.__proto__||Object.getPrototypeOf(NgModuleInjector)).call(this,factories,parent.get(ComponentFactoryResolver,ComponentFactoryResolver.NULL)));_this20.parent=parent;_this20.bootstrapFactories=bootstrapFactories;_this20._destroyListeners=[];_this20._destroyed=false;return _this20;}/**
     * @return {?}
     */_createClass$2(NgModuleInjector,[{key:'create',value:function create(){this.instance=this.createInternal();}/**
     * @abstract
     * @return {?}
     */},{key:'createInternal',value:function createInternal(){}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:THROW_IF_NOT_FOUND;if(token===Injector||token===ComponentFactoryResolver){return this;}var/** @type {?} */result=this.getInternal(token,_UNDEFINED);return result===_UNDEFINED?this.parent.get(token,notFoundValue):result;}/**
     * @abstract
     * @param {?} token
     * @param {?} notFoundValue
     * @return {?}
     */},{key:'getInternal',value:function getInternal(token,notFoundValue){}/**
     * @return {?}
     */},{key:'destroy',/**
     * @return {?}
     */value:function destroy(){if(this._destroyed){throw new Error('The ng module '+stringify$2(this.instance.constructor)+' has already been destroyed.');}this._destroyed=true;this.destroyInternal();this._destroyListeners.forEach(function(listener){return listener();});}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){this._destroyListeners.push(callback);}/**
     * @abstract
     * @return {?}
     */},{key:'destroyInternal',value:function destroyInternal(){}},{key:'injector',get:function get(){return this;}/**
     * @return {?}
     */},{key:'componentFactoryResolver',get:function get(){return this;}}]);return NgModuleInjector;}(CodegenComponentFactoryResolver);/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * Used to load ng module factories.
 * \@stable
 * @abstract
 */var NgModuleFactoryLoader=function(){function NgModuleFactoryLoader(){_classCallCheck$2(this,NgModuleFactoryLoader);}_createClass$2(NgModuleFactoryLoader,[{key:'load',/**
     * @abstract
     * @param {?} path
     * @return {?}
     */value:function load(path){}}]);return NgModuleFactoryLoader;}();var QueryList=function(){function QueryList(){_classCallCheck$2(this,QueryList);this._dirty=true;this._results=[];this._emitter=new EventEmitter$1();}/**
     * @return {?}
     */_createClass$2(QueryList,[{key:'map',/**
     * See
     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
     * @param {?} fn
     * @return {?}
     */value:function map(fn){return this._results.map(fn);}/**
     * See
     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
     * @param {?} fn
     * @return {?}
     */},{key:'filter',value:function filter(fn){return this._results.filter(fn);}/**
     * See
     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)
     * @param {?} fn
     * @return {?}
     */},{key:'find',value:function find(fn){return this._results.find(fn);}/**
     * See
     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)
     * @param {?} fn
     * @param {?} init
     * @return {?}
     */},{key:'reduce',value:function reduce(fn,init){return this._results.reduce(fn,init);}/**
     * See
     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)
     * @param {?} fn
     * @return {?}
     */},{key:'forEach',value:function forEach(fn){this._results.forEach(fn);}/**
     * See
     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)
     * @param {?} fn
     * @return {?}
     */},{key:'some',value:function some(fn){return this._results.some(fn);}/**
     * @return {?}
     */},{key:'toArray',value:function toArray(){return this._results.slice();}/**
     * @return {?}
     */},{key:getSymbolIterator$1(),value:function value(){return this._results[getSymbolIterator$1()]();}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return this._results.toString();}/**
     * @param {?} res
     * @return {?}
     */},{key:'reset',value:function reset(res){this._results=ListWrapper.flatten(res);this._dirty=false;}/**
     * @return {?}
     */},{key:'notifyOnChanges',value:function notifyOnChanges(){this._emitter.emit(this);}/**
     * internal
     * @return {?}
     */},{key:'setDirty',value:function setDirty(){this._dirty=true;}/**
     * internal
     * @return {?}
     */},{key:'changes',get:function get(){return this._emitter;}/**
     * @return {?}
     */},{key:'length',get:function get(){return this._results.length;}/**
     * @return {?}
     */},{key:'first',get:function get(){return this._results[0];}/**
     * @return {?}
     */},{key:'last',get:function get(){return this._results[this.length-1];}},{key:'dirty',get:function get(){return this._dirty;}}]);return QueryList;}();var _SEPARATOR='#';var FACTORY_CLASS_SUFFIX='NgFactory';/**
 * Configuration for SystemJsNgModuleLoader.
 * token.
 *
 * \@experimental
 * @abstract
 */var SystemJsNgModuleLoaderConfig=function SystemJsNgModuleLoaderConfig(){_classCallCheck$2(this,SystemJsNgModuleLoaderConfig);};var DEFAULT_CONFIG={factoryPathPrefix:'',factoryPathSuffix:'.ngfactory'};/**
 * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory
 * \@experimental
 */var SystemJsNgModuleLoader=function(){/**
     * @param {?} _compiler
     * @param {?=} config
     */function SystemJsNgModuleLoader(_compiler,config){_classCallCheck$2(this,SystemJsNgModuleLoader);this._compiler=_compiler;this._config=config||DEFAULT_CONFIG;}/**
     * @param {?} path
     * @return {?}
     */_createClass$2(SystemJsNgModuleLoader,[{key:'load',value:function load(path){var/** @type {?} */offlineMode=this._compiler instanceof Compiler;return offlineMode?this.loadFactory(path):this.loadAndCompile(path);}/**
     * @param {?} path
     * @return {?}
     */},{key:'loadAndCompile',value:function loadAndCompile(path){var _this21=this;var _path$split=path.split(_SEPARATOR),_path$split2=_slicedToArray$2(_path$split,2),module=_path$split2[0],exportName=_path$split2[1];if(exportName===undefined){exportName='default';}return System.import(module).then(function(module){return module[exportName];}).then(function(type){return checkNotEmpty(type,module,exportName);}).then(function(type){return _this21._compiler.compileModuleAsync(type);});}/**
     * @param {?} path
     * @return {?}
     */},{key:'loadFactory',value:function loadFactory(path){var _path$split3=path.split(_SEPARATOR),_path$split4=_slicedToArray$2(_path$split3,2),module=_path$split4[0],exportName=_path$split4[1];var/** @type {?} */factoryClassSuffix=FACTORY_CLASS_SUFFIX;if(exportName===undefined){exportName='default';factoryClassSuffix='';}return System.import(this._config.factoryPathPrefix+module+this._config.factoryPathSuffix).then(function(module){return module[exportName+factoryClassSuffix];}).then(function(factory){return checkNotEmpty(factory,module,exportName);});}}]);return SystemJsNgModuleLoader;}();SystemJsNgModuleLoader.decorators=[{type:Injectable}];/** @nocollapse */SystemJsNgModuleLoader.ctorParameters=function(){return[{type:Compiler},{type:SystemJsNgModuleLoaderConfig,decorators:[{type:Optional}]}];};/**
 * @param {?} value
 * @param {?} modulePath
 * @param {?} exportName
 * @return {?}
 */function checkNotEmpty(value,modulePath,exportName){if(!value){throw new Error('Cannot find \''+exportName+'\' in \''+modulePath+'\'');}return value;}/**
 * Represents an Embedded Template that can be used to instantiate Embedded Views.
 *
 * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element
 * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into
 * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for
 * the `TemplateRef` from a Component or a Directive via {\@link Query}.
 *
 * To instantiate Embedded Views based on a Template, use
 * {\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the
 * View Container.
 * \@stable
 * @abstract
 */var TemplateRef=function(){function TemplateRef(){_classCallCheck$2(this,TemplateRef);}_createClass$2(TemplateRef,[{key:'elementRef',/**
     * @abstract
     * @return {?}
     */value:function elementRef(){}/**
     * @abstract
     * @param {?} context
     * @return {?}
     */},{key:'createEmbeddedView',value:function createEmbeddedView(context){}}]);return TemplateRef;}();/**
 * workaround https://github.com/angular/tsickle/issues/350
 * @suppress {checkTypes}
 */var TemplateRef_=function(_TemplateRef){_inherits$2(TemplateRef_,_TemplateRef);/**
     * @param {?} _parentView
     * @param {?} _nodeIndex
     * @param {?} _nativeElement
     */function TemplateRef_(_parentView,_nodeIndex,_nativeElement){_classCallCheck$2(this,TemplateRef_);var _this22=_possibleConstructorReturn$2(this,(TemplateRef_.__proto__||Object.getPrototypeOf(TemplateRef_)).call(this));_this22._parentView=_parentView;_this22._nodeIndex=_nodeIndex;_this22._nativeElement=_nativeElement;return _this22;}/**
     * @param {?} context
     * @return {?}
     */_createClass$2(TemplateRef_,[{key:'createEmbeddedView',value:function createEmbeddedView(context){var/** @type {?} */view=this._parentView.createEmbeddedViewInternal(this._nodeIndex);view.create(context||{});return view.ref;}/**
     * @return {?}
     */},{key:'elementRef',get:function get(){return new ElementRef(this._nativeElement);}}]);return TemplateRef_;}(TemplateRef);/**
 * Represents a container where one or more Views can be attached.
 *
 * The container can contain two kinds of Views. Host Views, created by instantiating a
 * {\@link Component} via {\@link #createComponent}, and Embedded Views, created by instantiating an
 * {\@link TemplateRef Embedded Template} via {\@link #createEmbeddedView}.
 *
 * The location of the View Container within the containing View is specified by the Anchor
 * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only
 * have a single View Container.
 *
 * Root elements of Views attached to this container become siblings of the Anchor Element in
 * the Rendered View.
 *
 * To access a `ViewContainerRef` of an Element, you can either place a {\@link Directive} injected
 * with `ViewContainerRef` on the Element, or you obtain it via a {\@link ViewChild} query.
 * \@stable
 * @abstract
 */var ViewContainerRef=function(){function ViewContainerRef(){_classCallCheck$2(this,ViewContainerRef);}_createClass$2(ViewContainerRef,[{key:'element',/**
     * Anchor element that specifies the location of this container in the containing View.
     * <!-- TODO: rename to anchorElement -->
     * @abstract
     * @return {?}
     */value:function element(){}/**
     * @abstract
     * @return {?}
     */},{key:'injector',value:function injector(){}/**
     * @abstract
     * @return {?}
     */},{key:'parentInjector',value:function parentInjector(){}/**
     * Destroys all Views in this container.
     * @abstract
     * @return {?}
     */},{key:'clear',value:function clear(){}/**
     * Returns the {\@link ViewRef} for the View located in this container at the specified index.
     * @abstract
     * @param {?} index
     * @return {?}
     */},{key:'get',value:function get(index){}/**
     * Returns the number of Views currently attached to this container.
     * @abstract
     * @return {?}
     */},{key:'length',value:function length(){}/**
     * Instantiates an Embedded View based on the {\@link TemplateRef `templateRef`} and inserts it
     * into this container at the specified `index`.
     *
     * If `index` is not specified, the new View will be inserted as the last View in the container.
     *
     * Returns the {\@link ViewRef} for the newly created View.
     * @abstract
     * @param {?} templateRef
     * @param {?=} context
     * @param {?=} index
     * @return {?}
     */},{key:'createEmbeddedView',value:function createEmbeddedView(templateRef,context,index){}/**
     * Instantiates a single {\@link Component} and inserts its Host View into this container at the
     * specified `index`.
     *
     * The component is instantiated using its {\@link ComponentFactory} which can be
     * obtained via {\@link ComponentFactoryResolver#resolveComponentFactory}.
     *
     * If `index` is not specified, the new View will be inserted as the last View in the container.
     *
     * You can optionally specify the {\@link Injector} that will be used as parent for the Component.
     *
     * Returns the {\@link ComponentRef} of the Host View created for the newly instantiated Component.
     * @abstract
     * @param {?} componentFactory
     * @param {?=} index
     * @param {?=} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createComponent',value:function createComponent(componentFactory,index,injector,projectableNodes){}/**
     * Inserts a View identified by a {\@link ViewRef} into the container at the specified `index`.
     *
     * If `index` is not specified, the new View will be inserted as the last View in the container.
     *
     * Returns the inserted {\@link ViewRef}.
     * @abstract
     * @param {?} viewRef
     * @param {?=} index
     * @return {?}
     */},{key:'insert',value:function insert(viewRef,index){}/**
     * Moves a View identified by a {\@link ViewRef} into the container at the specified `index`.
     *
     * Returns the inserted {\@link ViewRef}.
     * @abstract
     * @param {?} viewRef
     * @param {?} currentIndex
     * @return {?}
     */},{key:'move',value:function move(viewRef,currentIndex){}/**
     * Returns the index of the View, specified via {\@link ViewRef}, within the current container or
     * `-1` if this container doesn't contain the View.
     * @abstract
     * @param {?} viewRef
     * @return {?}
     */},{key:'indexOf',value:function indexOf(viewRef){}/**
     * Destroys a View attached to this container at the specified `index`.
     *
     * If `index` is not specified, the last View in the container will be removed.
     * @abstract
     * @param {?=} index
     * @return {?}
     */},{key:'remove',value:function remove(index){}/**
     * Use along with {\@link #insert} to move a View within the current container.
     *
     * If the `index` param is omitted, the last {\@link ViewRef} is detached.
     * @abstract
     * @param {?=} index
     * @return {?}
     */},{key:'detach',value:function detach(index){}}]);return ViewContainerRef;}();var ViewContainerRef_=function(){/**
     * @param {?} _element
     */function ViewContainerRef_(_element){_classCallCheck$2(this,ViewContainerRef_);this._element=_element;/** @internal */this._createComponentInContainerScope=wtfCreateScope('ViewContainerRef#createComponent()');/** @internal */this._insertScope=wtfCreateScope('ViewContainerRef#insert()');/** @internal */this._removeScope=wtfCreateScope('ViewContainerRef#remove()');/** @internal */this._detachScope=wtfCreateScope('ViewContainerRef#detach()');}/**
     * @param {?} index
     * @return {?}
     */_createClass$2(ViewContainerRef_,[{key:'get',value:function get(index){return this._element.nestedViews[index].ref;}/**
     * @return {?}
     */},{key:'createEmbeddedView',/**
     * @param {?} templateRef
     * @param {?=} context
     * @param {?=} index
     * @return {?}
     */value:function createEmbeddedView(templateRef){var context=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var index=arguments.length>2&&arguments[2]!==undefined?arguments[2]:-1;var/** @type {?} */viewRef=templateRef.createEmbeddedView(context);this.insert(viewRef,index);return viewRef;}/**
     * @param {?} componentFactory
     * @param {?=} index
     * @param {?=} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createComponent',value:function createComponent(componentFactory){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var injector=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var projectableNodes=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var/** @type {?} */s=this._createComponentInContainerScope();var/** @type {?} */contextInjector=injector||this._element.parentInjector;var/** @type {?} */componentRef=componentFactory.create(contextInjector,projectableNodes);this.insert(componentRef.hostView,index);return wtfLeave(s,componentRef);}/**
     * @param {?} viewRef
     * @param {?=} index
     * @return {?}
     */},{key:'insert',value:function insert(viewRef){var index=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var/** @type {?} */s=this._insertScope();if(index==-1)index=this.length;var/** @type {?} */viewRef_=viewRef;this._element.attachView(viewRef_.internalView,index);return wtfLeave(s,viewRef_);}/**
     * @param {?} viewRef
     * @param {?} currentIndex
     * @return {?}
     */},{key:'move',value:function move(viewRef,currentIndex){var/** @type {?} */s=this._insertScope();if(currentIndex==-1)return;var/** @type {?} */viewRef_=viewRef;this._element.moveView(viewRef_.internalView,currentIndex);return wtfLeave(s,viewRef_);}/**
     * @param {?} viewRef
     * @return {?}
     */},{key:'indexOf',value:function indexOf(viewRef){return this.length?this._element.nestedViews.indexOf(viewRef.internalView):-1;}/**
     * @param {?=} index
     * @return {?}
     */},{key:'remove',value:function remove(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:-1;var/** @type {?} */s=this._removeScope();if(index==-1)index=this.length-1;var/** @type {?} */view=this._element.detachView(index);view.destroy();// view is intentionally not returned to the client.
wtfLeave(s);}/**
     * @param {?=} index
     * @return {?}
     */},{key:'detach',value:function detach(){var index=arguments.length>0&&arguments[0]!==undefined?arguments[0]:-1;var/** @type {?} */s=this._detachScope();if(index==-1)index=this.length-1;var/** @type {?} */view=this._element.detachView(index);return wtfLeave(s,view.ref);}/**
     * @return {?}
     */},{key:'clear',value:function clear(){for(var/** @type {?} */i=this.length-1;i>=0;i--){this.remove(i);}}},{key:'length',get:function get(){var/** @type {?} */views=this._element.nestedViews;return views?views.length:0;}/**
     * @return {?}
     */},{key:'element',get:function get(){return this._element.elementRef;}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this._element.injector;}/**
     * @return {?}
     */},{key:'parentInjector',get:function get(){return this._element.parentInjector;}}]);return ViewContainerRef_;}();/**
 * \@stable
 * @abstract
 */var ViewRef=function(_ChangeDetectorRef){_inherits$2(ViewRef,_ChangeDetectorRef);function ViewRef(){_classCallCheck$2(this,ViewRef);return _possibleConstructorReturn$2(this,(ViewRef.__proto__||Object.getPrototypeOf(ViewRef)).apply(this,arguments));}_createClass$2(ViewRef,[{key:'destroy',/**
     * Destroys the view and all of the data structures associated with it.
     * @abstract
     * @return {?}
     */value:function destroy(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroyed',value:function destroyed(){}/**
     * @abstract
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){}}]);return ViewRef;}(ChangeDetectorRef);/**
 * Represents an Angular View.
 *
 * <!-- TODO: move the next two paragraphs to the dev guide -->
 * A View is a fundamental building block of the application UI. It is the smallest grouping of
 * Elements which are created and destroyed together.
 *
 * Properties of elements in a View can change, but the structure (number and order) of elements in
 * a View cannot. Changing the structure of Elements can only be done by inserting, moving or
 * removing nested Views via a {\@link ViewContainerRef}. Each View can contain many View Containers.
 * <!-- /TODO -->
 *
 * ### Example
 *
 * Given this template...
 *
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <li *ngFor="let  item of items">{{item}}</li>
 * </ul>
 * ```
 *
 * We have two {\@link TemplateRef}s:
 *
 * Outer {\@link TemplateRef}:
 * ```
 * Count: {{items.length}}
 * <ul>
 *   <ng-template ngFor let-item [ngForOf]="items"></ng-template>
 * </ul>
 * ```
 *
 * Inner {\@link TemplateRef}:
 * ```
 *   <li>{{item}}</li>
 * ```
 *
 * Notice that the original template is broken down into two separate {\@link TemplateRef}s.
 *
 * The outer/inner {\@link TemplateRef}s are then assembled into views like so:
 *
 * ```
 * <!-- ViewRef: outer-0 -->
 * Count: 2
 * <ul>
 *   <ng-template view-container-ref></ng-template>
 *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->
 *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->
 * </ul>
 * <!-- /ViewRef: outer-0 -->
 * ```
 * \@experimental
 * @abstract
 */var EmbeddedViewRef=function(_ViewRef){_inherits$2(EmbeddedViewRef,_ViewRef);function EmbeddedViewRef(){_classCallCheck$2(this,EmbeddedViewRef);return _possibleConstructorReturn$2(this,(EmbeddedViewRef.__proto__||Object.getPrototypeOf(EmbeddedViewRef)).apply(this,arguments));}_createClass$2(EmbeddedViewRef,[{key:'context',/**
     * @abstract
     * @return {?}
     */value:function context(){}/**
     * @abstract
     * @return {?}
     */},{key:'rootNodes',value:function rootNodes(){}}]);return EmbeddedViewRef;}(ViewRef);var ViewRef_=function(){/**
     * @param {?} _view
     * @param {?} animationQueue
     */function ViewRef_(_view,animationQueue){_classCallCheck$2(this,ViewRef_);this._view=_view;this.animationQueue=animationQueue;this._view=_view;this._originalMode=this._view.cdMode;}/**
     * @return {?}
     */_createClass$2(ViewRef_,[{key:'markForCheck',/**
     * @return {?}
     */value:function markForCheck(){this._view.markPathToRootAsCheckOnce();}/**
     * @return {?}
     */},{key:'detach',value:function detach(){this._view.cdMode=ChangeDetectorStatus.Detached;}/**
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(){this._view.detectChanges(false);this.animationQueue.flush();}/**
     * @return {?}
     */},{key:'checkNoChanges',value:function checkNoChanges(){this._view.detectChanges(true);}/**
     * @return {?}
     */},{key:'reattach',value:function reattach(){this._view.cdMode=this._originalMode;this.markForCheck();}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){if(!this._view.disposables){this._view.disposables=[];}this._view.disposables.push(callback);}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this._view.detachAndDestroy();}/**
     * @return {?}
     */},{key:'detachFromAppRef',value:function detachFromAppRef(){this._view.detach();}/**
     * @param {?} appRef
     * @return {?}
     */},{key:'attachToAppRef',value:function attachToAppRef(appRef){this._view.attachToAppRef(appRef);}},{key:'internalView',get:function get(){return this._view;}/**
     * @return {?}
     */},{key:'rootNodes',get:function get(){return this._view.flatRootNodes;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._view.context;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return this._view.destroyed;}}]);return ViewRef_;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var EventListener=/**
     * @param {?} name
     * @param {?} callback
     */function EventListener(name,callback){_classCallCheck$2(this,EventListener);this.name=name;this.callback=callback;};/**
 * \@experimental All debugging apis are currently experimental.
 */var DebugNode=function(){/**
     * @param {?} nativeNode
     * @param {?} parent
     * @param {?} _debugInfo
     */function DebugNode(nativeNode,parent,_debugInfo){_classCallCheck$2(this,DebugNode);this._debugInfo=_debugInfo;this.nativeNode=nativeNode;if(parent&&parent instanceof DebugElement){parent.addChild(this);}else{this.parent=null;}this.listeners=[];}/**
     * @return {?}
     */_createClass$2(DebugNode,[{key:'injector',get:function get(){return this._debugInfo?this._debugInfo.injector:null;}/**
     * @return {?}
     */},{key:'componentInstance',get:function get(){return this._debugInfo?this._debugInfo.component:null;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._debugInfo?this._debugInfo.context:null;}/**
     * @return {?}
     */},{key:'references',get:function get(){return this._debugInfo?this._debugInfo.references:null;}/**
     * @return {?}
     */},{key:'providerTokens',get:function get(){return this._debugInfo?this._debugInfo.providerTokens:null;}/**
     * @return {?}
     */},{key:'source',get:function get(){return this._debugInfo?this._debugInfo.source:null;}}]);return DebugNode;}();/**
 * \@experimental All debugging apis are currently experimental.
 */var DebugElement=function(_DebugNode){_inherits$2(DebugElement,_DebugNode);/**
     * @param {?} nativeNode
     * @param {?} parent
     * @param {?} _debugInfo
     */function DebugElement(nativeNode,parent,_debugInfo){_classCallCheck$2(this,DebugElement);var _this25=_possibleConstructorReturn$2(this,(DebugElement.__proto__||Object.getPrototypeOf(DebugElement)).call(this,nativeNode,parent,_debugInfo));_this25.properties={};_this25.attributes={};_this25.classes={};_this25.styles={};_this25.childNodes=[];_this25.nativeElement=nativeNode;return _this25;}/**
     * @param {?} child
     * @return {?}
     */_createClass$2(DebugElement,[{key:'addChild',value:function addChild(child){if(child){this.childNodes.push(child);child.parent=this;}}/**
     * @param {?} child
     * @return {?}
     */},{key:'removeChild',value:function removeChild(child){var/** @type {?} */childIndex=this.childNodes.indexOf(child);if(childIndex!==-1){child.parent=null;this.childNodes.splice(childIndex,1);}}/**
     * @param {?} child
     * @param {?} newChildren
     * @return {?}
     */},{key:'insertChildrenAfter',value:function insertChildrenAfter(child,newChildren){var _this26=this;var/** @type {?} */siblingIndex=this.childNodes.indexOf(child);if(siblingIndex!==-1){var _childNodes;(_childNodes=this.childNodes).splice.apply(_childNodes,[siblingIndex+1,0].concat(_toConsumableArray$2(newChildren)));newChildren.forEach(function(c){if(c.parent){c.parent.removeChild(c);}c.parent=_this26;});}}/**
     * @param {?} refChild
     * @param {?} newChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(refChild,newChild){var/** @type {?} */refIndex=this.childNodes.indexOf(refChild);if(refIndex===-1){this.addChild(newChild);}else{if(newChild.parent){newChild.parent.removeChild(newChild);}newChild.parent=this;this.childNodes.splice(refIndex,0,newChild);}}/**
     * @param {?} predicate
     * @return {?}
     */},{key:'query',value:function query(predicate){var/** @type {?} */results=this.queryAll(predicate);return results[0]||null;}/**
     * @param {?} predicate
     * @return {?}
     */},{key:'queryAll',value:function queryAll(predicate){var/** @type {?} */matches=[];_queryElementChildren(this,predicate,matches);return matches;}/**
     * @param {?} predicate
     * @return {?}
     */},{key:'queryAllNodes',value:function queryAllNodes(predicate){var/** @type {?} */matches=[];_queryNodeChildren(this,predicate,matches);return matches;}/**
     * @return {?}
     */},{key:'triggerEventHandler',/**
     * @param {?} eventName
     * @param {?} eventObj
     * @return {?}
     */value:function triggerEventHandler(eventName,eventObj){this.listeners.forEach(function(listener){if(listener.name==eventName){listener.callback(eventObj);}});}},{key:'children',get:function get(){return this.childNodes.filter(function(node){return node instanceof DebugElement;});}}]);return DebugElement;}(DebugNode);/**
 * \@experimental
 * @param {?} debugEls
 * @return {?}
 */function _queryElementChildren(element,predicate,matches){element.childNodes.forEach(function(node){if(node instanceof DebugElement){if(predicate(node)){matches.push(node);}_queryElementChildren(node,predicate,matches);}});}/**
 * @param {?} parentNode
 * @param {?} predicate
 * @param {?} matches
 * @return {?}
 */function _queryNodeChildren(parentNode,predicate,matches){if(parentNode instanceof DebugElement){parentNode.childNodes.forEach(function(node){if(predicate(node)){matches.push(node);}if(node instanceof DebugElement){_queryNodeChildren(node,predicate,matches);}});}}// Need to keep the nodes in a global Map so that multiple angular apps are supported.
var _nativeNodeToDebugNode=new Map();/**
 * \@experimental
 * @param {?} nativeNode
 * @return {?}
 */function getDebugNode(nativeNode){return _nativeNodeToDebugNode.get(nativeNode);}/**
 * @param {?} node
 * @return {?}
 */function indexDebugNode(node){_nativeNodeToDebugNode.set(node.nativeNode,node);}/**
 * @param {?} node
 * @return {?}
 */function removeDebugNodeFromIndex(node){_nativeNodeToDebugNode.delete(node.nativeNode);}/**
 * @return {?}
 */function _reflector(){return reflector;}var _CORE_PLATFORM_PROVIDERS=[// Set a default platform name for platforms that don't set it explicitly.
{provide:PLATFORM_ID,useValue:'unknown'},PlatformRef_,{provide:PlatformRef,useExisting:PlatformRef_},{provide:Reflector,useFactory:_reflector,deps:[]},{provide:ReflectorReader,useExisting:Reflector},TestabilityRegistry,Console];/**
 * This platform has to be included in any other platform
 *
 * @experimental
 */var platformCore=createPlatformFactory(null,'core',_CORE_PLATFORM_PROVIDERS);/**
 * @experimental i18n support is experimental.
 */var LOCALE_ID=new InjectionToken('LocaleId');/**
 * @experimental i18n support is experimental.
 */var TRANSLATIONS=new InjectionToken('Translations');/**
 * @experimental i18n support is experimental.
 */var TRANSLATIONS_FORMAT=new InjectionToken('TranslationsFormat');var ArgumentType={};ArgumentType.Inline=0;ArgumentType.Dynamic=1;ArgumentType[ArgumentType.Inline]="Inline";ArgumentType[ArgumentType.Dynamic]="Dynamic";var ViewFlags={};ViewFlags.None=0;ViewFlags.OnPush=2;ViewFlags[ViewFlags.None]="None";ViewFlags[ViewFlags.OnPush]="OnPush";var NodeType={};NodeType.Element=0;NodeType.Text=1;NodeType.Directive=2;NodeType.Provider=3;NodeType.Pipe=4;NodeType.PureExpression=5;NodeType.Query=6;NodeType.NgContent=7;NodeType[NodeType.Element]="Element";NodeType[NodeType.Text]="Text";NodeType[NodeType.Directive]="Directive";NodeType[NodeType.Provider]="Provider";NodeType[NodeType.Pipe]="Pipe";NodeType[NodeType.PureExpression]="PureExpression";NodeType[NodeType.Query]="Query";NodeType[NodeType.NgContent]="NgContent";var NodeFlags={};NodeFlags.None=0;NodeFlags.OnInit=1;NodeFlags.OnDestroy=2;NodeFlags.DoCheck=4;NodeFlags.OnChanges=8;NodeFlags.AfterContentInit=16;NodeFlags.AfterContentChecked=32;NodeFlags.AfterViewInit=64;NodeFlags.AfterViewChecked=128;NodeFlags.HasEmbeddedViews=256;NodeFlags.HasComponent=512;NodeFlags.IsComponent=1024;NodeFlags.HasContentQuery=2048;NodeFlags.HasStaticQuery=4096;NodeFlags.HasDynamicQuery=8192;NodeFlags.HasViewQuery=16384;NodeFlags.LazyProvider=32768;NodeFlags.PrivateProvider=65536;NodeFlags[NodeFlags.None]="None";NodeFlags[NodeFlags.OnInit]="OnInit";NodeFlags[NodeFlags.OnDestroy]="OnDestroy";NodeFlags[NodeFlags.DoCheck]="DoCheck";NodeFlags[NodeFlags.OnChanges]="OnChanges";NodeFlags[NodeFlags.AfterContentInit]="AfterContentInit";NodeFlags[NodeFlags.AfterContentChecked]="AfterContentChecked";NodeFlags[NodeFlags.AfterViewInit]="AfterViewInit";NodeFlags[NodeFlags.AfterViewChecked]="AfterViewChecked";NodeFlags[NodeFlags.HasEmbeddedViews]="HasEmbeddedViews";NodeFlags[NodeFlags.HasComponent]="HasComponent";NodeFlags[NodeFlags.IsComponent]="IsComponent";NodeFlags[NodeFlags.HasContentQuery]="HasContentQuery";NodeFlags[NodeFlags.HasStaticQuery]="HasStaticQuery";NodeFlags[NodeFlags.HasDynamicQuery]="HasDynamicQuery";NodeFlags[NodeFlags.HasViewQuery]="HasViewQuery";NodeFlags[NodeFlags.LazyProvider]="LazyProvider";NodeFlags[NodeFlags.PrivateProvider]="PrivateProvider";var BindingType={};BindingType.ElementAttribute=0;BindingType.ElementClass=1;BindingType.ElementStyle=2;BindingType.ElementProperty=3;BindingType.ComponentHostProperty=4;BindingType.DirectiveProperty=5;BindingType.TextInterpolation=6;BindingType.PureExpressionProperty=7;BindingType[BindingType.ElementAttribute]="ElementAttribute";BindingType[BindingType.ElementClass]="ElementClass";BindingType[BindingType.ElementStyle]="ElementStyle";BindingType[BindingType.ElementProperty]="ElementProperty";BindingType[BindingType.ComponentHostProperty]="ComponentHostProperty";BindingType[BindingType.DirectiveProperty]="DirectiveProperty";BindingType[BindingType.TextInterpolation]="TextInterpolation";BindingType[BindingType.PureExpressionProperty]="PureExpressionProperty";var OutputType={};OutputType.ElementOutput=0;OutputType.DirectiveOutput=1;OutputType[OutputType.ElementOutput]="ElementOutput";OutputType[OutputType.DirectiveOutput]="DirectiveOutput";var QueryValueType={};QueryValueType.ElementRef=0;QueryValueType.RenderElement=1;QueryValueType.TemplateRef=2;QueryValueType.ViewContainerRef=3;QueryValueType.Provider=4;QueryValueType[QueryValueType.ElementRef]="ElementRef";QueryValueType[QueryValueType.RenderElement]="RenderElement";QueryValueType[QueryValueType.TemplateRef]="TemplateRef";QueryValueType[QueryValueType.ViewContainerRef]="ViewContainerRef";QueryValueType[QueryValueType.Provider]="Provider";var ProviderType={};ProviderType.Value=0;ProviderType.Class=1;ProviderType.Factory=2;ProviderType.UseExisting=3;ProviderType[ProviderType.Value]="Value";ProviderType[ProviderType.Class]="Class";ProviderType[ProviderType.Factory]="Factory";ProviderType[ProviderType.UseExisting]="UseExisting";var DepFlags={};DepFlags.None=0;DepFlags.SkipSelf=1;DepFlags.Optional=2;DepFlags.Value=8;DepFlags[DepFlags.None]="None";DepFlags[DepFlags.SkipSelf]="SkipSelf";DepFlags[DepFlags.Optional]="Optional";DepFlags[DepFlags.Value]="Value";var PureExpressionType={};PureExpressionType.Array=0;PureExpressionType.Object=1;PureExpressionType.Pipe=2;PureExpressionType[PureExpressionType.Array]="Array";PureExpressionType[PureExpressionType.Object]="Object";PureExpressionType[PureExpressionType.Pipe]="Pipe";var QueryBindingType={};QueryBindingType.First=0;QueryBindingType.All=1;QueryBindingType[QueryBindingType.First]="First";QueryBindingType[QueryBindingType.All]="All";var ViewState={};ViewState.FirstCheck=1;ViewState.ChecksEnabled=2;ViewState.Errored=4;ViewState.Destroyed=8;ViewState[ViewState.FirstCheck]="FirstCheck";ViewState[ViewState.ChecksEnabled]="ChecksEnabled";ViewState[ViewState.Errored]="Errored";ViewState[ViewState.Destroyed]="Destroyed";/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asTextData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asElementData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asProviderData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asPureExpressionData(view,index){return view.nodes[index];}/**
 * Accessor for view.nodes, enforcing that every usage site stays monomorphic.
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function asQueryList(view,index){return view.nodes[index];}var CheckType={};CheckType.CheckAndUpdate=0;CheckType.CheckNoChanges=1;CheckType[CheckType.CheckAndUpdate]="CheckAndUpdate";CheckType[CheckType.CheckNoChanges]="CheckNoChanges";/**
 * This object is used to prevent cycles in the source files and to have a place where
 * debug mode can hook it. It is lazily filled when `isDevMode` is known.
 */var Services={setCurrentNode:undefined,createRootView:undefined,createEmbeddedView:undefined,checkAndUpdateView:undefined,checkNoChangesView:undefined,destroyView:undefined,resolveDep:undefined,createDebugContext:undefined,handleEvent:undefined,updateDirectives:undefined,updateRenderer:undefined,dirtyParentQueries:undefined};/**
 * @param {?} context
 * @param {?} oldValue
 * @param {?} currValue
 * @param {?} isFirstCheck
 * @return {?}
 */function expressionChangedAfterItHasBeenCheckedError$1(context,oldValue,currValue,isFirstCheck){var/** @type {?} */msg='ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: \''+oldValue+'\'. Current value: \''+currValue+'\'.';if(isFirstCheck){msg+=' It seems like the view has been created after its parent and its children have been dirty checked.'+' Has it been created in a change detection hook ?';}return viewDebugError(msg,context);}/**
 * @param {?} originalError
 * @param {?} context
 * @return {?}
 */function viewWrappedDebugError(originalError,context){var/** @type {?} */err=viewDebugError(originalError.message,context);err[ERROR_ORIGINAL_ERROR]=originalError;return err;}/**
 * @param {?} msg
 * @param {?} context
 * @return {?}
 */function viewDebugError(msg,context){var/** @type {?} */err=new Error(msg);err[ERROR_DEBUG_CONTEXT]=context;err.stack=context.source;return err;}/**
 * @param {?} err
 * @return {?}
 */function isViewDebugError(err){return!!getDebugContext(err);}/**
 * @param {?} action
 * @return {?}
 */function viewDestroyedError$1(action){return new Error('ViewDestroyedError: Attempt to use a destroyed view: '+action);}var _tokenKeyCache=new Map();/**
 * @param {?} token
 * @return {?}
 */function tokenKey(token){var/** @type {?} */key=_tokenKeyCache.get(token);if(!key){key=stringify$2(token)+'_'+_tokenKeyCache.size;_tokenKeyCache.set(token,key);}return key;}var unwrapCounter=0;/**
 * @param {?} value
 * @return {?}
 */function unwrapValue(value){if(value instanceof WrappedValue){value=value.wrapped;unwrapCounter++;}return value;}var _renderCompCount=0;/**
 * @param {?} values
 * @return {?}
 */function createRendererTypeV2(values){var/** @type {?} */isFilled=values&&(values.encapsulation!==ViewEncapsulation.None||values.styles.length||Object.keys(values.data).length);if(isFilled){var/** @type {?} */id='c'+_renderCompCount++;return{id:id,styles:values.styles,encapsulation:values.encapsulation,data:values.data};}else{return null;}}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkBinding$1(view,def,bindingIdx,value){var/** @type {?} */oldValues=view.oldValues;if(unwrapCounter>0||!!(view.state&ViewState.FirstCheck)||!looseIdentical(oldValues[def.bindingIndex+bindingIdx],value)){unwrapCounter=0;return true;}return false;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkAndUpdateBinding(view,def,bindingIdx,value){if(checkBinding$1(view,def,bindingIdx,value)){view.oldValues[def.bindingIndex+bindingIdx]=value;return true;}return false;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkBindingNoChanges(view,def,bindingIdx,value){var/** @type {?} */oldValue=view.oldValues[def.bindingIndex+bindingIdx];if(unwrapCounter||view.state&ViewState.FirstCheck||!devModeEqual(oldValue,value)){unwrapCounter=0;throw expressionChangedAfterItHasBeenCheckedError$1(Services.createDebugContext(view,def.index),oldValue,value,(view.state&ViewState.FirstCheck)!==0);}}/**
 * @param {?} view
 * @return {?}
 */function markParentViewsForCheck(view){var/** @type {?} */currView=view;while(currView){if(currView.def.flags&ViewFlags.OnPush){currView.state|=ViewState.ChecksEnabled;}currView=currView.viewContainerParent||currView.parent;}}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} eventName
 * @param {?} event
 * @return {?}
 */function dispatchEvent(view,nodeIndex,eventName,event){markParentViewsForCheck(view);return Services.handleEvent(view,nodeIndex,eventName,event);}/**
 * @param {?} view
 * @return {?}
 */function declaredViewContainer(view){if(view.parent){var/** @type {?} */parentView=view.parent;return asElementData(parentView,view.parentNodeDef.index);}return undefined;}/**
 * for component views, this is the host element.
 * for embedded views, this is the index of the parent node
 * that contains the view container.
 * @param {?} view
 * @return {?}
 */function viewParentEl(view){var/** @type {?} */parentView=view.parent;if(parentView){return view.parentNodeDef.parent;}else{return null;}}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function renderNode(view,def){switch(def.type){case NodeType.Element:return asElementData(view,def.index).renderElement;case NodeType.Text:return asTextData(view,def.index).renderText;}}/**
 * @param {?} target
 * @param {?} name
 * @return {?}
 */function elementEventFullName(target,name){return target?target+':'+name:name;}/**
 * @param {?} view
 * @return {?}
 */function isComponentView(view){return view.component===view.context&&!!view.parent;}/**
 * @param {?} view
 * @return {?}
 */function isEmbeddedView(view){return view.component!==view.context&&!!view.parent;}/**
 * @param {?} queryId
 * @return {?}
 */function filterQueryId(queryId){return 1<<queryId%32;}/**
 * @param {?} matchedQueriesDsl
 * @return {?}
 */function splitMatchedQueriesDsl(matchedQueriesDsl){var/** @type {?} */matchedQueries={};var/** @type {?} */matchedQueryIds=0;var/** @type {?} */references={};if(matchedQueriesDsl){matchedQueriesDsl.forEach(function(_ref3){var _ref4=_slicedToArray$2(_ref3,2),queryId=_ref4[0],valueType=_ref4[1];if(typeof queryId==='number'){matchedQueries[queryId]=valueType;matchedQueryIds|=filterQueryId(queryId);}else{references[queryId]=valueType;}});}return{matchedQueries:matchedQueries,references:references,matchedQueryIds:matchedQueryIds};}/**
 * @param {?} view
 * @param {?} renderHost
 * @param {?} def
 * @return {?}
 */function getParentRenderElement(view,renderHost,def){var/** @type {?} */renderParent=def.renderParent;if(renderParent){if(renderParent.type!==NodeType.Element||(renderParent.flags&NodeFlags.HasComponent)===0||renderParent.element.componentRendererType&&renderParent.element.componentRendererType.encapsulation===ViewEncapsulation.Native){// only children of non components, or children of components with native encapsulation should
// be attached.
return asElementData(view,def.renderParent.index).renderElement;}}else{return renderHost;}}var VIEW_DEFINITION_CACHE=new WeakMap();/**
 * @param {?} factory
 * @return {?}
 */function resolveViewDefinition(factory){var/** @type {?} */value=VIEW_DEFINITION_CACHE.get(factory);if(!value){value=factory();VIEW_DEFINITION_CACHE.set(factory,value);}return value;}/**
 * @param {?} start
 * @param {?} end
 * @return {?}
 */function sliceErrorStack(start,end){var/** @type {?} */err=void 0;try{throw new Error();}catch(e){err=e;}var/** @type {?} */stack=err.stack||'';var/** @type {?} */lines=stack.split('\n');if(lines[0].startsWith('Error')){// Chrome always adds the message to the stack as well...
start++;end++;}return lines.slice(start,end).join('\n');}/**
 * @param {?} view
 * @return {?}
 */function rootRenderNodes(view){var/** @type {?} */renderNodes=[];visitRootRenderNodes(view,RenderNodeAction.Collect,undefined,undefined,renderNodes);return renderNodes;}var RenderNodeAction={};RenderNodeAction.Collect=0;RenderNodeAction.AppendChild=1;RenderNodeAction.InsertBefore=2;RenderNodeAction.RemoveChild=3;RenderNodeAction[RenderNodeAction.Collect]="Collect";RenderNodeAction[RenderNodeAction.AppendChild]="AppendChild";RenderNodeAction[RenderNodeAction.InsertBefore]="InsertBefore";RenderNodeAction[RenderNodeAction.RemoveChild]="RemoveChild";/**
 * @param {?} view
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitRootRenderNodes(view,action,parentNode,nextSibling,target){// We need to re-compute the parent node in case the nodes have been moved around manually
if(action===RenderNodeAction.RemoveChild){parentNode=view.renderer.parentNode(renderNode(view,view.def.lastRenderRootNode));}visitSiblingRenderNodes(view,action,0,view.def.nodes.length-1,parentNode,nextSibling,target);}/**
 * @param {?} view
 * @param {?} action
 * @param {?} startIndex
 * @param {?} endIndex
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitSiblingRenderNodes(view,action,startIndex,endIndex,parentNode,nextSibling,target){for(var/** @type {?} */i=startIndex;i<=endIndex;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.type===NodeType.Element||nodeDef.type===NodeType.Text||nodeDef.type===NodeType.NgContent){visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}}/**
 * @param {?} view
 * @param {?} ngContentIndex
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitProjectedRenderNodes(view,ngContentIndex,action,parentNode,nextSibling,target){var/** @type {?} */compView=view;while(compView&&!isComponentView(compView)){compView=compView.parent;}var/** @type {?} */hostView=compView.parent;var/** @type {?} */hostElDef=viewParentEl(compView);var/** @type {?} */startIndex=hostElDef.index+1;var/** @type {?} */endIndex=hostElDef.index+hostElDef.childCount;for(var/** @type {?} */i=startIndex;i<=endIndex;i++){var/** @type {?} */nodeDef=hostView.def.nodes[i];if(nodeDef.ngContentIndex===ngContentIndex){visitRenderNode(hostView,nodeDef,action,parentNode,nextSibling,target);}// jump to next sibling
i+=nodeDef.childCount;}if(!hostView.parent){// a root view
var/** @type {?} */projectedNodes=view.root.projectableNodes[ngContentIndex];if(projectedNodes){for(var/** @type {?} */_i=0;_i<projectedNodes.length;_i++){execRenderNodeAction(view,projectedNodes[_i],action,parentNode,nextSibling,target);}}}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function visitRenderNode(view,nodeDef,action,parentNode,nextSibling,target){if(nodeDef.type===NodeType.NgContent){visitProjectedRenderNodes(view,nodeDef.ngContent.index,action,parentNode,nextSibling,target);}else{var/** @type {?} */rn=renderNode(view,nodeDef);execRenderNodeAction(view,rn,action,parentNode,nextSibling,target);if(nodeDef.flags&NodeFlags.HasEmbeddedViews){var/** @type {?} */embeddedViews=asElementData(view,nodeDef.index).embeddedViews;if(embeddedViews){for(var/** @type {?} */k=0;k<embeddedViews.length;k++){visitRootRenderNodes(embeddedViews[k],action,parentNode,nextSibling,target);}}}if(nodeDef.type===NodeType.Element&&!nodeDef.element.name){visitSiblingRenderNodes(view,action,nodeDef.index+1,nodeDef.index+nodeDef.childCount,parentNode,nextSibling,target);}}}/**
 * @param {?} view
 * @param {?} renderNode
 * @param {?} action
 * @param {?} parentNode
 * @param {?} nextSibling
 * @param {?} target
 * @return {?}
 */function execRenderNodeAction(view,renderNode,action,parentNode,nextSibling,target){var/** @type {?} */renderer=view.renderer;switch(action){case RenderNodeAction.AppendChild:renderer.appendChild(parentNode,renderNode);break;case RenderNodeAction.InsertBefore:renderer.insertBefore(parentNode,renderNode,nextSibling);break;case RenderNodeAction.RemoveChild:renderer.removeChild(parentNode,renderNode);break;case RenderNodeAction.Collect:target.push(renderNode);break;}}var NS_PREFIX_RE$1=/^:([^:]+):(.+)$/;/**
 * @param {?} name
 * @return {?}
 */function splitNamespace$1(name){if(name[0]===':'){var/** @type {?} */match=name.match(NS_PREFIX_RE$1);return[match[1],match[2]];}return['',name];}var NOOP=function NOOP(){};/**
 * @param {?} flags
 * @param {?} matchedQueriesDsl
 * @param {?} ngContentIndex
 * @param {?} childCount
 * @param {?=} handleEvent
 * @param {?=} templateFactory
 * @return {?}
 */function anchorDef(flags,matchedQueriesDsl,ngContentIndex,childCount,handleEvent,templateFactory){if(!handleEvent){handleEvent=NOOP;}var _splitMatchedQueriesD=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_splitMatchedQueriesD.matchedQueries,references=_splitMatchedQueriesD.references,matchedQueryIds=_splitMatchedQueriesD.matchedQueryIds;// skip the call to sliceErrorStack itself + the call to this function.
var/** @type {?} */source=isDevMode()?sliceErrorStack(2,3):'';var/** @type {?} */template=templateFactory?resolveViewDefinition(templateFactory):null;return{type:NodeType.Element,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:[],outputs:[],element:{ns:undefined,name:undefined,attrs:undefined,template:template,source:source,componentProvider:undefined,componentView:undefined,componentRendererType:undefined,publicProviders:undefined,allProviders:undefined,handleEvent:handleEvent},provider:undefined,text:undefined,pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} flags
 * @param {?} matchedQueriesDsl
 * @param {?} ngContentIndex
 * @param {?} childCount
 * @param {?} namespaceAndName
 * @param {?=} fixedAttrs
 * @param {?=} bindings
 * @param {?=} outputs
 * @param {?=} handleEvent
 * @param {?=} componentView
 * @param {?=} componentRendererType
 * @return {?}
 */function elementDef(flags,matchedQueriesDsl,ngContentIndex,childCount,namespaceAndName){var fixedAttrs=arguments.length>5&&arguments[5]!==undefined?arguments[5]:[];var bindings=arguments[6];var outputs=arguments[7];var handleEvent=arguments[8];var componentView=arguments[9];var componentRendererType=arguments[10];if(!handleEvent){handleEvent=NOOP;}// skip the call to sliceErrorStack itself + the call to this function.
var/** @type {?} */source=isDevMode()?sliceErrorStack(2,3):'';var _splitMatchedQueriesD2=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_splitMatchedQueriesD2.matchedQueries,references=_splitMatchedQueriesD2.references,matchedQueryIds=_splitMatchedQueriesD2.matchedQueryIds;var/** @type {?} */ns=void 0;var/** @type {?} */name=void 0;if(namespaceAndName){var _splitNamespace=splitNamespace$1(namespaceAndName);var _splitNamespace2=_slicedToArray$2(_splitNamespace,2);ns=_splitNamespace2[0];name=_splitNamespace2[1];}bindings=bindings||[];var/** @type {?} */bindingDefs=new Array(bindings.length);for(var/** @type {?} */i=0;i<bindings.length;i++){var/** @type {?} */entry=bindings[i];var/** @type {?} */bindingDef=void 0;var/** @type {?} */bindingType=entry[0];var _splitNamespace3=splitNamespace$1(entry[1]),_splitNamespace4=_slicedToArray$2(_splitNamespace3,2),_ns=_splitNamespace4[0],_name=_splitNamespace4[1];var/** @type {?} */securityContext=void 0;var/** @type {?} */suffix=void 0;switch(bindingType){case BindingType.ElementStyle:suffix=entry[2];break;case BindingType.ElementAttribute:case BindingType.ElementProperty:case BindingType.ComponentHostProperty:securityContext=entry[2];break;}bindingDefs[i]={type:bindingType,ns:_ns,name:_name,nonMinifiedName:_name,securityContext:securityContext,suffix:suffix};}outputs=outputs||[];var/** @type {?} */outputDefs=new Array(outputs.length);for(var/** @type {?} */_i2=0;_i2<outputs.length;_i2++){var _outputs$_i=_slicedToArray$2(outputs[_i2],2),target=_outputs$_i[0],eventName=_outputs$_i[1];outputDefs[_i2]={type:OutputType.ElementOutput,target:/** @type {?} */target,eventName:eventName,propName:undefined};}fixedAttrs=fixedAttrs||[];var/** @type {?} */attrs=fixedAttrs.map(function(_ref5){var _ref6=_slicedToArray$2(_ref5,2),namespaceAndName=_ref6[0],value=_ref6[1];var _splitNamespace5=splitNamespace$1(namespaceAndName),_splitNamespace6=_slicedToArray$2(_splitNamespace5,2),ns=_splitNamespace6[0],name=_splitNamespace6[1];return[ns,name,value];});// This is needed as the jit compiler always uses an empty hash as default RendererTypeV2,
// which is not filled for host views.
if(componentRendererType&&componentRendererType.encapsulation==null){componentRendererType=null;}if(componentView){flags|=NodeFlags.HasComponent;}return{type:NodeType.Element,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:ngContentIndex,childCount:childCount,bindings:bindingDefs,outputs:outputDefs,element:{ns:ns,name:name,attrs:attrs,source:source,template:undefined,// will bet set by the view definition
componentProvider:undefined,componentView:componentView,componentRendererType:componentRendererType,publicProviders:undefined,allProviders:undefined,handleEvent:handleEvent},provider:undefined,text:undefined,pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} renderHost
 * @param {?} def
 * @return {?}
 */function createElement(view,renderHost,def){var/** @type {?} */elDef=def.element;var/** @type {?} */rootSelectorOrNode=view.root.selectorOrNode;var/** @type {?} */renderer=view.renderer;var/** @type {?} */el=void 0;if(view.parent||!rootSelectorOrNode){if(elDef.name){el=renderer.createElement(elDef.name,elDef.ns);}else{el=renderer.createComment('');}var/** @type {?} */parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,el);}}else{el=renderer.selectRootElement(rootSelectorOrNode);}if(elDef.attrs){for(var/** @type {?} */i=0;i<elDef.attrs.length;i++){var _elDef$attrs$i=_slicedToArray$2(elDef.attrs[i],3),ns=_elDef$attrs$i[0],name=_elDef$attrs$i[1],value=_elDef$attrs$i[2];renderer.setAttribute(el,name,value,ns);}}return el;}/**
 * @param {?} view
 * @param {?} compView
 * @param {?} def
 * @param {?} el
 * @return {?}
 */function listenToElementOutputs(view,compView,def,el){for(var/** @type {?} */i=0;i<def.outputs.length;i++){var/** @type {?} */output=def.outputs[i];var/** @type {?} */handleEventClosure=renderEventHandlerClosure(view,def.index,elementEventFullName(output.target,output.eventName));var/** @type {?} */listenTarget=output.target;var/** @type {?} */listenerView=view;if(output.target==='component'){listenTarget=null;listenerView=compView;}var/** @type {?} */disposable=listenerView.renderer.listen(listenTarget||el,output.eventName,handleEventClosure);view.disposables[def.outputIndex+i]=disposable;}}/**
 * @param {?} view
 * @param {?} index
 * @param {?} eventName
 * @return {?}
 */function renderEventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdateElementInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */bindLen=def.bindings.length;var/** @type {?} */changed=false;if(bindLen>0&&checkAndUpdateElementValue(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateElementValue(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateElementValue(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateElementValue(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateElementValue(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateElementValue(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateElementValue(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateElementValue(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateElementValue(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateElementValue(view,def,9,v9))changed=true;return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdateElementDynamic(view,def,values){var/** @type {?} */changed=false;for(var/** @type {?} */i=0;i<values.length;i++){if(checkAndUpdateElementValue(view,def,i,values[i]))changed=true;}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @return {?}
 */function checkAndUpdateElementValue(view,def,bindingIdx,value){if(!checkAndUpdateBinding(view,def,bindingIdx,value)){return false;}var/** @type {?} */binding=def.bindings[bindingIdx];var/** @type {?} */elData=asElementData(view,def.index);var/** @type {?} */renderNode=elData.renderElement;var/** @type {?} */name=binding.name;switch(binding.type){case BindingType.ElementAttribute:setElementAttribute(view,binding,renderNode,binding.ns,name,value);break;case BindingType.ElementClass:setElementClass(view,renderNode,name,value);break;case BindingType.ElementStyle:setElementStyle(view,binding,renderNode,name,value);break;case BindingType.ElementProperty:setElementProperty(view,binding,renderNode,name,value);break;case BindingType.ComponentHostProperty:setElementProperty(elData.componentView,binding,renderNode,name,value);break;}return true;}/**
 * @param {?} view
 * @param {?} binding
 * @param {?} renderNode
 * @param {?} ns
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementAttribute(view,binding,renderNode,ns,name,value){var/** @type {?} */securityContext=binding.securityContext;var/** @type {?} */renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;renderValue=renderValue!=null?renderValue.toString():null;var/** @type {?} */renderer=view.renderer;if(value!=null){renderer.setAttribute(renderNode,name,renderValue,ns);}else{renderer.removeAttribute(renderNode,name,ns);}}/**
 * @param {?} view
 * @param {?} renderNode
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementClass(view,renderNode,name,value){var/** @type {?} */renderer=view.renderer;if(value){renderer.addClass(renderNode,name);}else{renderer.removeClass(renderNode,name);}}/**
 * @param {?} view
 * @param {?} binding
 * @param {?} renderNode
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementStyle(view,binding,renderNode,name,value){var/** @type {?} */renderValue=view.root.sanitizer.sanitize(SecurityContext.STYLE,value);if(renderValue!=null){renderValue=renderValue.toString();var/** @type {?} */unit=binding.suffix;if(unit!=null){renderValue=renderValue+unit;}}else{renderValue=null;}var/** @type {?} */renderer=view.renderer;if(renderValue!=null){renderer.setStyle(renderNode,name,renderValue,false,false);}else{renderer.removeStyle(renderNode,name,false);}}/**
 * @param {?} view
 * @param {?} binding
 * @param {?} renderNode
 * @param {?} name
 * @param {?} value
 * @return {?}
 */function setElementProperty(view,binding,renderNode,name,value){var/** @type {?} */securityContext=binding.securityContext;var/** @type {?} */renderValue=securityContext?view.root.sanitizer.sanitize(securityContext,value):value;view.renderer.setProperty(renderNode,name,renderValue);}/**
 * @param {?} ngContentIndex
 * @param {?} index
 * @return {?}
 */function appendNgContent(view,renderHost,def){var/** @type {?} */parentEl=getParentRenderElement(view,renderHost,def);if(!parentEl){// Nothing to do if there is no parent element.
return;}var/** @type {?} */ngContentIndex=def.ngContent.index;visitProjectedRenderNodes(view,ngContentIndex,RenderNodeAction.AppendChild,parentEl,undefined,undefined);}/**
 * \@experimental Animation support is experimental.
 * @abstract
 */var AnimationPlayer=function(){function AnimationPlayer(){_classCallCheck$2(this,AnimationPlayer);}_createClass$2(AnimationPlayer,[{key:'onDone',/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */value:function onDone(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){}/**
     * @abstract
     * @return {?}
     */},{key:'init',value:function init(){}/**
     * @abstract
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){}/**
     * @abstract
     * @return {?}
     */},{key:'play',value:function play(){}/**
     * @abstract
     * @return {?}
     */},{key:'pause',value:function pause(){}/**
     * @abstract
     * @return {?}
     */},{key:'restart',value:function restart(){}/**
     * @abstract
     * @return {?}
     */},{key:'finish',value:function finish(){}/**
     * @abstract
     * @return {?}
     */},{key:'destroy',value:function destroy(){}/**
     * @abstract
     * @return {?}
     */},{key:'reset',value:function reset(){}/**
     * @abstract
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){}/**
     * @abstract
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){}/**
     * @return {?}
     */},{key:'parentPlayer',get:function get(){throw new Error('NOT IMPLEMENTED: Base Class');}/**
     * @param {?} player
     * @return {?}
     */,set:function set(player){throw new Error('NOT IMPLEMENTED: Base Class');}}]);return AnimationPlayer;}();var NoOpAnimationPlayer=function(){function NoOpAnimationPlayer(){var _this27=this;_classCallCheck$2(this,NoOpAnimationPlayer);this._onDoneFns=[];this._onStartFns=[];this._onDestroyFns=[];this._started=false;this._destroyed=false;this._finished=false;this.parentPlayer=null;scheduleMicroTask(function(){return _this27._onFinish();});}/**
     * @return {?}
     */_createClass$2(NoOpAnimationPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'init',value:function init(){}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];}this._started=true;}/**
     * @return {?}
     */},{key:'pause',value:function pause(){}/**
     * @return {?}
     */},{key:'restart',value:function restart(){}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._destroyed=true;this.finish();this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){return 0;}}]);return NoOpAnimationPlayer;}();/**
 * @param {?} parentView
 * @param {?} elementData
 * @param {?} viewIndex
 * @param {?} view
 * @return {?}
 */function attachEmbeddedView(parentView,elementData,viewIndex,view){var/** @type {?} */embeddedViews=elementData.embeddedViews;if(viewIndex==null){viewIndex=embeddedViews.length;}view.viewContainerParent=parentView;addToArray$1(embeddedViews,viewIndex,view);var/** @type {?} */dvcElementData=declaredViewContainer(view);if(dvcElementData&&dvcElementData!==elementData){var/** @type {?} */projectedViews=dvcElementData.projectedViews;if(!projectedViews){projectedViews=dvcElementData.projectedViews=[];}projectedViews.push(view);}Services.dirtyParentQueries(view);var/** @type {?} */prevView=viewIndex>0?embeddedViews[viewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);}/**
 * @param {?} elementData
 * @param {?} viewIndex
 * @return {?}
 */function detachEmbeddedView(elementData,viewIndex){var/** @type {?} */embeddedViews=elementData.embeddedViews;if(viewIndex==null||viewIndex>=embeddedViews.length){viewIndex=embeddedViews.length-1;}if(viewIndex<0){return null;}var/** @type {?} */view=embeddedViews[viewIndex];view.viewContainerParent=undefined;removeFromArray(embeddedViews,viewIndex);var/** @type {?} */dvcElementData=declaredViewContainer(view);if(dvcElementData&&dvcElementData!==elementData){var/** @type {?} */projectedViews=dvcElementData.projectedViews;removeFromArray(projectedViews,projectedViews.indexOf(view));}Services.dirtyParentQueries(view);renderDetachView(view);return view;}/**
 * @param {?} elementData
 * @param {?} oldViewIndex
 * @param {?} newViewIndex
 * @return {?}
 */function moveEmbeddedView(elementData,oldViewIndex,newViewIndex){var/** @type {?} */embeddedViews=elementData.embeddedViews;var/** @type {?} */view=embeddedViews[oldViewIndex];removeFromArray(embeddedViews,oldViewIndex);if(newViewIndex==null){newViewIndex=embeddedViews.length;}addToArray$1(embeddedViews,newViewIndex,view);// Note: Don't need to change projectedViews as the order in there
// as always invalid...
Services.dirtyParentQueries(view);renderDetachView(view);var/** @type {?} */prevView=newViewIndex>0?embeddedViews[newViewIndex-1]:null;renderAttachEmbeddedView(elementData,prevView,view);return view;}/**
 * @param {?} elementData
 * @param {?} prevView
 * @param {?} view
 * @return {?}
 */function renderAttachEmbeddedView(elementData,prevView,view){var/** @type {?} */prevRenderNode=prevView?renderNode(prevView,prevView.def.lastRenderRootNode):elementData.renderElement;var/** @type {?} */parentNode=view.renderer.parentNode(prevRenderNode);var/** @type {?} */nextSibling=view.renderer.nextSibling(prevRenderNode);// Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!
// However, browsers automatically do `appendChild` when there is no `nextSibling`.
visitRootRenderNodes(view,RenderNodeAction.InsertBefore,parentNode,nextSibling,undefined);}/**
 * @param {?} view
 * @return {?}
 */function renderDetachView(view){visitRootRenderNodes(view,RenderNodeAction.RemoveChild,null,null,undefined);}/**
 * @param {?} arr
 * @param {?} index
 * @param {?} value
 * @return {?}
 */function addToArray$1(arr,index,value){// perf: array.push is faster than array.splice!
if(index>=arr.length){arr.push(value);}else{arr.splice(index,0,value);}}/**
 * @param {?} arr
 * @param {?} index
 * @return {?}
 */function removeFromArray(arr,index){// perf: array.pop is faster than array.splice!
if(index>=arr.length-1){arr.pop();}else{arr.splice(index,1);}}var EMPTY_CONTEXT=new Object();/**
 * @param {?} selector
 * @param {?} componentType
 * @param {?} viewDefFactory
 * @return {?}
 */function createComponentFactory(selector,componentType,viewDefFactory){return new ComponentFactory_(selector,componentType,viewDefFactory);}var ComponentFactory_=function(_ComponentFactory){_inherits$2(ComponentFactory_,_ComponentFactory);/**
     * @param {?} selector
     * @param {?} componentType
     * @param {?} viewDefFactory
     */function ComponentFactory_(selector,componentType,viewDefFactory){_classCallCheck$2(this,ComponentFactory_);return _possibleConstructorReturn$2(this,(ComponentFactory_.__proto__||Object.getPrototypeOf(ComponentFactory_)).call(this,selector,viewDefFactory,componentType));}/**
     * Creates a new component.
     * @param {?} injector
     * @param {?=} projectableNodes
     * @param {?=} rootSelectorOrNode
     * @return {?}
     */_createClass$2(ComponentFactory_,[{key:'create',value:function create(injector){var projectableNodes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var rootSelectorOrNode=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */viewDef=resolveViewDefinition(this._viewClass);var/** @type {?} */componentNodeIndex=viewDef.nodes[0].element.componentProvider.index;var/** @type {?} */view=Services.createRootView(injector,projectableNodes||[],rootSelectorOrNode,viewDef,EMPTY_CONTEXT);var/** @type {?} */component=asProviderData(view,componentNodeIndex).instance;view.renderer.setAttribute(asElementData(view,0).renderElement,'ng-version',VERSION$2.full);return new ComponentRef_$1(view,new ViewRef_$1(view),component);}}]);return ComponentFactory_;}(ComponentFactory);var ComponentRef_$1=function(_ComponentRef2){_inherits$2(ComponentRef_$1,_ComponentRef2);/**
     * @param {?} _view
     * @param {?} _viewRef
     * @param {?} _component
     */function ComponentRef_$1(_view,_viewRef,_component){_classCallCheck$2(this,ComponentRef_$1);var _this29=_possibleConstructorReturn$2(this,(ComponentRef_$1.__proto__||Object.getPrototypeOf(ComponentRef_$1)).call(this));_this29._view=_view;_this29._viewRef=_viewRef;_this29._component=_component;_this29._elDef=_this29._view.def.nodes[0];return _this29;}/**
     * @return {?}
     */_createClass$2(ComponentRef_$1,[{key:'destroy',/**
     * @return {?}
     */value:function destroy(){this._viewRef.destroy();}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){this._viewRef.onDestroy(callback);}},{key:'location',get:function get(){return new ElementRef(asElementData(this._view,this._elDef.index).renderElement);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return new Injector_(this._view,this._elDef);}/**
     * @return {?}
     */},{key:'instance',get:function get(){return this._component;}},{key:'hostView',/**
     * @return {?}
     */get:function get(){return this._viewRef;}},{key:'changeDetectorRef',/**
     * @return {?}
     */get:function get(){return this._viewRef;}},{key:'componentType',/**
     * @return {?}
     */get:function get(){return this._component.constructor;}}]);return ComponentRef_$1;}(ComponentRef);/**
 * @param {?} view
 * @param {?} elDef
 * @return {?}
 */function createViewContainerRef(view,elDef){return new ViewContainerRef_$1(view,elDef);}var ViewContainerRef_$1=function(){/**
     * @param {?} _view
     * @param {?} _elDef
     */function ViewContainerRef_$1(_view,_elDef){_classCallCheck$2(this,ViewContainerRef_$1);this._view=_view;this._elDef=_elDef;this._data=asElementData(_view,_elDef.index);}/**
     * @return {?}
     */_createClass$2(ViewContainerRef_$1,[{key:'clear',/**
     * @return {?}
     */value:function clear(){var/** @type {?} */len=this._data.embeddedViews.length;for(var/** @type {?} */i=len-1;i>=0;i--){var/** @type {?} */view=detachEmbeddedView(this._data,i);Services.destroyView(view);}}/**
     * @param {?} index
     * @return {?}
     */},{key:'get',value:function get(index){var/** @type {?} */view=this._data.embeddedViews[index];if(view){var/** @type {?} */ref=new ViewRef_$1(view);ref.attachToViewContainerRef(this);return ref;}return null;}/**
     * @return {?}
     */},{key:'createEmbeddedView',/**
     * @param {?} templateRef
     * @param {?=} context
     * @param {?=} index
     * @return {?}
     */value:function createEmbeddedView(templateRef,context,index){var/** @type {?} */viewRef=templateRef.createEmbeddedView(context||{});this.insert(viewRef,index);return viewRef;}/**
     * @param {?} componentFactory
     * @param {?=} index
     * @param {?=} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createComponent',value:function createComponent(componentFactory,index,injector,projectableNodes){var/** @type {?} */contextInjector=injector||this.parentInjector;var/** @type {?} */componentRef=componentFactory.create(contextInjector,projectableNodes);this.insert(componentRef.hostView,index);return componentRef;}/**
     * @param {?} viewRef
     * @param {?=} index
     * @return {?}
     */},{key:'insert',value:function insert(viewRef,index){var/** @type {?} */viewRef_=viewRef;var/** @type {?} */viewData=viewRef_._view;attachEmbeddedView(this._view,this._data,index,viewData);viewRef_.attachToViewContainerRef(this);return viewRef;}/**
     * @param {?} viewRef
     * @param {?} currentIndex
     * @return {?}
     */},{key:'move',value:function move(viewRef,currentIndex){var/** @type {?} */previousIndex=this._data.embeddedViews.indexOf(viewRef._view);moveEmbeddedView(this._data,previousIndex,currentIndex);return viewRef;}/**
     * @param {?} viewRef
     * @return {?}
     */},{key:'indexOf',value:function indexOf(viewRef){return this._data.embeddedViews.indexOf(viewRef._view);}/**
     * @param {?=} index
     * @return {?}
     */},{key:'remove',value:function remove(index){var/** @type {?} */viewData=detachEmbeddedView(this._data,index);if(viewData){Services.destroyView(viewData);}}/**
     * @param {?=} index
     * @return {?}
     */},{key:'detach',value:function detach(index){var/** @type {?} */view=detachEmbeddedView(this._data,index);return view?new ViewRef_$1(view):null;}},{key:'element',get:function get(){return new ElementRef(this._data.renderElement);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return new Injector_(this._view,this._elDef);}/**
     * @return {?}
     */},{key:'parentInjector',get:function get(){var/** @type {?} */view=this._view;var/** @type {?} */elDef=this._elDef.parent;while(!elDef&&view){elDef=viewParentEl(view);view=view.parent;}return view?new Injector_(view,elDef):this._view.root.injector;}},{key:'length',get:function get(){return this._data.embeddedViews.length;}}]);return ViewContainerRef_$1;}();/**
 * @param {?} view
 * @return {?}
 */function createChangeDetectorRef(view){return new ViewRef_$1(view);}var ViewRef_$1=function(){/**
     * @param {?} _view
     */function ViewRef_$1(_view){_classCallCheck$2(this,ViewRef_$1);this._view=_view;this._viewContainerRef=null;this._appRef=null;}/**
     * @return {?}
     */_createClass$2(ViewRef_$1,[{key:'markForCheck',/**
     * @return {?}
     */value:function markForCheck(){markParentViewsForCheck(this._view);}/**
     * @return {?}
     */},{key:'detach',value:function detach(){this._view.state&=~ViewState.ChecksEnabled;}/**
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(){Services.checkAndUpdateView(this._view);}/**
     * @return {?}
     */},{key:'checkNoChanges',value:function checkNoChanges(){Services.checkNoChangesView(this._view);}/**
     * @return {?}
     */},{key:'reattach',value:function reattach(){this._view.state|=ViewState.ChecksEnabled;}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(callback){if(!this._view.disposables){this._view.disposables=[];}this._view.disposables.push(/** @type {?} */callback);}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(this._appRef){this._appRef.detachView(this);}else if(this._viewContainerRef){this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));}Services.destroyView(this._view);}/**
     * @return {?}
     */},{key:'detachFromAppRef',value:function detachFromAppRef(){this._appRef=null;renderDetachView(this._view);Services.dirtyParentQueries(this._view);}/**
     * @param {?} appRef
     * @return {?}
     */},{key:'attachToAppRef',value:function attachToAppRef(appRef){if(this._viewContainerRef){throw new Error('This view is already attached to a ViewContainer!');}this._appRef=appRef;}/**
     * @param {?} vcRef
     * @return {?}
     */},{key:'attachToViewContainerRef',value:function attachToViewContainerRef(vcRef){if(this._appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._viewContainerRef=vcRef;}},{key:'rootNodes',get:function get(){return rootRenderNodes(this._view);}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._view.context;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return(this._view.state&ViewState.Destroyed)!==0;}}]);return ViewRef_$1;}();/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createTemplateRef(view,def){return new TemplateRef_$1(view,def);}var TemplateRef_$1=function(_TemplateRef2){_inherits$2(TemplateRef_$1,_TemplateRef2);/**
     * @param {?} _parentView
     * @param {?} _def
     */function TemplateRef_$1(_parentView,_def){_classCallCheck$2(this,TemplateRef_$1);var _this30=_possibleConstructorReturn$2(this,(TemplateRef_$1.__proto__||Object.getPrototypeOf(TemplateRef_$1)).call(this));_this30._parentView=_parentView;_this30._def=_def;return _this30;}/**
     * @param {?} context
     * @return {?}
     */_createClass$2(TemplateRef_$1,[{key:'createEmbeddedView',value:function createEmbeddedView(context){return new ViewRef_$1(Services.createEmbeddedView(this._parentView,this._def,context));}/**
     * @return {?}
     */},{key:'elementRef',get:function get(){return new ElementRef(asElementData(this._parentView,this._def.index).renderElement);}}]);return TemplateRef_$1;}(TemplateRef);/**
 * @param {?} view
 * @param {?} elDef
 * @return {?}
 */function createInjector(view,elDef){return new Injector_(view,elDef);}var Injector_=function(){/**
     * @param {?} view
     * @param {?} elDef
     */function Injector_(view,elDef){_classCallCheck$2(this,Injector_);this.view=view;this.elDef=elDef;}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */_createClass$2(Injector_,[{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Injector.THROW_IF_NOT_FOUND;var/** @type {?} */allowPrivateServices=(this.elDef.flags&NodeFlags.HasComponent)!==0;return Services.resolveDep(this.view,this.elDef,allowPrivateServices,{flags:DepFlags.None,token:token,tokenKey:tokenKey(token)},notFoundValue);}}]);return Injector_;}();/**
 * @param {?} view
 * @param {?} index
 * @return {?}
 */function nodeValue(view,index){var/** @type {?} */def=view.def.nodes[index];switch(def.type){case NodeType.Element:if(def.element.template){return createTemplateRef(view,def);}else{return asElementData(view,def.index).renderElement;}case NodeType.Text:return asTextData(view,def.index).renderText;case NodeType.Directive:case NodeType.Pipe:case NodeType.Provider:return asProviderData(view,def.index).instance;}return undefined;}/**
 * @param {?} view
 * @return {?}
 */function createRendererV1(view){return new RendererAdapter(view.renderer);}var RendererAdapter=function(){/**
     * @param {?} delegate
     */function RendererAdapter(delegate){_classCallCheck$2(this,RendererAdapter);this.delegate=delegate;}/**
     * @param {?} selectorOrNode
     * @return {?}
     */_createClass$2(RendererAdapter,[{key:'selectRootElement',value:function selectRootElement(selectorOrNode){return this.delegate.selectRootElement(selectorOrNode);}/**
     * @param {?} parent
     * @param {?} namespaceAndName
     * @return {?}
     */},{key:'createElement',value:function createElement(parent,namespaceAndName){var _splitNamespace7=splitNamespace$1(namespaceAndName),_splitNamespace8=_slicedToArray$2(_splitNamespace7,2),ns=_splitNamespace8[0],name=_splitNamespace8[1];var/** @type {?} */el=this.delegate.createElement(name,ns);if(parent){this.delegate.appendChild(parent,el);}return el;}/**
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){return hostElement;}/**
     * @param {?} parentElement
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement){var/** @type {?} */comment=this.delegate.createComment('');if(parentElement){this.delegate.appendChild(parentElement,comment);}return comment;}/**
     * @param {?} parentElement
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value){var/** @type {?} */node=this.delegate.createText(value);if(parentElement){this.delegate.appendChild(parentElement,node);}return node;}/**
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){for(var/** @type {?} */i=0;i<nodes.length;i++){this.delegate.appendChild(parentElement,nodes[i]);}}/**
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){var/** @type {?} */parentElement=this.delegate.parentNode(node);var/** @type {?} */nextSibling=this.delegate.nextSibling(node);for(var/** @type {?} */i=0;i<viewRootNodes.length;i++){this.delegate.insertBefore(parentElement,viewRootNodes[i],nextSibling);}}/**
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){for(var/** @type {?} */i=0;i<viewRootNodes.length;i++){var/** @type {?} */node=viewRootNodes[i];var/** @type {?} */parentElement=this.delegate.parentNode(node);this.delegate.removeChild(parentElement,node);}}/**
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){for(var/** @type {?} */i=0;i<viewAllNodes.length;i++){this.delegate.destroyNode(viewAllNodes[i]);}}/**
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){return this.delegate.listen(renderElement,name,/** @type {?} */callback);}/**
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){return this.delegate.listen(target,name,/** @type {?} */callback);}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){this.delegate.setProperty(renderElement,propertyName,propertyValue);}/**
     * @param {?} renderElement
     * @param {?} namespaceAndName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,namespaceAndName,attributeValue){var _splitNamespace9=splitNamespace$1(namespaceAndName),_splitNamespace10=_slicedToArray$2(_splitNamespace9,2),ns=_splitNamespace10[0],name=_splitNamespace10[1];if(attributeValue!=null){this.delegate.setAttribute(renderElement,name,attributeValue,ns);}else{this.delegate.removeAttribute(renderElement,name,ns);}}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){}/**
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){if(isAdd){this.delegate.addClass(renderElement,className);}else{this.delegate.removeClass(renderElement,className);}}/**
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){if(styleValue!=null){this.delegate.setStyle(renderElement,styleName,styleValue,false,false);}else{this.delegate.removeStyle(renderElement,styleName,false);}}/**
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){renderElement[methodName].apply(renderElement,args);}/**
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){this.delegate.setValue(renderNode,text);}/**
     * @return {?}
     */},{key:'animate',value:function animate(){return new NoOpAnimationPlayer();}}]);return RendererAdapter;}();var RendererV1TokenKey=tokenKey(RendererV1);var RendererV2TokenKey=tokenKey(RendererV2);var ElementRefTokenKey=tokenKey(ElementRef);var ViewContainerRefTokenKey=tokenKey(ViewContainerRef);var TemplateRefTokenKey=tokenKey(TemplateRef);var ChangeDetectorRefTokenKey=tokenKey(ChangeDetectorRef);var InjectorRefTokenKey=tokenKey(Injector);var NOT_CREATED=new Object();/**
 * @param {?} flags
 * @param {?} matchedQueries
 * @param {?} childCount
 * @param {?} ctor
 * @param {?} deps
 * @param {?=} props
 * @param {?=} outputs
 * @return {?}
 */function directiveDef(flags,matchedQueries,childCount,ctor,deps,props,outputs){var/** @type {?} */bindings=[];if(props){for(var/** @type {?} */prop in props){var _props$prop=_slicedToArray$2(props[prop],2),bindingIndex=_props$prop[0],nonMinifiedName=_props$prop[1];bindings[bindingIndex]={type:BindingType.DirectiveProperty,name:prop,nonMinifiedName:nonMinifiedName,ns:undefined,securityContext:undefined,suffix:undefined};}}var/** @type {?} */outputDefs=[];if(outputs){for(var/** @type {?} */propName in outputs){outputDefs.push({type:OutputType.DirectiveOutput,propName:propName,target:null,eventName:outputs[propName]});}}return _def(NodeType.Directive,flags,matchedQueries,childCount,ProviderType.Class,ctor,ctor,deps,bindings,outputDefs);}/**
 * @param {?} flags
 * @param {?} ctor
 * @param {?} deps
 * @return {?}
 */function pipeDef(flags,ctor,deps){return _def(NodeType.Pipe,flags,null,0,ProviderType.Class,ctor,ctor,deps);}/**
 * @param {?} flags
 * @param {?} matchedQueries
 * @param {?} type
 * @param {?} token
 * @param {?} value
 * @param {?} deps
 * @return {?}
 */function providerDef(flags,matchedQueries,type,token,value,deps){return _def(NodeType.Provider,flags,matchedQueries,0,type,token,value,deps);}/**
 * @param {?} type
 * @param {?} flags
 * @param {?} matchedQueriesDsl
 * @param {?} childCount
 * @param {?} providerType
 * @param {?} token
 * @param {?} value
 * @param {?} deps
 * @param {?=} bindings
 * @param {?=} outputs
 * @return {?}
 */function _def(type,flags,matchedQueriesDsl,childCount,providerType,token,value,deps,bindings,outputs){var _splitMatchedQueriesD3=splitMatchedQueriesDsl(matchedQueriesDsl),matchedQueries=_splitMatchedQueriesD3.matchedQueries,references=_splitMatchedQueriesD3.references,matchedQueryIds=_splitMatchedQueriesD3.matchedQueryIds;if(!outputs){outputs=[];}if(!bindings){bindings=[];}var/** @type {?} */depDefs=deps.map(function(value){var/** @type {?} */token=void 0;var/** @type {?} */flags=void 0;if(Array.isArray(value)){var _value=_slicedToArray$2(value,2);flags=_value[0];token=_value[1];}else{flags=DepFlags.None;token=value;}return{flags:flags,token:token,tokenKey:tokenKey(token)};});return{type:type,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,matchedQueries:matchedQueries,matchedQueryIds:matchedQueryIds,references:references,ngContentIndex:undefined,childCount:childCount,bindings:bindings,outputs:outputs,element:undefined,provider:{type:providerType,token:token,tokenKey:tokenKey(token),value:value,deps:depDefs},text:undefined,pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createProviderInstance(view,def){return def.flags&NodeFlags.LazyProvider?NOT_CREATED:_createProviderInstance(view,def);}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createPipeInstance(view,def){// deps are looked up from component.
var/** @type {?} */compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}// pipes can see the private services of the component
var/** @type {?} */allowPrivateServices=true;// pipes are always eager and classes!
return createClass(compView.parent,viewParentEl(compView),allowPrivateServices,def.provider.value,def.provider.deps);}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createDirectiveInstance(view,def){// components can see other private services, other directives can't.
var/** @type {?} */allowPrivateServices=(def.flags&NodeFlags.IsComponent)>0;var/** @type {?} */providerDef=def.provider;// directives are always eager and classes!
var/** @type {?} */instance=createClass(view,def.parent,allowPrivateServices,def.provider.value,def.provider.deps);if(def.outputs.length){for(var/** @type {?} */i=0;i<def.outputs.length;i++){var/** @type {?} */output=def.outputs[i];var/** @type {?} */subscription=instance[output.propName].subscribe(eventHandlerClosure(view,def.parent.index,output.eventName));view.disposables[def.outputIndex+i]=subscription.unsubscribe.bind(subscription);}}return instance;}/**
 * @param {?} view
 * @param {?} index
 * @param {?} eventName
 * @return {?}
 */function eventHandlerClosure(view,index,eventName){return function(event){return dispatchEvent(view,index,eventName,event);};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdateDirectiveInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */providerData=asProviderData(view,def.index);var/** @type {?} */directive=providerData.instance;var/** @type {?} */changed=false;var/** @type {?} */changes=void 0;var/** @type {?} */bindLen=def.bindings.length;if(bindLen>0&&checkBinding$1(view,def,0,v0)){changed=true;changes=updateProp(view,providerData,def,0,v0,changes);}if(bindLen>1&&checkBinding$1(view,def,1,v1)){changed=true;changes=updateProp(view,providerData,def,1,v1,changes);}if(bindLen>2&&checkBinding$1(view,def,2,v2)){changed=true;changes=updateProp(view,providerData,def,2,v2,changes);}if(bindLen>3&&checkBinding$1(view,def,3,v3)){changed=true;changes=updateProp(view,providerData,def,3,v3,changes);}if(bindLen>4&&checkBinding$1(view,def,4,v4)){changed=true;changes=updateProp(view,providerData,def,4,v4,changes);}if(bindLen>5&&checkBinding$1(view,def,5,v5)){changed=true;changes=updateProp(view,providerData,def,5,v5,changes);}if(bindLen>6&&checkBinding$1(view,def,6,v6)){changed=true;changes=updateProp(view,providerData,def,6,v6,changes);}if(bindLen>7&&checkBinding$1(view,def,7,v7)){changed=true;changes=updateProp(view,providerData,def,7,v7,changes);}if(bindLen>8&&checkBinding$1(view,def,8,v8)){changed=true;changes=updateProp(view,providerData,def,8,v8,changes);}if(bindLen>9&&checkBinding$1(view,def,9,v9)){changed=true;changes=updateProp(view,providerData,def,9,v9,changes);}if(changes){directive.ngOnChanges(changes);}if(view.state&ViewState.FirstCheck&&def.flags&NodeFlags.OnInit){directive.ngOnInit();}if(def.flags&NodeFlags.DoCheck){directive.ngDoCheck();}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdateDirectiveDynamic(view,def,values){var/** @type {?} */providerData=asProviderData(view,def.index);var/** @type {?} */directive=providerData.instance;var/** @type {?} */changed=false;var/** @type {?} */changes=void 0;for(var/** @type {?} */i=0;i<values.length;i++){if(checkBinding$1(view,def,i,values[i])){changed=true;changes=updateProp(view,providerData,def,i,values[i],changes);}}if(changes){directive.ngOnChanges(changes);}if(view.state&ViewState.FirstCheck&&def.flags&NodeFlags.OnInit){directive.ngOnInit();}if(def.flags&NodeFlags.DoCheck){directive.ngDoCheck();}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function _createProviderInstance(view,def){// private services can see other private services
var/** @type {?} */allowPrivateServices=(def.flags&NodeFlags.PrivateProvider)>0;var/** @type {?} */providerDef=def.provider;var/** @type {?} */injectable=void 0;switch(providerDef.type){case ProviderType.Class:injectable=createClass(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);break;case ProviderType.Factory:injectable=callFactory(view,def.parent,allowPrivateServices,providerDef.value,providerDef.deps);break;case ProviderType.UseExisting:injectable=resolveDep(view,def.parent,allowPrivateServices,providerDef.deps[0]);break;case ProviderType.Value:injectable=providerDef.value;break;}return injectable;}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @param {?} ctor
 * @param {?} deps
 * @return {?}
 */function createClass(view,elDef,allowPrivateServices,ctor,deps){var/** @type {?} */len=deps.length;var/** @type {?} */injectable=void 0;switch(len){case 0:injectable=new ctor();break;case 1:injectable=new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]));break;case 2:injectable=new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));break;case 3:injectable=new ctor(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));break;default:var/** @type {?} */depValues=new Array(len);for(var/** @type {?} */i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}injectable=new(Function.prototype.bind.apply(ctor,[null].concat(depValues)))();}return injectable;}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @param {?} factory
 * @param {?} deps
 * @return {?}
 */function callFactory(view,elDef,allowPrivateServices,factory,deps){var/** @type {?} */len=deps.length;var/** @type {?} */injectable=void 0;switch(len){case 0:injectable=factory();break;case 1:injectable=factory(resolveDep(view,elDef,allowPrivateServices,deps[0]));break;case 2:injectable=factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]));break;case 3:injectable=factory(resolveDep(view,elDef,allowPrivateServices,deps[0]),resolveDep(view,elDef,allowPrivateServices,deps[1]),resolveDep(view,elDef,allowPrivateServices,deps[2]));break;default:var/** @type {?} */depValues=Array(len);for(var/** @type {?} */i=0;i<len;i++){depValues[i]=resolveDep(view,elDef,allowPrivateServices,deps[i]);}injectable=factory.apply(undefined,_toConsumableArray$2(depValues));}return injectable;}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @param {?} depDef
 * @param {?=} notFoundValue
 * @return {?}
 */function resolveDep(view,elDef,allowPrivateServices,depDef){var notFoundValue=arguments.length>4&&arguments[4]!==undefined?arguments[4]:Injector.THROW_IF_NOT_FOUND;if(depDef.flags&DepFlags.Value){return depDef.token;}var/** @type {?} */startView=view;if(depDef.flags&DepFlags.Optional){notFoundValue=null;}var/** @type {?} */tokenKey=depDef.tokenKey;if(depDef.flags&DepFlags.SkipSelf){allowPrivateServices=false;elDef=elDef.parent;}while(view){if(elDef){switch(tokenKey){case RendererV1TokenKey:{var/** @type {?} */compView=findCompView(view,elDef,allowPrivateServices);return createRendererV1(compView);}case RendererV2TokenKey:{var/** @type {?} */_compView=findCompView(view,elDef,allowPrivateServices);return _compView.renderer;}case ElementRefTokenKey:return new ElementRef(asElementData(view,elDef.index).renderElement);case ViewContainerRefTokenKey:return createViewContainerRef(view,elDef);case TemplateRefTokenKey:{if(elDef.element.template){return createTemplateRef(view,elDef);}break;}case ChangeDetectorRefTokenKey:{var/** @type {?} */cdView=findCompView(view,elDef,allowPrivateServices);return createChangeDetectorRef(cdView);}case InjectorRefTokenKey:return createInjector(view,elDef);default:var/** @type {?} */_providerDef=(allowPrivateServices?elDef.element.allProviders:elDef.element.publicProviders)[tokenKey];if(_providerDef){var/** @type {?} */providerData=asProviderData(view,_providerDef.index);if(providerData.instance===NOT_CREATED){providerData.instance=_createProviderInstance(view,_providerDef);}return providerData.instance;}}}allowPrivateServices=isComponentView(view);elDef=viewParentEl(view);view=view.parent;}return startView.root.injector.get(depDef.token,notFoundValue);}/**
 * @param {?} view
 * @param {?} elDef
 * @param {?} allowPrivateServices
 * @return {?}
 */function findCompView(view,elDef,allowPrivateServices){var/** @type {?} */compView=void 0;if(allowPrivateServices){compView=asElementData(view,elDef.index).componentView;}else{compView=view;while(compView.parent&&!isComponentView(compView)){compView=compView.parent;}}return compView;}/**
 * @param {?} view
 * @param {?} providerData
 * @param {?} def
 * @param {?} bindingIdx
 * @param {?} value
 * @param {?} changes
 * @return {?}
 */function updateProp(view,providerData,def,bindingIdx,value,changes){if(def.flags&NodeFlags.IsComponent){var/** @type {?} */compView=asElementData(view,def.parent.index).componentView;if(compView.def.flags&ViewFlags.OnPush){compView.state|=ViewState.ChecksEnabled;}}var/** @type {?} */binding=def.bindings[bindingIdx];var/** @type {?} */propName=binding.name;// Note: This is still safe with Closure Compiler as
// the user passed in the property name as an object has to `providerDef`,
// so Closure Compiler will have renamed the property correctly already.
providerData.instance[propName]=value;if(def.flags&NodeFlags.OnChanges){changes=changes||{};var/** @type {?} */oldValue=view.oldValues[def.bindingIndex+bindingIdx];var/** @type {?} */_binding=def.bindings[bindingIdx];changes[_binding.nonMinifiedName]=new SimpleChange(oldValue,value,(view.state&ViewState.FirstCheck)!==0);}view.oldValues[def.bindingIndex+bindingIdx]=value;return changes;}/**
 * @param {?} view
 * @param {?} lifecycles
 * @return {?}
 */function callLifecycleHooksChildrenFirst(view,lifecycles){if(!(view.def.nodeFlags&lifecycles)){return;}var/** @type {?} */len=view.def.nodes.length;for(var/** @type {?} */i=0;i<len;i++){// We use the reverse child oreder to call providers of children first.
var/** @type {?} */nodeDef=view.def.reverseChildNodes[i];var/** @type {?} */nodeIndex=nodeDef.index;if(nodeDef.flags&lifecycles){// a leaf
Services.setCurrentNode(view,nodeIndex);callProviderLifecycles(asProviderData(view,nodeIndex).instance,nodeDef.flags&lifecycles);}else if((nodeDef.childFlags&lifecycles)===0){// a parent with leafs
// no child matches one of the lifecycles,
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @param {?} provider
 * @param {?} lifecycles
 * @return {?}
 */function callProviderLifecycles(provider,lifecycles){if(lifecycles&NodeFlags.AfterContentInit){provider.ngAfterContentInit();}if(lifecycles&NodeFlags.AfterContentChecked){provider.ngAfterContentChecked();}if(lifecycles&NodeFlags.AfterViewInit){provider.ngAfterViewInit();}if(lifecycles&NodeFlags.AfterViewChecked){provider.ngAfterViewChecked();}if(lifecycles&NodeFlags.OnDestroy){provider.ngOnDestroy();}}/**
 * @param {?} argCount
 * @return {?}
 */function pureArrayDef(argCount){return _pureExpressionDef(PureExpressionType.Array,new Array(argCount));}/**
 * @param {?} propertyNames
 * @return {?}
 */function pureObjectDef(propertyNames){return _pureExpressionDef(PureExpressionType.Object,propertyNames);}/**
 * @param {?} type
 * @param {?} propertyNames
 * @return {?}
 */function _pureExpressionDef(type,propertyNames){var/** @type {?} */bindings=new Array(propertyNames.length);for(var/** @type {?} */i=0;i<propertyNames.length;i++){var/** @type {?} */prop=propertyNames[i];bindings[i]={type:BindingType.PureExpressionProperty,name:prop,ns:undefined,nonMinifiedName:prop,securityContext:undefined,suffix:undefined};}return{type:NodeType.PureExpression,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:0,childFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:undefined,childCount:0,bindings:bindings,outputs:[],element:undefined,provider:undefined,text:undefined,pureExpression:{type:type},query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} def
 * @return {?}
 */function createPureExpression(view,def){return{value:undefined};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdatePureExpressionInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */bindings=def.bindings;var/** @type {?} */changed=false;var/** @type {?} */bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var/** @type {?} */data=asPureExpressionData(view,def.index);var/** @type {?} */value=void 0;switch(def.pureExpression.type){case PureExpressionType.Array:value=new Array(bindings.length);if(bindLen>0)value[0]=v0;if(bindLen>1)value[1]=v1;if(bindLen>2)value[2]=v2;if(bindLen>3)value[3]=v3;if(bindLen>4)value[4]=v4;if(bindLen>5)value[5]=v5;if(bindLen>6)value[6]=v6;if(bindLen>7)value[7]=v7;if(bindLen>8)value[8]=v8;if(bindLen>9)value[9]=v9;break;case PureExpressionType.Object:value={};if(bindLen>0)value[bindings[0].name]=v0;if(bindLen>1)value[bindings[1].name]=v1;if(bindLen>2)value[bindings[2].name]=v2;if(bindLen>3)value[bindings[3].name]=v3;if(bindLen>4)value[bindings[4].name]=v4;if(bindLen>5)value[bindings[5].name]=v5;if(bindLen>6)value[bindings[6].name]=v6;if(bindLen>7)value[bindings[7].name]=v7;if(bindLen>8)value[bindings[8].name]=v8;if(bindLen>9)value[bindings[9].name]=v9;break;case PureExpressionType.Pipe:var/** @type {?} */pipe=v0;switch(bindLen){case 1:value=pipe.transform(v0);break;case 2:value=pipe.transform(v1);break;case 3:value=pipe.transform(v1,v2);break;case 4:value=pipe.transform(v1,v2,v3);break;case 5:value=pipe.transform(v1,v2,v3,v4);break;case 6:value=pipe.transform(v1,v2,v3,v4,v5);break;case 7:value=pipe.transform(v1,v2,v3,v4,v5,v6);break;case 8:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7);break;case 9:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8);break;case 10:value=pipe.transform(v1,v2,v3,v4,v5,v6,v7,v8,v9);break;}break;}data.value=value;}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdatePureExpressionDynamic(view,def,values){var/** @type {?} */bindings=def.bindings;var/** @type {?} */changed=false;for(var/** @type {?} */i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var/** @type {?} */data=asPureExpressionData(view,def.index);var/** @type {?} */value=void 0;switch(def.pureExpression.type){case PureExpressionType.Array:value=values;break;case PureExpressionType.Object:value={};for(var/** @type {?} */_i3=0;_i3<values.length;_i3++){value[bindings[_i3].name]=values[_i3];}break;case PureExpressionType.Pipe:var/** @type {?} */pipe=values[0];var/** @type {?} */params=values.slice(1);value=pipe.transform.apply(pipe,_toConsumableArray$2(params));break;}data.value=value;}return changed;}/**
 * @param {?} flags
 * @param {?} id
 * @param {?} bindings
 * @return {?}
 */function queryDef(flags,id,bindings){var/** @type {?} */bindingDefs=[];for(var/** @type {?} */propName in bindings){var/** @type {?} */bindingType=bindings[propName];bindingDefs.push({propName:propName,bindingType:bindingType});}return{type:NodeType.Query,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:flags,childFlags:0,childMatchedQueries:0,ngContentIndex:undefined,matchedQueries:{},matchedQueryIds:0,references:{},childCount:0,bindings:[],outputs:[],element:undefined,provider:undefined,text:undefined,pureExpression:undefined,query:{id:id,filterId:filterQueryId(id),bindings:bindingDefs},ngContent:undefined};}/**
 * @return {?}
 */function createQuery(){return new QueryList();}/**
 * @param {?} view
 * @return {?}
 */function dirtyParentQueries(view){var/** @type {?} */queryIds=view.def.nodeMatchedQueries;while(view.parent&&isEmbeddedView(view)){var/** @type {?} */tplDef=view.parentNodeDef;view=view.parent;// content queries
var/** @type {?} */end=tplDef.index+tplDef.childCount;for(var/** @type {?} */i=0;i<=end;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.flags&NodeFlags.HasContentQuery&&nodeDef.flags&NodeFlags.HasDynamicQuery&&(nodeDef.query.filterId&queryIds)===nodeDef.query.filterId){asQueryList(view,i).setDirty();}if(nodeDef.type===NodeType.Element&&i+nodeDef.childCount<tplDef.index||!(nodeDef.childFlags&NodeFlags.HasContentQuery)||!(nodeDef.childFlags&NodeFlags.HasDynamicQuery)){// skip elements that don't contain the template element or no query.
i+=nodeDef.childCount;}}}// view queries
if(view.def.nodeFlags&NodeFlags.HasViewQuery){for(var/** @type {?} */_i4=0;_i4<view.def.nodes.length;_i4++){var/** @type {?} */_nodeDef=view.def.nodes[_i4];if(_nodeDef.flags&NodeFlags.HasViewQuery&&_nodeDef.flags&NodeFlags.HasDynamicQuery){asQueryList(view,_i4).setDirty();}// only visit the root nodes
_i4+=_nodeDef.childCount;}}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @return {?}
 */function checkAndUpdateQuery(view,nodeDef){var/** @type {?} */queryList=asQueryList(view,nodeDef.index);if(!queryList.dirty){return;}var/** @type {?} */directiveInstance=void 0;var/** @type {?} */newValues=void 0;if(nodeDef.flags&NodeFlags.HasContentQuery){var/** @type {?} */_elementDef=nodeDef.parent.parent;newValues=calcQueryValues(view,_elementDef.index,_elementDef.index+_elementDef.childCount,nodeDef.query,[]);directiveInstance=asProviderData(view,nodeDef.parent.index).instance;}else if(nodeDef.flags&NodeFlags.HasViewQuery){newValues=calcQueryValues(view,0,view.def.nodes.length-1,nodeDef.query,[]);directiveInstance=view.component;}queryList.reset(newValues);var/** @type {?} */bindings=nodeDef.query.bindings;var/** @type {?} */notify=false;for(var/** @type {?} */i=0;i<bindings.length;i++){var/** @type {?} */binding=bindings[i];var/** @type {?} */boundValue=void 0;switch(binding.bindingType){case QueryBindingType.First:boundValue=queryList.first;break;case QueryBindingType.All:boundValue=queryList;notify=true;break;}directiveInstance[binding.propName]=boundValue;}if(notify){queryList.notifyOnChanges();}}/**
 * @param {?} view
 * @param {?} startIndex
 * @param {?} endIndex
 * @param {?} queryDef
 * @param {?} values
 * @return {?}
 */function calcQueryValues(view,startIndex,endIndex,queryDef,values){for(var/** @type {?} */i=startIndex;i<=endIndex;i++){var/** @type {?} */nodeDef=view.def.nodes[i];var/** @type {?} */valueType=nodeDef.matchedQueries[queryDef.id];if(valueType!=null){values.push(getQueryValue(view,nodeDef,valueType));}if(nodeDef.type===NodeType.Element&&nodeDef.element.template&&(nodeDef.element.template.nodeMatchedQueries&queryDef.filterId)===queryDef.filterId){// check embedded views that were attached at the place of their template.
var/** @type {?} */elementData=asElementData(view,i);var/** @type {?} */embeddedViews=elementData.embeddedViews;if(embeddedViews){for(var/** @type {?} */k=0;k<embeddedViews.length;k++){var/** @type {?} */embeddedView=embeddedViews[k];var/** @type {?} */dvc=declaredViewContainer(embeddedView);if(dvc&&dvc===elementData){calcQueryValues(embeddedView,0,embeddedView.def.nodes.length-1,queryDef,values);}}}var/** @type {?} */projectedViews=elementData.projectedViews;if(projectedViews){for(var/** @type {?} */_k2=0;_k2<projectedViews.length;_k2++){var/** @type {?} */projectedView=projectedViews[_k2];calcQueryValues(projectedView,0,projectedView.def.nodes.length-1,queryDef,values);}}}if((nodeDef.childMatchedQueries&queryDef.filterId)!==queryDef.filterId){// if no child matches the query, skip the children.
i+=nodeDef.childCount;}}return values;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} queryValueType
 * @return {?}
 */function getQueryValue(view,nodeDef,queryValueType){if(queryValueType!=null){// a match
var/** @type {?} */value=void 0;switch(queryValueType){case QueryValueType.RenderElement:value=asElementData(view,nodeDef.index).renderElement;break;case QueryValueType.ElementRef:value=new ElementRef(asElementData(view,nodeDef.index).renderElement);break;case QueryValueType.TemplateRef:value=createTemplateRef(view,nodeDef);break;case QueryValueType.ViewContainerRef:value=createViewContainerRef(view,nodeDef);break;case QueryValueType.Provider:value=asProviderData(view,nodeDef.index).instance;break;}return value;}}/**
 * @param {?} ngContentIndex
 * @param {?} constants
 * @return {?}
 */function textDef(ngContentIndex,constants){// skip the call to sliceErrorStack itself + the call to this function.
var/** @type {?} */source=isDevMode()?sliceErrorStack(2,3):'';var/** @type {?} */bindings=new Array(constants.length-1);for(var/** @type {?} */i=1;i<constants.length;i++){bindings[i-1]={type:BindingType.TextInterpolation,name:undefined,ns:undefined,nonMinifiedName:undefined,securityContext:undefined,suffix:constants[i]};}return{type:NodeType.Text,// will bet set by the view definition
index:undefined,reverseChildIndex:undefined,parent:undefined,renderParent:undefined,bindingIndex:undefined,outputIndex:undefined,// regular values
flags:0,childFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:ngContentIndex,childCount:0,bindings:bindings,outputs:[],element:undefined,provider:undefined,text:{prefix:constants[0],source:source},pureExpression:undefined,query:undefined,ngContent:undefined};}/**
 * @param {?} view
 * @param {?} renderHost
 * @param {?} def
 * @return {?}
 */function createText(view,renderHost,def){var/** @type {?} */renderNode=void 0;var/** @type {?} */renderer=view.renderer;renderNode=renderer.createText(def.text.prefix);var/** @type {?} */parentEl=getParentRenderElement(view,renderHost,def);if(parentEl){renderer.appendChild(parentEl,renderNode);}return{renderText:renderNode};}/**
 * @param {?} view
 * @param {?} def
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkAndUpdateTextInline(view,def,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */changed=false;var/** @type {?} */bindings=def.bindings;var/** @type {?} */bindLen=bindings.length;if(bindLen>0&&checkAndUpdateBinding(view,def,0,v0))changed=true;if(bindLen>1&&checkAndUpdateBinding(view,def,1,v1))changed=true;if(bindLen>2&&checkAndUpdateBinding(view,def,2,v2))changed=true;if(bindLen>3&&checkAndUpdateBinding(view,def,3,v3))changed=true;if(bindLen>4&&checkAndUpdateBinding(view,def,4,v4))changed=true;if(bindLen>5&&checkAndUpdateBinding(view,def,5,v5))changed=true;if(bindLen>6&&checkAndUpdateBinding(view,def,6,v6))changed=true;if(bindLen>7&&checkAndUpdateBinding(view,def,7,v7))changed=true;if(bindLen>8&&checkAndUpdateBinding(view,def,8,v8))changed=true;if(bindLen>9&&checkAndUpdateBinding(view,def,9,v9))changed=true;if(changed){var/** @type {?} */value=def.text.prefix;if(bindLen>0)value+=_addInterpolationPart(v0,bindings[0]);if(bindLen>1)value+=_addInterpolationPart(v1,bindings[1]);if(bindLen>2)value+=_addInterpolationPart(v2,bindings[2]);if(bindLen>3)value+=_addInterpolationPart(v3,bindings[3]);if(bindLen>4)value+=_addInterpolationPart(v4,bindings[4]);if(bindLen>5)value+=_addInterpolationPart(v5,bindings[5]);if(bindLen>6)value+=_addInterpolationPart(v6,bindings[6]);if(bindLen>7)value+=_addInterpolationPart(v7,bindings[7]);if(bindLen>8)value+=_addInterpolationPart(v8,bindings[8]);if(bindLen>9)value+=_addInterpolationPart(v9,bindings[9]);var/** @type {?} */_renderNode=asTextData(view,def.index).renderText;view.renderer.setValue(_renderNode,value);}return changed;}/**
 * @param {?} view
 * @param {?} def
 * @param {?} values
 * @return {?}
 */function checkAndUpdateTextDynamic(view,def,values){var/** @type {?} */bindings=def.bindings;var/** @type {?} */changed=false;for(var/** @type {?} */i=0;i<values.length;i++){// Note: We need to loop over all values, so that
// the old values are updates as well!
if(checkAndUpdateBinding(view,def,i,values[i])){changed=true;}}if(changed){var/** @type {?} */value='';for(var/** @type {?} */_i5=0;_i5<values.length;_i5++){value=value+_addInterpolationPart(values[_i5],bindings[_i5]);}value=def.text.prefix+value;var/** @type {?} */_renderNode2=asTextData(view,def.index).renderText;view.renderer.setValue(_renderNode2,value);}return changed;}/**
 * @param {?} value
 * @param {?} binding
 * @return {?}
 */function _addInterpolationPart(value,binding){var/** @type {?} */valueStr=value!=null?value.toString():'';return valueStr+binding.suffix;}var NOOP$1=function NOOP$1(){return undefined;};/**
 * @param {?} flags
 * @param {?} nodes
 * @param {?=} updateDirectives
 * @param {?=} updateRenderer
 * @return {?}
 */function viewDef(flags,nodes,updateDirectives,updateRenderer){// clone nodes and set auto calculated values
if(nodes.length===0){throw new Error('Illegal State: Views without nodes are not allowed!');}var/** @type {?} */reverseChildNodes=new Array(nodes.length);var/** @type {?} */viewBindingCount=0;var/** @type {?} */viewDisposableCount=0;var/** @type {?} */viewNodeFlags=0;var/** @type {?} */viewMatchedQueries=0;var/** @type {?} */currentParent=null;var/** @type {?} */currentElementHasPublicProviders=false;var/** @type {?} */currentElementHasPrivateProviders=false;var/** @type {?} */lastRenderRootNode=null;for(var/** @type {?} */i=0;i<nodes.length;i++){while(currentParent&&i>currentParent.index+currentParent.childCount){var/** @type {?} */newParent=currentParent.parent;if(newParent){newParent.childFlags|=currentParent.childFlags;newParent.childMatchedQueries|=currentParent.childMatchedQueries;}currentParent=newParent;}var/** @type {?} */node=nodes[i];node.index=i;node.parent=currentParent;node.bindingIndex=viewBindingCount;node.outputIndex=viewDisposableCount;node.reverseChildIndex=calculateReverseChildIndex(currentParent,i,node.childCount,nodes.length);// renderParent needs to account for ng-container!
var/** @type {?} */currentRenderParent=void 0;if(currentParent&&currentParent.type===NodeType.Element&&!currentParent.element.name){currentRenderParent=currentParent.renderParent;}else{currentRenderParent=currentParent;}node.renderParent=currentRenderParent;if(node.element){var/** @type {?} */elDef=node.element;elDef.publicProviders=currentParent?currentParent.element.publicProviders:Object.create(null);elDef.allProviders=elDef.publicProviders;// Note: We assume that all providers of an element are before any child element!
currentElementHasPublicProviders=false;currentElementHasPrivateProviders=false;}reverseChildNodes[node.reverseChildIndex]=node;validateNode(currentParent,node,nodes.length);viewNodeFlags|=node.flags;viewMatchedQueries|=node.matchedQueryIds;if(node.element&&node.element.template){viewMatchedQueries|=node.element.template.nodeMatchedQueries;}if(currentParent){currentParent.childFlags|=node.flags;currentParent.childMatchedQueries|=node.matchedQueryIds;if(node.element&&node.element.template){currentParent.childMatchedQueries|=node.element.template.nodeMatchedQueries;}}viewBindingCount+=node.bindings.length;viewDisposableCount+=node.outputs.length;if(!currentRenderParent&&(node.type===NodeType.Element||node.type===NodeType.Text)){lastRenderRootNode=node;}if(node.type===NodeType.Provider||node.type===NodeType.Directive){if(!currentElementHasPublicProviders){currentElementHasPublicProviders=true;// Use protoypical inheritance to not get O(n^2) complexity...
currentParent.element.publicProviders=Object.create(currentParent.element.publicProviders);currentParent.element.allProviders=currentParent.element.publicProviders;}var/** @type {?} */isPrivateService=(node.flags&NodeFlags.PrivateProvider)!==0;var/** @type {?} */isComponent=(node.flags&NodeFlags.IsComponent)!==0;if(!isPrivateService||isComponent){currentParent.element.publicProviders[node.provider.tokenKey]=node;}else{if(!currentElementHasPrivateProviders){currentElementHasPrivateProviders=true;// Use protoypical inheritance to not get O(n^2) complexity...
currentParent.element.allProviders=Object.create(currentParent.element.publicProviders);}currentParent.element.allProviders[node.provider.tokenKey]=node;}if(isComponent){currentParent.element.componentProvider=node;}}if(node.childCount){currentParent=node;}}while(currentParent){var/** @type {?} */_newParent=currentParent.parent;if(_newParent){_newParent.childFlags|=currentParent.childFlags;_newParent.childMatchedQueries|=currentParent.childMatchedQueries;}currentParent=_newParent;}var/** @type {?} */handleEvent=function handleEvent(view,nodeIndex,eventName,event){return nodes[nodeIndex].element.handleEvent(view,eventName,event);};return{nodeFlags:viewNodeFlags,nodeMatchedQueries:viewMatchedQueries,flags:flags,nodes:nodes,reverseChildNodes:reverseChildNodes,updateDirectives:updateDirectives||NOOP$1,updateRenderer:updateRenderer||NOOP$1,handleEvent:handleEvent||NOOP$1,bindingCount:viewBindingCount,outputCount:viewDisposableCount,lastRenderRootNode:lastRenderRootNode};}/**
 * @param {?} currentParent
 * @param {?} i
 * @param {?} childCount
 * @param {?} nodeCount
 * @return {?}
 */function calculateReverseChildIndex(currentParent,i,childCount,nodeCount){// Notes about reverse child order:
// - Every node is directly before its children, in dfs and reverse child order.
// - node.childCount contains all children, in dfs and reverse child order.
// - In dfs order, every node is before its first child
// - In reverse child order, every node is before its last child
// Algorithm, main idea:
// - In reverse child order, the ranges for each child + its transitive children are mirrored
//   regarding their position inside of their parent
// Visualization:
// Given the following tree:
// Nodes: n0
//             n1         n2
//                n11 n12    n21 n22
// dfs:    0   1   2   3  4   5   6
// result: 0   4   6   5  1   3   2
//
// Example:
// Current node = 1
// 1) lastChildIndex = 3
// 2) lastChildOffsetRelativeToParentInDfsOrder = 2
// 3) parentEndIndexInReverseChildOrder = 6
// 4) result = 4
var/** @type {?} */lastChildOffsetRelativeToParentInDfsOrder=void 0;var/** @type {?} */parentEndIndexInReverseChildOrder=void 0;if(currentParent){var/** @type {?} */lastChildIndex=i+childCount;lastChildOffsetRelativeToParentInDfsOrder=lastChildIndex-currentParent.index-1;parentEndIndexInReverseChildOrder=currentParent.reverseChildIndex+currentParent.childCount;}else{lastChildOffsetRelativeToParentInDfsOrder=i+childCount;parentEndIndexInReverseChildOrder=nodeCount-1;}return parentEndIndexInReverseChildOrder-lastChildOffsetRelativeToParentInDfsOrder;}/**
 * @param {?} parent
 * @param {?} node
 * @param {?} nodeCount
 * @return {?}
 */function validateNode(parent,node,nodeCount){var/** @type {?} */template=node.element&&node.element.template;if(template){if(template.lastRenderRootNode&&template.lastRenderRootNode.flags&NodeFlags.HasEmbeddedViews){throw new Error('Illegal State: Last root node of a template can\'t have embedded views, at index '+node.index+'!');}}if(node.type===NodeType.Provider||node.type===NodeType.Directive){var/** @type {?} */parentType=parent?parent.type:null;if(parentType!==NodeType.Element){throw new Error('Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index '+node.index+'!');}}if(node.query){if(node.flags&NodeFlags.HasContentQuery&&(!parent||parent.type!==NodeType.Directive)){throw new Error('Illegal State: Content Query nodes need to be children of directives, at index '+node.index+'!');}if(node.flags&NodeFlags.HasViewQuery&&parent){throw new Error('Illegal State: View Query nodes have to be top level nodes, at index '+node.index+'!');}}if(node.childCount){var/** @type {?} */parentEnd=parent?parent.index+parent.childCount:nodeCount-1;if(node.index<=parentEnd&&node.index+node.childCount>parentEnd){throw new Error('Illegal State: childCount of node leads outside of parent, at index '+node.index+'!');}}}/**
 * @param {?} parent
 * @param {?} anchorDef
 * @param {?=} context
 * @return {?}
 */function createEmbeddedView(parent,anchorDef,context){// embedded views are seen as siblings to the anchor, so we need
// to get the parent of the anchor and use it as parentIndex.
var/** @type {?} */view=createView(parent.root,parent.renderer,parent,anchorDef,anchorDef.element.template);initView(view,parent.component,context);createViewNodes(view);return view;}/**
 * @param {?} root
 * @param {?} def
 * @param {?=} context
 * @return {?}
 */function createRootView(root,def,context){var/** @type {?} */view=createView(root,root.renderer,null,null,def);initView(view,context,context);createViewNodes(view);return view;}/**
 * @param {?} root
 * @param {?} renderer
 * @param {?} parent
 * @param {?} parentNodeDef
 * @param {?} def
 * @return {?}
 */function createView(root,renderer,parent,parentNodeDef,def){var/** @type {?} */nodes=new Array(def.nodes.length);var/** @type {?} */disposables=def.outputCount?new Array(def.outputCount):undefined;var/** @type {?} */view={def:def,parent:parent,viewContainerParent:undefined,parentNodeDef:parentNodeDef,context:undefined,component:undefined,nodes:nodes,state:ViewState.FirstCheck|ViewState.ChecksEnabled,root:root,renderer:renderer,oldValues:new Array(def.bindingCount),disposables:disposables};return view;}/**
 * @param {?} view
 * @param {?} component
 * @param {?} context
 * @return {?}
 */function initView(view,component,context){view.component=component;view.context=context;}/**
 * @param {?} view
 * @return {?}
 */function createViewNodes(view){var/** @type {?} */renderHost=void 0;if(isComponentView(view)){var/** @type {?} */hostDef=view.parentNodeDef;renderHost=asElementData(view.parent,hostDef.parent.index).renderElement;}var/** @type {?} */def=view.def;var/** @type {?} */nodes=view.nodes;for(var/** @type {?} */i=0;i<def.nodes.length;i++){var/** @type {?} */nodeDef=def.nodes[i];Services.setCurrentNode(view,i);var/** @type {?} */nodeData=void 0;switch(nodeDef.type){case NodeType.Element:var/** @type {?} */el=createElement(view,renderHost,nodeDef);var/** @type {?} */componentView=void 0;if(nodeDef.flags&NodeFlags.HasComponent){var/** @type {?} */compViewDef=resolveViewDefinition(nodeDef.element.componentView);var/** @type {?} */rendererType=nodeDef.element.componentRendererType;var/** @type {?} */compRenderer=void 0;if(!rendererType){compRenderer=view.root.renderer;}else{compRenderer=view.root.rendererFactory.createRenderer(el,rendererType);}componentView=createView(view.root,compRenderer,view,nodeDef.element.componentProvider,compViewDef);}listenToElementOutputs(view,componentView,nodeDef,el);nodeData={renderElement:el,componentView:componentView,embeddedViews:nodeDef.flags&NodeFlags.HasEmbeddedViews?[]:undefined,projectedViews:undefined};break;case NodeType.Text:nodeData=createText(view,renderHost,nodeDef);break;case NodeType.Provider:{var/** @type {?} */instance=createProviderInstance(view,nodeDef);nodeData={instance:instance};break;}case NodeType.Pipe:{var/** @type {?} */_instance=createPipeInstance(view,nodeDef);nodeData={instance:_instance};break;}case NodeType.Directive:{var/** @type {?} */_instance2=createDirectiveInstance(view,nodeDef);nodeData={instance:_instance2};if(nodeDef.flags&NodeFlags.IsComponent){var/** @type {?} */compView=asElementData(view,nodeDef.parent.index).componentView;initView(compView,_instance2,_instance2);}break;}case NodeType.PureExpression:nodeData=createPureExpression(view,nodeDef);break;case NodeType.Query:nodeData=createQuery();break;case NodeType.NgContent:appendNgContent(view,renderHost,nodeDef);// no runtime data needed for NgContent...
nodeData=undefined;break;}nodes[i]=nodeData;}// Create the ViewData.nodes of component views after we created everything else,
// so that e.g. ng-content works
execComponentViewsAction(view,ViewAction.CreateViewNodes);// fill static content and view queries
execQueriesAction(view,NodeFlags.HasContentQuery|NodeFlags.HasViewQuery,NodeFlags.HasStaticQuery,CheckType.CheckAndUpdate);}/**
 * @param {?} view
 * @return {?}
 */function checkNoChangesView(view){Services.updateDirectives(view,CheckType.CheckNoChanges);execEmbeddedViewsAction(view,ViewAction.CheckNoChanges);execQueriesAction(view,NodeFlags.HasContentQuery,NodeFlags.HasDynamicQuery,CheckType.CheckNoChanges);Services.updateRenderer(view,CheckType.CheckNoChanges);execComponentViewsAction(view,ViewAction.CheckNoChanges);execQueriesAction(view,NodeFlags.HasViewQuery,NodeFlags.HasDynamicQuery,CheckType.CheckNoChanges);}/**
 * @param {?} view
 * @return {?}
 */function checkAndUpdateView(view){Services.updateDirectives(view,CheckType.CheckAndUpdate);execEmbeddedViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,NodeFlags.HasContentQuery,NodeFlags.HasDynamicQuery,CheckType.CheckAndUpdate);callLifecycleHooksChildrenFirst(view,NodeFlags.AfterContentChecked|(view.state&ViewState.FirstCheck?NodeFlags.AfterContentInit:0));Services.updateRenderer(view,CheckType.CheckAndUpdate);execComponentViewsAction(view,ViewAction.CheckAndUpdate);execQueriesAction(view,NodeFlags.HasViewQuery,NodeFlags.HasDynamicQuery,CheckType.CheckAndUpdate);callLifecycleHooksChildrenFirst(view,NodeFlags.AfterViewChecked|(view.state&ViewState.FirstCheck?NodeFlags.AfterViewInit:0));if(view.def.flags&ViewFlags.OnPush){view.state&=~ViewState.ChecksEnabled;}view.state&=~ViewState.FirstCheck;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===ArgumentType.Inline){return checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{return checkAndUpdateNodeDynamic(view,nodeDef,v0);}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function checkAndUpdateNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */changed=false;switch(nodeDef.type){case NodeType.Element:changed=checkAndUpdateElementInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;case NodeType.Text:changed=checkAndUpdateTextInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;case NodeType.Directive:changed=checkAndUpdateDirectiveInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;case NodeType.PureExpression:changed=checkAndUpdatePureExpressionInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);break;}return changed;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} values
 * @return {?}
 */function checkAndUpdateNodeDynamic(view,nodeDef,values){var/** @type {?} */changed=false;switch(nodeDef.type){case NodeType.Element:changed=checkAndUpdateElementDynamic(view,nodeDef,values);break;case NodeType.Text:changed=checkAndUpdateTextDynamic(view,nodeDef,values);break;case NodeType.Directive:changed=checkAndUpdateDirectiveDynamic(view,nodeDef,values);break;case NodeType.PureExpression:changed=checkAndUpdatePureExpressionDynamic(view,nodeDef,values);break;}if(changed){// Update oldValues after all bindings have been updated,
// as a setter for a property might update other properties.
var/** @type {?} */bindLen=nodeDef.bindings.length;var/** @type {?} */bindingStart=nodeDef.bindingIndex;var/** @type {?} */oldValues=view.oldValues;for(var/** @type {?} */i=0;i<bindLen;i++){oldValues[bindingStart+i]=values[i];}}return changed;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){if(argStyle===ArgumentType.Inline){checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);}else{checkNoChangesNodeDynamic(view,nodeDef,v0);}// Returning false is ok here as we would have thrown in case of a change.
return false;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} v0
 * @param {?} v1
 * @param {?} v2
 * @param {?} v3
 * @param {?} v4
 * @param {?} v5
 * @param {?} v6
 * @param {?} v7
 * @param {?} v8
 * @param {?} v9
 * @return {?}
 */function checkNoChangesNodeInline(view,nodeDef,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */bindLen=nodeDef.bindings.length;if(bindLen>0)checkBindingNoChanges(view,nodeDef,0,v0);if(bindLen>1)checkBindingNoChanges(view,nodeDef,1,v1);if(bindLen>2)checkBindingNoChanges(view,nodeDef,2,v2);if(bindLen>3)checkBindingNoChanges(view,nodeDef,3,v3);if(bindLen>4)checkBindingNoChanges(view,nodeDef,4,v4);if(bindLen>5)checkBindingNoChanges(view,nodeDef,5,v5);if(bindLen>6)checkBindingNoChanges(view,nodeDef,6,v6);if(bindLen>7)checkBindingNoChanges(view,nodeDef,7,v7);if(bindLen>8)checkBindingNoChanges(view,nodeDef,8,v8);if(bindLen>9)checkBindingNoChanges(view,nodeDef,9,v9);}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} values
 * @return {?}
 */function checkNoChangesNodeDynamic(view,nodeDef,values){for(var/** @type {?} */i=0;i<values.length;i++){checkBindingNoChanges(view,nodeDef,i,values[i]);}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @return {?}
 */function checkNoChangesQuery(view,nodeDef){var/** @type {?} */queryList=asQueryList(view,nodeDef.index);if(queryList.dirty){throw expressionChangedAfterItHasBeenCheckedError$1(Services.createDebugContext(view,nodeDef.index),'Query '+nodeDef.query.id+' not dirty','Query '+nodeDef.query.id+' dirty',(view.state&ViewState.FirstCheck)!==0);}}/**
 * @param {?} view
 * @return {?}
 */function destroyView(view){if(view.state&ViewState.Destroyed){return;}execEmbeddedViewsAction(view,ViewAction.Destroy);execComponentViewsAction(view,ViewAction.Destroy);callLifecycleHooksChildrenFirst(view,NodeFlags.OnDestroy);if(view.disposables){for(var/** @type {?} */i=0;i<view.disposables.length;i++){view.disposables[i]();}}if(view.renderer.destroyNode){destroyViewNodes(view);}if(isComponentView(view)){view.renderer.destroy();}view.state|=ViewState.Destroyed;}/**
 * @param {?} view
 * @return {?}
 */function destroyViewNodes(view){var/** @type {?} */len=view.def.nodes.length;for(var/** @type {?} */i=0;i<len;i++){var/** @type {?} */def=view.def.nodes[i];if(def.type===NodeType.Element){view.renderer.destroyNode(asElementData(view,i).renderElement);}else if(def.type===NodeType.Text){view.renderer.destroyNode(asTextData(view,i).renderText);}}}var ViewAction={};ViewAction.CreateViewNodes=0;ViewAction.CheckNoChanges=1;ViewAction.CheckAndUpdate=2;ViewAction.Destroy=3;ViewAction[ViewAction.CreateViewNodes]="CreateViewNodes";ViewAction[ViewAction.CheckNoChanges]="CheckNoChanges";ViewAction[ViewAction.CheckAndUpdate]="CheckAndUpdate";ViewAction[ViewAction.Destroy]="Destroy";/**
 * @param {?} view
 * @param {?} action
 * @return {?}
 */function execComponentViewsAction(view,action){var/** @type {?} */def=view.def;if(!(def.nodeFlags&NodeFlags.HasComponent)){return;}for(var/** @type {?} */i=0;i<def.nodes.length;i++){var/** @type {?} */nodeDef=def.nodes[i];if(nodeDef.flags&NodeFlags.HasComponent){// a leaf
callViewAction(asElementData(view,i).componentView,action);}else if((nodeDef.childFlags&NodeFlags.HasComponent)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @param {?} view
 * @param {?} action
 * @return {?}
 */function execEmbeddedViewsAction(view,action){var/** @type {?} */def=view.def;if(!(def.nodeFlags&NodeFlags.HasEmbeddedViews)){return;}for(var/** @type {?} */i=0;i<def.nodes.length;i++){var/** @type {?} */nodeDef=def.nodes[i];if(nodeDef.flags&NodeFlags.HasEmbeddedViews){// a leaf
var/** @type {?} */embeddedViews=asElementData(view,i).embeddedViews;if(embeddedViews){for(var/** @type {?} */k=0;k<embeddedViews.length;k++){callViewAction(embeddedViews[k],action);}}}else if((nodeDef.childFlags&NodeFlags.HasEmbeddedViews)===0){// a parent with leafs
// no child is a component,
// then skip the children
i+=nodeDef.childCount;}}}/**
 * @param {?} view
 * @param {?} action
 * @return {?}
 */function callViewAction(view,action){var/** @type {?} */viewState=view.state;switch(action){case ViewAction.CheckNoChanges:if(viewState&ViewState.ChecksEnabled&&(viewState&(ViewState.Errored|ViewState.Destroyed))===0){checkNoChangesView(view);}break;case ViewAction.CheckAndUpdate:if(viewState&ViewState.ChecksEnabled&&(viewState&(ViewState.Errored|ViewState.Destroyed))===0){checkAndUpdateView(view);}break;case ViewAction.Destroy:destroyView(view);break;case ViewAction.CreateViewNodes:createViewNodes(view);break;}}/**
 * @param {?} view
 * @param {?} queryFlags
 * @param {?} staticDynamicQueryFlag
 * @param {?} checkType
 * @return {?}
 */function execQueriesAction(view,queryFlags,staticDynamicQueryFlag,checkType){if(!(view.def.nodeFlags&queryFlags)||!(view.def.nodeFlags&staticDynamicQueryFlag)){return;}var/** @type {?} */nodeCount=view.def.nodes.length;for(var/** @type {?} */i=0;i<nodeCount;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.flags&queryFlags&&nodeDef.flags&staticDynamicQueryFlag){Services.setCurrentNode(view,nodeDef.index);switch(checkType){case CheckType.CheckAndUpdate:checkAndUpdateQuery(view,nodeDef);break;case CheckType.CheckNoChanges:checkNoChangesQuery(view,nodeDef);break;}}if(!(nodeDef.childFlags&queryFlags)||!(nodeDef.childFlags&staticDynamicQueryFlag)){// no child has a matching query
// then skip the children
i+=nodeDef.childCount;}}}var initialized=false;/**
 * @return {?}
 */function initServicesIfNeeded(){if(initialized){return;}initialized=true;var/** @type {?} */services=isDevMode()?createDebugServices():createProdServices();Services.setCurrentNode=services.setCurrentNode;Services.createRootView=services.createRootView;Services.createEmbeddedView=services.createEmbeddedView;Services.checkAndUpdateView=services.checkAndUpdateView;Services.checkNoChangesView=services.checkNoChangesView;Services.destroyView=services.destroyView;Services.resolveDep=resolveDep;Services.createDebugContext=services.createDebugContext;Services.handleEvent=services.handleEvent;Services.updateDirectives=services.updateDirectives;Services.updateRenderer=services.updateRenderer;Services.dirtyParentQueries=dirtyParentQueries;}/**
 * @return {?}
 */function createProdServices(){return{setCurrentNode:function setCurrentNode(){},createRootView:createProdRootView,createEmbeddedView:createEmbeddedView,checkAndUpdateView:checkAndUpdateView,checkNoChangesView:checkNoChangesView,destroyView:destroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:function handleEvent(view,nodeIndex,eventName,event){return view.def.handleEvent(view,nodeIndex,eventName,event);},updateDirectives:function updateDirectives(view,checkType){return view.def.updateDirectives(checkType===CheckType.CheckAndUpdate?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);},updateRenderer:function updateRenderer(view,checkType){return view.def.updateRenderer(checkType===CheckType.CheckAndUpdate?prodCheckAndUpdateNode:prodCheckNoChangesNode,view);}};}/**
 * @return {?}
 */function createDebugServices(){return{setCurrentNode:debugSetCurrentNode,createRootView:debugCreateRootView,createEmbeddedView:debugCreateEmbeddedView,checkAndUpdateView:debugCheckAndUpdateView,checkNoChangesView:debugCheckNoChangesView,destroyView:debugDestroyView,createDebugContext:function createDebugContext(view,nodeIndex){return new DebugContext_(view,nodeIndex);},handleEvent:debugHandleEvent,updateDirectives:debugUpdateDirectives,updateRenderer:debugUpdateRenderer};}/**
 * @param {?} injector
 * @param {?} projectableNodes
 * @param {?} rootSelectorOrNode
 * @param {?} def
 * @param {?=} context
 * @return {?}
 */function createProdRootView(injector,projectableNodes,rootSelectorOrNode,def,context){var/** @type {?} */rendererFactory=injector.get(RendererFactoryV2);return createRootView(createRootData(injector,rendererFactory,projectableNodes,rootSelectorOrNode),def,context);}/**
 * @param {?} injector
 * @param {?} projectableNodes
 * @param {?} rootSelectorOrNode
 * @param {?} def
 * @param {?=} context
 * @return {?}
 */function debugCreateRootView(injector,projectableNodes,rootSelectorOrNode,def,context){var/** @type {?} */rendererFactory=injector.get(RendererFactoryV2);var/** @type {?} */root=createRootData(injector,new DebugRendererFactoryV2(rendererFactory),projectableNodes,rootSelectorOrNode);return callWithDebugContext(DebugAction.create,createRootView,null,[root,def,context]);}/**
 * @param {?} injector
 * @param {?} rendererFactory
 * @param {?} projectableNodes
 * @param {?} rootSelectorOrNode
 * @return {?}
 */function createRootData(injector,rendererFactory,projectableNodes,rootSelectorOrNode){var/** @type {?} */sanitizer=injector.get(Sanitizer);var/** @type {?} */renderer=rendererFactory.createRenderer(null,null);return{injector:injector,projectableNodes:projectableNodes,selectorOrNode:rootSelectorOrNode,sanitizer:sanitizer,rendererFactory:rendererFactory,renderer:renderer};}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function prodCheckAndUpdateNode(view,nodeIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];checkAndUpdateNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeIndex).value:undefined;}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} argStyle
 * @param {?=} v0
 * @param {?=} v1
 * @param {?=} v2
 * @param {?=} v3
 * @param {?=} v4
 * @param {?=} v5
 * @param {?=} v6
 * @param {?=} v7
 * @param {?=} v8
 * @param {?=} v9
 * @return {?}
 */function prodCheckNoChangesNode(view,nodeIndex,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];checkNoChangesNode(view,nodeDef,argStyle,v0,v1,v2,v3,v4,v5,v6,v7,v8,v9);return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeIndex).value:undefined;}/**
 * @param {?} parent
 * @param {?} anchorDef
 * @param {?=} context
 * @return {?}
 */function debugCreateEmbeddedView(parent,anchorDef,context){return callWithDebugContext(DebugAction.create,createEmbeddedView,null,[parent,anchorDef,context]);}/**
 * @param {?} view
 * @return {?}
 */function debugCheckAndUpdateView(view){return callWithDebugContext(DebugAction.detectChanges,checkAndUpdateView,null,[view]);}/**
 * @param {?} view
 * @return {?}
 */function debugCheckNoChangesView(view){return callWithDebugContext(DebugAction.checkNoChanges,checkNoChangesView,null,[view]);}/**
 * @param {?} view
 * @return {?}
 */function debugDestroyView(view){return callWithDebugContext(DebugAction.destroy,destroyView,null,[view]);}var DebugAction={};DebugAction.create=0;DebugAction.detectChanges=1;DebugAction.checkNoChanges=2;DebugAction.destroy=3;DebugAction.handleEvent=4;DebugAction[DebugAction.create]="create";DebugAction[DebugAction.detectChanges]="detectChanges";DebugAction[DebugAction.checkNoChanges]="checkNoChanges";DebugAction[DebugAction.destroy]="destroy";DebugAction[DebugAction.handleEvent]="handleEvent";var _currentAction=void 0;var _currentView=void 0;var _currentNodeIndex=void 0;/**
 * @param {?} view
 * @param {?} nodeIndex
 * @return {?}
 */function debugSetCurrentNode(view,nodeIndex){_currentView=view;_currentNodeIndex=nodeIndex;}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @param {?} eventName
 * @param {?} event
 * @return {?}
 */function debugHandleEvent(view,nodeIndex,eventName,event){debugSetCurrentNode(view,nodeIndex);return callWithDebugContext(DebugAction.handleEvent,view.def.handleEvent,null,[view,nodeIndex,eventName,event]);}/**
 * @param {?} view
 * @param {?} checkType
 * @return {?}
 */function debugUpdateDirectives(view,checkType){if(view.state&ViewState.Destroyed){throw viewDestroyedError$1(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextDirectiveWithBinding(view,0));return view.def.updateDirectives(debugCheckDirectivesFn,view);/**
     * @param {?} view
     * @param {?} nodeIndex
     * @param {?} argStyle
     * @param {...?} values
     * @return {?}
     */function debugCheckDirectivesFn(view,nodeIndex,argStyle){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];for(var _len7=arguments.length,values=Array(_len7>3?_len7-3:0),_key7=3;_key7<_len7;_key7++){values[_key7-3]=arguments[_key7];}if(checkType===CheckType.CheckAndUpdate){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.type===NodeType.Directive){debugSetCurrentNode(view,nextDirectiveWithBinding(view,nodeIndex));}return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeDef.index).value:undefined;}}/**
 * @param {?} view
 * @param {?} checkType
 * @return {?}
 */function debugUpdateRenderer(view,checkType){if(view.state&ViewState.Destroyed){throw viewDestroyedError$1(DebugAction[_currentAction]);}debugSetCurrentNode(view,nextRenderNodeWithBinding(view,0));return view.def.updateRenderer(debugCheckRenderNodeFn,view);/**
     * @param {?} view
     * @param {?} nodeIndex
     * @param {?} argStyle
     * @param {...?} values
     * @return {?}
     */function debugCheckRenderNodeFn(view,nodeIndex,argStyle){var/** @type {?} */nodeDef=view.def.nodes[nodeIndex];for(var _len8=arguments.length,values=Array(_len8>3?_len8-3:0),_key8=3;_key8<_len8;_key8++){values[_key8-3]=arguments[_key8];}if(checkType===CheckType.CheckAndUpdate){debugCheckAndUpdateNode(view,nodeDef,argStyle,values);}else{debugCheckNoChangesNode(view,nodeDef,argStyle,values);}if(nodeDef.type===NodeType.Element||nodeDef.type===NodeType.Text){debugSetCurrentNode(view,nextRenderNodeWithBinding(view,nodeIndex));}return nodeDef.type===NodeType.PureExpression?asPureExpressionData(view,nodeDef.index).value:undefined;}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?} givenValues
 * @return {?}
 */function debugCheckAndUpdateNode(view,nodeDef,argStyle,givenValues){var/** @type {?} */changed=checkAndUpdateNode.apply(undefined,[view,nodeDef,argStyle].concat(_toConsumableArray$2(givenValues)));if(changed){var/** @type {?} */values=argStyle===ArgumentType.Dynamic?givenValues[0]:givenValues;if(nodeDef.type===NodeType.Directive||nodeDef.type===NodeType.Element){var/** @type {?} */bindingValues={};for(var/** @type {?} */i=0;i<nodeDef.bindings.length;i++){var/** @type {?} */binding=nodeDef.bindings[i];var/** @type {?} */value=values[i];if(binding.type===BindingType.ElementProperty||binding.type===BindingType.ComponentHostProperty||binding.type===BindingType.DirectiveProperty){bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)]=normalizeDebugBindingValue(value);}}var/** @type {?} */elDef=nodeDef.type===NodeType.Directive?nodeDef.parent:nodeDef;var/** @type {?} */el=asElementData(view,elDef.index).renderElement;if(!elDef.element.name){// a comment.
view.renderer.setValue(el,'bindings='+JSON.stringify(bindingValues,null,2));}else{// a regular element.
for(var/** @type {?} */attr in bindingValues){var/** @type {?} */_value2=bindingValues[attr];if(_value2!=null){view.renderer.setAttribute(el,attr,_value2);}else{view.renderer.removeAttribute(el,attr);}}}}}}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} argStyle
 * @param {?} values
 * @return {?}
 */function debugCheckNoChangesNode(view,nodeDef,argStyle,values){checkNoChangesNode.apply(undefined,[view,nodeDef,argStyle].concat(_toConsumableArray$2(values)));}/**
 * @param {?} name
 * @return {?}
 */function normalizeDebugBindingName(name){// Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
name=camelCaseToDashCase$1(name.replace(/[$@]/g,'_'));return'ng-reflect-'+name;}var CAMEL_CASE_REGEXP$1=/([A-Z])/g;/**
 * @param {?} input
 * @return {?}
 */function camelCaseToDashCase$1(input){return input.replace(CAMEL_CASE_REGEXP$1,function(){for(var _len9=arguments.length,m=Array(_len9),_key9=0;_key9<_len9;_key9++){m[_key9]=arguments[_key9];}return'-'+m[1].toLowerCase();});}/**
 * @param {?} value
 * @return {?}
 */function normalizeDebugBindingValue(value){try{// Limit the size of the value as otherwise the DOM just gets polluted.
return value?value.toString().slice(0,30):value;}catch(e){return'[ERROR] Exception while trying to serialize the value';}}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @return {?}
 */function nextDirectiveWithBinding(view,nodeIndex){for(var/** @type {?} */i=nodeIndex;i<view.def.nodes.length;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if(nodeDef.type===NodeType.Directive&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return undefined;}/**
 * @param {?} view
 * @param {?} nodeIndex
 * @return {?}
 */function nextRenderNodeWithBinding(view,nodeIndex){for(var/** @type {?} */i=nodeIndex;i<view.def.nodes.length;i++){var/** @type {?} */nodeDef=view.def.nodes[i];if((nodeDef.type===NodeType.Element||nodeDef.type===NodeType.Text)&&nodeDef.bindings&&nodeDef.bindings.length){return i;}}return undefined;}var DebugContext_=function(){/**
     * @param {?} view
     * @param {?} nodeIndex
     */function DebugContext_(view,nodeIndex){_classCallCheck$2(this,DebugContext_);this.view=view;this.nodeIndex=nodeIndex;if(nodeIndex==null){this.nodeIndex=nodeIndex=0;}this.nodeDef=view.def.nodes[nodeIndex];var elDef=this.nodeDef;var elView=view;while(elDef&&elDef.type!==NodeType.Element){elDef=elDef.parent;}if(!elDef){while(!elDef&&elView){elDef=viewParentEl(elView);elView=elView.parent;}}this.elDef=elDef;this.elView=elView;}/**
     * @return {?}
     */_createClass$2(DebugContext_,[{key:'elOrCompView',get:function get(){// Has to be done lazily as we use the DebugContext also during creation of elements...
return asElementData(this.elView,this.elDef.index).componentView||this.view;}/**
     * @return {?}
     */},{key:'injector',get:function get(){return createInjector(this.elView,this.elDef);}/**
     * @return {?}
     */},{key:'component',get:function get(){return this.elOrCompView.component;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this.elOrCompView.context;}/**
     * @return {?}
     */},{key:'providerTokens',get:function get(){var/** @type {?} */tokens=[];if(this.elDef){for(var/** @type {?} */i=this.elDef.index+1;i<=this.elDef.index+this.elDef.childCount;i++){var/** @type {?} */childDef=this.elView.def.nodes[i];if(childDef.type===NodeType.Provider||childDef.type===NodeType.Directive){tokens.push(childDef.provider.token);}i+=childDef.childCount;}}return tokens;}/**
     * @return {?}
     */},{key:'references',get:function get(){var/** @type {?} */references={};if(this.elDef){collectReferences(this.elView,this.elDef,references);for(var/** @type {?} */i=this.elDef.index+1;i<=this.elDef.index+this.elDef.childCount;i++){var/** @type {?} */childDef=this.elView.def.nodes[i];if(childDef.type===NodeType.Provider||childDef.type===NodeType.Directive){collectReferences(this.elView,childDef,references);}i+=childDef.childCount;}}return references;}/**
     * @return {?}
     */},{key:'source',get:function get(){if(this.nodeDef.type===NodeType.Text){return this.nodeDef.text.source;}else{return this.elDef.element.source;}}/**
     * @return {?}
     */},{key:'componentRenderElement',get:function get(){var/** @type {?} */elData=findHostElement(this.elOrCompView);return elData?elData.renderElement:undefined;}/**
     * @return {?}
     */},{key:'renderNode',get:function get(){return this.nodeDef.type===NodeType.Text?renderNode(this.view,this.nodeDef):renderNode(this.elView,this.elDef);}}]);return DebugContext_;}();/**
 * @param {?} view
 * @return {?}
 */function findHostElement(view){while(view&&!isComponentView(view)){view=view.parent;}if(view.parent){return asElementData(view.parent,viewParentEl(view).index);}return undefined;}/**
 * @param {?} view
 * @param {?} nodeDef
 * @param {?} references
 * @return {?}
 */function collectReferences(view,nodeDef,references){for(var/** @type {?} */refName in nodeDef.references){references[refName]=getQueryValue(view,nodeDef,nodeDef.references[refName]);}}/**
 * @param {?} action
 * @param {?} fn
 * @param {?} self
 * @param {?} args
 * @return {?}
 */function callWithDebugContext(action,fn,self,args){var/** @type {?} */oldAction=_currentAction;var/** @type {?} */oldView=_currentView;var/** @type {?} */oldNodeIndex=_currentNodeIndex;try{_currentAction=action;var/** @type {?} */result=fn.apply(self,args);_currentView=oldView;_currentNodeIndex=oldNodeIndex;_currentAction=oldAction;return result;}catch(e){if(isViewDebugError(e)||!_currentView){throw e;}_currentView.state|=ViewState.Errored;throw viewWrappedDebugError(e,getCurrentDebugContext());}}/**
 * @return {?}
 */function getCurrentDebugContext(){return new DebugContext_(_currentView,_currentNodeIndex);}var DebugRendererFactoryV2=function(){/**
     * @param {?} delegate
     */function DebugRendererFactoryV2(delegate){_classCallCheck$2(this,DebugRendererFactoryV2);this.delegate=delegate;}/**
     * @param {?} element
     * @param {?} renderData
     * @return {?}
     */_createClass$2(DebugRendererFactoryV2,[{key:'createRenderer',value:function createRenderer(element,renderData){return new DebugRendererV2(this.delegate.createRenderer(element,renderData));}}]);return DebugRendererFactoryV2;}();var DebugRendererV2=function(){/**
     * @param {?} delegate
     */function DebugRendererV2(delegate){_classCallCheck$2(this,DebugRendererV2);this.delegate=delegate;}/**
     * @return {?}
     */_createClass$2(DebugRendererV2,[{key:'destroyNode',/**
     * @param {?} node
     * @return {?}
     */value:function destroyNode(node){removeDebugNodeFromIndex(getDebugNode(node));if(this.delegate.destroyNode){this.delegate.destroyNode(node);}}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this.delegate.destroy();}/**
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'createElement',value:function createElement(name,namespace){var/** @type {?} */el=this.delegate.createElement(name,namespace);var/** @type {?} */debugEl=new DebugElement(el,null,getCurrentDebugContext());debugEl.name=name;indexDebugNode(debugEl);return el;}/**
     * @param {?} value
     * @return {?}
     */},{key:'createComment',value:function createComment(value){var/** @type {?} */comment=this.delegate.createComment(value);var/** @type {?} */debugEl=new DebugNode(comment,null,getCurrentDebugContext());indexDebugNode(debugEl);return comment;}/**
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(value){var/** @type {?} */text=this.delegate.createText(value);var/** @type {?} */debugEl=new DebugNode(text,null,getCurrentDebugContext());indexDebugNode(debugEl);return text;}/**
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){var/** @type {?} */debugEl=getDebugNode(parent);var/** @type {?} */debugChildEl=getDebugNode(newChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.addChild(debugChildEl);}this.delegate.appendChild(parent,newChild);}/**
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){var/** @type {?} */debugEl=getDebugNode(parent);var/** @type {?} */debugChildEl=getDebugNode(newChild);var/** @type {?} */debugRefEl=getDebugNode(refChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.insertBefore(debugRefEl,debugChildEl);}this.delegate.insertBefore(parent,newChild,refChild);}/**
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){var/** @type {?} */debugEl=getDebugNode(parent);var/** @type {?} */debugChildEl=getDebugNode(oldChild);if(debugEl&&debugChildEl&&debugEl instanceof DebugElement){debugEl.removeChild(debugChildEl);}this.delegate.removeChild(parent,oldChild);}/**
     * @param {?} selectorOrNode
     * @return {?}
     */},{key:'selectRootElement',value:function selectRootElement(selectorOrNode){var/** @type {?} */el=this.delegate.selectRootElement(selectorOrNode);var/** @type {?} */debugEl=new DebugElement(el,null,getCurrentDebugContext());indexDebugNode(debugEl);return el;}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @param {?=} namespace
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(el,name,value,namespace){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var/** @type {?} */fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=value;}this.delegate.setAttribute(el,name,value,namespace);}/**
     * @param {?} el
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(el,name,namespace){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){var/** @type {?} */fullName=namespace?namespace+':'+name:name;debugEl.attributes[fullName]=null;}this.delegate.removeAttribute(el,name,namespace);}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'addClass',value:function addClass(el,name){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=true;}this.delegate.addClass(el,name);}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'removeClass',value:function removeClass(el,name){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.classes[name]=false;}this.delegate.removeClass(el,name);}/**
     * @param {?} el
     * @param {?} style
     * @param {?} value
     * @param {?} hasVendorPrefix
     * @param {?} hasImportant
     * @return {?}
     */},{key:'setStyle',value:function setStyle(el,style,value,hasVendorPrefix,hasImportant){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=value;}this.delegate.setStyle(el,style,value,hasVendorPrefix,hasImportant);}/**
     * @param {?} el
     * @param {?} style
     * @param {?} hasVendorPrefix
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(el,style,hasVendorPrefix){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.styles[style]=null;}this.delegate.removeStyle(el,style,hasVendorPrefix);}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){var/** @type {?} */debugEl=getDebugNode(el);if(debugEl&&debugEl instanceof DebugElement){debugEl.properties[name]=value;}this.delegate.setProperty(el,name,value);}/**
     * @param {?} target
     * @param {?} eventName
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(target,eventName,callback){if(typeof target!=='string'){var/** @type {?} */debugEl=getDebugNode(target);if(debugEl){debugEl.listeners.push(new EventListener(eventName,callback));}}return this.delegate.listen(target,eventName,callback);}/**
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){return this.delegate.parentNode(node);}/**
     * @param {?} node
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(node){return this.delegate.nextSibling(node);}/**
     * @param {?} node
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(node,value){return this.delegate.setValue(node,value);}},{key:'data',get:function get(){return this.delegate.data;}}]);return DebugRendererV2;}();/**
 * @return {?}
 */function _iterableDiffersFactory(){return defaultIterableDiffers;}/**
 * @return {?}
 */function _keyValueDiffersFactory(){return defaultKeyValueDiffers;}/**
 * @param {?=} locale
 * @return {?}
 */function _localeFactory(locale){return locale||'en-US';}/**
 * @return {?}
 */function _initViewEngine(){initServicesIfNeeded();}/**
 * This module includes the providers of \@angular/core that are needed
 * to bootstrap components via `ApplicationRef`.
 *
 * \@experimental
 */var ApplicationModule=function ApplicationModule(){_classCallCheck$2(this,ApplicationModule);};ApplicationModule.decorators=[{type:NgModule,args:[{providers:[ApplicationRef_,{provide:ApplicationRef,useExisting:ApplicationRef_},ApplicationInitStatus,Compiler,APP_ID_RANDOM_PROVIDER,ViewUtils,AnimationQueue,{provide:IterableDiffers,useFactory:_iterableDiffersFactory},{provide:KeyValueDiffers,useFactory:_keyValueDiffersFactory},{provide:LOCALE_ID,useFactory:_localeFactory,deps:[[new Inject(LOCALE_ID),new Optional(),new SkipSelf()]]},{provide:APP_INITIALIZER,useValue:_initViewEngine,multi:true}]}]}];/** @nocollapse */ApplicationModule.ctorParameters=function(){return[];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AnimationGroupPlayer=function(){/**
     * @param {?} _players
     */function AnimationGroupPlayer(_players){var _this31=this;_classCallCheck$2(this,AnimationGroupPlayer);this._players=_players;this._onDoneFns=[];this._onStartFns=[];this._finished=false;this._started=false;this._destroyed=false;this._onDestroyFns=[];this.parentPlayer=null;var count=0;var total=this._players.length;if(total==0){scheduleMicroTask(function(){return _this31._onFinish();});}else{this._players.forEach(function(player){player.parentPlayer=_this31;player.onDone(function(){if(++count>=total){_this31._onFinish();}});});}}/**
     * @return {?}
     */_createClass$2(AnimationGroupPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @return {?}
     */},{key:'init',value:function init(){this._players.forEach(function(player){return player.init();});}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!isPresent$2(this.parentPlayer)){this.init();}if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];this._started=true;}this._players.forEach(function(player){return player.play();});}/**
     * @return {?}
     */},{key:'pause',value:function pause(){this._players.forEach(function(player){return player.pause();});}/**
     * @return {?}
     */},{key:'restart',value:function restart(){this._players.forEach(function(player){return player.restart();});}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();this._players.forEach(function(player){return player.finish();});}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._onFinish();this._players.forEach(function(player){return player.destroy();});this._destroyed=true;this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this._players.forEach(function(player){return player.reset();});this._destroyed=false;this._finished=false;this._started=false;}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){this._players.forEach(function(player){player.setPosition(p);});}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){var/** @type {?} */min=0;this._players.forEach(function(player){var/** @type {?} */p=player.getPosition();min=Math.min(p,min);});return min;}/**
     * @return {?}
     */},{key:'players',get:function get(){return this._players;}}]);return AnimationGroupPlayer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AnimationSequencePlayer=function(){/**
     * @param {?} _players
     */function AnimationSequencePlayer(_players){var _this32=this;_classCallCheck$2(this,AnimationSequencePlayer);this._players=_players;this._currentIndex=0;this._onDoneFns=[];this._onStartFns=[];this._onDestroyFns=[];this._finished=false;this._started=false;this._destroyed=false;this.parentPlayer=null;this._players.forEach(function(player){player.parentPlayer=_this32;});this._onNext(false);}/**
     * @param {?} start
     * @return {?}
     */_createClass$2(AnimationSequencePlayer,[{key:'_onNext',value:function _onNext(start){var _this33=this;if(this._finished)return;if(this._players.length==0){this._activePlayer=new NoOpAnimationPlayer();scheduleMicroTask(function(){return _this33._onFinish();});}else if(this._currentIndex>=this._players.length){this._activePlayer=new NoOpAnimationPlayer();this._onFinish();}else{var/** @type {?} */player=this._players[this._currentIndex++];player.onDone(function(){return _this33._onNext(true);});this._activePlayer=player;if(start){player.play();}}}/**
     * @return {?}
     */},{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @return {?}
     */},{key:'init',value:function init(){this._players.forEach(function(player){return player.init();});}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onStart',value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'play',value:function play(){if(!isPresent$2(this.parentPlayer)){this.init();}if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];this._started=true;}this._activePlayer.play();}/**
     * @return {?}
     */},{key:'pause',value:function pause(){this._activePlayer.pause();}/**
     * @return {?}
     */},{key:'restart',value:function restart(){this.reset();if(this._players.length>0){this._players[0].restart();}}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this._players.forEach(function(player){return player.reset();});this._destroyed=false;this._finished=false;this._started=false;}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this._onFinish();this._players.forEach(function(player){return player.finish();});}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._onFinish();this._players.forEach(function(player){return player.destroy();});this._destroyed=true;this._activePlayer=new NoOpAnimationPlayer();this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @param {?} p
     * @return {?}
     */},{key:'setPosition',value:function setPosition(p){this._players[0].setPosition(p);}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){return this._players[0].getPosition();}/**
     * @return {?}
     */},{key:'players',get:function get(){return this._players;}}]);return AnimationSequencePlayer;}();/**
 * @experimental Animation support is experimental.
 */var AnimationTransitionEvent=/**
     * @param {?} __0
     */function AnimationTransitionEvent(_ref7){var fromState=_ref7.fromState,toState=_ref7.toState,totalTime=_ref7.totalTime,phaseName=_ref7.phaseName,element=_ref7.element,triggerName=_ref7.triggerName;_classCallCheck$2(this,AnimationTransitionEvent);this.fromState=fromState;this.toState=toState;this.totalTime=totalTime;this.phaseName=phaseName;this.element=new ElementRef(element);this.triggerName=triggerName;};var AnimationTransition=function(){/**
     * @param {?} _player
     * @param {?} _element
     * @param {?} _triggerName
     * @param {?} _fromState
     * @param {?} _toState
     * @param {?} _totalTime
     */function AnimationTransition(_player,_element,_triggerName,_fromState,_toState,_totalTime){_classCallCheck$2(this,AnimationTransition);this._player=_player;this._element=_element;this._triggerName=_triggerName;this._fromState=_fromState;this._toState=_toState;this._totalTime=_totalTime;}/**
     * @param {?} phaseName
     * @return {?}
     */_createClass$2(AnimationTransition,[{key:'_createEvent',value:function _createEvent(phaseName){return new AnimationTransitionEvent({fromState:this._fromState,toState:this._toState,totalTime:this._totalTime,phaseName:phaseName,element:this._element,triggerName:this._triggerName});}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onStart',value:function onStart(callback){var _this34=this;var/** @type {?} */fn=Zone.current.wrap(function(){return callback(_this34._createEvent('start'));},'player.onStart');this._player.onStart(fn);}/**
     * @param {?} callback
     * @return {?}
     */},{key:'onDone',value:function onDone(callback){var _this35=this;var/** @type {?} */fn=Zone.current.wrap(function(){return callback(_this35._createEvent('done'));},'player.onDone');this._player.onDone(fn);}}]);return AnimationTransition;}();var DebugDomRootRenderer=function(){/**
     * @param {?} _delegate
     */function DebugDomRootRenderer(_delegate){_classCallCheck$2(this,DebugDomRootRenderer);this._delegate=_delegate;throw new Error('RootRenderer is no longer supported. Please use the `RendererFactoryV2` instead!');}/**
     * @param {?} componentProto
     * @return {?}
     */_createClass$2(DebugDomRootRenderer,[{key:'renderComponent',value:function renderComponent(componentProto){return new DebugDomRenderer(this._delegate.renderComponent(componentProto));}}]);return DebugDomRootRenderer;}();var DebugDomRenderer=function(){/**
     * @param {?} _delegate
     */function DebugDomRenderer(_delegate){_classCallCheck$2(this,DebugDomRenderer);this._delegate=_delegate;}/**
     * @param {?} selectorOrNode
     * @param {?=} debugInfo
     * @return {?}
     */_createClass$2(DebugDomRenderer,[{key:'selectRootElement',value:function selectRootElement(selectorOrNode,debugInfo){var/** @type {?} */nativeEl=this._delegate.selectRootElement(selectorOrNode,debugInfo);var/** @type {?} */debugEl=new DebugElement(nativeEl,null,debugInfo);indexDebugNode(debugEl);return nativeEl;}/**
     * @param {?} parentElement
     * @param {?} name
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createElement',value:function createElement(parentElement,name,debugInfo){var/** @type {?} */nativeEl=this._delegate.createElement(parentElement,name,debugInfo);var/** @type {?} */debugEl=new DebugElement(nativeEl,getDebugNode(parentElement),debugInfo);debugEl.name=name;indexDebugNode(debugEl);return nativeEl;}/**
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){return this._delegate.createViewRoot(hostElement);}/**
     * @param {?} parentElement
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement,debugInfo){var/** @type {?} */comment=this._delegate.createTemplateAnchor(parentElement,debugInfo);var/** @type {?} */debugEl=new DebugNode(comment,getDebugNode(parentElement),debugInfo);indexDebugNode(debugEl);return comment;}/**
     * @param {?} parentElement
     * @param {?} value
     * @param {?=} debugInfo
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value,debugInfo){var/** @type {?} */text=this._delegate.createText(parentElement,value,debugInfo);var/** @type {?} */debugEl=new DebugNode(text,getDebugNode(parentElement),debugInfo);indexDebugNode(debugEl);return text;}/**
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){var/** @type {?} */debugParent=getDebugNode(parentElement);if(isPresent$2(debugParent)&&debugParent instanceof DebugElement){var/** @type {?} */debugElement=debugParent;nodes.forEach(function(node){debugElement.addChild(getDebugNode(node));});}this._delegate.projectNodes(parentElement,nodes);}/**
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){var/** @type {?} */debugNode=getDebugNode(node);if(isPresent$2(debugNode)){var/** @type {?} */debugParent=debugNode.parent;if(viewRootNodes.length>0&&isPresent$2(debugParent)){var/** @type {?} */debugViewRootNodes=[];viewRootNodes.forEach(function(rootNode){return debugViewRootNodes.push(getDebugNode(rootNode));});debugParent.insertChildrenAfter(debugNode,debugViewRootNodes);}}this._delegate.attachViewAfter(node,viewRootNodes);}/**
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){viewRootNodes.forEach(function(node){var/** @type {?} */debugNode=getDebugNode(node);if(debugNode&&debugNode.parent){debugNode.parent.removeChild(debugNode);}});this._delegate.detachView(viewRootNodes);}/**
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){viewAllNodes=viewAllNodes||[];viewAllNodes.forEach(function(node){removeDebugNodeFromIndex(getDebugNode(node));});this._delegate.destroyView(hostElement,viewAllNodes);}/**
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent$2(debugEl)){debugEl.listeners.push(new EventListener(name,callback));}return this._delegate.listen(renderElement,name,callback);}/**
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){return this._delegate.listenGlobal(target,name,callback);}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent$2(debugEl)&&debugEl instanceof DebugElement){debugEl.properties[propertyName]=propertyValue;}this._delegate.setElementProperty(renderElement,propertyName,propertyValue);}/**
     * @param {?} renderElement
     * @param {?} attributeName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,attributeName,attributeValue){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent$2(debugEl)&&debugEl instanceof DebugElement){debugEl.attributes[attributeName]=attributeValue;}this._delegate.setElementAttribute(renderElement,attributeName,attributeValue);}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){this._delegate.setBindingDebugInfo(renderElement,propertyName,propertyValue);}/**
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent$2(debugEl)&&debugEl instanceof DebugElement){debugEl.classes[className]=isAdd;}this._delegate.setElementClass(renderElement,className,isAdd);}/**
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){var/** @type {?} */debugEl=getDebugNode(renderElement);if(isPresent$2(debugEl)&&debugEl instanceof DebugElement){debugEl.styles[styleName]=styleValue;}this._delegate.setElementStyle(renderElement,styleName,styleValue);}/**
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?=} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){this._delegate.invokeElementMethod(renderElement,methodName,args);}/**
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){this._delegate.setText(renderNode,text);}/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */},{key:'animate',value:function animate(element,startingStyles,keyframes,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];return this._delegate.animate(element,startingStyles,keyframes,duration,delay,easing,previousPlayers);}}]);return DebugDomRenderer;}();var ViewType={};ViewType.HOST=0;ViewType.COMPONENT=1;ViewType.EMBEDDED=2;ViewType[ViewType.HOST]="HOST";ViewType[ViewType.COMPONENT]="COMPONENT";ViewType[ViewType.EMBEDDED]="EMBEDDED";var DebugContext$1=function(){/**
     * @param {?} _view
     * @param {?} _nodeIndex
     * @param {?} _tplRow
     * @param {?} _tplCol
     */function DebugContext$1(_view,_nodeIndex,_tplRow,_tplCol){_classCallCheck$2(this,DebugContext$1);this._view=_view;this._nodeIndex=_nodeIndex;this._tplRow=_tplRow;this._tplCol=_tplCol;}/**
     * @return {?}
     */_createClass$2(DebugContext$1,[{key:'_staticNodeInfo',get:function get(){return isPresent$2(this._nodeIndex)?this._view.staticNodeDebugInfos[this._nodeIndex]:null;}/**
     * @return {?}
     */},{key:'context',get:function get(){return this._view.context;}/**
     * @return {?}
     */},{key:'component',get:function get(){var/** @type {?} */staticNodeInfo=this._staticNodeInfo;if(isPresent$2(staticNodeInfo)&&isPresent$2(staticNodeInfo.componentToken)){return this.injector.get(staticNodeInfo.componentToken);}return null;}/**
     * @return {?}
     */},{key:'componentRenderElement',get:function get(){var/** @type {?} */componentView=this._view;while(isPresent$2(componentView.parentView)&&componentView.type!==ViewType.COMPONENT){componentView=componentView.parentView;}return componentView.parentElement;}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this._view.injector(this._nodeIndex);}/**
     * @return {?}
     */},{key:'renderNode',get:function get(){if(isPresent$2(this._nodeIndex)&&this._view.allNodes){return this._view.allNodes[this._nodeIndex];}else{return null;}}/**
     * @return {?}
     */},{key:'providerTokens',get:function get(){var/** @type {?} */staticNodeInfo=this._staticNodeInfo;return isPresent$2(staticNodeInfo)?staticNodeInfo.providerTokens:null;}/**
     * @return {?}
     */},{key:'source',get:function get(){return this._view.componentType.templateUrl+':'+this._tplRow+':'+this._tplCol;}/**
     * @return {?}
     */},{key:'references',get:function get(){var _this36=this;var/** @type {?} */varValues={};var/** @type {?} */staticNodeInfo=this._staticNodeInfo;if(isPresent$2(staticNodeInfo)){var/** @type {?} */refs=staticNodeInfo.refTokens;Object.keys(refs).forEach(function(refName){var/** @type {?} */refToken=refs[refName];var/** @type {?} */varValue=void 0;if(isBlank$2(refToken)){varValue=_this36._view.allNodes?_this36._view.allNodes[_this36._nodeIndex]:null;}else{varValue=_this36._view.injectorGet(refToken,_this36._nodeIndex,null);}varValues[refName]=varValue;});}return varValues;}}]);return DebugContext$1;}();var ViewAnimationMap=function(){function ViewAnimationMap(){_classCallCheck$2(this,ViewAnimationMap);this._map=new Map();this._allPlayers=[];}/**
     * @param {?} element
     * @param {?} animationName
     * @return {?}
     */_createClass$2(ViewAnimationMap,[{key:'find',value:function find(element,animationName){var/** @type {?} */playersByAnimation=this._map.get(element);if(isPresent$2(playersByAnimation)){return playersByAnimation[animationName];}}/**
     * @param {?} element
     * @return {?}
     */},{key:'findAllPlayersByElement',value:function findAllPlayersByElement(element){var/** @type {?} */el=this._map.get(element);return el?Object.keys(el).map(function(k){return el[k];}):[];}/**
     * @param {?} element
     * @param {?} animationName
     * @param {?} player
     * @return {?}
     */},{key:'set',value:function set(element,animationName,player){var/** @type {?} */playersByAnimation=this._map.get(element);if(!isPresent$2(playersByAnimation)){playersByAnimation={};}var/** @type {?} */existingEntry=playersByAnimation[animationName];if(isPresent$2(existingEntry)){this.remove(element,animationName);}playersByAnimation[animationName]=player;this._allPlayers.push(player);this._map.set(element,playersByAnimation);}/**
     * @return {?}
     */},{key:'getAllPlayers',value:function getAllPlayers(){return this._allPlayers;}/**
     * @param {?} element
     * @param {?} animationName
     * @param {?=} targetPlayer
     * @return {?}
     */},{key:'remove',value:function remove(element,animationName){var targetPlayer=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */playersByAnimation=this._map.get(element);if(playersByAnimation){var/** @type {?} */player=playersByAnimation[animationName];if(!targetPlayer||player===targetPlayer){delete playersByAnimation[animationName];var/** @type {?} */index=this._allPlayers.indexOf(player);this._allPlayers.splice(index,1);if(Object.keys(playersByAnimation).length===0){this._map.delete(element);}}}}}]);return ViewAnimationMap;}();var AnimationViewContext=function(){/**
     * @param {?} _animationQueue
     */function AnimationViewContext(_animationQueue){_classCallCheck$2(this,AnimationViewContext);this._animationQueue=_animationQueue;this._players=new ViewAnimationMap();}/**
     * @param {?} callback
     * @return {?}
     */_createClass$2(AnimationViewContext,[{key:'onAllActiveAnimationsDone',value:function onAllActiveAnimationsDone(callback){var/** @type {?} */activeAnimationPlayers=this._players.getAllPlayers();// we check for the length to avoid having GroupAnimationPlayer
// issue an unnecessary microtask when zero players are passed in
if(activeAnimationPlayers.length){new AnimationGroupPlayer(activeAnimationPlayers).onDone(function(){return callback();});}else{callback();}}/**
     * @param {?} element
     * @param {?} animationName
     * @param {?} player
     * @return {?}
     */},{key:'queueAnimation',value:function queueAnimation(element,animationName,player){var _this37=this;this._animationQueue.enqueue(player);this._players.set(element,animationName,player);player.onDone(function(){return _this37._players.remove(element,animationName,player);});}/**
     * @param {?} element
     * @param {?=} animationName
     * @return {?}
     */},{key:'getAnimationPlayers',value:function getAnimationPlayers(element){var animationName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */players=[];if(animationName){var/** @type {?} */currentPlayer=this._players.find(element,animationName);if(currentPlayer){_recursePlayers(currentPlayer,players);}}else{this._players.findAllPlayersByElement(element).forEach(function(player){return _recursePlayers(player,players);});}return players;}}]);return AnimationViewContext;}();/**
 * @param {?} player
 * @param {?} collectedPlayers
 * @return {?}
 */function _recursePlayers(player,collectedPlayers){if(player instanceof AnimationGroupPlayer||player instanceof AnimationSequencePlayer){player.players.forEach(function(player){return _recursePlayers(player,collectedPlayers);});}else{collectedPlayers.push(player);}}var ElementInjector=function(_Injector){_inherits$2(ElementInjector,_Injector);/**
     * @param {?} _view
     * @param {?} _nodeIndex
     */function ElementInjector(_view,_nodeIndex){_classCallCheck$2(this,ElementInjector);var _this38=_possibleConstructorReturn$2(this,(ElementInjector.__proto__||Object.getPrototypeOf(ElementInjector)).call(this));_this38._view=_view;_this38._nodeIndex=_nodeIndex;return _this38;}/**
     * @param {?} token
     * @param {?=} notFoundValue
     * @return {?}
     */_createClass$2(ElementInjector,[{key:'get',value:function get(token){var notFoundValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:THROW_IF_NOT_FOUND;return this._view.injectorGet(token,this._nodeIndex,notFoundValue);}}]);return ElementInjector;}(Injector);var _scope_check=wtfCreateScope('AppView#check(ascii id)');/**
 * @experimental
 */var EMPTY_CONTEXT$1=new Object();var UNDEFINED$1=new Object();/**
 * Cost of making objects: http://jsperf.com/instantiate-size-of-object
 *
 * @abstract
 */var AppView=function(){/**
     * @param {?} clazz
     * @param {?} componentType
     * @param {?} type
     * @param {?} viewUtils
     * @param {?} parentView
     * @param {?} parentIndex
     * @param {?} parentElement
     * @param {?} cdMode
     * @param {?=} declaredViewContainer
     */function AppView(clazz,componentType,type,viewUtils,parentView,parentIndex,parentElement,cdMode){var declaredViewContainer=arguments.length>8&&arguments[8]!==undefined?arguments[8]:null;_classCallCheck$2(this,AppView);this.clazz=clazz;this.componentType=componentType;this.type=type;this.viewUtils=viewUtils;this.parentView=parentView;this.parentIndex=parentIndex;this.parentElement=parentElement;this.cdMode=cdMode;this.declaredViewContainer=declaredViewContainer;this.numberOfChecks=0;this.throwOnChange=false;this.ref=new ViewRef_(this,viewUtils.animationQueue);if(type===ViewType.COMPONENT||type===ViewType.HOST){this.renderer=viewUtils.renderComponent(componentType);}else{this.renderer=parentView.renderer;}this._directRenderer=this.renderer.directRenderer;}/**
     * @return {?}
     */_createClass$2(AppView,[{key:'create',/**
     * @param {?} context
     * @return {?}
     */value:function create(context){this.context=context;return this.createInternal(null);}/**
     * @param {?} rootSelectorOrNode
     * @param {?} hostInjector
     * @param {?} projectableNodes
     * @return {?}
     */},{key:'createHostView',value:function createHostView(rootSelectorOrNode,hostInjector,projectableNodes){this.context=EMPTY_CONTEXT$1;this._hasExternalHostElement=isPresent$2(rootSelectorOrNode);this._hostInjector=hostInjector;this._hostProjectableNodes=projectableNodes;return this.createInternal(rootSelectorOrNode);}/**
     * Overwritten by implementations.
     * Returns the ComponentRef for the host element for ViewType.HOST.
     * @param {?} rootSelectorOrNode
     * @return {?}
     */},{key:'createInternal',value:function createInternal(rootSelectorOrNode){return null;}/**
     * Overwritten by implementations.
     * @param {?} templateNodeIndex
     * @return {?}
     */},{key:'createEmbeddedViewInternal',value:function createEmbeddedViewInternal(templateNodeIndex){return null;}/**
     * @param {?} lastRootNode
     * @param {?} allNodes
     * @param {?} disposables
     * @return {?}
     */},{key:'init',value:function init(lastRootNode,allNodes,disposables){this.lastRootNode=lastRootNode;this.allNodes=allNodes;this.disposables=disposables;if(this.type===ViewType.COMPONENT){this.dirtyParentQueriesInternal();}}/**
     * @param {?} token
     * @param {?} nodeIndex
     * @param {?=} notFoundValue
     * @return {?}
     */},{key:'injectorGet',value:function injectorGet(token,nodeIndex){var notFoundValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:THROW_IF_NOT_FOUND;var/** @type {?} */result=UNDEFINED$1;var/** @type {?} */view=this;while(result===UNDEFINED$1){if(isPresent$2(nodeIndex)){result=view.injectorGetInternal(token,nodeIndex,UNDEFINED$1);}if(result===UNDEFINED$1&&view.type===ViewType.HOST){result=view._hostInjector.get(token,notFoundValue);}nodeIndex=view.parentIndex;view=view.parentView;}return result;}/**
     * Overwritten by implementations
     * @param {?} token
     * @param {?} nodeIndex
     * @param {?} notFoundResult
     * @return {?}
     */},{key:'injectorGetInternal',value:function injectorGetInternal(token,nodeIndex,notFoundResult){return notFoundResult;}/**
     * @param {?} nodeIndex
     * @return {?}
     */},{key:'injector',value:function injector(nodeIndex){return new ElementInjector(this,nodeIndex);}/**
     * @return {?}
     */},{key:'detachAndDestroy',value:function detachAndDestroy(){if(this.viewContainer){this.viewContainer.detachView(this.viewContainer.nestedViews.indexOf(this));}else if(this.appRef){this.appRef.detachView(this.ref);}else if(this._hasExternalHostElement){this.detach();}this.destroy();}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){var _this39=this;if(this.cdMode===ChangeDetectorStatus.Destroyed){return;}var/** @type {?} */hostElement=this.type===ViewType.COMPONENT?this.parentElement:null;if(this.disposables){for(var/** @type {?} */i=0;i<this.disposables.length;i++){this.disposables[i]();}}this.destroyInternal();this.dirtyParentQueriesInternal();if(this._animationContext){this._animationContext.onAllActiveAnimationsDone(function(){return _this39.renderer.destroyView(hostElement,_this39.allNodes);});}else{this.renderer.destroyView(hostElement,this.allNodes);}this.cdMode=ChangeDetectorStatus.Destroyed;}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'destroyInternal',value:function destroyInternal(){}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'detachInternal',value:function detachInternal(){}/**
     * @return {?}
     */},{key:'detach',value:function detach(){var _this40=this;this.detachInternal();if(this._animationContext){this._animationContext.onAllActiveAnimationsDone(function(){return _this40._renderDetach();});}else{this._renderDetach();}if(this.declaredViewContainer&&this.declaredViewContainer!==this.viewContainer&&this.declaredViewContainer.projectedViews){var/** @type {?} */projectedViews=this.declaredViewContainer.projectedViews;var/** @type {?} */index=projectedViews.indexOf(this);// perf: pop is faster than splice!
if(index>=projectedViews.length-1){projectedViews.pop();}else{projectedViews.splice(index,1);}}this.appRef=null;this.viewContainer=null;this.dirtyParentQueriesInternal();}/**
     * @return {?}
     */},{key:'_renderDetach',value:function _renderDetach(){if(this._directRenderer){this.visitRootNodesInternal(this._directRenderer.remove,null);}else{this.renderer.detachView(this.flatRootNodes);}}/**
     * @param {?} appRef
     * @return {?}
     */},{key:'attachToAppRef',value:function attachToAppRef(appRef){if(this.viewContainer){throw new Error('This view is already attached to a ViewContainer!');}this.appRef=appRef;this.dirtyParentQueriesInternal();}/**
     * @param {?} viewContainer
     * @param {?} prevView
     * @return {?}
     */},{key:'attachAfter',value:function attachAfter(viewContainer,prevView){if(this.appRef){throw new Error('This view is already attached directly to the ApplicationRef!');}this._renderAttach(viewContainer,prevView);this.viewContainer=viewContainer;if(this.declaredViewContainer&&this.declaredViewContainer!==viewContainer){if(!this.declaredViewContainer.projectedViews){this.declaredViewContainer.projectedViews=[];}this.declaredViewContainer.projectedViews.push(this);}this.dirtyParentQueriesInternal();}/**
     * @param {?} viewContainer
     * @param {?} prevView
     * @return {?}
     */},{key:'moveAfter',value:function moveAfter(viewContainer,prevView){this._renderAttach(viewContainer,prevView);this.dirtyParentQueriesInternal();}/**
     * @param {?} viewContainer
     * @param {?} prevView
     * @return {?}
     */},{key:'_renderAttach',value:function _renderAttach(viewContainer,prevView){var/** @type {?} */prevNode=prevView?prevView.lastRootNode:viewContainer.nativeElement;if(this._directRenderer){var/** @type {?} */nextSibling=this._directRenderer.nextSibling(prevNode);if(nextSibling){this.visitRootNodesInternal(this._directRenderer.insertBefore,nextSibling);}else{var/** @type {?} */parentElement=this._directRenderer.parentElement(prevNode);if(parentElement){this.visitRootNodesInternal(this._directRenderer.appendChild,parentElement);}}}else{this.renderer.attachViewAfter(prevNode,this.flatRootNodes);}}/**
     * @return {?}
     */},{key:'projectNodes',/**
     * @param {?} parentElement
     * @param {?} ngContentIndex
     * @return {?}
     */value:function projectNodes(parentElement,ngContentIndex){if(this._directRenderer){this.visitProjectedNodes(ngContentIndex,this._directRenderer.appendChild,parentElement);}else{var/** @type {?} */nodes=[];this.visitProjectedNodes(ngContentIndex,addToArray,nodes);this.renderer.projectNodes(parentElement,nodes);}}/**
     * @param {?} ngContentIndex
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitProjectedNodes',value:function visitProjectedNodes(ngContentIndex,cb,c){switch(this.type){case ViewType.EMBEDDED:this.parentView.visitProjectedNodes(ngContentIndex,cb,c);break;case ViewType.COMPONENT:if(this.parentView.type===ViewType.HOST){var/** @type {?} */nodes=this.parentView._hostProjectableNodes[ngContentIndex]||[];for(var/** @type {?} */i=0;i<nodes.length;i++){cb(nodes[i],c);}}else{this.parentView.visitProjectableNodesInternal(this.parentIndex,ngContentIndex,cb,c);}break;}}/**
     * Overwritten by implementations
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitRootNodesInternal',value:function visitRootNodesInternal(cb,c){}/**
     * Overwritten by implementations
     * @param {?} nodeIndex
     * @param {?} ngContentIndex
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitProjectableNodesInternal',value:function visitProjectableNodesInternal(nodeIndex,ngContentIndex,cb,c){}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'dirtyParentQueriesInternal',value:function dirtyParentQueriesInternal(){}/**
     * @param {?} throwOnChange
     * @return {?}
     */},{key:'internalDetectChanges',value:function internalDetectChanges(throwOnChange){if(this.cdMode!==ChangeDetectorStatus.Detached){this.detectChanges(throwOnChange);}}/**
     * @param {?} throwOnChange
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(throwOnChange){var/** @type {?} */s=_scope_check(this.clazz);if(this.cdMode===ChangeDetectorStatus.Checked||this.cdMode===ChangeDetectorStatus.Errored)return;if(this.cdMode===ChangeDetectorStatus.Destroyed){this.throwDestroyedError('detectChanges');}this.throwOnChange=throwOnChange;this.detectChangesInternal();if(this.cdMode===ChangeDetectorStatus.CheckOnce)this.cdMode=ChangeDetectorStatus.Checked;this.numberOfChecks++;wtfLeave(s);}/**
     * Overwritten by implementations
     * @return {?}
     */},{key:'detectChangesInternal',value:function detectChangesInternal(){}/**
     * @return {?}
     */},{key:'markAsCheckOnce',value:function markAsCheckOnce(){this.cdMode=ChangeDetectorStatus.CheckOnce;}/**
     * @return {?}
     */},{key:'markPathToRootAsCheckOnce',value:function markPathToRootAsCheckOnce(){var/** @type {?} */c=this;while(isPresent$2(c)&&c.cdMode!==ChangeDetectorStatus.Detached){if(c.cdMode===ChangeDetectorStatus.Checked){c.cdMode=ChangeDetectorStatus.CheckOnce;}if(c.type===ViewType.COMPONENT){c=c.parentView;}else{c=c.viewContainer?c.viewContainer.parentView:null;}}}/**
     * @param {?} cb
     * @return {?}
     */},{key:'eventHandler',value:function eventHandler(cb){return cb;}/**
     * @param {?} details
     * @return {?}
     */},{key:'throwDestroyedError',value:function throwDestroyedError(details){throw viewDestroyedError(details);}},{key:'animationContext',get:function get(){if(!this._animationContext){this._animationContext=new AnimationViewContext(this.viewUtils.animationQueue);}return this._animationContext;}/**
     * @return {?}
     */},{key:'destroyed',get:function get(){return this.cdMode===ChangeDetectorStatus.Destroyed;}},{key:'changeDetectorRef',get:function get(){return this.ref;}/**
     * @return {?}
     */},{key:'flatRootNodes',get:function get(){var/** @type {?} */nodes=[];this.visitRootNodesInternal(addToArray,nodes);return nodes;}}]);return AppView;}();var DebugAppView=function(_AppView){_inherits$2(DebugAppView,_AppView);/**
     * @param {?} clazz
     * @param {?} componentType
     * @param {?} type
     * @param {?} viewUtils
     * @param {?} parentView
     * @param {?} parentIndex
     * @param {?} parentNode
     * @param {?} cdMode
     * @param {?} staticNodeDebugInfos
     * @param {?=} declaredViewContainer
     */function DebugAppView(clazz,componentType,type,viewUtils,parentView,parentIndex,parentNode,cdMode,staticNodeDebugInfos){var declaredViewContainer=arguments.length>9&&arguments[9]!==undefined?arguments[9]:null;_classCallCheck$2(this,DebugAppView);var _this41=_possibleConstructorReturn$2(this,(DebugAppView.__proto__||Object.getPrototypeOf(DebugAppView)).call(this,clazz,componentType,type,viewUtils,parentView,parentIndex,parentNode,cdMode,declaredViewContainer));_this41.staticNodeDebugInfos=staticNodeDebugInfos;_this41._currentDebugContext=null;return _this41;}/**
     * @param {?} context
     * @return {?}
     */_createClass$2(DebugAppView,[{key:'create',value:function create(context){this._resetDebug();try{return _get$1(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'create',this).call(this,context);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @param {?} rootSelectorOrNode
     * @param {?} injector
     * @param {?=} projectableNodes
     * @return {?}
     */},{key:'createHostView',value:function createHostView(rootSelectorOrNode,injector){var projectableNodes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;this._resetDebug();try{return _get$1(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'createHostView',this).call(this,rootSelectorOrNode,injector,projectableNodes);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @param {?} token
     * @param {?} nodeIndex
     * @param {?=} notFoundResult
     * @return {?}
     */},{key:'injectorGet',value:function injectorGet(token,nodeIndex,notFoundResult){this._resetDebug();try{return _get$1(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'injectorGet',this).call(this,token,nodeIndex,notFoundResult);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @return {?}
     */},{key:'detach',value:function detach(){this._resetDebug();try{_get$1(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'detach',this).call(this);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this._resetDebug();try{_get$1(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'destroy',this).call(this);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @param {?} throwOnChange
     * @return {?}
     */},{key:'detectChanges',value:function detectChanges(throwOnChange){this._resetDebug();try{_get$1(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'detectChanges',this).call(this,throwOnChange);}catch(e){this._rethrowWithContext(e);throw e;}}/**
     * @return {?}
     */},{key:'_resetDebug',value:function _resetDebug(){this._currentDebugContext=null;}/**
     * @param {?} nodeIndex
     * @param {?} rowNum
     * @param {?} colNum
     * @return {?}
     */},{key:'debug',value:function debug(nodeIndex,rowNum,colNum){return this._currentDebugContext=new DebugContext$1(this,nodeIndex,rowNum,colNum);}/**
     * @param {?} e
     * @return {?}
     */},{key:'_rethrowWithContext',value:function _rethrowWithContext(e){if(!(getType(e)==viewWrappedError)){if(!(getType(e)==expressionChangedAfterItHasBeenCheckedError)){this.cdMode=ChangeDetectorStatus.Errored;}if(isPresent$2(this._currentDebugContext)){throw viewWrappedError(e,this._currentDebugContext);}}}/**
     * @param {?} cb
     * @return {?}
     */},{key:'eventHandler',value:function eventHandler(cb){var _this42=this;var/** @type {?} */superHandler=_get$1(DebugAppView.prototype.__proto__||Object.getPrototypeOf(DebugAppView.prototype),'eventHandler',this).call(this,cb);return function(eventName,event){_this42._resetDebug();try{return superHandler.call(_this42,eventName,event);}catch(e){_this42._rethrowWithContext(e);throw e;}};}}]);return DebugAppView;}(AppView);/**
 * A ViewContainer is created for elements that have a ViewContainerRef
 * to keep track of the nested views.
 */var ViewContainer=function(){/**
     * @param {?} index
     * @param {?} parentIndex
     * @param {?} parentView
     * @param {?} nativeElement
     */function ViewContainer(index,parentIndex,parentView,nativeElement){_classCallCheck$2(this,ViewContainer);this.index=index;this.parentIndex=parentIndex;this.parentView=parentView;this.nativeElement=nativeElement;}/**
     * @return {?}
     */_createClass$2(ViewContainer,[{key:'detectChangesInNestedViews',/**
     * @param {?} throwOnChange
     * @return {?}
     */value:function detectChangesInNestedViews(throwOnChange){if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){this.nestedViews[i].detectChanges(throwOnChange);}}}/**
     * @return {?}
     */},{key:'destroyNestedViews',value:function destroyNestedViews(){if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){this.nestedViews[i].destroy();}}}/**
     * @param {?} cb
     * @param {?} c
     * @return {?}
     */},{key:'visitNestedViewRootNodes',value:function visitNestedViewRootNodes(cb,c){if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){this.nestedViews[i].visitRootNodesInternal(cb,c);}}}/**
     * @param {?} nestedViewClass
     * @param {?} callback
     * @return {?}
     */},{key:'mapNestedViews',value:function mapNestedViews(nestedViewClass,callback){var/** @type {?} */result=[];if(this.nestedViews){for(var/** @type {?} */i=0;i<this.nestedViews.length;i++){var/** @type {?} */nestedView=this.nestedViews[i];if(nestedView.clazz===nestedViewClass){result.push(callback(nestedView));}}}if(this.projectedViews){for(var/** @type {?} */_i6=0;_i6<this.projectedViews.length;_i6++){var/** @type {?} */projectedView=this.projectedViews[_i6];if(projectedView.clazz===nestedViewClass){result.push(callback(projectedView));}}}return result;}/**
     * @param {?} view
     * @param {?} toIndex
     * @return {?}
     */},{key:'moveView',value:function moveView(view,toIndex){var/** @type {?} */fromIndex=this.nestedViews.indexOf(view);if(view.type===ViewType.COMPONENT){throw new Error('Component views can\'t be moved!');}var/** @type {?} */nestedViews=this.nestedViews;if(nestedViews==null){nestedViews=[];this.nestedViews=nestedViews;}nestedViews.splice(fromIndex,1);nestedViews.splice(toIndex,0,view);var/** @type {?} */prevView=toIndex>0?nestedViews[toIndex-1]:null;view.moveAfter(this,prevView);}/**
     * @param {?} view
     * @param {?} viewIndex
     * @return {?}
     */},{key:'attachView',value:function attachView(view,viewIndex){if(view.type===ViewType.COMPONENT){throw new Error('Component views can\'t be moved!');}var/** @type {?} */nestedViews=this.nestedViews;if(nestedViews==null){nestedViews=[];this.nestedViews=nestedViews;}// perf: array.push is faster than array.splice!
if(viewIndex>=nestedViews.length){nestedViews.push(view);}else{nestedViews.splice(viewIndex,0,view);}var/** @type {?} */prevView=viewIndex>0?nestedViews[viewIndex-1]:null;view.attachAfter(this,prevView);}/**
     * @param {?} viewIndex
     * @return {?}
     */},{key:'detachView',value:function detachView(viewIndex){var/** @type {?} */view=this.nestedViews[viewIndex];// perf: array.pop is faster than array.splice!
if(viewIndex>=this.nestedViews.length-1){this.nestedViews.pop();}else{this.nestedViews.splice(viewIndex,1);}if(view.type===ViewType.COMPONENT){throw new Error('Component views can\'t be moved!');}view.detach();return view;}},{key:'elementRef',get:function get(){return new ElementRef(this.nativeElement);}/**
     * @return {?}
     */},{key:'vcRef',get:function get(){return new ViewContainerRef_(this);}/**
     * @return {?}
     */},{key:'parentInjector',get:function get(){return this.parentView.injector(this.parentIndex);}/**
     * @return {?}
     */},{key:'injector',get:function get(){return this.parentView.injector(this.index);}}]);return ViewContainer;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var AUTO_STYLE$1='*';/**
 * @deprecated This symbol has moved. Please Import from \@angular/animations instead!
 * @param {?} name
 * @param {?} definitions
 * @return {?}
 */

var _slicedToArray$1=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass$1=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray$1(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn$1(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits$1(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck$1(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */var PlatformLocation=function(){function PlatformLocation(){_classCallCheck$1(this,PlatformLocation);}_createClass$1(PlatformLocation,[{key:'getBaseHrefFromDOM',/**
     * @abstract
     * @return {?}
     */value:function getBaseHrefFromDOM(){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onPopState',value:function onPopState(fn){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onHashChange',value:function onHashChange(fn){}/**
     * @return {?}
     */},{key:'replaceState',/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */value:function replaceState(state$$1,title,url){}/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */},{key:'pushState',value:function pushState(state$$1,title,url){}/**
     * @abstract
     * @return {?}
     */},{key:'forward',value:function forward(){}/**
     * @abstract
     * @return {?}
     */},{key:'back',value:function back(){}},{key:'pathname',get:function get(){return null;}/**
     * @return {?}
     */},{key:'search',get:function get(){return null;}/**
     * @return {?}
     */},{key:'hash',get:function get(){return null;}}]);return PlatformLocation;}();/**
 * `LocationStrategy` is responsible for representing and reading route state
 * from the browser's URL. Angular provides two strategies:
 * {\@link HashLocationStrategy} and {\@link PathLocationStrategy}.
 *
 * This is used under the hood of the {\@link Location} service.
 *
 * Applications should use the {\@link Router} or {\@link Location} services to
 * interact with application route state.
 *
 * For instance, {\@link HashLocationStrategy} produces URLs like
 * `http://example.com#/foo`, and {\@link PathLocationStrategy} produces
 * `http://example.com/foo` as an equivalent URL.
 *
 * See these two classes for more.
 *
 * \@stable
 * @abstract
 */var LocationStrategy=function(){function LocationStrategy(){_classCallCheck$1(this,LocationStrategy);}_createClass$1(LocationStrategy,[{key:'path',/**
     * @abstract
     * @param {?=} includeHash
     * @return {?}
     */value:function path(includeHash){}/**
     * @abstract
     * @param {?} internal
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(internal){}/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'pushState',value:function pushState(state$$1,title,url,queryParams){}/**
     * @abstract
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state$$1,title,url,queryParams){}/**
     * @abstract
     * @return {?}
     */},{key:'forward',value:function forward(){}/**
     * @abstract
     * @return {?}
     */},{key:'back',value:function back(){}/**
     * @abstract
     * @param {?} fn
     * @return {?}
     */},{key:'onPopState',value:function onPopState(fn){}/**
     * @abstract
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(){}}]);return LocationStrategy;}();/**
 * The `APP_BASE_HREF` token represents the base href to be used with the
 * {@link PathLocationStrategy}.
 *
 * If you're using {@link PathLocationStrategy}, you must provide a provider to a string
 * representing the URL prefix that should be preserved when generating and recognizing
 * URLs.
 *
 * ### Example
 *
 * ```typescript
 * import {Component, NgModule} from '@angular/core';
 * import {APP_BASE_HREF} from '@angular/common';
 *
 * @NgModule({
 *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]
 * })
 * class AppModule {}
 * ```
 *
 * @stable
 */var APP_BASE_HREF=new InjectionToken('appBaseHref');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var globalScope$1=void 0;if(typeof window==='undefined'){if(typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope){// TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
globalScope$1=self;}else{globalScope$1=global;}}else{globalScope$1=window;}// Need to declare a new variable for global here since TypeScript
// exports the original value of the symbol.
var _global=globalScope$1;/**
 * @param {?} type
 * @return {?}
 */function getTypeNameForDebugging(type){return type['name']||(typeof type==='undefined'?'undefined':_typeof(type));}// TODO: remove calls to assert in production environment
// Note: Can't just export this and import in in other files
// as `assert` is a reserved keyword in Dart
_global.assert=function assert(condition){// TODO: to be fixed properly via #2830, noop for now
};/**
 * @param {?} obj
 * @return {?}
 */function isPresent$1(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank$1(obj){return obj==null;}/**
 * @param {?} token
 * @return {?}
 */function stringify$1(token){if(typeof token==='string'){return token;}if(token==null){return''+token;}if(token.overriddenName){return''+token.overriddenName;}if(token.name){return''+token.name;}var/** @type {?} */res=token.toString();var/** @type {?} */newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}var NumberWrapper=function(){function NumberWrapper(){_classCallCheck$1(this,NumberWrapper);}_createClass$1(NumberWrapper,null,[{key:'parseIntAutoRadix',/**
     * @param {?} text
     * @return {?}
     */value:function parseIntAutoRadix(text){var/** @type {?} */result=parseInt(text);if(isNaN(result)){throw new Error('Invalid integer literal when parsing '+text);}return result;}/**
     * @param {?} value
     * @return {?}
     */},{key:'isNumeric',value:function isNumeric(value){return!isNaN(value-parseFloat(value));}}]);return NumberWrapper;}();/**
 * @param {?} o
 * @return {?}
 */function isJsObject(o){return o!==null&&(typeof o==='function'||(typeof o==='undefined'?'undefined':_typeof(o))==='object');}var _symbolIterator=null;/**
 * @return {?}
 */function getSymbolIterator(){if(!_symbolIterator){if(globalScope$1.Symbol&&Symbol.iterator){_symbolIterator=Symbol.iterator;}else{// es6-shim specific logic
var/** @type {?} */keys=Object.getOwnPropertyNames(Map.prototype);for(var/** @type {?} */i=0;i<keys.length;++i){var/** @type {?} */key=keys[i];if(key!=='entries'&&key!=='size'&&Map.prototype[key]===Map.prototype['entries']){_symbolIterator=key;}}}}return _symbolIterator;}/**
 * \@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.
 * \@description
 * Depending on which {\@link LocationStrategy} is used, `Location` will either persist
 * to the URL's path or the URL's hash segment.
 *
 * Note: it's better to use {\@link Router#navigate} service to trigger route changes. Use
 * `Location` only if you need to interact with or create normalized URLs outside of
 * routing.
 *
 * `Location` is responsible for normalizing the URL against the application's base href.
 * A normalized URL is absolute from the URL host, includes the application's base href, and has no
 * trailing slash:
 * - `/my/app/user/123` is normalized
 * - `my/app/user/123` **is not** normalized
 * - `/my/app/user/123/` **is not** normalized
 *
 * ### Example
 * {\@example common/location/ts/path_location_component.ts region='LocationComponent'}
 * \@stable
 */var Location=function(){/**
     * @param {?} platformStrategy
     */function Location(platformStrategy){var _this=this;_classCallCheck$1(this,Location);/** @internal */this._subject=new EventEmitter$1();this._platformStrategy=platformStrategy;var browserBaseHref=this._platformStrategy.getBaseHref();this._baseHref=Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));this._platformStrategy.onPopState(function(ev){_this._subject.emit({'url':_this.path(true),'pop':true,'type':ev.type});});}/**
     * @param {?=} includeHash
     * @return {?}
     */_createClass$1(Location,[{key:'path',value:function path(){var includeHash=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return this.normalize(this._platformStrategy.path(includeHash));}/**
     * Normalizes the given path and compares to the current normalized path.
     * @param {?} path
     * @param {?=} query
     * @return {?}
     */},{key:'isCurrentPathEqualTo',value:function isCurrentPathEqualTo(path){var query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';return this.path()==this.normalize(path+Location.normalizeQueryParams(query));}/**
     * Given a string representing a URL, returns the normalized URL path without leading or
     * trailing slashes.
     * @param {?} url
     * @return {?}
     */},{key:'normalize',value:function normalize(url){return Location.stripTrailingSlash(_stripBaseHref(this._baseHref,_stripIndexHtml(url)));}/**
     * Given a string representing a URL, returns the platform-specific external URL path.
     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one
     * before normalizing. This method will also add a hash if `HashLocationStrategy` is
     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.
     * @param {?} url
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(url){if(url&&url[0]!=='/'){url='/'+url;}return this._platformStrategy.prepareExternalUrl(url);}/**
     * Changes the browsers URL to the normalized version of the given URL, and pushes a
     * new item onto the platform's history.
     * @param {?} path
     * @param {?=} query
     * @return {?}
     */},{key:'go',value:function go(path){var query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';this._platformStrategy.pushState(null,'',path,query);}/**
     * Changes the browsers URL to the normalized version of the given URL, and replaces
     * the top item on the platform's history stack.
     * @param {?} path
     * @param {?=} query
     * @return {?}
     */},{key:'replaceState',value:function replaceState(path){var query=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';this._platformStrategy.replaceState(null,'',path,query);}/**
     * Navigates forward in the platform's history.
     * @return {?}
     */},{key:'forward',value:function forward(){this._platformStrategy.forward();}/**
     * Navigates back in the platform's history.
     * @return {?}
     */},{key:'back',value:function back(){this._platformStrategy.back();}/**
     * Subscribe to the platform's `popState` events.
     * @param {?} onNext
     * @param {?=} onThrow
     * @param {?=} onReturn
     * @return {?}
     */},{key:'subscribe',value:function subscribe(onNext){var onThrow=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var onReturn=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return this._subject.subscribe({next:onNext,error:onThrow,complete:onReturn});}/**
     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as
     * is.
     * @param {?} params
     * @return {?}
     */}],[{key:'normalizeQueryParams',value:function normalizeQueryParams(params){return params&&params[0]!=='?'?'?'+params:params;}/**
     * Given 2 parts of a url, join them with a slash if needed.
     * @param {?} start
     * @param {?} end
     * @return {?}
     */},{key:'joinWithSlash',value:function joinWithSlash(start,end){if(start.length==0){return end;}if(end.length==0){return start;}var/** @type {?} */slashes=0;if(start.endsWith('/')){slashes++;}if(end.startsWith('/')){slashes++;}if(slashes==2){return start+end.substring(1);}if(slashes==1){return start+end;}return start+'/'+end;}/**
     * If url has a trailing slash, remove it, otherwise return url as is.
     * @param {?} url
     * @return {?}
     */},{key:'stripTrailingSlash',value:function stripTrailingSlash(url){return url.replace(/\/$/,'');}}]);return Location;}();Location.decorators=[{type:Injectable}];/** @nocollapse */Location.ctorParameters=function(){return[{type:LocationStrategy}];};/**
 * @param {?} baseHref
 * @param {?} url
 * @return {?}
 */function _stripBaseHref(baseHref,url){return baseHref&&url.startsWith(baseHref)?url.substring(baseHref.length):url;}/**
 * @param {?} url
 * @return {?}
 */function _stripIndexHtml(url){return url.replace(/\/index.html$/,'');}/**
 * \@whatItDoes Use URL hash for storing application location data.
 * \@description
 * `HashLocationStrategy` is a {\@link LocationStrategy} used to configure the
 * {\@link Location} service to represent its state in the
 * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)
 * of the browser's URL.
 *
 * For instance, if you call `location.go('/foo')`, the browser's URL will become
 * `example.com#/foo`.
 *
 * ### Example
 *
 * {\@example common/location/ts/hash_location_component.ts region='LocationComponent'}
 *
 * \@stable
 */var HashLocationStrategy=function(_LocationStrategy){_inherits$1(HashLocationStrategy,_LocationStrategy);/**
     * @param {?} _platformLocation
     * @param {?=} _baseHref
     */function HashLocationStrategy(_platformLocation,_baseHref){_classCallCheck$1(this,HashLocationStrategy);var _this2=_possibleConstructorReturn$1(this,(HashLocationStrategy.__proto__||Object.getPrototypeOf(HashLocationStrategy)).call(this));_this2._platformLocation=_platformLocation;_this2._baseHref='';if(isPresent$1(_baseHref)){_this2._baseHref=_baseHref;}return _this2;}/**
     * @param {?} fn
     * @return {?}
     */_createClass$1(HashLocationStrategy,[{key:'onPopState',value:function onPopState(fn){this._platformLocation.onPopState(fn);this._platformLocation.onHashChange(fn);}/**
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(){return this._baseHref;}/**
     * @param {?=} includeHash
     * @return {?}
     */},{key:'path',value:function path(){var includeHash=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;// the hash value is always prefixed with a `#`
// and if it is empty then it will stay empty
var/** @type {?} */path=this._platformLocation.hash;if(!isPresent$1(path))path='#';return path.length>0?path.substring(1):path;}/**
     * @param {?} internal
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(internal){var/** @type {?} */url=Location.joinWithSlash(this._baseHref,internal);return url.length>0?'#'+url:url;}/**
     * @param {?} state
     * @param {?} title
     * @param {?} path
     * @param {?} queryParams
     * @return {?}
     */},{key:'pushState',value:function pushState(state$$1,title,path,queryParams){var/** @type {?} */url=this.prepareExternalUrl(path+Location.normalizeQueryParams(queryParams));if(url.length==0){url=this._platformLocation.pathname;}this._platformLocation.pushState(state$$1,title,url);}/**
     * @param {?} state
     * @param {?} title
     * @param {?} path
     * @param {?} queryParams
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state$$1,title,path,queryParams){var/** @type {?} */url=this.prepareExternalUrl(path+Location.normalizeQueryParams(queryParams));if(url.length==0){url=this._platformLocation.pathname;}this._platformLocation.replaceState(state$$1,title,url);}/**
     * @return {?}
     */},{key:'forward',value:function forward(){this._platformLocation.forward();}/**
     * @return {?}
     */},{key:'back',value:function back(){this._platformLocation.back();}}]);return HashLocationStrategy;}(LocationStrategy);HashLocationStrategy.decorators=[{type:Injectable}];/** @nocollapse */HashLocationStrategy.ctorParameters=function(){return[{type:PlatformLocation},{type:undefined,decorators:[{type:Optional},{type:Inject,args:[APP_BASE_HREF]}]}];};/**
 * \@whatItDoes Use URL for storing application location data.
 * \@description
 * `PathLocationStrategy` is a {\@link LocationStrategy} used to configure the
 * {\@link Location} service to represent its state in the
 * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the
 * browser's URL.
 *
 * If you're using `PathLocationStrategy`, you must provide a {\@link APP_BASE_HREF}
 * or add a base element to the document. This URL prefix that will be preserved
 * when generating and recognizing URLs.
 *
 * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * Similarly, if you add `<base href='/my/app'/>` to the document and call
 * `location.go('/foo')`, the browser's URL will become
 * `example.com/my/app/foo`.
 *
 * ### Example
 *
 * {\@example common/location/ts/path_location_component.ts region='LocationComponent'}
 *
 * \@stable
 */var PathLocationStrategy=function(_LocationStrategy2){_inherits$1(PathLocationStrategy,_LocationStrategy2);/**
     * @param {?} _platformLocation
     * @param {?=} href
     */function PathLocationStrategy(_platformLocation,href){_classCallCheck$1(this,PathLocationStrategy);var _this3=_possibleConstructorReturn$1(this,(PathLocationStrategy.__proto__||Object.getPrototypeOf(PathLocationStrategy)).call(this));_this3._platformLocation=_platformLocation;if(isBlank$1(href)){href=_this3._platformLocation.getBaseHrefFromDOM();}if(isBlank$1(href)){throw new Error('No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.');}_this3._baseHref=href;return _this3;}/**
     * @param {?} fn
     * @return {?}
     */_createClass$1(PathLocationStrategy,[{key:'onPopState',value:function onPopState(fn){this._platformLocation.onPopState(fn);this._platformLocation.onHashChange(fn);}/**
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(){return this._baseHref;}/**
     * @param {?} internal
     * @return {?}
     */},{key:'prepareExternalUrl',value:function prepareExternalUrl(internal){return Location.joinWithSlash(this._baseHref,internal);}/**
     * @param {?=} includeHash
     * @return {?}
     */},{key:'path',value:function path(){var includeHash=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var/** @type {?} */pathname=this._platformLocation.pathname+Location.normalizeQueryParams(this._platformLocation.search);var/** @type {?} */hash=this._platformLocation.hash;return hash&&includeHash?''+pathname+hash:pathname;}/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'pushState',value:function pushState(state$$1,title,url,queryParams){var/** @type {?} */externalUrl=this.prepareExternalUrl(url+Location.normalizeQueryParams(queryParams));this._platformLocation.pushState(state$$1,title,externalUrl);}/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @param {?} queryParams
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state$$1,title,url,queryParams){var/** @type {?} */externalUrl=this.prepareExternalUrl(url+Location.normalizeQueryParams(queryParams));this._platformLocation.replaceState(state$$1,title,externalUrl);}/**
     * @return {?}
     */},{key:'forward',value:function forward(){this._platformLocation.forward();}/**
     * @return {?}
     */},{key:'back',value:function back(){this._platformLocation.back();}}]);return PathLocationStrategy;}(LocationStrategy);PathLocationStrategy.decorators=[{type:Injectable}];/** @nocollapse */PathLocationStrategy.ctorParameters=function(){return[{type:PlatformLocation},{type:undefined,decorators:[{type:Optional},{type:Inject,args:[APP_BASE_HREF]}]}];};/**
 * \@experimental
 * @abstract
 */var NgLocalization=function(){function NgLocalization(){_classCallCheck$1(this,NgLocalization);}_createClass$1(NgLocalization,[{key:'getPluralCategory',/**
     * @abstract
     * @param {?} value
     * @return {?}
     */value:function getPluralCategory(value){}}]);return NgLocalization;}();/**
 * Returns the plural category for a given value.
 * - "=value" when the case exists,
 * - the plural category otherwise
 *
 * \@internal
 * @param {?} value
 * @param {?} cases
 * @param {?} ngLocalization
 * @return {?}
 */function getPluralCategory(value,cases,ngLocalization){var/** @type {?} */key='='+value;if(cases.indexOf(key)>-1){return key;}key=ngLocalization.getPluralCategory(value);if(cases.indexOf(key)>-1){return key;}if(cases.indexOf('other')>-1){return'other';}throw new Error('No plural message found for value "'+value+'"');}/**
 * Returns the plural case based on the locale
 *
 * \@experimental
 */var NgLocaleLocalization=function(_NgLocalization){_inherits$1(NgLocaleLocalization,_NgLocalization);/**
     * @param {?} locale
     */function NgLocaleLocalization(locale){_classCallCheck$1(this,NgLocaleLocalization);var _this4=_possibleConstructorReturn$1(this,(NgLocaleLocalization.__proto__||Object.getPrototypeOf(NgLocaleLocalization)).call(this));_this4.locale=locale;return _this4;}/**
     * @param {?} value
     * @return {?}
     */_createClass$1(NgLocaleLocalization,[{key:'getPluralCategory',value:function getPluralCategory(value){var/** @type {?} */plural=getPluralCase(this.locale,value);switch(plural){case Plural.Zero:return'zero';case Plural.One:return'one';case Plural.Two:return'two';case Plural.Few:return'few';case Plural.Many:return'many';default:return'other';}}}]);return NgLocaleLocalization;}(NgLocalization);NgLocaleLocalization.decorators=[{type:Injectable}];/** @nocollapse */NgLocaleLocalization.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[LOCALE_ID]}]}];};var Plural={};Plural.Zero=0;Plural.One=1;Plural.Two=2;Plural.Few=3;Plural.Many=4;Plural.Other=5;Plural[Plural.Zero]="Zero";Plural[Plural.One]="One";Plural[Plural.Two]="Two";Plural[Plural.Few]="Few";Plural[Plural.Many]="Many";Plural[Plural.Other]="Other";/**
 * Returns the plural case based on the locale
 *
 * \@experimental
 * @param {?} locale
 * @param {?} nLike
 * @return {?}
 */function getPluralCase(locale,nLike){// TODO(vicb): lazy compute
if(typeof nLike==='string'){nLike=parseInt(/** @type {?} */nLike,10);}var/** @type {?} */n=nLike;var/** @type {?} */nDecimal=n.toString().replace(/^[^.]*\.?/,'');var/** @type {?} */i=Math.floor(Math.abs(n));var/** @type {?} */v=nDecimal.length;var/** @type {?} */f=parseInt(nDecimal,10);var/** @type {?} */t=parseInt(n.toString().replace(/^[^.]*\.?|0+$/g,''),10)||0;var/** @type {?} */lang=locale.split('-')[0].toLowerCase();switch(lang){case'af':case'asa':case'az':case'bem':case'bez':case'bg':case'brx':case'ce':case'cgg':case'chr':case'ckb':case'ee':case'el':case'eo':case'es':case'eu':case'fo':case'fur':case'gsw':case'ha':case'haw':case'hu':case'jgo':case'jmc':case'ka':case'kk':case'kkj':case'kl':case'ks':case'ksb':case'ky':case'lb':case'lg':case'mas':case'mgo':case'ml':case'mn':case'nb':case'nd':case'ne':case'nn':case'nnh':case'nyn':case'om':case'or':case'os':case'ps':case'rm':case'rof':case'rwk':case'saq':case'seh':case'sn':case'so':case'sq':case'ta':case'te':case'teo':case'tk':case'tr':case'ug':case'uz':case'vo':case'vun':case'wae':case'xog':if(n===1)return Plural.One;return Plural.Other;case'agq':case'bas':case'cu':case'dav':case'dje':case'dua':case'dyo':case'ebu':case'ewo':case'guz':case'kam':case'khq':case'ki':case'kln':case'kok':case'ksf':case'lrc':case'lu':case'luo':case'luy':case'mer':case'mfe':case'mgh':case'mua':case'mzn':case'nmg':case'nus':case'qu':case'rn':case'rw':case'sbp':case'twq':case'vai':case'yav':case'yue':case'zgh':case'ak':case'ln':case'mg':case'pa':case'ti':if(n===Math.floor(n)&&n>=0&&n<=1)return Plural.One;return Plural.Other;case'am':case'as':case'bn':case'fa':case'gu':case'hi':case'kn':case'mr':case'zu':if(i===0||n===1)return Plural.One;return Plural.Other;case'ar':if(n===0)return Plural.Zero;if(n===1)return Plural.One;if(n===2)return Plural.Two;if(n%100===Math.floor(n%100)&&n%100>=3&&n%100<=10)return Plural.Few;if(n%100===Math.floor(n%100)&&n%100>=11&&n%100<=99)return Plural.Many;return Plural.Other;case'ast':case'ca':case'de':case'en':case'et':case'fi':case'fy':case'gl':case'it':case'nl':case'sv':case'sw':case'ur':case'yi':if(i===1&&v===0)return Plural.One;return Plural.Other;case'be':if(n%10===1&&!(n%100===11))return Plural.One;if(n%10===Math.floor(n%10)&&n%10>=2&&n%10<=4&&!(n%100>=12&&n%100<=14))return Plural.Few;if(n%10===0||n%10===Math.floor(n%10)&&n%10>=5&&n%10<=9||n%100===Math.floor(n%100)&&n%100>=11&&n%100<=14)return Plural.Many;return Plural.Other;case'br':if(n%10===1&&!(n%100===11||n%100===71||n%100===91))return Plural.One;if(n%10===2&&!(n%100===12||n%100===72||n%100===92))return Plural.Two;if(n%10===Math.floor(n%10)&&(n%10>=3&&n%10<=4||n%10===9)&&!(n%100>=10&&n%100<=19||n%100>=70&&n%100<=79||n%100>=90&&n%100<=99))return Plural.Few;if(!(n===0)&&n%1e6===0)return Plural.Many;return Plural.Other;case'bs':case'hr':case'sr':if(v===0&&i%10===1&&!(i%100===11)||f%10===1&&!(f%100===11))return Plural.One;if(v===0&&i%10===Math.floor(i%10)&&i%10>=2&&i%10<=4&&!(i%100>=12&&i%100<=14)||f%10===Math.floor(f%10)&&f%10>=2&&f%10<=4&&!(f%100>=12&&f%100<=14))return Plural.Few;return Plural.Other;case'cs':case'sk':if(i===1&&v===0)return Plural.One;if(i===Math.floor(i)&&i>=2&&i<=4&&v===0)return Plural.Few;if(!(v===0))return Plural.Many;return Plural.Other;case'cy':if(n===0)return Plural.Zero;if(n===1)return Plural.One;if(n===2)return Plural.Two;if(n===3)return Plural.Few;if(n===6)return Plural.Many;return Plural.Other;case'da':if(n===1||!(t===0)&&(i===0||i===1))return Plural.One;return Plural.Other;case'dsb':case'hsb':if(v===0&&i%100===1||f%100===1)return Plural.One;if(v===0&&i%100===2||f%100===2)return Plural.Two;if(v===0&&i%100===Math.floor(i%100)&&i%100>=3&&i%100<=4||f%100===Math.floor(f%100)&&f%100>=3&&f%100<=4)return Plural.Few;return Plural.Other;case'ff':case'fr':case'hy':case'kab':if(i===0||i===1)return Plural.One;return Plural.Other;case'fil':if(v===0&&(i===1||i===2||i===3)||v===0&&!(i%10===4||i%10===6||i%10===9)||!(v===0)&&!(f%10===4||f%10===6||f%10===9))return Plural.One;return Plural.Other;case'ga':if(n===1)return Plural.One;if(n===2)return Plural.Two;if(n===Math.floor(n)&&n>=3&&n<=6)return Plural.Few;if(n===Math.floor(n)&&n>=7&&n<=10)return Plural.Many;return Plural.Other;case'gd':if(n===1||n===11)return Plural.One;if(n===2||n===12)return Plural.Two;if(n===Math.floor(n)&&(n>=3&&n<=10||n>=13&&n<=19))return Plural.Few;return Plural.Other;case'gv':if(v===0&&i%10===1)return Plural.One;if(v===0&&i%10===2)return Plural.Two;if(v===0&&(i%100===0||i%100===20||i%100===40||i%100===60||i%100===80))return Plural.Few;if(!(v===0))return Plural.Many;return Plural.Other;case'he':if(i===1&&v===0)return Plural.One;if(i===2&&v===0)return Plural.Two;if(v===0&&!(n>=0&&n<=10)&&n%10===0)return Plural.Many;return Plural.Other;case'is':if(t===0&&i%10===1&&!(i%100===11)||!(t===0))return Plural.One;return Plural.Other;case'ksh':if(n===0)return Plural.Zero;if(n===1)return Plural.One;return Plural.Other;case'kw':case'naq':case'se':case'smn':if(n===1)return Plural.One;if(n===2)return Plural.Two;return Plural.Other;case'lag':if(n===0)return Plural.Zero;if((i===0||i===1)&&!(n===0))return Plural.One;return Plural.Other;case'lt':if(n%10===1&&!(n%100>=11&&n%100<=19))return Plural.One;if(n%10===Math.floor(n%10)&&n%10>=2&&n%10<=9&&!(n%100>=11&&n%100<=19))return Plural.Few;if(!(f===0))return Plural.Many;return Plural.Other;case'lv':case'prg':if(n%10===0||n%100===Math.floor(n%100)&&n%100>=11&&n%100<=19||v===2&&f%100===Math.floor(f%100)&&f%100>=11&&f%100<=19)return Plural.Zero;if(n%10===1&&!(n%100===11)||v===2&&f%10===1&&!(f%100===11)||!(v===2)&&f%10===1)return Plural.One;return Plural.Other;case'mk':if(v===0&&i%10===1||f%10===1)return Plural.One;return Plural.Other;case'mt':if(n===1)return Plural.One;if(n===0||n%100===Math.floor(n%100)&&n%100>=2&&n%100<=10)return Plural.Few;if(n%100===Math.floor(n%100)&&n%100>=11&&n%100<=19)return Plural.Many;return Plural.Other;case'pl':if(i===1&&v===0)return Plural.One;if(v===0&&i%10===Math.floor(i%10)&&i%10>=2&&i%10<=4&&!(i%100>=12&&i%100<=14))return Plural.Few;if(v===0&&!(i===1)&&i%10===Math.floor(i%10)&&i%10>=0&&i%10<=1||v===0&&i%10===Math.floor(i%10)&&i%10>=5&&i%10<=9||v===0&&i%100===Math.floor(i%100)&&i%100>=12&&i%100<=14)return Plural.Many;return Plural.Other;case'pt':if(n===Math.floor(n)&&n>=0&&n<=2&&!(n===2))return Plural.One;return Plural.Other;case'ro':if(i===1&&v===0)return Plural.One;if(!(v===0)||n===0||!(n===1)&&n%100===Math.floor(n%100)&&n%100>=1&&n%100<=19)return Plural.Few;return Plural.Other;case'ru':case'uk':if(v===0&&i%10===1&&!(i%100===11))return Plural.One;if(v===0&&i%10===Math.floor(i%10)&&i%10>=2&&i%10<=4&&!(i%100>=12&&i%100<=14))return Plural.Few;if(v===0&&i%10===0||v===0&&i%10===Math.floor(i%10)&&i%10>=5&&i%10<=9||v===0&&i%100===Math.floor(i%100)&&i%100>=11&&i%100<=14)return Plural.Many;return Plural.Other;case'shi':if(i===0||n===1)return Plural.One;if(n===Math.floor(n)&&n>=2&&n<=10)return Plural.Few;return Plural.Other;case'si':if(n===0||n===1||i===0&&f===1)return Plural.One;return Plural.Other;case'sl':if(v===0&&i%100===1)return Plural.One;if(v===0&&i%100===2)return Plural.Two;if(v===0&&i%100===Math.floor(i%100)&&i%100>=3&&i%100<=4||!(v===0))return Plural.Few;return Plural.Other;case'tzm':if(n===Math.floor(n)&&n>=0&&n<=1||n===Math.floor(n)&&n>=11&&n<=99)return Plural.One;return Plural.Other;default:return Plural.Other;}}/**
 * @param {?} obj
 * @return {?}
 */function isListLikeIterable(obj){if(!isJsObject(obj))return false;return Array.isArray(obj)||!(obj instanceof Map)&&getSymbolIterator()in obj;// JS Iterable have a Symbol.iterator prop
}/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Adds and removes CSS classes on an HTML element.
 *
 * \@howToUse
 * ```
 *     <some-element [ngClass]="'first second'">...</some-element>
 *
 *     <some-element [ngClass]="['first', 'second']">...</some-element>
 *
 *     <some-element [ngClass]="{'first': true, 'second': true, 'third': false}">...</some-element>
 *
 *     <some-element [ngClass]="stringExp|arrayExp|objExp">...</some-element>
 *
 *     <some-element [ngClass]="{'class1 class2 class3' : true}">...</some-element>
 * ```
 *
 * \@description
 *
 * The CSS classes are updated as follows, depending on the type of the expression evaluation:
 * - `string` - the CSS classes listed in the string (space delimited) are added,
 * - `Array` - the CSS classes declared as Array elements are added,
 * - `Object` - keys are CSS classes that get added when the expression given in the value
 *              evaluates to a truthy value, otherwise they are removed.
 *
 * \@stable
 */var NgClass=function(){/**
     * @param {?} _iterableDiffers
     * @param {?} _keyValueDiffers
     * @param {?} _ngEl
     * @param {?} _renderer
     */function NgClass(_iterableDiffers,_keyValueDiffers,_ngEl,_renderer){_classCallCheck$1(this,NgClass);this._iterableDiffers=_iterableDiffers;this._keyValueDiffers=_keyValueDiffers;this._ngEl=_ngEl;this._renderer=_renderer;this._initialClasses=[];}/**
     * @param {?} v
     * @return {?}
     */_createClass$1(NgClass,[{key:'ngDoCheck',/**
     * @return {?}
     */value:function ngDoCheck(){if(this._iterableDiffer){var/** @type {?} */iterableChanges=this._iterableDiffer.diff(/** @type {?} */this._rawClass);if(iterableChanges){this._applyIterableChanges(iterableChanges);}}else if(this._keyValueDiffer){var/** @type {?} */keyValueChanges=this._keyValueDiffer.diff(/** @type {?} */this._rawClass);if(keyValueChanges){this._applyKeyValueChanges(keyValueChanges);}}}/**
     * @param {?} rawClassVal
     * @return {?}
     */},{key:'_cleanupClasses',value:function _cleanupClasses(rawClassVal){this._applyClasses(rawClassVal,true);this._applyInitialClasses(false);}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyKeyValueChanges',value:function _applyKeyValueChanges(changes){var _this5=this;changes.forEachAddedItem(function(record){return _this5._toggleClass(record.key,record.currentValue);});changes.forEachChangedItem(function(record){return _this5._toggleClass(record.key,record.currentValue);});changes.forEachRemovedItem(function(record){if(record.previousValue){_this5._toggleClass(record.key,false);}});}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyIterableChanges',value:function _applyIterableChanges(changes){var _this6=this;changes.forEachAddedItem(function(record){if(typeof record.item==='string'){_this6._toggleClass(record.item,true);}else{throw new Error('NgClass can only toggle CSS classes expressed as strings, got '+stringify$1(record.item));}});changes.forEachRemovedItem(function(record){return _this6._toggleClass(record.item,false);});}/**
     * @param {?} isCleanup
     * @return {?}
     */},{key:'_applyInitialClasses',value:function _applyInitialClasses(isCleanup){var _this7=this;this._initialClasses.forEach(function(klass){return _this7._toggleClass(klass,!isCleanup);});}/**
     * @param {?} rawClassVal
     * @param {?} isCleanup
     * @return {?}
     */},{key:'_applyClasses',value:function _applyClasses(rawClassVal,isCleanup){var _this8=this;if(rawClassVal){if(Array.isArray(rawClassVal)||rawClassVal instanceof Set){rawClassVal.forEach(function(klass){return _this8._toggleClass(klass,!isCleanup);});}else{Object.keys(rawClassVal).forEach(function(klass){if(rawClassVal[klass]!=null)_this8._toggleClass(klass,!isCleanup);});}}}/**
     * @param {?} klass
     * @param {?} enabled
     * @return {?}
     */},{key:'_toggleClass',value:function _toggleClass(klass,enabled){var _this9=this;klass=klass.trim();if(klass){klass.split(/\s+/g).forEach(function(klass){_this9._renderer.setElementClass(_this9._ngEl.nativeElement,klass,!!enabled);});}}},{key:'klass',set:function set(v){this._applyInitialClasses(true);this._initialClasses=typeof v==='string'?v.split(/\s+/):[];this._applyInitialClasses(false);this._applyClasses(this._rawClass,false);}/**
     * @param {?} v
     * @return {?}
     */},{key:'ngClass',set:function set(v){this._cleanupClasses(this._rawClass);this._iterableDiffer=null;this._keyValueDiffer=null;this._rawClass=typeof v==='string'?v.split(/\s+/):v;if(this._rawClass){if(isListLikeIterable(this._rawClass)){this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create();}else{this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create();}}}}]);return NgClass;}();NgClass.decorators=[{type:Directive,args:[{selector:'[ngClass]'}]}];/** @nocollapse */NgClass.ctorParameters=function(){return[{type:IterableDiffers},{type:KeyValueDiffers},{type:ElementRef},{type:RendererV1}];};NgClass.propDecorators={'klass':[{type:Input,args:['class']}],'ngClass':[{type:Input}]};/**
 * Instantiates a single {\@link Component} type and inserts its Host View into current View.
 * `NgComponentOutlet` provides a declarative approach for dynamic component creation.
 *
 * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and
 * any existing component will get destroyed.
 *
 * ### Fine tune control
 *
 * You can control the component creation process by using the following optional attributes:
 *
 * * `ngComponentOutletInjector`: Optional custom {\@link Injector} that will be used as parent for
 * the Component. Defaults to the injector of the current view container.
 *
 * * `ngComponentOutletProviders`: Optional injectable objects ({\@link Provider}) that are visible
 * to the component.
 *
 * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content
 * section of the component, if exists.
 *
 * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other
 * module, then load a component from that module.
 *
 * ### Syntax
 *
 * Simple
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression"></ng-container>
 * ```
 *
 * Customized injector/content
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   injector: injectorExpression;
 *                                   content: contentNodesExpression;">
 * </ng-container>
 * ```
 *
 * Customized ngModuleFactory
 * ```
 * <ng-container *ngComponentOutlet="componentTypeExpression;
 *                                   ngModuleFactory: moduleFactory;">
 * </ng-container>
 * ```
 * # Example
 *
 * {\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}
 *
 * A more complete example with additional options:
 *
 * {\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}
 * A more complete example with ngModuleFactory:
 *
 * {\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}
 *
 * \@experimental
 */var NgComponentOutlet=function(){/**
     * @param {?} _viewContainerRef
     */function NgComponentOutlet(_viewContainerRef){_classCallCheck$1(this,NgComponentOutlet);this._viewContainerRef=_viewContainerRef;this._componentRef=null;this._moduleRef=null;}/**
     * @param {?} changes
     * @return {?}
     */_createClass$1(NgComponentOutlet,[{key:'ngOnChanges',value:function ngOnChanges(changes){if(this._componentRef){this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));}this._viewContainerRef.clear();this._componentRef=null;if(this.ngComponentOutlet){var/** @type {?} */injector=this.ngComponentOutletInjector||this._viewContainerRef.parentInjector;if(changes.ngComponentOutletNgModuleFactory){if(this._moduleRef)this._moduleRef.destroy();if(this.ngComponentOutletNgModuleFactory){this._moduleRef=this.ngComponentOutletNgModuleFactory.create(injector);}else{this._moduleRef=null;}}if(this._moduleRef){injector=this._moduleRef.injector;}var/** @type {?} */componentFactory=injector.get(ComponentFactoryResolver).resolveComponentFactory(this.ngComponentOutlet);this._componentRef=this._viewContainerRef.createComponent(componentFactory,this._viewContainerRef.length,injector,this.ngComponentOutletContent);}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._moduleRef)this._moduleRef.destroy();}}]);return NgComponentOutlet;}();NgComponentOutlet.decorators=[{type:Directive,args:[{selector:'[ngComponentOutlet]'}]}];/** @nocollapse */NgComponentOutlet.ctorParameters=function(){return[{type:ViewContainerRef}];};NgComponentOutlet.propDecorators={'ngComponentOutlet':[{type:Input}],'ngComponentOutletInjector':[{type:Input}],'ngComponentOutletContent':[{type:Input}],'ngComponentOutletNgModuleFactory':[{type:Input}]};var NgForOfRow=function(){/**
     * @param {?} $implicit
     * @param {?} index
     * @param {?} count
     */function NgForOfRow($implicit,index,count){_classCallCheck$1(this,NgForOfRow);this.$implicit=$implicit;this.index=index;this.count=count;}/**
     * @return {?}
     */_createClass$1(NgForOfRow,[{key:'first',get:function get(){return this.index===0;}/**
     * @return {?}
     */},{key:'last',get:function get(){return this.index===this.count-1;}/**
     * @return {?}
     */},{key:'even',get:function get(){return this.index%2===0;}/**
     * @return {?}
     */},{key:'odd',get:function get(){return!this.even;}}]);return NgForOfRow;}();/**
 * The `NgForOf` directive instantiates a template once per item from an iterable. The context
 * for each instantiated template inherits from the outer context with the given loop variable
 * set to the current item from the iterable.
 *
 * ### Local Variables
 *
 * `NgForOf` provides several exported values that can be aliased to local variables:
 *
 * * `index` will be set to the current loop iteration for each template context.
 * * `first` will be set to a boolean value indicating whether the item is the first one in the
 *   iteration.
 * * `last` will be set to a boolean value indicating whether the item is the last one in the
 *   iteration.
 * * `even` will be set to a boolean value indicating whether this item has an even index.
 * * `odd` will be set to a boolean value indicating whether this item has an odd index.
 *
 * ### Change Propagation
 *
 * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:
 *
 * * When an item is added, a new instance of the template is added to the DOM.
 * * When an item is removed, its template instance is removed from the DOM.
 * * When items are reordered, their respective templates are reordered in the DOM.
 * * Otherwise, the DOM element for that item will remain the same.
 *
 * Angular uses object identity to track insertions and deletions within the iterator and reproduce
 * those changes in the DOM. This has important implications for animations and any stateful
 * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can
 * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state
 * such as user input.
 *
 * It is possible for the identities of elements in the iterator to change while the data does not.
 * This can happen, for example, if the iterator produced from an RPC to the server, and that
 * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with
 * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old
 * elements were deleted and all new elements inserted). This is an expensive operation and should
 * be avoided if possible.
 *
 * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.
 * `trackBy` takes a function which has two arguments: `index` and `item`.
 * If `trackBy` is given, Angular tracks changes by the return value of the function.
 *
 * ### Syntax
 *
 * - `<li *ngFor="let item of items; let i = index; trackBy: trackByFn">...</li>`
 * - `<li template="ngFor let item of items; let i = index; trackBy: trackByFn">...</li>`
 *
 * With `<ng-template>` element:
 *
 * ```
 * <ng-template ngFor let-item [ngForOf]="items" let-i="index" [ngForTrackBy]="trackByFn">
 *   <li>...</li>
 * </ng-template>
 * ```
 *
 * ### Example
 *
 * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed
 * example.
 *
 * \@stable
 */var NgForOf=function(){/**
     * @param {?} _viewContainer
     * @param {?} _template
     * @param {?} _differs
     */function NgForOf(_viewContainer,_template,_differs){_classCallCheck$1(this,NgForOf);this._viewContainer=_viewContainer;this._template=_template;this._differs=_differs;this._differ=null;}/**
     * @param {?} fn
     * @return {?}
     */_createClass$1(NgForOf,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('ngForOf'in changes){// React on ngForOf changes only once all inputs have been initialized
var/** @type {?} */value=changes['ngForOf'].currentValue;if(!this._differ&&value){try{this._differ=this._differs.find(value).create(this.ngForTrackBy);}catch(e){throw new Error('Cannot find a differ supporting object \''+value+'\' of type \''+getTypeNameForDebugging(value)+'\'. NgFor only supports binding to Iterables such as Arrays.');}}}}/**
     * @return {?}
     */},{key:'ngDoCheck',value:function ngDoCheck(){if(this._differ){var/** @type {?} */changes=this._differ.diff(this.ngForOf);if(changes)this._applyChanges(changes);}}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyChanges',value:function _applyChanges(changes){var _this10=this;var/** @type {?} */insertTuples=[];changes.forEachOperation(function(item,adjustedPreviousIndex,currentIndex){if(item.previousIndex==null){var/** @type {?} */view=_this10._viewContainer.createEmbeddedView(_this10._template,new NgForOfRow(null,null,null),currentIndex);var/** @type {?} */tuple=new RecordViewTuple(item,view);insertTuples.push(tuple);}else if(currentIndex==null){_this10._viewContainer.remove(adjustedPreviousIndex);}else{var/** @type {?} */_view=_this10._viewContainer.get(adjustedPreviousIndex);_this10._viewContainer.move(_view,currentIndex);var/** @type {?} */_tuple=new RecordViewTuple(item,/** @type {?} */_view);insertTuples.push(_tuple);}});for(var/** @type {?} */i=0;i<insertTuples.length;i++){this._perViewChange(insertTuples[i].view,insertTuples[i].record);}for(var/** @type {?} */_i=0,/** @type {?} */ilen=this._viewContainer.length;_i<ilen;_i++){var/** @type {?} */viewRef=this._viewContainer.get(_i);viewRef.context.index=_i;viewRef.context.count=ilen;}changes.forEachIdentityChange(function(record){var/** @type {?} */viewRef=_this10._viewContainer.get(record.currentIndex);viewRef.context.$implicit=record.item;});}/**
     * @param {?} view
     * @param {?} record
     * @return {?}
     */},{key:'_perViewChange',value:function _perViewChange(view,record){view.context.$implicit=record.item;}},{key:'ngForTrackBy',set:function set(fn){if(isDevMode()&&fn!=null&&typeof fn!=='function'){// TODO(vicb): use a log service once there is a public one available
if(console&&console.warn){console.warn('trackBy must be a function, but received '+JSON.stringify(fn)+'. '+'See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.');}}this._trackByFn=fn;}/**
     * @return {?}
     */,get:function get(){return this._trackByFn;}/**
     * @param {?} value
     * @return {?}
     */},{key:'ngForTemplate',set:function set(value){// TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1
// The current type is too restrictive; a template that just uses index, for example,
// should be acceptable.
if(value){this._template=value;}}}]);return NgForOf;}();NgForOf.decorators=[{type:Directive,args:[{selector:'[ngFor][ngForOf]'}]}];/** @nocollapse */NgForOf.ctorParameters=function(){return[{type:ViewContainerRef},{type:TemplateRef},{type:IterableDiffers}];};NgForOf.propDecorators={'ngForOf':[{type:Input}],'ngForTrackBy':[{type:Input}],'ngForTemplate':[{type:Input}]};var RecordViewTuple=/**
     * @param {?} record
     * @param {?} view
     */function RecordViewTuple(record,view){_classCallCheck$1(this,RecordViewTuple);this.record=record;this.view=view;};/**
 * @deprecated from v4.0.0 - Use NgForOf instead.
 */var NgIf=function(){/**
     * @param {?} _viewContainer
     * @param {?} templateRef
     */function NgIf(_viewContainer,templateRef){_classCallCheck$1(this,NgIf);this._viewContainer=_viewContainer;this._context=new NgIfContext();this._thenTemplateRef=null;this._elseTemplateRef=null;this._thenViewRef=null;this._elseViewRef=null;this._thenTemplateRef=templateRef;}/**
     * @param {?} condition
     * @return {?}
     */_createClass$1(NgIf,[{key:'_updateView',/**
     * @return {?}
     */value:function _updateView(){if(this._context.$implicit){if(!this._thenViewRef){this._viewContainer.clear();this._elseViewRef=null;if(this._thenTemplateRef){this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context);}}}else{if(!this._elseViewRef){this._viewContainer.clear();this._thenViewRef=null;if(this._elseTemplateRef){this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context);}}}}},{key:'ngIf',set:function set(condition){this._context.$implicit=condition;this._updateView();}/**
     * @param {?} templateRef
     * @return {?}
     */},{key:'ngIfThen',set:function set(templateRef){this._thenTemplateRef=templateRef;this._thenViewRef=null;// clear previous view if any.
this._updateView();}/**
     * @param {?} templateRef
     * @return {?}
     */},{key:'ngIfElse',set:function set(templateRef){this._elseTemplateRef=templateRef;this._elseViewRef=null;// clear previous view if any.
this._updateView();}}]);return NgIf;}();NgIf.decorators=[{type:Directive,args:[{selector:'[ngIf]'}]}];/** @nocollapse */NgIf.ctorParameters=function(){return[{type:ViewContainerRef},{type:TemplateRef}];};NgIf.propDecorators={'ngIf':[{type:Input}],'ngIfThen':[{type:Input}],'ngIfElse':[{type:Input}]};var NgIfContext=function NgIfContext(){_classCallCheck$1(this,NgIfContext);this.$implicit=null;};var SwitchView=function(){/**
     * @param {?} _viewContainerRef
     * @param {?} _templateRef
     */function SwitchView(_viewContainerRef,_templateRef){_classCallCheck$1(this,SwitchView);this._viewContainerRef=_viewContainerRef;this._templateRef=_templateRef;this._created=false;}/**
     * @return {?}
     */_createClass$1(SwitchView,[{key:'create',value:function create(){this._created=true;this._viewContainerRef.createEmbeddedView(this._templateRef);}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this._created=false;this._viewContainerRef.clear();}/**
     * @param {?} created
     * @return {?}
     */},{key:'enforceState',value:function enforceState(created){if(created&&!this._created){this.create();}else if(!created&&this._created){this.destroy();}}}]);return SwitchView;}();/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch
 *             expression.
 *
 * \@howToUse
 * ```
 *     <container-element [ngSwitch]="switch_expression">
 *       <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *       <some-element *ngSwitchCase="match_expression_2">...</some-element>
 *       <some-other-element *ngSwitchCase="match_expression_3">...</some-other-element>
 *       <ng-container *ngSwitchCase="match_expression_3">
 *         <!-- use a ng-container to group multiple root nodes -->
 *         <inner-element></inner-element>
 *         <inner-other-element></inner-other-element>
 *       </ng-container>
 *       <some-element *ngSwitchDefault>...</some-element>
 *     </container-element>
 * ```
 * \@description
 *
 * `NgSwitch` stamps out nested views when their match expression value matches the value of the
 * switch expression.
 *
 * In other words:
 * - you define a container element (where you place the directive with a switch expression on the
 * `[ngSwitch]="..."` attribute)
 * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view
 * root elements.
 *
 * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will
 * be preserved at the location.
 *
 * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the
 * expression is evaluated.
 * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is
 * stamped out.
 *
 * \@stable
 */var NgSwitch=function(){function NgSwitch(){_classCallCheck$1(this,NgSwitch);this._defaultUsed=false;this._caseCount=0;this._lastCaseCheckIndex=0;this._lastCasesMatched=false;}/**
     * @param {?} newValue
     * @return {?}
     */_createClass$1(NgSwitch,[{key:'_addCase',/**
     * \@internal
     * @return {?}
     */value:function _addCase(){return this._caseCount++;}/**
     * \@internal
     * @param {?} view
     * @return {?}
     */},{key:'_addDefault',value:function _addDefault(view){if(!this._defaultViews){this._defaultViews=[];}this._defaultViews.push(view);}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_matchCase',value:function _matchCase(value){var/** @type {?} */matched=value==this._ngSwitch;this._lastCasesMatched=this._lastCasesMatched||matched;this._lastCaseCheckIndex++;if(this._lastCaseCheckIndex===this._caseCount){this._updateDefaultCases(!this._lastCasesMatched);this._lastCaseCheckIndex=0;this._lastCasesMatched=false;}return matched;}/**
     * @param {?} useDefault
     * @return {?}
     */},{key:'_updateDefaultCases',value:function _updateDefaultCases(useDefault){if(this._defaultViews&&useDefault!==this._defaultUsed){this._defaultUsed=useDefault;for(var/** @type {?} */i=0;i<this._defaultViews.length;i++){var/** @type {?} */defaultView=this._defaultViews[i];defaultView.enforceState(useDefault);}}}},{key:'ngSwitch',set:function set(newValue){this._ngSwitch=newValue;if(this._caseCount===0){this._updateDefaultCases(true);}}}]);return NgSwitch;}();NgSwitch.decorators=[{type:Directive,args:[{selector:'[ngSwitch]'}]}];/** @nocollapse */NgSwitch.ctorParameters=function(){return[];};NgSwitch.propDecorators={'ngSwitch':[{type:Input}]};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Creates a view that will be added/removed from the parent {\@link NgSwitch} when the
 *             given expression evaluate to respectively the same/different value as the switch
 *             expression.
 *
 * \@howToUse
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 * </container-element>
 * ```
 * \@description
 *
 * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch
 * expression.
 *
 * If multiple match expressions match the switch expression value, all of them are displayed.
 *
 * See {\@link NgSwitch} for more details and example.
 *
 * \@stable
 */var NgSwitchCase=function(){/**
     * @param {?} viewContainer
     * @param {?} templateRef
     * @param {?} ngSwitch
     */function NgSwitchCase(viewContainer,templateRef,ngSwitch){_classCallCheck$1(this,NgSwitchCase);this.ngSwitch=ngSwitch;ngSwitch._addCase();this._view=new SwitchView(viewContainer,templateRef);}/**
     * @return {?}
     */_createClass$1(NgSwitchCase,[{key:'ngDoCheck',value:function ngDoCheck(){this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));}}]);return NgSwitchCase;}();NgSwitchCase.decorators=[{type:Directive,args:[{selector:'[ngSwitchCase]'}]}];/** @nocollapse */NgSwitchCase.ctorParameters=function(){return[{type:ViewContainerRef},{type:TemplateRef},{type:NgSwitch,decorators:[{type:Host}]}];};NgSwitchCase.propDecorators={'ngSwitchCase':[{type:Input}]};/**
 * \@ngModule CommonModule
 * \@whatItDoes Creates a view that is added to the parent {\@link NgSwitch} when no case expressions
 * match the
 *             switch expression.
 *
 * \@howToUse
 * ```
 * <container-element [ngSwitch]="switch_expression">
 *   <some-element *ngSwitchCase="match_expression_1">...</some-element>
 *   <some-other-element *ngSwitchDefault>...</some-other-element>
 * </container-element>
 * ```
 *
 * \@description
 *
 * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch
 * expression.
 *
 * See {\@link NgSwitch} for more details and example.
 *
 * \@stable
 */var NgSwitchDefault=/**
     * @param {?} viewContainer
     * @param {?} templateRef
     * @param {?} ngSwitch
     */function NgSwitchDefault(viewContainer,templateRef,ngSwitch){_classCallCheck$1(this,NgSwitchDefault);ngSwitch._addDefault(new SwitchView(viewContainer,templateRef));};NgSwitchDefault.decorators=[{type:Directive,args:[{selector:'[ngSwitchDefault]'}]}];/** @nocollapse */NgSwitchDefault.ctorParameters=function(){return[{type:ViewContainerRef},{type:TemplateRef},{type:NgSwitch,decorators:[{type:Host}]}];};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.
 *
 * \@howToUse
 * ```
 * <some-element [ngPlural]="value">
 *   <template ngPluralCase="=0">there is nothing</template>
 *   <template ngPluralCase="=1">there is one</template>
 *   <template ngPluralCase="few">there are a few</template>
 * </some-element>
 * ```
 *
 * \@description
 *
 * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees
 * that match the switch expression's pluralization category.
 *
 * To use this directive you must provide a container element that sets the `[ngPlural]` attribute
 * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their
 * expression:
 * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value
 *   matches the switch expression exactly,
 * - otherwise, the view will be treated as a "category match", and will only display if exact
 *   value matches aren't found and the value maps to its category for the defined locale.
 *
 * See http://cldr.unicode.org/index/cldr-spec/plural-rules
 *
 * \@experimental
 */var NgPlural=function(){/**
     * @param {?} _localization
     */function NgPlural(_localization){_classCallCheck$1(this,NgPlural);this._localization=_localization;this._caseViews={};}/**
     * @param {?} value
     * @return {?}
     */_createClass$1(NgPlural,[{key:'addCase',/**
     * @param {?} value
     * @param {?} switchView
     * @return {?}
     */value:function addCase(value,switchView){this._caseViews[value]=switchView;}/**
     * @return {?}
     */},{key:'_updateView',value:function _updateView(){this._clearViews();var/** @type {?} */cases=Object.keys(this._caseViews);var/** @type {?} */key=getPluralCategory(this._switchValue,cases,this._localization);this._activateView(this._caseViews[key]);}/**
     * @return {?}
     */},{key:'_clearViews',value:function _clearViews(){if(this._activeView)this._activeView.destroy();}/**
     * @param {?} view
     * @return {?}
     */},{key:'_activateView',value:function _activateView(view){if(view){this._activeView=view;this._activeView.create();}}},{key:'ngPlural',set:function set(value){this._switchValue=value;this._updateView();}}]);return NgPlural;}();NgPlural.decorators=[{type:Directive,args:[{selector:'[ngPlural]'}]}];/** @nocollapse */NgPlural.ctorParameters=function(){return[{type:NgLocalization}];};NgPlural.propDecorators={'ngPlural':[{type:Input}]};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Creates a view that will be added/removed from the parent {\@link NgPlural} when the
 *             given expression matches the plural expression according to CLDR rules.
 *
 * \@howToUse
 * ```
 * <some-element [ngPlural]="value">
 *   <template ngPluralCase="=0">...</template>
 *   <template ngPluralCase="other">...</template>
 * </some-element>
 * ```
 *
 * See {\@link NgPlural} for more details and example.
 *
 * \@experimental
 */var NgPluralCase=/**
     * @param {?} value
     * @param {?} template
     * @param {?} viewContainer
     * @param {?} ngPlural
     */function NgPluralCase(value,template,viewContainer,ngPlural){_classCallCheck$1(this,NgPluralCase);this.value=value;var isANumber=!isNaN(Number(value));ngPlural.addCase(isANumber?'='+value:value,new SwitchView(viewContainer,template));};NgPluralCase.decorators=[{type:Directive,args:[{selector:'[ngPluralCase]'}]}];/** @nocollapse */NgPluralCase.ctorParameters=function(){return[{type:undefined,decorators:[{type:Attribute,args:['ngPluralCase']}]},{type:TemplateRef},{type:ViewContainerRef},{type:NgPlural,decorators:[{type:Host}]}];};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Update an HTML element styles.
 *
 * \@howToUse
 * ```
 * <some-element [ngStyle]="{'font-style': styleExp}">...</some-element>
 *
 * <some-element [ngStyle]="{'max-width.px': widthExp}">...</some-element>
 *
 * <some-element [ngStyle]="objExp">...</some-element>
 * ```
 *
 * \@description
 *
 * The styles are updated according to the value of the expression evaluation:
 * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),
 * - values are the values assigned to those properties (expressed in the given unit).
 *
 * \@stable
 */var NgStyle=function(){/**
     * @param {?} _differs
     * @param {?} _ngEl
     * @param {?} _renderer
     */function NgStyle(_differs,_ngEl,_renderer){_classCallCheck$1(this,NgStyle);this._differs=_differs;this._ngEl=_ngEl;this._renderer=_renderer;}/**
     * @param {?} v
     * @return {?}
     */_createClass$1(NgStyle,[{key:'ngDoCheck',/**
     * @return {?}
     */value:function ngDoCheck(){if(this._differ){var/** @type {?} */changes=this._differ.diff(this._ngStyle);if(changes){this._applyChanges(changes);}}}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_applyChanges',value:function _applyChanges(changes){var _this11=this;changes.forEachRemovedItem(function(record){return _this11._setStyle(record.key,null);});changes.forEachAddedItem(function(record){return _this11._setStyle(record.key,record.currentValue);});changes.forEachChangedItem(function(record){return _this11._setStyle(record.key,record.currentValue);});}/**
     * @param {?} nameAndUnit
     * @param {?} value
     * @return {?}
     */},{key:'_setStyle',value:function _setStyle(nameAndUnit,value){var _nameAndUnit$split=nameAndUnit.split('.'),_nameAndUnit$split2=_slicedToArray$1(_nameAndUnit$split,2),name=_nameAndUnit$split2[0],unit=_nameAndUnit$split2[1];value=value!=null&&unit?''+value+unit:value;this._renderer.setElementStyle(this._ngEl.nativeElement,name,/** @type {?} */value);}},{key:'ngStyle',set:function set(v){this._ngStyle=v;if(!this._differ&&v){this._differ=this._differs.find(v).create();}}}]);return NgStyle;}();NgStyle.decorators=[{type:Directive,args:[{selector:'[ngStyle]'}]}];/** @nocollapse */NgStyle.ctorParameters=function(){return[{type:KeyValueDiffers},{type:ElementRef},{type:RendererV1}];};NgStyle.propDecorators={'ngStyle':[{type:Input}]};/**
 * \@ngModule CommonModule
 *
 * \@whatItDoes Inserts an embedded view from a prepared `TemplateRef`
 *
 * \@howToUse
 * ```
 * <ng-container *ngTemplateOutlet="templateRefExp; context: contextExp"></ng-container>
 * ```
 *
 * \@description
 *
 * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.
 * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding
 * by the local template `let` declarations.
 *
 * Note: using the key `$implicit` in the context object will set it's value as default.
 *
 * # Example
 *
 * {\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}
 *
 * \@experimental
 */var NgTemplateOutlet=function(){/**
     * @param {?} _viewContainerRef
     */function NgTemplateOutlet(_viewContainerRef){_classCallCheck$1(this,NgTemplateOutlet);this._viewContainerRef=_viewContainerRef;}/**
     * @deprecated v4.0.0 - Renamed to ngTemplateOutletContext.
     * @param {?} context
     * @return {?}
     */_createClass$1(NgTemplateOutlet,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if(this._viewRef){this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));}if(this.ngTemplateOutlet){this._viewRef=this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext);}}},{key:'ngOutletContext',set:function set(context){this.ngTemplateOutletContext=context;}}]);return NgTemplateOutlet;}();NgTemplateOutlet.decorators=[{type:Directive,args:[{selector:'[ngTemplateOutlet]'}]}];/** @nocollapse */NgTemplateOutlet.ctorParameters=function(){return[{type:ViewContainerRef}];};NgTemplateOutlet.propDecorators={'ngTemplateOutletContext':[{type:Input}],'ngTemplateOutlet':[{type:Input}],'ngOutletContext':[{type:Input}]};/**
 * A collection of Angular directives that are likely to be used in each and every Angular
 * application.
 */var COMMON_DIRECTIVES=[NgClass,NgComponentOutlet,NgForOf,NgIf,NgTemplateOutlet,NgStyle,NgSwitch,NgSwitchCase,NgSwitchDefault,NgPlural,NgPluralCase];/**
 * @param {?} type
 * @param {?} value
 * @return {?}
 */function invalidPipeArgumentError(type,value){return Error('InvalidPipeArgument: \''+value+'\' for pipe \''+stringify$1(type)+'\'');}var ObservableStrategy=function(){function ObservableStrategy(){_classCallCheck$1(this,ObservableStrategy);}_createClass$1(ObservableStrategy,[{key:'createSubscription',/**
     * @param {?} async
     * @param {?} updateLatestValue
     * @return {?}
     */value:function createSubscription(async,updateLatestValue){return async.subscribe({next:updateLatestValue,error:function error(e){throw e;}});}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'dispose',value:function dispose(subscription){subscription.unsubscribe();}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(subscription){subscription.unsubscribe();}}]);return ObservableStrategy;}();var PromiseStrategy=function(){function PromiseStrategy(){_classCallCheck$1(this,PromiseStrategy);}_createClass$1(PromiseStrategy,[{key:'createSubscription',/**
     * @param {?} async
     * @param {?} updateLatestValue
     * @return {?}
     */value:function createSubscription(async,updateLatestValue){return async.then(updateLatestValue,function(e){throw e;});}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'dispose',value:function dispose(subscription){}/**
     * @param {?} subscription
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(subscription){}}]);return PromiseStrategy;}();var _promiseStrategy=new PromiseStrategy();var _observableStrategy=new ObservableStrategy();/**
 * \@ngModule CommonModule
 * \@whatItDoes Unwraps a value from an asynchronous primitive.
 * \@howToUse `observable_or_promise_expression | async`
 * \@description
 * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has
 * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for
 * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid
 * potential memory leaks.
 *
 *
 * ## Examples
 *
 * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the
 * promise.
 *
 * {\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}
 *
 * It's also possible to use `async` with Observables. The example below binds the `time` Observable
 * to the view. The Observable continuously updates the view with the current time.
 *
 * {\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}
 *
 * \@stable
 */var AsyncPipe=function(){/**
     * @param {?} _ref
     */function AsyncPipe(_ref){_classCallCheck$1(this,AsyncPipe);this._ref=_ref;this._latestValue=null;this._latestReturnedValue=null;this._subscription=null;this._obj=null;this._strategy=null;}/**
     * @return {?}
     */_createClass$1(AsyncPipe,[{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._subscription){this._dispose();}}/**
     * @param {?} obj
     * @return {?}
     */},{key:'transform',value:function transform(obj){if(!this._obj){if(obj){this._subscribe(obj);}this._latestReturnedValue=this._latestValue;return this._latestValue;}if(obj!==this._obj){this._dispose();return this.transform(/** @type {?} */obj);}if(this._latestValue===this._latestReturnedValue){return this._latestReturnedValue;}this._latestReturnedValue=this._latestValue;return WrappedValue.wrap(this._latestValue);}/**
     * @param {?} obj
     * @return {?}
     */},{key:'_subscribe',value:function _subscribe(obj){var _this12=this;this._obj=obj;this._strategy=this._selectStrategy(obj);this._subscription=this._strategy.createSubscription(obj,function(value){return _this12._updateLatestValue(obj,value);});}/**
     * @param {?} obj
     * @return {?}
     */},{key:'_selectStrategy',value:function _selectStrategy(obj){if(isPromise(obj)){return _promiseStrategy;}if(isObservable(obj)){return _observableStrategy;}throw invalidPipeArgumentError(AsyncPipe,obj);}/**
     * @return {?}
     */},{key:'_dispose',value:function _dispose(){this._strategy.dispose(this._subscription);this._latestValue=null;this._latestReturnedValue=null;this._subscription=null;this._obj=null;}/**
     * @param {?} async
     * @param {?} value
     * @return {?}
     */},{key:'_updateLatestValue',value:function _updateLatestValue(async,value){if(async===this._obj){this._latestValue=value;this._ref.markForCheck();}}}]);return AsyncPipe;}();AsyncPipe.decorators=[{type:Pipe,args:[{name:'async',pure:false}]}];/** @nocollapse */AsyncPipe.ctorParameters=function(){return[{type:ChangeDetectorRef}];};/**
 * Transforms text to lowercase.
 *
 * {\@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }
 *
 * \@stable
 */var LowerCasePipe=function(){function LowerCasePipe(){_classCallCheck$1(this,LowerCasePipe);}_createClass$1(LowerCasePipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(LowerCasePipe,value);}return value.toLowerCase();}}]);return LowerCasePipe;}();LowerCasePipe.decorators=[{type:Pipe,args:[{name:'lowercase'}]}];/** @nocollapse */LowerCasePipe.ctorParameters=function(){return[];};/**
 * Helper method to transform a single word to titlecase.
 *
 * \@stable
 * @param {?} word
 * @return {?}
 */function titleCaseWord(word){if(!word)return word;return word[0].toUpperCase()+word.substr(1).toLowerCase();}/**
 * Transforms text to titlecase.
 *
 * \@stable
 */var TitleCasePipe=function(){function TitleCasePipe(){_classCallCheck$1(this,TitleCasePipe);}_createClass$1(TitleCasePipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(TitleCasePipe,value);}return value.split(/\b/g).map(function(word){return titleCaseWord(word);}).join('');}}]);return TitleCasePipe;}();TitleCasePipe.decorators=[{type:Pipe,args:[{name:'titlecase'}]}];/** @nocollapse */TitleCasePipe.ctorParameters=function(){return[];};/**
 * Transforms text to uppercase.
 *
 * \@stable
 */var UpperCasePipe=function(){function UpperCasePipe(){_classCallCheck$1(this,UpperCasePipe);}_createClass$1(UpperCasePipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){if(!value)return value;if(typeof value!=='string'){throw invalidPipeArgumentError(UpperCasePipe,value);}return value.toUpperCase();}}]);return UpperCasePipe;}();UpperCasePipe.decorators=[{type:Pipe,args:[{name:'uppercase'}]}];/** @nocollapse */UpperCasePipe.ctorParameters=function(){return[];};var NumberFormatStyle={};NumberFormatStyle.Decimal=0;NumberFormatStyle.Percent=1;NumberFormatStyle.Currency=2;NumberFormatStyle[NumberFormatStyle.Decimal]="Decimal";NumberFormatStyle[NumberFormatStyle.Percent]="Percent";NumberFormatStyle[NumberFormatStyle.Currency]="Currency";var NumberFormatter=function(){function NumberFormatter(){_classCallCheck$1(this,NumberFormatter);}_createClass$1(NumberFormatter,null,[{key:'format',/**
     * @param {?} num
     * @param {?} locale
     * @param {?} style
     * @param {?=} __3
     * @return {?}
     */value:function format(num,locale,style$$1){var _ref2=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},minimumIntegerDigits=_ref2.minimumIntegerDigits,minimumFractionDigits=_ref2.minimumFractionDigits,maximumFractionDigits=_ref2.maximumFractionDigits,currency=_ref2.currency,_ref2$currencyAsSymbo=_ref2.currencyAsSymbol,currencyAsSymbol=_ref2$currencyAsSymbo===undefined?false:_ref2$currencyAsSymbo;var/** @type {?} */options={minimumIntegerDigits:minimumIntegerDigits,minimumFractionDigits:minimumFractionDigits,maximumFractionDigits:maximumFractionDigits,style:NumberFormatStyle[style$$1].toLowerCase()};if(style$$1==NumberFormatStyle.Currency){options.currency=currency;options.currencyDisplay=currencyAsSymbol?'symbol':'code';}return new Intl.NumberFormat(locale,options).format(num);}}]);return NumberFormatter;}();var DATE_FORMATS_SPLIT=/((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;var PATTERN_ALIASES={// Keys are quoted so they do not get renamed during closure compilation.
'yMMMdjms':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',3),digitCondition('day',1),digitCondition('hour',1),digitCondition('minute',1),digitCondition('second',1)])),'yMdjm':datePartGetterFactory(combine([digitCondition('year',1),digitCondition('month',1),digitCondition('day',1),digitCondition('hour',1),digitCondition('minute',1)])),'yMMMMEEEEd':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',4),nameCondition('weekday',4),digitCondition('day',1)])),'yMMMMd':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',4),digitCondition('day',1)])),'yMMMd':datePartGetterFactory(combine([digitCondition('year',1),nameCondition('month',3),digitCondition('day',1)])),'yMd':datePartGetterFactory(combine([digitCondition('year',1),digitCondition('month',1),digitCondition('day',1)])),'jms':datePartGetterFactory(combine([digitCondition('hour',1),digitCondition('second',1),digitCondition('minute',1)])),'jm':datePartGetterFactory(combine([digitCondition('hour',1),digitCondition('minute',1)]))};var DATE_FORMATS={// Keys are quoted so they do not get renamed.
'yyyy':datePartGetterFactory(digitCondition('year',4)),'yy':datePartGetterFactory(digitCondition('year',2)),'y':datePartGetterFactory(digitCondition('year',1)),'MMMM':datePartGetterFactory(nameCondition('month',4)),'MMM':datePartGetterFactory(nameCondition('month',3)),'MM':datePartGetterFactory(digitCondition('month',2)),'M':datePartGetterFactory(digitCondition('month',1)),'LLLL':datePartGetterFactory(nameCondition('month',4)),'L':datePartGetterFactory(nameCondition('month',1)),'dd':datePartGetterFactory(digitCondition('day',2)),'d':datePartGetterFactory(digitCondition('day',1)),'HH':digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',2),false)))),'H':hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',1),false))),'hh':digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',2),true)))),'h':hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',1),true))),'jj':datePartGetterFactory(digitCondition('hour',2)),'j':datePartGetterFactory(digitCondition('hour',1)),'mm':digitModifier(datePartGetterFactory(digitCondition('minute',2))),'m':datePartGetterFactory(digitCondition('minute',1)),'ss':digitModifier(datePartGetterFactory(digitCondition('second',2))),'s':datePartGetterFactory(digitCondition('second',1)),// while ISO 8601 requires fractions to be prefixed with `.` or `,`
// we can be just safely rely on using `sss` since we currently don't support single or two digit
// fractions
'sss':datePartGetterFactory(digitCondition('second',3)),'EEEE':datePartGetterFactory(nameCondition('weekday',4)),'EEE':datePartGetterFactory(nameCondition('weekday',3)),'EE':datePartGetterFactory(nameCondition('weekday',2)),'E':datePartGetterFactory(nameCondition('weekday',1)),'a':hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour',1),true))),'Z':timeZoneGetter('short'),'z':timeZoneGetter('long'),'ww':datePartGetterFactory({}),// first Thursday of the year. not support ?
'w':datePartGetterFactory({}),// of the year not support ?
'G':datePartGetterFactory(nameCondition('era',1)),'GG':datePartGetterFactory(nameCondition('era',2)),'GGG':datePartGetterFactory(nameCondition('era',3)),'GGGG':datePartGetterFactory(nameCondition('era',4))};/**
 * @param {?} inner
 * @return {?}
 */function digitModifier(inner){return function(date,locale){var/** @type {?} */result=inner(date,locale);return result.length==1?'0'+result:result;};}/**
 * @param {?} inner
 * @return {?}
 */function hourClockExtractor(inner){return function(date,locale){return inner(date,locale).split(' ')[1];};}/**
 * @param {?} inner
 * @return {?}
 */function hourExtractor(inner){return function(date,locale){return inner(date,locale).split(' ')[0];};}/**
 * @param {?} date
 * @param {?} locale
 * @param {?} options
 * @return {?}
 */function intlDateFormat(date,locale,options){return new Intl.DateTimeFormat(locale,options).format(date).replace(/[\u200e\u200f]/g,'');}/**
 * @param {?} timezone
 * @return {?}
 */function timeZoneGetter(timezone){// To workaround `Intl` API restriction for single timezone let format with 24 hours
var/** @type {?} */options={hour:'2-digit',hour12:false,timeZoneName:timezone};return function(date,locale){var/** @type {?} */result=intlDateFormat(date,locale,options);// Then extract first 3 letters that related to hours
return result?result.substring(3):'';};}/**
 * @param {?} options
 * @param {?} value
 * @return {?}
 */function hour12Modify(options,value){options.hour12=value;return options;}/**
 * @param {?} prop
 * @param {?} len
 * @return {?}
 */function digitCondition(prop,len){var/** @type {?} */result={};result[prop]=len===2?'2-digit':'numeric';return result;}/**
 * @param {?} prop
 * @param {?} len
 * @return {?}
 */function nameCondition(prop,len){var/** @type {?} */result={};if(len<4){result[prop]=len>1?'short':'narrow';}else{result[prop]='long';}return result;}/**
 * @param {?} options
 * @return {?}
 */function combine(options){return Object.assign.apply(Object,[{}].concat(_toConsumableArray$1(options)));}/**
 * @param {?} ret
 * @return {?}
 */function datePartGetterFactory(ret){return function(date,locale){return intlDateFormat(date,locale,ret);};}var DATE_FORMATTER_CACHE=new Map();/**
 * @param {?} format
 * @param {?} date
 * @param {?} locale
 * @return {?}
 */function dateFormatter(format,date,locale){var/** @type {?} */fn=PATTERN_ALIASES[format];if(fn)return fn(date,locale);var/** @type {?} */cacheKey=format;var/** @type {?} */parts=DATE_FORMATTER_CACHE.get(cacheKey);if(!parts){parts=[];var/** @type {?} */match=void 0;DATE_FORMATS_SPLIT.exec(format);while(format){match=DATE_FORMATS_SPLIT.exec(format);if(match){parts=parts.concat(match.slice(1));format=parts.pop();}else{parts.push(format);format=null;}}DATE_FORMATTER_CACHE.set(cacheKey,parts);}return parts.reduce(function(text,part){var/** @type {?} */fn=DATE_FORMATS[part];return text+(fn?fn(date,locale):partToTime(part));},'');}/**
 * @param {?} part
 * @return {?}
 */function partToTime(part){return part==='\'\''?'\'':part.replace(/(^'|'$)/g,'').replace(/''/g,'\'');}var DateFormatter=function(){function DateFormatter(){_classCallCheck$1(this,DateFormatter);}_createClass$1(DateFormatter,null,[{key:'format',/**
     * @param {?} date
     * @param {?} locale
     * @param {?} pattern
     * @return {?}
     */value:function format(date,locale,pattern){return dateFormatter(pattern,date,locale);}}]);return DateFormatter;}();var ISO8601_DATE_REGEX=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a date according to locale rules.
 * \@howToUse `date_expression | date[:format]`
 * \@description
 *
 * Where:
 * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string
 * (https://www.w3.org/TR/NOTE-datetime).
 * - `format` indicates which date/time components to include. The format can be predefined as
 *   shown below or custom as shown in the table.
 *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)
 *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)
 *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)
 *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)
 *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)
 *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)
 *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)
 *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)
 *
 *
 *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |
 *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|
 *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |
 *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |
 *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |
 *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |
 *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |
 *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |
 *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|
 *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |
 *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |
 *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |
 *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |
 *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |
 *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |
 *
 * In javascript, only the components specified will be respected (not the ordering,
 * punctuations, ...) and details of the formatting will be dependent on the locale.
 *
 * Timezone of the formatted text will be the local system timezone of the end-user's machine.
 *
 * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not
 * applied and the formatted text will have the same day, month and year of the expression.
 *
 * WARNINGS:
 * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.
 *   Instead users should treat the date as an immutable object and change the reference when the
 *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run
 *   which would be an expensive operation).
 * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera
 *   browsers.
 *
 * ### Examples
 *
 * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)
 * in the _local_ time and locale is 'en-US':
 *
 * ```
 *     {{ dateObj | date }}               // output is 'Jun 15, 2015'
 *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'
 *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'
 *     {{ dateObj | date:'mmss' }}        // output is '43:11'
 * ```
 *
 * {\@example common/pipes/ts/date_pipe.ts region='DatePipe'}
 *
 * \@stable
 */var DatePipe=function(){/**
     * @param {?} _locale
     */function DatePipe(_locale){_classCallCheck$1(this,DatePipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} pattern
     * @return {?}
     */_createClass$1(DatePipe,[{key:'transform',value:function transform(value){var pattern=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'mediumDate';var/** @type {?} */date=void 0;if(isBlank$1$1(value)||value!==value)return null;if(typeof value==='string'){value=value.trim();}if(isDate(value)){date=value;}else if(NumberWrapper.isNumeric(value)){date=new Date(parseFloat(value));}else if(typeof value==='string'&&/^(\d{4}-\d{1,2}-\d{1,2})$/.test(value)){/**
            * For ISO Strings without time the day, month and year must be extracted from the ISO String
            * before Date creation to avoid time offset and errors in the new Date.
            * If we only replace '-' with ',' in the ISO String ("2015,01,01"), and try to create a new
            * date, some browsers (e.g. IE 9) will throw an invalid Date error
            * If we leave the '-' ("2015-01-01") and try to create a new Date("2015-01-01") the timeoffset
            * is applied
            * Note: ISO months are 0 for January, 1 for February, ...
            */var _value$split$map=value.split('-').map(function(val){return parseInt(val,10);}),_value$split$map2=_slicedToArray$1(_value$split$map,3),y=_value$split$map2[0],m=_value$split$map2[1],d=_value$split$map2[2];date=new Date(y,m-1,d);}else{date=new Date(value);}if(!isDate(date)){var/** @type {?} */match=void 0;if(typeof value==='string'&&(match=value.match(ISO8601_DATE_REGEX))){date=isoStringToDate(match);}else{throw invalidPipeArgumentError(DatePipe,value);}}return DateFormatter.format(date,this._locale,DatePipe._ALIASES[pattern]||pattern);}}]);return DatePipe;}();/** @internal */DatePipe._ALIASES={'medium':'yMMMdjms','short':'yMdjm','fullDate':'yMMMMEEEEd','longDate':'yMMMMd','mediumDate':'yMMMd','shortDate':'yMd','mediumTime':'jms','shortTime':'jm'};DatePipe.decorators=[{type:Pipe,args:[{name:'date',pure:true}]}];/** @nocollapse */DatePipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[LOCALE_ID]}]}];};/**
 * @param {?} obj
 * @return {?}
 */function isBlank$1$1(obj){return obj==null||obj==='';}/**
 * @param {?} obj
 * @return {?}
 */function isDate(obj){return obj instanceof Date&&!isNaN(obj.valueOf());}/**
 * @param {?} match
 * @return {?}
 */function isoStringToDate(match){var/** @type {?} */date=new Date(0);var/** @type {?} */tzHour=0;var/** @type {?} */tzMin=0;var/** @type {?} */dateSetter=match[8]?date.setUTCFullYear:date.setFullYear;var/** @type {?} */timeSetter=match[8]?date.setUTCHours:date.setHours;if(match[9]){tzHour=toInt(match[9]+match[10]);tzMin=toInt(match[9]+match[11]);}dateSetter.call(date,toInt(match[1]),toInt(match[2])-1,toInt(match[3]));var/** @type {?} */h=toInt(match[4]||'0')-tzHour;var/** @type {?} */m=toInt(match[5]||'0')-tzMin;var/** @type {?} */s=toInt(match[6]||'0');var/** @type {?} */ms=Math.round(parseFloat('0.'+(match[7]||0))*1000);timeSetter.call(date,h,m,s,ms);return date;}/**
 * @param {?} str
 * @return {?}
 */function toInt(str){return parseInt(str,10);}var _INTERPOLATION_REGEXP=/#/g;/**
 * \@ngModule CommonModule
 * \@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.
 * \@howToUse `expression | i18nPlural:mapping`
 * \@description
 *
 *  Where:
 *  - `expression` is a number.
 *  - `mapping` is an object that mimics the ICU format, see
 *    http://userguide.icu-project.org/formatparse/messages
 *
 *  ## Example
 *
 * {\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}
 *
 * \@experimental
 */var I18nPluralPipe=function(){/**
     * @param {?} _localization
     */function I18nPluralPipe(_localization){_classCallCheck$1(this,I18nPluralPipe);this._localization=_localization;}/**
     * @param {?} value
     * @param {?} pluralMap
     * @return {?}
     */_createClass$1(I18nPluralPipe,[{key:'transform',value:function transform(value,pluralMap){if(value==null)return'';if((typeof pluralMap==='undefined'?'undefined':_typeof(pluralMap))!=='object'||pluralMap===null){throw invalidPipeArgumentError(I18nPluralPipe,pluralMap);}var/** @type {?} */key=getPluralCategory(value,Object.keys(pluralMap),this._localization);return pluralMap[key].replace(_INTERPOLATION_REGEXP,value.toString());}}]);return I18nPluralPipe;}();I18nPluralPipe.decorators=[{type:Pipe,args:[{name:'i18nPlural',pure:true}]}];/** @nocollapse */I18nPluralPipe.ctorParameters=function(){return[{type:NgLocalization}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Generic selector that displays the string that matches the current value.
 * \@howToUse `expression | i18nSelect:mapping`
 * \@description
 *
 *  Where `mapping` is an object that indicates the text that should be displayed
 *  for different values of the provided `expression`.
 *  If none of the keys of the mapping match the value of the `expression`, then the content
 *  of the `other` key is returned when present, otherwise an empty string is returned.
 *
 *  ## Example
 *
 * {\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}
 *
 *  \@experimental
 */var I18nSelectPipe=function(){function I18nSelectPipe(){_classCallCheck$1(this,I18nSelectPipe);}_createClass$1(I18nSelectPipe,[{key:'transform',/**
     * @param {?} value
     * @param {?} mapping
     * @return {?}
     */value:function transform(value,mapping){if(value==null)return'';if((typeof mapping==='undefined'?'undefined':_typeof(mapping))!=='object'||typeof value!=='string'){throw invalidPipeArgumentError(I18nSelectPipe,mapping);}if(mapping.hasOwnProperty(value)){return mapping[value];}if(mapping.hasOwnProperty('other')){return mapping['other'];}return'';}}]);return I18nSelectPipe;}();I18nSelectPipe.decorators=[{type:Pipe,args:[{name:'i18nSelect',pure:true}]}];/** @nocollapse */I18nSelectPipe.ctorParameters=function(){return[];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Converts value into JSON string.
 * \@howToUse `expression | json`
 * \@description
 *
 * Converts value into string using `JSON.stringify`. Useful for debugging.
 *
 * ### Example
 * {\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}
 *
 * \@stable
 */var JsonPipe=function(){function JsonPipe(){_classCallCheck$1(this,JsonPipe);}_createClass$1(JsonPipe,[{key:'transform',/**
     * @param {?} value
     * @return {?}
     */value:function transform(value){return JSON.stringify(value,null,2);}}]);return JsonPipe;}();JsonPipe.decorators=[{type:Pipe,args:[{name:'json',pure:false}]}];/** @nocollapse */JsonPipe.ctorParameters=function(){return[];};var _NUMBER_FORMAT_REGEXP=/^(\d+)?\.((\d+)(-(\d+))?)?$/;/**
 * @param {?} pipe
 * @param {?} locale
 * @param {?} value
 * @param {?} style
 * @param {?} digits
 * @param {?=} currency
 * @param {?=} currencyAsSymbol
 * @return {?}
 */function formatNumber(pipe,locale,value,style$$1,digits){var currency=arguments.length>5&&arguments[5]!==undefined?arguments[5]:null;var currencyAsSymbol=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;if(value==null)return null;// Convert strings to numbers
value=typeof value==='string'&&NumberWrapper.isNumeric(value)?+value:value;if(typeof value!=='number'){throw invalidPipeArgumentError(pipe,value);}var/** @type {?} */minInt=void 0;var/** @type {?} */minFraction=void 0;var/** @type {?} */maxFraction=void 0;if(style$$1!==NumberFormatStyle.Currency){// rely on Intl default for currency
minInt=1;minFraction=0;maxFraction=3;}if(digits){var/** @type {?} */parts=digits.match(_NUMBER_FORMAT_REGEXP);if(parts===null){throw new Error(digits+' is not a valid digit info for number pipes');}if(parts[1]!=null){minInt=NumberWrapper.parseIntAutoRadix(parts[1]);}if(parts[3]!=null){minFraction=NumberWrapper.parseIntAutoRadix(parts[3]);}if(parts[5]!=null){maxFraction=NumberWrapper.parseIntAutoRadix(parts[5]);}}return NumberFormatter.format(/** @type {?} */value,locale,style$$1,{minimumIntegerDigits:minInt,minimumFractionDigits:minFraction,maximumFractionDigits:maxFraction,currency:currency,currencyAsSymbol:currencyAsSymbol});}/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a number according to locale rules.
 * \@howToUse `number_expression | number[:digitInfo]`
 *
 * Formats a number as text. Group sizing and separator and other locale-specific
 * configurations are based on the active locale.
 *
 * where `expression` is a number:
 *  - `digitInfo` is a `string` which has a following format: <br>
 *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>
 *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.
 *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.
 *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.
 *
 * For more information on the acceptable range for each of these numbers and other
 * details see your native internationalization library.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See {\@linkDocs guide/browser-support} for details.
 *
 * ### Example
 *
 * {\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}
 *
 * \@stable
 */var DecimalPipe=function(){/**
     * @param {?} _locale
     */function DecimalPipe(_locale){_classCallCheck$1(this,DecimalPipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} digits
     * @return {?}
     */_createClass$1(DecimalPipe,[{key:'transform',value:function transform(value){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return formatNumber(DecimalPipe,this._locale,value,NumberFormatStyle.Decimal,digits);}}]);return DecimalPipe;}();DecimalPipe.decorators=[{type:Pipe,args:[{name:'number'}]}];/** @nocollapse */DecimalPipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[LOCALE_ID]}]}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a number as a percentage according to locale rules.
 * \@howToUse `number_expression | percent[:digitInfo]`
 *
 * \@description
 *
 * Formats a number as percentage.
 *
 * - `digitInfo` See {\@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See {\@linkDocs guide/browser-support} for details.
 *
 * ### Example
 *
 * {\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}
 *
 * \@stable
 */var PercentPipe=function(){/**
     * @param {?} _locale
     */function PercentPipe(_locale){_classCallCheck$1(this,PercentPipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} digits
     * @return {?}
     */_createClass$1(PercentPipe,[{key:'transform',value:function transform(value){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return formatNumber(PercentPipe,this._locale,value,NumberFormatStyle.Percent,digits);}}]);return PercentPipe;}();PercentPipe.decorators=[{type:Pipe,args:[{name:'percent'}]}];/** @nocollapse */PercentPipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[LOCALE_ID]}]}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Formats a number as currency using locale rules.
 * \@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`
 * \@description
 *
 * Use `currency` to format a number as currency.
 *
 * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such
 *    as `USD` for the US dollar and `EUR` for the euro.
 * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.
 *   - `true`: use symbol (e.g. `$`).
 *   - `false`(default): use code (e.g. `USD`).
 * - `digitInfo` See {\@link DecimalPipe} for detailed description.
 *
 * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers
 * and may require a polyfill. See {\@linkDocs guide/browser-support} for details.
 *
 * ### Example
 *
 * {\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}
 *
 * \@stable
 */var CurrencyPipe=function(){/**
     * @param {?} _locale
     */function CurrencyPipe(_locale){_classCallCheck$1(this,CurrencyPipe);this._locale=_locale;}/**
     * @param {?} value
     * @param {?=} currencyCode
     * @param {?=} symbolDisplay
     * @param {?=} digits
     * @return {?}
     */_createClass$1(CurrencyPipe,[{key:'transform',value:function transform(value){var currencyCode=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'USD';var symbolDisplay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var digits=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;return formatNumber(CurrencyPipe,this._locale,value,NumberFormatStyle.Currency,digits,currencyCode,symbolDisplay);}}]);return CurrencyPipe;}();CurrencyPipe.decorators=[{type:Pipe,args:[{name:'currency'}]}];/** @nocollapse */CurrencyPipe.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[LOCALE_ID]}]}];};/**
 * \@ngModule CommonModule
 * \@whatItDoes Creates a new List or String containing a subset (slice) of the elements.
 * \@howToUse `array_or_string_expression | slice:start[:end]`
 * \@description
 *
 * Where the input expression is a `List` or `String`, and:
 * - `start`: The starting index of the subset to return.
 *   - **a positive integer**: return the item at `start` index and all items after
 *     in the list or string expression.
 *   - **a negative integer**: return the item at `start` index from the end and all items after
 *     in the list or string expression.
 *   - **if positive and greater than the size of the expression**: return an empty list or string.
 *   - **if negative and greater than the size of the expression**: return entire list or string.
 * - `end`: The ending index of the subset to return.
 *   - **omitted**: return all items until the end.
 *   - **if positive**: return all items before `end` index of the list or string.
 *   - **if negative**: return all items before `end` index from the end of the list or string.
 *
 * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`
 * and `String.prototype.slice()`.
 *
 * When operating on a [List], the returned list is always a copy even when all
 * the elements are being returned.
 *
 * When operating on a blank value, the pipe returns the blank value.
 *
 * ## List Example
 *
 * This `ngFor` example:
 *
 * {\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}
 *
 * produces the following:
 *
 *     <li>b</li>
 *     <li>c</li>
 *
 * ## String Examples
 *
 * {\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}
 *
 * \@stable
 */var SlicePipe=function(){function SlicePipe(){_classCallCheck$1(this,SlicePipe);}_createClass$1(SlicePipe,[{key:'transform',/**
     * @param {?} value
     * @param {?} start
     * @param {?=} end
     * @return {?}
     */value:function transform(value,start,end){if(value==null)return value;if(!this.supports(value)){throw invalidPipeArgumentError(SlicePipe,value);}return value.slice(start,end);}/**
     * @param {?} obj
     * @return {?}
     */},{key:'supports',value:function supports(obj){return typeof obj==='string'||Array.isArray(obj);}}]);return SlicePipe;}();SlicePipe.decorators=[{type:Pipe,args:[{name:'slice',pure:false}]}];/** @nocollapse */SlicePipe.ctorParameters=function(){return[];};/**
 * A collection of Angular pipes that are likely to be used in each and every application.
 */var COMMON_PIPES=[AsyncPipe,UpperCasePipe,LowerCasePipe,JsonPipe,SlicePipe,DecimalPipe,PercentPipe,TitleCasePipe,CurrencyPipe,DatePipe,I18nPluralPipe,I18nSelectPipe];/**
 * The module that includes all the basic Angular directives like {\@link NgIf}, {\@link NgForOf}, ...
 *
 * \@stable
 */var CommonModule=function CommonModule(){_classCallCheck$1(this,CommonModule);};CommonModule.decorators=[{type:NgModule,args:[{declarations:[COMMON_DIRECTIVES,COMMON_PIPES],exports:[COMMON_DIRECTIVES,COMMON_PIPES],providers:[{provide:NgLocalization,useClass:NgLocaleLocalization}]}]}];/** @nocollapse */CommonModule.ctorParameters=function(){return[];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var PLATFORM_BROWSER_ID='browser';var VERSION$1=new Version('4.0.0-rc.1');

var _get=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */var NoOpAnimationDriver=function(){function NoOpAnimationDriver(){_classCallCheck(this,NoOpAnimationDriver);}_createClass(NoOpAnimationDriver,[{key:'animate',/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */value:function animate$$1(element,startingStyles,keyframes$$1,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];return new NoOpAnimationPlayer();}}]);return NoOpAnimationDriver;}();/**
 * \@experimental
 * @abstract
 */var AnimationDriver=function(){function AnimationDriver(){_classCallCheck(this,AnimationDriver);}_createClass(AnimationDriver,[{key:'animate',/**
     * @abstract
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */value:function animate$$1(element,startingStyles,keyframes$$1,duration,delay,easing,previousPlayers){}}]);return AnimationDriver;}();AnimationDriver.NOOP=new NoOpAnimationDriver();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var globalScope=void 0;if(typeof window==='undefined'){if(typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope){// TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492
globalScope=self;}else{globalScope=global;}}else{globalScope=window;}// Need to declare a new variable for global here since TypeScript
// exports the original value of the symbol.
var global$1=globalScope;// TODO: remove calls to assert in production environment
// Note: Can't just export this and import in in other files
// as `assert` is a reserved keyword in Dart
global$1.assert=function assert(condition){// TODO: to be fixed properly via #2830, noop for now
};/**
 * @param {?} obj
 * @return {?}
 */function isPresent(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank(obj){return obj==null;}/**
 * @param {?} token
 * @return {?}
 */function stringify(token){if(typeof token==='string'){return token;}if(token==null){return''+token;}if(token.overriddenName){return''+token.overriddenName;}if(token.name){return''+token.name;}var/** @type {?} */res=token.toString();var/** @type {?} */newLineIndex=res.indexOf('\n');return newLineIndex===-1?res:res.substring(0,newLineIndex);}/**
 * @param {?} global
 * @param {?} path
 * @param {?} value
 * @return {?}
 */function setValueOnPath(global,path,value){var/** @type {?} */parts=path.split('.');var/** @type {?} */obj=global;while(parts.length>1){var/** @type {?} */name=parts.shift();if(obj.hasOwnProperty(name)&&obj[name]!=null){obj=obj[name];}else{obj=obj[name]={};}}if(obj===undefined||obj===null){obj={};}obj[parts.shift()]=value;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var _DOM=null;/**
 * @return {?}
 */function getDOM(){return _DOM;}/**
 * @param {?} adapter
 * @return {?}
 */function setRootDomAdapter(adapter){if(!_DOM){_DOM=adapter;}}/**
 * Provides DOM operations in an environment-agnostic way.
 *
 * \@security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 * @abstract
 */var DomAdapter=function(){function DomAdapter(){_classCallCheck(this,DomAdapter);this.resourceLoaderType=null;}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */_createClass(DomAdapter,[{key:'hasProperty',value:function hasProperty(element,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){}/**
     * @abstract
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'getProperty',value:function getProperty(el,name){}/**
     * @abstract
     * @param {?} el
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invoke',value:function invoke(el,methodName,args){}/**
     * @abstract
     * @param {?} error
     * @return {?}
     */},{key:'logError',value:function logError(error){}/**
     * @abstract
     * @param {?} error
     * @return {?}
     */},{key:'log',value:function log(error){}/**
     * @abstract
     * @param {?} error
     * @return {?}
     */},{key:'logGroup',value:function logGroup(error){}/**
     * @abstract
     * @return {?}
     */},{key:'logGroupEnd',value:function logGroupEnd(){}/**
     * Maps attribute names to their corresponding property names for cases
     * where attribute name doesn't match property name.
     * @return {?}
     */},{key:'parse',/**
     * @abstract
     * @param {?} templateHtml
     * @return {?}
     */value:function parse(templateHtml){}/**
     * @abstract
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */},{key:'querySelector',value:function querySelector(el,selector){}/**
     * @abstract
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */},{key:'querySelectorAll',value:function querySelectorAll(el,selector){}/**
     * @abstract
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'on',value:function on(el,evt,listener){}/**
     * @abstract
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'onAndCancel',value:function onAndCancel(el,evt,listener){}/**
     * @abstract
     * @param {?} el
     * @param {?} evt
     * @return {?}
     */},{key:'dispatchEvent',value:function dispatchEvent(el,evt){}/**
     * @abstract
     * @param {?} eventType
     * @return {?}
     */},{key:'createMouseEvent',value:function createMouseEvent(eventType){}/**
     * @abstract
     * @param {?} eventType
     * @return {?}
     */},{key:'createEvent',value:function createEvent(eventType){}/**
     * @abstract
     * @param {?} evt
     * @return {?}
     */},{key:'preventDefault',value:function preventDefault(evt){}/**
     * @abstract
     * @param {?} evt
     * @return {?}
     */},{key:'isPrevented',value:function isPrevented(evt){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getInnerHTML',value:function getInnerHTML(el){}/**
     * Returns content if el is a <template> element, null otherwise.
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getTemplateContent',value:function getTemplateContent(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getOuterHTML',value:function getOuterHTML(el){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'nodeName',value:function nodeName(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'nodeValue',value:function nodeValue(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'type',value:function type(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'content',value:function content(node){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'firstChild',value:function firstChild(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'parentElement',value:function parentElement(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'childNodes',value:function childNodes(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'childNodesAsList',value:function childNodesAsList(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'clearNodes',value:function clearNodes(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'appendChild',value:function appendChild(el,node){}/**
     * @abstract
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'removeChild',value:function removeChild(el,node){}/**
     * @abstract
     * @param {?} el
     * @param {?} newNode
     * @param {?} oldNode
     * @return {?}
     */},{key:'replaceChild',value:function replaceChild(el,newNode,oldNode){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'remove',value:function remove(el){}/**
     * @abstract
     * @param {?} parent
     * @param {?} ref
     * @param {?} node
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,ref,node){}/**
     * @abstract
     * @param {?} parent
     * @param {?} ref
     * @param {?} nodes
     * @return {?}
     */},{key:'insertAllBefore',value:function insertAllBefore(parent,ref,nodes){}/**
     * @abstract
     * @param {?} parent
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'insertAfter',value:function insertAfter(parent,el,node){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setInnerHTML',value:function setInnerHTML(el,value){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getText',value:function getText(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setText',value:function setText(el,value){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getValue',value:function getValue(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(el,value){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getChecked',value:function getChecked(el){}/**
     * @abstract
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setChecked',value:function setChecked(el,value){}/**
     * @abstract
     * @param {?} text
     * @return {?}
     */},{key:'createComment',value:function createComment(text){}/**
     * @abstract
     * @param {?} html
     * @return {?}
     */},{key:'createTemplate',value:function createTemplate(html){}/**
     * @abstract
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElement',value:function createElement(tagName,doc){}/**
     * @abstract
     * @param {?} ns
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElementNS',value:function createElementNS(ns,tagName,doc){}/**
     * @abstract
     * @param {?} text
     * @param {?=} doc
     * @return {?}
     */},{key:'createTextNode',value:function createTextNode(text,doc){}/**
     * @abstract
     * @param {?} attrName
     * @param {?} attrValue
     * @param {?=} doc
     * @return {?}
     */},{key:'createScriptTag',value:function createScriptTag(attrName,attrValue,doc){}/**
     * @abstract
     * @param {?} css
     * @param {?=} doc
     * @return {?}
     */},{key:'createStyleElement',value:function createStyleElement(css,doc){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'createShadowRoot',value:function createShadowRoot(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getShadowRoot',value:function getShadowRoot(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getHost',value:function getHost(el){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getDistributedNodes',value:function getDistributedNodes(el){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'clone',value:function clone(/*<T extends Node>*/node){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByClassName',value:function getElementsByClassName(element,name){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByTagName',value:function getElementsByTagName(element,name){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'classList',value:function classList(element){}/**
     * @abstract
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'addClass',value:function addClass(element,className){}/**
     * @abstract
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'removeClass',value:function removeClass(element,className){}/**
     * @abstract
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'hasClass',value:function hasClass(element,className){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setStyle',value:function setStyle(element,styleName,styleValue){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(element,styleName){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @return {?}
     */},{key:'getStyle',value:function getStyle(element,styleName){}/**
     * @abstract
     * @param {?} element
     * @param {?} styleName
     * @param {?=} styleValue
     * @return {?}
     */},{key:'hasStyle',value:function hasStyle(element,styleName,styleValue){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'tagName',value:function tagName(element){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'attributeMap',value:function attributeMap(element){}/**
     * @abstract
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttribute',value:function hasAttribute(element,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttributeNS',value:function hasAttributeNS(element,ns,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'getAttribute',value:function getAttribute(element,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'getAttributeNS',value:function getAttributeNS(element,ns,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(element,name,value){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttributeNS',value:function setAttributeNS(element,ns,name,value){}/**
     * @abstract
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(element,attribute){}/**
     * @abstract
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'removeAttributeNS',value:function removeAttributeNS(element,ns,attribute){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'templateAwareRoot',value:function templateAwareRoot(el){}/**
     * @abstract
     * @return {?}
     */},{key:'createHtmlDocument',value:function createHtmlDocument(){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'getBoundingClientRect',value:function getBoundingClientRect(el){}/**
     * @abstract
     * @param {?} doc
     * @return {?}
     */},{key:'getTitle',value:function getTitle(doc){}/**
     * @abstract
     * @param {?} doc
     * @param {?} newTitle
     * @return {?}
     */},{key:'setTitle',value:function setTitle(doc,newTitle){}/**
     * @abstract
     * @param {?} n
     * @param {?} selector
     * @return {?}
     */},{key:'elementMatches',value:function elementMatches(n,selector){}/**
     * @abstract
     * @param {?} el
     * @return {?}
     */},{key:'isTemplateElement',value:function isTemplateElement(el){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isTextNode',value:function isTextNode(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isCommentNode',value:function isCommentNode(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isElementNode',value:function isElementNode(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'hasShadowRoot',value:function hasShadowRoot(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'isShadowRoot',value:function isShadowRoot(node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'importIntoDoc',value:function importIntoDoc(/*<T extends Node>*/node){}/**
     * @abstract
     * @param {?} node
     * @return {?}
     */},{key:'adoptNode',value:function adoptNode(/*<T extends Node>*/node){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'getHref',value:function getHref(element){}/**
     * @abstract
     * @param {?} event
     * @return {?}
     */},{key:'getEventKey',value:function getEventKey(event){}/**
     * @abstract
     * @param {?} element
     * @param {?} baseUrl
     * @param {?} href
     * @return {?}
     */},{key:'resolveAndSetHref',value:function resolveAndSetHref(element,baseUrl,href){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsDOMEvents',value:function supportsDOMEvents(){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsNativeShadowDOM',value:function supportsNativeShadowDOM(){}/**
     * @abstract
     * @param {?} doc
     * @param {?} target
     * @return {?}
     */},{key:'getGlobalEventTarget',value:function getGlobalEventTarget(doc,target){}/**
     * @abstract
     * @return {?}
     */},{key:'getHistory',value:function getHistory(){}/**
     * @abstract
     * @return {?}
     */},{key:'getLocation',value:function getLocation(){}/**
     * @abstract
     * @param {?} doc
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(doc){}/**
     * @abstract
     * @return {?}
     */},{key:'resetBaseElement',value:function resetBaseElement(){}/**
     * @abstract
     * @return {?}
     */},{key:'getUserAgent',value:function getUserAgent(){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setData',value:function setData(element,name,value){}/**
     * @abstract
     * @param {?} element
     * @return {?}
     */},{key:'getComputedStyle',value:function getComputedStyle(element){}/**
     * @abstract
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getData',value:function getData(element,name){}/**
     * @abstract
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setGlobalVar',value:function setGlobalVar(name,value){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsWebAnimation',value:function supportsWebAnimation(){}/**
     * @abstract
     * @return {?}
     */},{key:'performanceNow',value:function performanceNow(){}/**
     * @abstract
     * @return {?}
     */},{key:'getAnimationPrefix',value:function getAnimationPrefix(){}/**
     * @abstract
     * @return {?}
     */},{key:'getTransitionEnd',value:function getTransitionEnd(){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsAnimation',value:function supportsAnimation(){}/**
     * @abstract
     * @return {?}
     */},{key:'supportsCookies',value:function supportsCookies(){}/**
     * @abstract
     * @param {?} name
     * @return {?}
     */},{key:'getCookie',value:function getCookie(name){}/**
     * @abstract
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setCookie',value:function setCookie(name,value){}},{key:'attrToPropMap',get:function get(){return this._attrToPropMap;},/**
     * @param {?} value
     * @return {?}
     */set:function set(value){this._attrToPropMap=value;}}]);return DomAdapter;}();var WebAnimationsPlayer=function(){/**
     * @param {?} element
     * @param {?} keyframes
     * @param {?} options
     * @param {?=} previousPlayers
     */function WebAnimationsPlayer(element,keyframes$$1,options){var _this=this;var previousPlayers=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];_classCallCheck(this,WebAnimationsPlayer);this.element=element;this.keyframes=keyframes$$1;this.options=options;this._onDoneFns=[];this._onStartFns=[];this._onDestroyFns=[];this._initialized=false;this._finished=false;this._started=false;this._destroyed=false;this.parentPlayer=null;this._duration=options['duration'];this.previousStyles={};previousPlayers.forEach(function(player){var styles=player._captureStyles();Object.keys(styles).forEach(function(prop){return _this.previousStyles[prop]=styles[prop];});});}/**
     * @return {?}
     */_createClass(WebAnimationsPlayer,[{key:'_onFinish',value:function _onFinish(){if(!this._finished){this._finished=true;this._onDoneFns.forEach(function(fn){return fn();});this._onDoneFns=[];}}/**
     * @return {?}
     */},{key:'init',value:function init(){var _this2=this;if(this._initialized)return;this._initialized=true;var/** @type {?} */keyframes$$1=this.keyframes.map(function(styles){var/** @type {?} */formattedKeyframe={};Object.keys(styles).forEach(function(prop,index){var/** @type {?} */value=styles[prop];if(value==AUTO_STYLE$1){value=_computeStyle(_this2.element,prop);}if(value!=undefined){formattedKeyframe[prop]=value;}});return formattedKeyframe;});var/** @type {?} */previousStyleProps=Object.keys(this.previousStyles);if(previousStyleProps.length){var/** @type {?} */startingKeyframe=keyframes$$1[0];var/** @type {?} */missingStyleProps=[];previousStyleProps.forEach(function(prop){if(!isPresent(startingKeyframe[prop])){missingStyleProps.push(prop);}startingKeyframe[prop]=_this2.previousStyles[prop];});if(missingStyleProps.length){var i;(function(){var/** @type {?} */self=_this2;// tslint:disable-next-line
var _loop=function _loop(){var/** @type {?} */kf=keyframes$$1[i];// tslint:disable-next-line
missingStyleProps.forEach(function(prop){kf[prop]=_computeStyle(self.element,prop);});};for(/** @type {?} */i=1;i<keyframes$$1.length;i++){_loop();}})();}}this._player=this._triggerWebAnimation(this.element,keyframes$$1,this.options);this._finalKeyframe=_copyKeyframeStyles(keyframes$$1[keyframes$$1.length-1]);// this is required so that the player doesn't start to animate right away
this._resetDomPlayerState();this._player.addEventListener('finish',function(){return _this2._onFinish();});}/**
     * \@internal
     * @param {?} element
     * @param {?} keyframes
     * @param {?} options
     * @return {?}
     */},{key:'_triggerWebAnimation',value:function _triggerWebAnimation(element,keyframes$$1,options){// jscompiler doesn't seem to know animate is a native property because it's not fully
// supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]
return element['animate'](keyframes$$1,options);}/**
     * @return {?}
     */},{key:'onStart',/**
     * @param {?} fn
     * @return {?}
     */value:function onStart(fn){this._onStartFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDone',value:function onDone(fn){this._onDoneFns.push(fn);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onDestroy',value:function onDestroy(fn){this._onDestroyFns.push(fn);}/**
     * @return {?}
     */},{key:'play',value:function play(){this.init();if(!this.hasStarted()){this._onStartFns.forEach(function(fn){return fn();});this._onStartFns=[];this._started=true;}this._player.play();}/**
     * @return {?}
     */},{key:'pause',value:function pause(){this.init();this._player.pause();}/**
     * @return {?}
     */},{key:'finish',value:function finish(){this.init();this._onFinish();this._player.finish();}/**
     * @return {?}
     */},{key:'reset',value:function reset(){this._resetDomPlayerState();this._destroyed=false;this._finished=false;this._started=false;}/**
     * @return {?}
     */},{key:'_resetDomPlayerState',value:function _resetDomPlayerState(){if(this._player){this._player.cancel();}}/**
     * @return {?}
     */},{key:'restart',value:function restart(){this.reset();this.play();}/**
     * @return {?}
     */},{key:'hasStarted',value:function hasStarted(){return this._started;}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){if(!this._destroyed){this._resetDomPlayerState();this._onFinish();this._destroyed=true;this._onDestroyFns.forEach(function(fn){return fn();});this._onDestroyFns=[];}}/**
     * @return {?}
     */},{key:'setPosition',/**
     * @param {?} p
     * @return {?}
     */value:function setPosition(p){this._player.currentTime=p*this.totalTime;}/**
     * @return {?}
     */},{key:'getPosition',value:function getPosition(){return this._player.currentTime/this.totalTime;}/**
     * @return {?}
     */},{key:'_captureStyles',value:function _captureStyles(){var _this3=this;var/** @type {?} */styles={};if(this.hasStarted()){Object.keys(this._finalKeyframe).forEach(function(prop){if(prop!='offset'){styles[prop]=_this3._finished?_this3._finalKeyframe[prop]:_computeStyle(_this3.element,prop);}});}return styles;}},{key:'domPlayer',get:function get(){return this._player;}},{key:'totalTime',get:function get(){return this._duration;}}]);return WebAnimationsPlayer;}();/**
 * @param {?} element
 * @param {?} prop
 * @return {?}
 */function _computeStyle(element,prop){return getDOM().getComputedStyle(element)[prop];}/**
 * @param {?} styles
 * @return {?}
 */function _copyKeyframeStyles(styles){var/** @type {?} */newStyles={};Object.keys(styles).forEach(function(prop){if(prop!='offset'){newStyles[prop]=styles[prop];}});return newStyles;}var WebAnimationsDriver=function(){function WebAnimationsDriver(){_classCallCheck(this,WebAnimationsDriver);}_createClass(WebAnimationsDriver,[{key:'animate',/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */value:function animate$$1(element,startingStyles,keyframes$$1,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];var/** @type {?} */formattedSteps=[];var/** @type {?} */startingStyleLookup={};if(isPresent(startingStyles)){startingStyleLookup=_populateStyles(startingStyles,{});}keyframes$$1.forEach(function(keyframe){var/** @type {?} */data=_populateStyles(keyframe.styles,startingStyleLookup);data['offset']=Math.max(0,Math.min(1,keyframe.offset));formattedSteps.push(data);});// Styling passed into element.animate() must always be balanced.
// The special cases below can occur if only style() calls exist
// within an animation or when a style() calls are used prior
// to a group() animation being issued or if the renderer is
// invoked by the user directly.
if(formattedSteps.length==0){formattedSteps=[startingStyleLookup,startingStyleLookup];}else if(formattedSteps.length==1){var/** @type {?} */start=startingStyleLookup;var/** @type {?} */end=formattedSteps[0];end['offset']=null;formattedSteps=[start,end];}var/** @type {?} */playerOptions={'duration':duration,'delay':delay,'fill':'both'// we use `both` because it allows for styling at 0% to work with `delay`
};// we check for this to avoid having a null|undefined value be present
// for the easing (which results in an error for certain browsers #9752)
if(easing){playerOptions['easing']=easing;}// there may be a chance a NoOp player is returned depending
// on when the previous animation was cancelled
previousPlayers=previousPlayers.filter(filterWebAnimationPlayerFn);return new WebAnimationsPlayer(element,formattedSteps,playerOptions,/** @type {?} */previousPlayers);}}]);return WebAnimationsDriver;}();/**
 * @param {?} styles
 * @param {?} defaultStyles
 * @return {?}
 */function _populateStyles(styles,defaultStyles){var/** @type {?} */data={};styles.styles.forEach(function(entry){Object.keys(entry).forEach(function(prop){data[prop]=entry[prop];});});Object.keys(defaultStyles).forEach(function(prop){if(!isPresent(data[prop])){data[prop]=defaultStyles[prop];}});return data;}/**
 * @param {?} player
 * @return {?}
 */function filterWebAnimationPlayerFn(player){return player instanceof WebAnimationsPlayer;}/**
 * Provides DOM operations in any browser environment.
 *
 * \@security Tread carefully! Interacting with the DOM directly is dangerous and
 * can introduce XSS risks.
 * @abstract
 */var GenericBrowserDomAdapter=function(_DomAdapter){_inherits(GenericBrowserDomAdapter,_DomAdapter);function GenericBrowserDomAdapter(){_classCallCheck(this,GenericBrowserDomAdapter);var _this4=_possibleConstructorReturn(this,(GenericBrowserDomAdapter.__proto__||Object.getPrototypeOf(GenericBrowserDomAdapter)).call(this));_this4._animationPrefix=null;_this4._transitionEnd=null;try{var element=_this4.createElement('div',document);if(isPresent(_this4.getStyle(element,'animationName'))){_this4._animationPrefix='';}else{var domPrefixes=['Webkit','Moz','O','ms'];for(var i=0;i<domPrefixes.length;i++){if(isPresent(_this4.getStyle(element,domPrefixes[i]+'AnimationName'))){_this4._animationPrefix='-'+domPrefixes[i].toLowerCase()+'-';break;}}}var transEndEventNames={WebkitTransition:'webkitTransitionEnd',MozTransition:'transitionend',OTransition:'oTransitionEnd otransitionend',transition:'transitionend'};Object.keys(transEndEventNames).forEach(function(key){if(isPresent(_this4.getStyle(element,key))){_this4._transitionEnd=transEndEventNames[key];}});}catch(e){_this4._animationPrefix=null;_this4._transitionEnd=null;}return _this4;}/**
     * @param {?} el
     * @return {?}
     */_createClass(GenericBrowserDomAdapter,[{key:'getDistributedNodes',value:function getDistributedNodes(el){return el.getDistributedNodes();}/**
     * @param {?} el
     * @param {?} baseUrl
     * @param {?} href
     * @return {?}
     */},{key:'resolveAndSetHref',value:function resolveAndSetHref(el,baseUrl,href){el.href=href==null?baseUrl:baseUrl+'/../'+href;}/**
     * @return {?}
     */},{key:'supportsDOMEvents',value:function supportsDOMEvents(){return true;}/**
     * @return {?}
     */},{key:'supportsNativeShadowDOM',value:function supportsNativeShadowDOM(){return typeof document.body.createShadowRoot==='function';}/**
     * @return {?}
     */},{key:'getAnimationPrefix',value:function getAnimationPrefix(){return this._animationPrefix?this._animationPrefix:'';}/**
     * @return {?}
     */},{key:'getTransitionEnd',value:function getTransitionEnd(){return this._transitionEnd?this._transitionEnd:'';}/**
     * @return {?}
     */},{key:'supportsAnimation',value:function supportsAnimation(){return isPresent(this._animationPrefix)&&isPresent(this._transitionEnd);}}]);return GenericBrowserDomAdapter;}(DomAdapter);var _attrToPropMap={'class':'className','innerHtml':'innerHTML','readonly':'readOnly','tabindex':'tabIndex'};var DOM_KEY_LOCATION_NUMPAD=3;// Map to convert some key or keyIdentifier values to what will be returned by getEventKey
var _keyMap={// The following values are here for cross-browser compatibility and to match the W3C standard
// cf http://www.w3.org/TR/DOM-Level-3-Events-key/
'\b':'Backspace','\t':'Tab','\x7F':'Delete','\x1B':'Escape','Del':'Delete','Esc':'Escape','Left':'ArrowLeft','Right':'ArrowRight','Up':'ArrowUp','Down':'ArrowDown','Menu':'ContextMenu','Scroll':'ScrollLock','Win':'OS'};// There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...
var _chromeNumKeyPadMap={'A':'1','B':'2','C':'3','D':'4','E':'5','F':'6','G':'7','H':'8','I':'9','J':'*','K':'+','M':'-','N':'.','O':'/','\x60':'0','\x90':'NumLock'};var BrowserDomAdapter=function(_GenericBrowserDomAda){_inherits(BrowserDomAdapter,_GenericBrowserDomAda);function BrowserDomAdapter(){_classCallCheck(this,BrowserDomAdapter);return _possibleConstructorReturn(this,(BrowserDomAdapter.__proto__||Object.getPrototypeOf(BrowserDomAdapter)).apply(this,arguments));}_createClass(BrowserDomAdapter,[{key:'parse',/**
     * @param {?} templateHtml
     * @return {?}
     */value:function parse(templateHtml){throw new Error('parse not implemented');}/**
     * @return {?}
     */},{key:'hasProperty',/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */value:function hasProperty(element,name){return name in element;}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){el[name]=value;}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'getProperty',value:function getProperty(el,name){return el[name];}/**
     * @param {?} el
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invoke',value:function invoke(el,methodName,args){el[methodName].apply(el,_toConsumableArray(args));}/**
     * @param {?} error
     * @return {?}
     */},{key:'logError',value:function logError(error){if(window.console){if(console.error){console.error(error);}else{console.log(error);}}}/**
     * @param {?} error
     * @return {?}
     */},{key:'log',value:function log(error){if(window.console){window.console.log&&window.console.log(error);}}/**
     * @param {?} error
     * @return {?}
     */},{key:'logGroup',value:function logGroup(error){if(window.console){window.console.group&&window.console.group(error);}}/**
     * @return {?}
     */},{key:'logGroupEnd',value:function logGroupEnd(){if(window.console){window.console.groupEnd&&window.console.groupEnd();}}/**
     * @return {?}
     */},{key:'querySelector',/**
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */value:function querySelector(el,selector){return el.querySelector(selector);}/**
     * @param {?} el
     * @param {?} selector
     * @return {?}
     */},{key:'querySelectorAll',value:function querySelectorAll(el,selector){return el.querySelectorAll(selector);}/**
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'on',value:function on(el,evt,listener){el.addEventListener(evt,listener,false);}/**
     * @param {?} el
     * @param {?} evt
     * @param {?} listener
     * @return {?}
     */},{key:'onAndCancel',value:function onAndCancel(el,evt,listener){el.addEventListener(evt,listener,false);// Needed to follow Dart's subscription semantic, until fix of
// https://code.google.com/p/dart/issues/detail?id=17406
return function(){el.removeEventListener(evt,listener,false);};}/**
     * @param {?} el
     * @param {?} evt
     * @return {?}
     */},{key:'dispatchEvent',value:function dispatchEvent(el,evt){el.dispatchEvent(evt);}/**
     * @param {?} eventType
     * @return {?}
     */},{key:'createMouseEvent',value:function createMouseEvent(eventType){var/** @type {?} */evt=document.createEvent('MouseEvent');evt.initEvent(eventType,true,true);return evt;}/**
     * @param {?} eventType
     * @return {?}
     */},{key:'createEvent',value:function createEvent(eventType){var/** @type {?} */evt=document.createEvent('Event');evt.initEvent(eventType,true,true);return evt;}/**
     * @param {?} evt
     * @return {?}
     */},{key:'preventDefault',value:function preventDefault(evt){evt.preventDefault();evt.returnValue=false;}/**
     * @param {?} evt
     * @return {?}
     */},{key:'isPrevented',value:function isPrevented(evt){return evt.defaultPrevented||isPresent(evt.returnValue)&&!evt.returnValue;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getInnerHTML',value:function getInnerHTML(el){return el.innerHTML;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getTemplateContent',value:function getTemplateContent(el){return'content'in el&&el instanceof HTMLTemplateElement?el.content:null;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getOuterHTML',value:function getOuterHTML(el){return el.outerHTML;}/**
     * @param {?} node
     * @return {?}
     */},{key:'nodeName',value:function nodeName(node){return node.nodeName;}/**
     * @param {?} node
     * @return {?}
     */},{key:'nodeValue',value:function nodeValue(node){return node.nodeValue;}/**
     * @param {?} node
     * @return {?}
     */},{key:'type',value:function type(node){return node.type;}/**
     * @param {?} node
     * @return {?}
     */},{key:'content',value:function content(node){if(this.hasProperty(node,'content')){return node.content;}else{return node;}}/**
     * @param {?} el
     * @return {?}
     */},{key:'firstChild',value:function firstChild(el){return el.firstChild;}/**
     * @param {?} el
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(el){return el.nextSibling;}/**
     * @param {?} el
     * @return {?}
     */},{key:'parentElement',value:function parentElement(el){return el.parentNode;}/**
     * @param {?} el
     * @return {?}
     */},{key:'childNodes',value:function childNodes(el){return el.childNodes;}/**
     * @param {?} el
     * @return {?}
     */},{key:'childNodesAsList',value:function childNodesAsList(el){var/** @type {?} */childNodes=el.childNodes;var/** @type {?} */res=new Array(childNodes.length);for(var/** @type {?} */i=0;i<childNodes.length;i++){res[i]=childNodes[i];}return res;}/**
     * @param {?} el
     * @return {?}
     */},{key:'clearNodes',value:function clearNodes(el){while(el.firstChild){el.removeChild(el.firstChild);}}/**
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'appendChild',value:function appendChild(el,node){el.appendChild(node);}/**
     * @param {?} el
     * @param {?} node
     * @return {?}
     */},{key:'removeChild',value:function removeChild(el,node){el.removeChild(node);}/**
     * @param {?} el
     * @param {?} newChild
     * @param {?} oldChild
     * @return {?}
     */},{key:'replaceChild',value:function replaceChild(el,newChild,oldChild){el.replaceChild(newChild,oldChild);}/**
     * @param {?} node
     * @return {?}
     */},{key:'remove',value:function remove(node){if(node.parentNode){node.parentNode.removeChild(node);}return node;}/**
     * @param {?} parent
     * @param {?} ref
     * @param {?} node
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,ref,node){parent.insertBefore(node,ref);}/**
     * @param {?} parent
     * @param {?} ref
     * @param {?} nodes
     * @return {?}
     */},{key:'insertAllBefore',value:function insertAllBefore(parent,ref,nodes){nodes.forEach(function(n){return parent.insertBefore(n,ref);});}/**
     * @param {?} parent
     * @param {?} ref
     * @param {?} node
     * @return {?}
     */},{key:'insertAfter',value:function insertAfter(parent,ref,node){parent.insertBefore(node,ref.nextSibling);}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setInnerHTML',value:function setInnerHTML(el,value){el.innerHTML=value;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getText',value:function getText(el){return el.textContent;}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setText',value:function setText(el,value){el.textContent=value;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getValue',value:function getValue(el){return el.value;}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(el,value){el.value=value;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getChecked',value:function getChecked(el){return el.checked;}/**
     * @param {?} el
     * @param {?} value
     * @return {?}
     */},{key:'setChecked',value:function setChecked(el,value){el.checked=value;}/**
     * @param {?} text
     * @return {?}
     */},{key:'createComment',value:function createComment(text){return document.createComment(text);}/**
     * @param {?} html
     * @return {?}
     */},{key:'createTemplate',value:function createTemplate(html){var/** @type {?} */t=document.createElement('template');t.innerHTML=html;return t;}/**
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElement',value:function createElement(tagName){var doc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:document;return doc.createElement(tagName);}/**
     * @param {?} ns
     * @param {?} tagName
     * @param {?=} doc
     * @return {?}
     */},{key:'createElementNS',value:function createElementNS(ns,tagName){var doc=arguments.length>2&&arguments[2]!==undefined?arguments[2]:document;return doc.createElementNS(ns,tagName);}/**
     * @param {?} text
     * @param {?=} doc
     * @return {?}
     */},{key:'createTextNode',value:function createTextNode(text){var doc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:document;return doc.createTextNode(text);}/**
     * @param {?} attrName
     * @param {?} attrValue
     * @param {?=} doc
     * @return {?}
     */},{key:'createScriptTag',value:function createScriptTag(attrName,attrValue){var doc=arguments.length>2&&arguments[2]!==undefined?arguments[2]:document;var/** @type {?} */el=doc.createElement('SCRIPT');el.setAttribute(attrName,attrValue);return el;}/**
     * @param {?} css
     * @param {?=} doc
     * @return {?}
     */},{key:'createStyleElement',value:function createStyleElement(css){var doc=arguments.length>1&&arguments[1]!==undefined?arguments[1]:document;var/** @type {?} */style$$1=doc.createElement('style');this.appendChild(style$$1,this.createTextNode(css));return style$$1;}/**
     * @param {?} el
     * @return {?}
     */},{key:'createShadowRoot',value:function createShadowRoot(el){return el.createShadowRoot();}/**
     * @param {?} el
     * @return {?}
     */},{key:'getShadowRoot',value:function getShadowRoot(el){return el.shadowRoot;}/**
     * @param {?} el
     * @return {?}
     */},{key:'getHost',value:function getHost(el){return el.host;}/**
     * @param {?} node
     * @return {?}
     */},{key:'clone',value:function clone(node){return node.cloneNode(true);}/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByClassName',value:function getElementsByClassName(element,name){return element.getElementsByClassName(name);}/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getElementsByTagName',value:function getElementsByTagName(element,name){return element.getElementsByTagName(name);}/**
     * @param {?} element
     * @return {?}
     */},{key:'classList',value:function classList(element){return Array.prototype.slice.call(element.classList,0);}/**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'addClass',value:function addClass(element,className){element.classList.add(className);}/**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'removeClass',value:function removeClass(element,className){element.classList.remove(className);}/**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */},{key:'hasClass',value:function hasClass(element,className){return element.classList.contains(className);}/**
     * @param {?} element
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setStyle',value:function setStyle(element,styleName,styleValue){element.style[styleName]=styleValue;}/**
     * @param {?} element
     * @param {?} stylename
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(element,stylename){// IE requires '' instead of null
// see https://github.com/angular/angular/issues/7916
element.style[stylename]='';}/**
     * @param {?} element
     * @param {?} stylename
     * @return {?}
     */},{key:'getStyle',value:function getStyle(element,stylename){return element.style[stylename];}/**
     * @param {?} element
     * @param {?} styleName
     * @param {?=} styleValue
     * @return {?}
     */},{key:'hasStyle',value:function hasStyle(element,styleName){var styleValue=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */value=this.getStyle(element,styleName)||'';return styleValue?value==styleValue:value.length>0;}/**
     * @param {?} element
     * @return {?}
     */},{key:'tagName',value:function tagName(element){return element.tagName;}/**
     * @param {?} element
     * @return {?}
     */},{key:'attributeMap',value:function attributeMap(element){var/** @type {?} */res=new Map();var/** @type {?} */elAttrs=element.attributes;for(var/** @type {?} */i=0;i<elAttrs.length;i++){var/** @type {?} */attrib=elAttrs[i];res.set(attrib.name,attrib.value);}return res;}/**
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttribute',value:function hasAttribute(element,attribute){return element.hasAttribute(attribute);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} attribute
     * @return {?}
     */},{key:'hasAttributeNS',value:function hasAttributeNS(element,ns,attribute){return element.hasAttributeNS(ns,attribute);}/**
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'getAttribute',value:function getAttribute(element,attribute){return element.getAttribute(attribute);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @return {?}
     */},{key:'getAttributeNS',value:function getAttributeNS(element,ns,name){return element.getAttributeNS(ns,name);}/**
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(element,name,value){element.setAttribute(name,value);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setAttributeNS',value:function setAttributeNS(element,ns,name,value){element.setAttributeNS(ns,name,value);}/**
     * @param {?} element
     * @param {?} attribute
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(element,attribute){element.removeAttribute(attribute);}/**
     * @param {?} element
     * @param {?} ns
     * @param {?} name
     * @return {?}
     */},{key:'removeAttributeNS',value:function removeAttributeNS(element,ns,name){element.removeAttributeNS(ns,name);}/**
     * @param {?} el
     * @return {?}
     */},{key:'templateAwareRoot',value:function templateAwareRoot(el){return this.isTemplateElement(el)?this.content(el):el;}/**
     * @return {?}
     */},{key:'createHtmlDocument',value:function createHtmlDocument(){return document.implementation.createHTMLDocument('fakeTitle');}/**
     * @param {?} el
     * @return {?}
     */},{key:'getBoundingClientRect',value:function getBoundingClientRect(el){try{return el.getBoundingClientRect();}catch(e){return{top:0,bottom:0,left:0,right:0,width:0,height:0};}}/**
     * @param {?} doc
     * @return {?}
     */},{key:'getTitle',value:function getTitle(doc){return document.title;}/**
     * @param {?} doc
     * @param {?} newTitle
     * @return {?}
     */},{key:'setTitle',value:function setTitle(doc,newTitle){document.title=newTitle||'';}/**
     * @param {?} n
     * @param {?} selector
     * @return {?}
     */},{key:'elementMatches',value:function elementMatches(n,selector){if(n instanceof HTMLElement){return n.matches&&n.matches(selector)||n.msMatchesSelector&&n.msMatchesSelector(selector)||n.webkitMatchesSelector&&n.webkitMatchesSelector(selector);}return false;}/**
     * @param {?} el
     * @return {?}
     */},{key:'isTemplateElement',value:function isTemplateElement(el){return el instanceof HTMLElement&&el.nodeName=='TEMPLATE';}/**
     * @param {?} node
     * @return {?}
     */},{key:'isTextNode',value:function isTextNode(node){return node.nodeType===Node.TEXT_NODE;}/**
     * @param {?} node
     * @return {?}
     */},{key:'isCommentNode',value:function isCommentNode(node){return node.nodeType===Node.COMMENT_NODE;}/**
     * @param {?} node
     * @return {?}
     */},{key:'isElementNode',value:function isElementNode(node){return node.nodeType===Node.ELEMENT_NODE;}/**
     * @param {?} node
     * @return {?}
     */},{key:'hasShadowRoot',value:function hasShadowRoot(node){return isPresent(node.shadowRoot)&&node instanceof HTMLElement;}/**
     * @param {?} node
     * @return {?}
     */},{key:'isShadowRoot',value:function isShadowRoot(node){return node instanceof DocumentFragment;}/**
     * @param {?} node
     * @return {?}
     */},{key:'importIntoDoc',value:function importIntoDoc(node){return document.importNode(this.templateAwareRoot(node),true);}/**
     * @param {?} node
     * @return {?}
     */},{key:'adoptNode',value:function adoptNode(node){return document.adoptNode(node);}/**
     * @param {?} el
     * @return {?}
     */},{key:'getHref',value:function getHref(el){return el.href;}/**
     * @param {?} event
     * @return {?}
     */},{key:'getEventKey',value:function getEventKey(event){var/** @type {?} */key=event.key;if(isBlank(key)){key=event.keyIdentifier;// keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and
// Safari cf
// http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces
if(isBlank(key)){return'Unidentified';}if(key.startsWith('U+')){key=String.fromCharCode(parseInt(key.substring(2),16));if(event.location===DOM_KEY_LOCATION_NUMPAD&&_chromeNumKeyPadMap.hasOwnProperty(key)){// There is a bug in Chrome for numeric keypad keys:
// https://code.google.com/p/chromium/issues/detail?id=155654
// 1, 2, 3 ... are reported as A, B, C ...
key=_chromeNumKeyPadMap[key];}}}return _keyMap[key]||key;}/**
     * @param {?} doc
     * @param {?} target
     * @return {?}
     */},{key:'getGlobalEventTarget',value:function getGlobalEventTarget(doc,target){if(target==='window'){return window;}if(target==='document'){return document;}if(target==='body'){return document.body;}}/**
     * @return {?}
     */},{key:'getHistory',value:function getHistory(){return window.history;}/**
     * @return {?}
     */},{key:'getLocation',value:function getLocation(){return window.location;}/**
     * @param {?} doc
     * @return {?}
     */},{key:'getBaseHref',value:function getBaseHref(doc){var/** @type {?} */href=getBaseElementHref();return isBlank(href)?null:relativePath(href);}/**
     * @return {?}
     */},{key:'resetBaseElement',value:function resetBaseElement(){baseElement=null;}/**
     * @return {?}
     */},{key:'getUserAgent',value:function getUserAgent(){return window.navigator.userAgent;}/**
     * @param {?} element
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setData',value:function setData(element,name,value){this.setAttribute(element,'data-'+name,value);}/**
     * @param {?} element
     * @param {?} name
     * @return {?}
     */},{key:'getData',value:function getData(element,name){return this.getAttribute(element,'data-'+name);}/**
     * @param {?} element
     * @return {?}
     */},{key:'getComputedStyle',value:function(_getComputedStyle){function getComputedStyle(_x4){return _getComputedStyle.apply(this,arguments);}getComputedStyle.toString=function(){return _getComputedStyle.toString();};return getComputedStyle;}(function(element){return getComputedStyle(element);})/**
     * @param {?} path
     * @param {?} value
     * @return {?}
     */},{key:'setGlobalVar',value:function setGlobalVar(path,value){setValueOnPath(global$1,path,value);}/**
     * @return {?}
     */},{key:'supportsWebAnimation',value:function supportsWebAnimation(){return typeof Element.prototype['animate']==='function';}/**
     * @return {?}
     */},{key:'performanceNow',value:function performanceNow(){// performance.now() is not available in all browsers, see
// http://caniuse.com/#search=performance.now
return window.performance&&window.performance.now?window.performance.now():new Date().getTime();}/**
     * @return {?}
     */},{key:'supportsCookies',value:function supportsCookies(){return true;}/**
     * @param {?} name
     * @return {?}
     */},{key:'getCookie',value:function getCookie(name){return parseCookieValue(document.cookie,name);}/**
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setCookie',value:function setCookie(name,value){// document.cookie is magical, assigning into it assigns/overrides one cookie value, but does
// not clear other cookies.
document.cookie=encodeURIComponent(name)+'='+encodeURIComponent(value);}},{key:'attrToPropMap',get:function get(){return _attrToPropMap;}}],[{key:'makeCurrent',value:function makeCurrent(){setRootDomAdapter(new BrowserDomAdapter());}}]);return BrowserDomAdapter;}(GenericBrowserDomAdapter);var baseElement=null;/**
 * @return {?}
 */function getBaseElementHref(){if(!baseElement){baseElement=document.querySelector('base');if(!baseElement){return null;}}return baseElement.getAttribute('href');}// based on urlUtils.js in AngularJS 1
var urlParsingNode=void 0;/**
 * @param {?} url
 * @return {?}
 */function relativePath(url){if(!urlParsingNode){urlParsingNode=document.createElement('a');}urlParsingNode.setAttribute('href',url);return urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname;}/**
 * @param {?} cookieStr
 * @param {?} name
 * @return {?}
 */function parseCookieValue(cookieStr,name){name=encodeURIComponent(name);var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=cookieStr.split(';')[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var cookie=_step.value;var/** @type {?} */eqIndex=cookie.indexOf('=');var _ref=eqIndex==-1?[cookie,'']:[cookie.slice(0,eqIndex),cookie.slice(eqIndex+1)],_ref2=_slicedToArray(_ref,2),cookieName=_ref2[0],cookieValue=_ref2[1];if(cookieName.trim()===name){return decodeURIComponent(cookieValue);}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return null;}/**
 * A DI Token representing the main rendering context. In a browser this is the DOM Document.
 *
 * Note: Document might not be available in the Application Context when Application and Rendering
 * Contexts are not the same (e.g. when running the application into a Web Worker).
 *
 * @stable
 */var DOCUMENT=new InjectionToken('DocumentToken');/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 * @return {?}
 */function supportsState(){return!!window.history.pushState;}/**
 * `PlatformLocation` encapsulates all of the direct calls to platform APIs.
 * This class should not be used directly by an application developer. Instead, use
 * {\@link Location}.
 */var BrowserPlatformLocation=function(_PlatformLocation){_inherits(BrowserPlatformLocation,_PlatformLocation);/**
     * @param {?} _doc
     */function BrowserPlatformLocation(_doc){_classCallCheck(this,BrowserPlatformLocation);var _this6=_possibleConstructorReturn(this,(BrowserPlatformLocation.__proto__||Object.getPrototypeOf(BrowserPlatformLocation)).call(this));_this6._doc=_doc;_this6._init();return _this6;}/**
     * \@internal
     * @return {?}
     */_createClass(BrowserPlatformLocation,[{key:'_init',value:function _init(){this._location=getDOM().getLocation();this._history=getDOM().getHistory();}/**
     * @return {?}
     */},{key:'getBaseHrefFromDOM',/**
     * @return {?}
     */value:function getBaseHrefFromDOM(){return getDOM().getBaseHref(this._doc);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onPopState',value:function onPopState(fn){getDOM().getGlobalEventTarget(this._doc,'window').addEventListener('popstate',fn,false);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'onHashChange',value:function onHashChange(fn){getDOM().getGlobalEventTarget(this._doc,'window').addEventListener('hashchange',fn,false);}/**
     * @return {?}
     */},{key:'pushState',/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */value:function pushState(state$$1,title,url){if(supportsState()){this._history.pushState(state$$1,title,url);}else{this._location.hash=url;}}/**
     * @param {?} state
     * @param {?} title
     * @param {?} url
     * @return {?}
     */},{key:'replaceState',value:function replaceState(state$$1,title,url){if(supportsState()){this._history.replaceState(state$$1,title,url);}else{this._location.hash=url;}}/**
     * @return {?}
     */},{key:'forward',value:function forward(){this._history.forward();}/**
     * @return {?}
     */},{key:'back',value:function back(){this._history.back();}},{key:'location',get:function get(){return this._location;}},{key:'pathname',get:function get(){return this._location.pathname;}/**
     * @return {?}
     */,/**
     * @param {?} newPath
     * @return {?}
     */set:function set(newPath){this._location.pathname=newPath;}},{key:'search',get:function get(){return this._location.search;}/**
     * @return {?}
     */},{key:'hash',get:function get(){return this._location.hash;}}]);return BrowserPlatformLocation;}(PlatformLocation);BrowserPlatformLocation.decorators=[{type:Injectable}];/** @nocollapse */BrowserPlatformLocation.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]}];};/**
 * A service that can be used to get and add meta tags.
 *
 * \@experimental
 */var Meta=function(){/**
     * @param {?} _doc
     */function Meta(_doc){_classCallCheck(this,Meta);this._doc=_doc;this._dom=getDOM();}/**
     * @param {?} tag
     * @param {?=} forceCreation
     * @return {?}
     */_createClass(Meta,[{key:'addTag',value:function addTag(tag){var forceCreation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!tag)return null;return this._getOrCreateElement(tag,forceCreation);}/**
     * @param {?} tags
     * @param {?=} forceCreation
     * @return {?}
     */},{key:'addTags',value:function addTags(tags){var _this7=this;var forceCreation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!tags)return[];return tags.reduce(function(result,tag){if(tag){result.push(_this7._getOrCreateElement(tag,forceCreation));}return result;},[]);}/**
     * @param {?} attrSelector
     * @return {?}
     */},{key:'getTag',value:function getTag(attrSelector){if(!attrSelector)return null;return this._dom.querySelector(this._doc,'meta['+attrSelector+']');}/**
     * @param {?} attrSelector
     * @return {?}
     */},{key:'getTags',value:function getTags(attrSelector){if(!attrSelector)return[];var/** @type {?} */list/*NodeList*/=this._dom.querySelectorAll(this._doc,'meta['+attrSelector+']');return list?[].slice.call(list):[];}/**
     * @param {?} tag
     * @param {?=} selector
     * @return {?}
     */},{key:'updateTag',value:function updateTag(tag,selector){if(!tag)return null;selector=selector||this._parseSelector(tag);var/** @type {?} */meta=this.getTag(selector);if(meta){return this._setMetaElementAttributes(tag,meta);}return this._getOrCreateElement(tag,true);}/**
     * @param {?} attrSelector
     * @return {?}
     */},{key:'removeTag',value:function removeTag(attrSelector){this.removeTagElement(this.getTag(attrSelector));}/**
     * @param {?} meta
     * @return {?}
     */},{key:'removeTagElement',value:function removeTagElement(meta){if(meta){this._dom.remove(meta);}}/**
     * @param {?} meta
     * @param {?=} forceCreation
     * @return {?}
     */},{key:'_getOrCreateElement',value:function _getOrCreateElement(meta){var forceCreation=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!forceCreation){var/** @type {?} */selector=this._parseSelector(meta);var/** @type {?} */elem=this.getTag(selector);// It's allowed to have multiple elements with the same name so it's not enough to
// just check that element with the same name already present on the page. We also need to
// check if element has tag attributes
if(elem&&this._containsAttributes(meta,elem))return elem;}var/** @type {?} */element=this._dom.createElement('meta');this._setMetaElementAttributes(meta,element);var/** @type {?} */head=this._dom.getElementsByTagName(this._doc,'head')[0];this._dom.appendChild(head,element);return element;}/**
     * @param {?} tag
     * @param {?} el
     * @return {?}
     */},{key:'_setMetaElementAttributes',value:function _setMetaElementAttributes(tag,el){var _this8=this;Object.keys(tag).forEach(function(prop){return _this8._dom.setAttribute(el,prop,tag[prop]);});return el;}/**
     * @param {?} tag
     * @return {?}
     */},{key:'_parseSelector',value:function _parseSelector(tag){var/** @type {?} */attr=tag.name?'name':'property';return attr+'="'+tag[attr]+'"';}/**
     * @param {?} tag
     * @param {?} elem
     * @return {?}
     */},{key:'_containsAttributes',value:function _containsAttributes(tag,elem){var _this9=this;return Object.keys(tag).every(function(key){return _this9._dom.getAttribute(elem,key)===tag[key];});}}]);return Meta;}();Meta.decorators=[{type:Injectable}];/** @nocollapse */Meta.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]}];};/**
 * An id that identifies a particular application being bootstrapped, that should
 * match across the client/server boundary.
 */var TRANSITION_ID=new InjectionToken('TRANSITION_ID');/**
 * @param {?} transitionId
 * @param {?} document
 * @return {?}
 */function bootstrapListenerFactory(transitionId,document){var/** @type {?} */factory=function factory(){var/** @type {?} */dom=getDOM();var/** @type {?} */styles=Array.prototype.slice.apply(dom.querySelectorAll(document,'style[ng-transition]'));styles.filter(function(el){return dom.getAttribute(el,'ng-transition')===transitionId;}).forEach(function(el){return dom.remove(el);});};return factory;}var SERVER_TRANSITION_PROVIDERS=[{provide:APP_INITIALIZER,useFactory:bootstrapListenerFactory,deps:[TRANSITION_ID,DOCUMENT],multi:true}];var BrowserGetTestability=function(){function BrowserGetTestability(){_classCallCheck(this,BrowserGetTestability);}_createClass(BrowserGetTestability,[{key:'addToWindow',/**
     * @param {?} registry
     * @return {?}
     */value:function addToWindow(registry){global$1.getAngularTestability=function(elem){var findInAncestors=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var/** @type {?} */testability=registry.findTestabilityInTree(elem,findInAncestors);if(testability==null){throw new Error('Could not find testability for element.');}return testability;};global$1.getAllAngularTestabilities=function(){return registry.getAllTestabilities();};global$1.getAllAngularRootElements=function(){return registry.getAllRootElements();};var/** @type {?} */whenAllStable=function whenAllStable(callback/** TODO #9100 */){var/** @type {?} */testabilities=global$1.getAllAngularTestabilities();var/** @type {?} */count=testabilities.length;var/** @type {?} */didWork=false;var/** @type {?} */decrement=function decrement(didWork_/** TODO #9100 */){didWork=didWork||didWork_;count--;if(count==0){callback(didWork);}};testabilities.forEach(function(testability/** TODO #9100 */){testability.whenStable(decrement);});};if(!global$1['frameworkStabilizers']){global$1['frameworkStabilizers']=[];}global$1['frameworkStabilizers'].push(whenAllStable);}/**
     * @param {?} registry
     * @param {?} elem
     * @param {?} findInAncestors
     * @return {?}
     */},{key:'findTestabilityInTree',value:function findTestabilityInTree(registry,elem,findInAncestors){if(elem==null){return null;}var/** @type {?} */t=registry.getTestability(elem);if(isPresent(t)){return t;}else if(!findInAncestors){return null;}if(getDOM().isShadowRoot(elem)){return this.findTestabilityInTree(registry,getDOM().getHost(elem),true);}return this.findTestabilityInTree(registry,getDOM().parentElement(elem),true);}}],[{key:'init',/**
     * @return {?}
     */value:function init(){setTestabilityGetter(new BrowserGetTestability());}}]);return BrowserGetTestability;}();/**
 * A service that can be used to get and set the title of a current HTML document.
 *
 * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)
 * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements
 * (representing the `<title>` tag). Instead, this service can be used to set and get the current
 * title value.
 *
 * \@experimental
 */var Title=function(){/**
     * @param {?} _doc
     */function Title(_doc){_classCallCheck(this,Title);this._doc=_doc;}/**
     * Get the title of the current HTML document.
     * @return {?}
     */_createClass(Title,[{key:'getTitle',value:function getTitle(){return getDOM().getTitle(this._doc);}/**
     * Set the title of the current HTML document.
     * @param {?} newTitle
     * @return {?}
     */},{key:'setTitle',value:function setTitle(newTitle){getDOM().setTitle(this._doc,newTitle);}}]);return Title;}();Title.decorators=[{type:Injectable}];/** @nocollapse */Title.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]}];};/**
 * Wraps Javascript Objects
 */var StringMapWrapper=function(){function StringMapWrapper(){_classCallCheck(this,StringMapWrapper);}_createClass(StringMapWrapper,null,[{key:'merge',/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */value:function merge(m1,m2){var/** @type {?} */m={};var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(m1)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var k=_step2.value;m[k]=m1[k];}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=Object.keys(m2)[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var _k=_step3.value;m[_k]=m2[_k];}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return m;}/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */},{key:'equals',value:function equals(m1,m2){var/** @type {?} */k1=Object.keys(m1);var/** @type {?} */k2=Object.keys(m2);if(k1.length!=k2.length){return false;}for(var/** @type {?} */i=0;i<k1.length;i++){var/** @type {?} */key=k1[i];if(m1[key]!==m2[key]){return false;}}return true;}}]);return StringMapWrapper;}();/**
 * @stable
 */var EVENT_MANAGER_PLUGINS=new InjectionToken('EventManagerPlugins');/**
 * \@stable
 */var EventManager=function(){/**
     * @param {?} plugins
     * @param {?} _zone
     */function EventManager(plugins,_zone){var _this10=this;_classCallCheck(this,EventManager);this._zone=_zone;this._eventNameToPlugin=new Map();plugins.forEach(function(p){return p.manager=_this10;});this._plugins=plugins.slice().reverse();}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */_createClass(EventManager,[{key:'addEventListener',value:function addEventListener(element,eventName,handler){var/** @type {?} */plugin=this._findPluginFor(eventName);return plugin.addEventListener(element,eventName,handler);}/**
     * @param {?} target
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addGlobalEventListener',value:function addGlobalEventListener(target,eventName,handler){var/** @type {?} */plugin=this._findPluginFor(eventName);return plugin.addGlobalEventListener(target,eventName,handler);}/**
     * @return {?}
     */},{key:'getZone',value:function getZone(){return this._zone;}/**
     * \@internal
     * @param {?} eventName
     * @return {?}
     */},{key:'_findPluginFor',value:function _findPluginFor(eventName){var/** @type {?} */plugin=this._eventNameToPlugin.get(eventName);if(plugin){return plugin;}var/** @type {?} */plugins=this._plugins;for(var/** @type {?} */i=0;i<plugins.length;i++){var/** @type {?} */_plugin=plugins[i];if(_plugin.supports(eventName)){this._eventNameToPlugin.set(eventName,_plugin);return _plugin;}}throw new Error('No event manager plugin found for event '+eventName);}}]);return EventManager;}();EventManager.decorators=[{type:Injectable}];/** @nocollapse */EventManager.ctorParameters=function(){return[{type:Array,decorators:[{type:Inject,args:[EVENT_MANAGER_PLUGINS]}]},{type:NgZone}];};/**
 * @abstract
 */var EventManagerPlugin=function(){/**
     * @param {?} _doc
     */function EventManagerPlugin(_doc){_classCallCheck(this,EventManagerPlugin);this._doc=_doc;}/**
     * @abstract
     * @param {?} eventName
     * @return {?}
     */_createClass(EventManagerPlugin,[{key:'supports',value:function supports(eventName){}/**
     * @abstract
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addGlobalEventListener',value:function addGlobalEventListener(element,eventName,handler){var/** @type {?} */target=getDOM().getGlobalEventTarget(this._doc,element);if(!target){throw new Error('Unsupported event target '+target+' for event '+eventName);}return this.addEventListener(target,eventName,handler);}}]);return EventManagerPlugin;}();var SharedStylesHost=function(){function SharedStylesHost(){_classCallCheck(this,SharedStylesHost);/** @internal */this._stylesSet=new Set();}/**
     * @param {?} styles
     * @return {?}
     */_createClass(SharedStylesHost,[{key:'addStyles',value:function addStyles(styles){var _this11=this;var/** @type {?} */additions=new Set();styles.forEach(function(style$$1){if(!_this11._stylesSet.has(style$$1)){_this11._stylesSet.add(style$$1);additions.add(style$$1);}});this.onStylesAdded(additions);}/**
     * @param {?} additions
     * @return {?}
     */},{key:'onStylesAdded',value:function onStylesAdded(additions){}/**
     * @return {?}
     */},{key:'getAllStyles',value:function getAllStyles(){return Array.from(this._stylesSet);}}]);return SharedStylesHost;}();SharedStylesHost.decorators=[{type:Injectable}];/** @nocollapse */SharedStylesHost.ctorParameters=function(){return[];};var DomSharedStylesHost=function(_SharedStylesHost){_inherits(DomSharedStylesHost,_SharedStylesHost);/**
     * @param {?} _doc
     */function DomSharedStylesHost(_doc){_classCallCheck(this,DomSharedStylesHost);var _this12=_possibleConstructorReturn(this,(DomSharedStylesHost.__proto__||Object.getPrototypeOf(DomSharedStylesHost)).call(this));_this12._doc=_doc;_this12._hostNodes=new Set();_this12._styleNodes=new Set();_this12._hostNodes.add(_doc.head);return _this12;}/**
     * @param {?} styles
     * @param {?} host
     * @return {?}
     */_createClass(DomSharedStylesHost,[{key:'_addStylesToHost',value:function _addStylesToHost(styles,host){var _this13=this;styles.forEach(function(style$$1){var/** @type {?} */styleEl=_this13._doc.createElement('style');styleEl.textContent=style$$1;_this13._styleNodes.add(host.appendChild(styleEl));});}/**
     * @param {?} hostNode
     * @return {?}
     */},{key:'addHost',value:function addHost(hostNode){this._addStylesToHost(this._stylesSet,hostNode);this._hostNodes.add(hostNode);}/**
     * @param {?} hostNode
     * @return {?}
     */},{key:'removeHost',value:function removeHost(hostNode){this._hostNodes.delete(hostNode);}/**
     * @param {?} additions
     * @return {?}
     */},{key:'onStylesAdded',value:function onStylesAdded(additions){var _this14=this;this._hostNodes.forEach(function(hostNode){return _this14._addStylesToHost(additions,hostNode);});}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this._styleNodes.forEach(function(styleNode){return getDOM().remove(styleNode);});}}]);return DomSharedStylesHost;}(SharedStylesHost);DomSharedStylesHost.decorators=[{type:Injectable}];/** @nocollapse */DomSharedStylesHost.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]}];};var NAMESPACE_URIS={'xlink':'http://www.w3.org/1999/xlink','svg':'http://www.w3.org/2000/svg','xhtml':'http://www.w3.org/1999/xhtml','xml':'http://www.w3.org/XML/1998/namespace'};var TEMPLATE_COMMENT_TEXT='template bindings={}';var TEMPLATE_BINDINGS_EXP=/^template bindings=(.*)$/;/**
 * @abstract
 */var DomRootRenderer=function(){/**
     * @param {?} document
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     * @param {?} animationDriver
     * @param {?} appId
     */function DomRootRenderer(document,eventManager,sharedStylesHost,animationDriver,appId){_classCallCheck(this,DomRootRenderer);this.document=document;this.eventManager=eventManager;this.sharedStylesHost=sharedStylesHost;this.animationDriver=animationDriver;this.appId=appId;this.registeredComponents=new Map();}/**
     * @param {?} componentProto
     * @return {?}
     */_createClass(DomRootRenderer,[{key:'renderComponent',value:function renderComponent(componentProto){var/** @type {?} */renderer=this.registeredComponents.get(componentProto.id);if(!renderer){renderer=new DomRenderer(this,componentProto,this.animationDriver,this.appId+'-'+componentProto.id);this.registeredComponents.set(componentProto.id,renderer);}return renderer;}}]);return DomRootRenderer;}();var DomRootRenderer_=function(_DomRootRenderer){_inherits(DomRootRenderer_,_DomRootRenderer);/**
     * @param {?} _document
     * @param {?} _eventManager
     * @param {?} sharedStylesHost
     * @param {?} animationDriver
     * @param {?} appId
     */function DomRootRenderer_(_document,_eventManager,sharedStylesHost,animationDriver,appId){_classCallCheck(this,DomRootRenderer_);var _this15=_possibleConstructorReturn(this,(DomRootRenderer_.__proto__||Object.getPrototypeOf(DomRootRenderer_)).call(this,_document,_eventManager,sharedStylesHost,animationDriver,appId));throw new Error('RootRenderer is no longer supported. Please use the `RendererFactoryV2` instead!');return _this15;}return DomRootRenderer_;}(DomRootRenderer);DomRootRenderer_.decorators=[{type:Injectable}];/** @nocollapse */DomRootRenderer_.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]},{type:EventManager},{type:DomSharedStylesHost},{type:AnimationDriver},{type:undefined,decorators:[{type:Inject,args:[APP_ID]}]}];};var DIRECT_DOM_RENDERER={/**
     * @param {?} node
     * @return {?}
     */remove:function remove(node){if(node.parentNode){node.parentNode.removeChild(node);}},/**
     * @param {?} node
     * @param {?} parent
     * @return {?}
     */appendChild:function appendChild(node,parent){parent.appendChild(node);},/**
     * @param {?} node
     * @param {?} refNode
     * @return {?}
     */insertBefore:function insertBefore(node,refNode){refNode.parentNode.insertBefore(node,refNode);},/**
     * @param {?} node
     * @return {?}
     */nextSibling:function nextSibling(node){return node.nextSibling;},/**
     * @param {?} node
     * @return {?}
     */parentElement:function parentElement(node){return node.parentNode;}};var DomRenderer=function(){/**
     * @param {?} _rootRenderer
     * @param {?} componentProto
     * @param {?} _animationDriver
     * @param {?} styleShimId
     */function DomRenderer(_rootRenderer,componentProto,_animationDriver,styleShimId){_classCallCheck(this,DomRenderer);this._rootRenderer=_rootRenderer;this.componentProto=componentProto;this._animationDriver=_animationDriver;this.directRenderer=DIRECT_DOM_RENDERER;this._styles=flattenStyles(styleShimId,componentProto.styles,[]);if(componentProto.encapsulation!==ViewEncapsulation.Native){this._rootRenderer.sharedStylesHost.addStyles(this._styles);}if(this.componentProto.encapsulation===ViewEncapsulation.Emulated){this._contentAttr=shimContentAttribute(styleShimId);this._hostAttr=shimHostAttribute(styleShimId);}else{this._contentAttr=null;this._hostAttr=null;}}/**
     * @param {?} selectorOrNode
     * @param {?} debugInfo
     * @return {?}
     */_createClass(DomRenderer,[{key:'selectRootElement',value:function selectRootElement(selectorOrNode,debugInfo){var/** @type {?} */el=void 0;if(typeof selectorOrNode==='string'){el=this._rootRenderer.document.querySelector(selectorOrNode);if(!el){throw new Error('The selector "'+selectorOrNode+'" did not match any elements');}}else{el=selectorOrNode;}while(el.firstChild){el.removeChild(el.firstChild);}return el;}/**
     * @param {?} parent
     * @param {?} name
     * @param {?} debugInfo
     * @return {?}
     */},{key:'createElement',value:function createElement(parent,name,debugInfo){var/** @type {?} */el=void 0;if(isNamespaced(name)){var/** @type {?} */nsAndName=splitNamespace(name);el=document.createElementNS(NAMESPACE_URIS[nsAndName[0]],nsAndName[1]);}else{el=document.createElement(name);}if(this._contentAttr){el.setAttribute(this._contentAttr,'');}if(parent){parent.appendChild(el);}return el;}/**
     * @param {?} hostElement
     * @return {?}
     */},{key:'createViewRoot',value:function createViewRoot(hostElement){var/** @type {?} */nodesParent=void 0;if(this.componentProto.encapsulation===ViewEncapsulation.Native){nodesParent=hostElement.createShadowRoot();this._rootRenderer.sharedStylesHost.addHost(nodesParent);for(var/** @type {?} */i=0;i<this._styles.length;i++){var/** @type {?} */styleEl=document.createElement('style');styleEl.textContent=this._styles[i];nodesParent.appendChild(styleEl);}}else{if(this._hostAttr){hostElement.setAttribute(this._hostAttr,'');}nodesParent=hostElement;}return nodesParent;}/**
     * @param {?} parentElement
     * @param {?} debugInfo
     * @return {?}
     */},{key:'createTemplateAnchor',value:function createTemplateAnchor(parentElement,debugInfo){var/** @type {?} */comment=document.createComment(TEMPLATE_COMMENT_TEXT);if(parentElement){parentElement.appendChild(comment);}return comment;}/**
     * @param {?} parentElement
     * @param {?} value
     * @param {?} debugInfo
     * @return {?}
     */},{key:'createText',value:function createText(parentElement,value,debugInfo){var/** @type {?} */node=document.createTextNode(value);if(parentElement){parentElement.appendChild(node);}return node;}/**
     * @param {?} parentElement
     * @param {?} nodes
     * @return {?}
     */},{key:'projectNodes',value:function projectNodes(parentElement,nodes){if(!parentElement)return;appendNodes(parentElement,nodes);}/**
     * @param {?} node
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'attachViewAfter',value:function attachViewAfter(node,viewRootNodes){moveNodesAfterSibling(node,viewRootNodes);}/**
     * @param {?} viewRootNodes
     * @return {?}
     */},{key:'detachView',value:function detachView(viewRootNodes){for(var/** @type {?} */i=0;i<viewRootNodes.length;i++){var/** @type {?} */node=viewRootNodes[i];if(node.parentNode){node.parentNode.removeChild(node);}}}/**
     * @param {?} hostElement
     * @param {?} viewAllNodes
     * @return {?}
     */},{key:'destroyView',value:function destroyView(hostElement,viewAllNodes){if(this.componentProto.encapsulation===ViewEncapsulation.Native&&hostElement){this._rootRenderer.sharedStylesHost.removeHost(hostElement.shadowRoot);}}/**
     * @param {?} renderElement
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(renderElement,name,callback){return this._rootRenderer.eventManager.addEventListener(renderElement,name,decoratePreventDefault(callback));}/**
     * @param {?} target
     * @param {?} name
     * @param {?} callback
     * @return {?}
     */},{key:'listenGlobal',value:function listenGlobal(target,name,callback){return this._rootRenderer.eventManager.addGlobalEventListener(target,name,decoratePreventDefault(callback));}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setElementProperty',value:function setElementProperty(renderElement,propertyName,propertyValue){renderElement[propertyName]=propertyValue;}/**
     * @param {?} renderElement
     * @param {?} attributeName
     * @param {?} attributeValue
     * @return {?}
     */},{key:'setElementAttribute',value:function setElementAttribute(renderElement,attributeName,attributeValue){var/** @type {?} */attrNs=void 0;var/** @type {?} */attrNameWithoutNs=attributeName;if(isNamespaced(attributeName)){var/** @type {?} */nsAndName=splitNamespace(attributeName);attrNameWithoutNs=nsAndName[1];attributeName=nsAndName[0]+':'+nsAndName[1];attrNs=NAMESPACE_URIS[nsAndName[0]];}if(isPresent(attributeValue)){if(attrNs){renderElement.setAttributeNS(attrNs,attributeName,attributeValue);}else{renderElement.setAttribute(attributeName,attributeValue);}}else{if(isPresent(attrNs)){renderElement.removeAttributeNS(attrNs,attrNameWithoutNs);}else{renderElement.removeAttribute(attributeName);}}}/**
     * @param {?} renderElement
     * @param {?} propertyName
     * @param {?} propertyValue
     * @return {?}
     */},{key:'setBindingDebugInfo',value:function setBindingDebugInfo(renderElement,propertyName,propertyValue){if(renderElement.nodeType===Node.COMMENT_NODE){var/** @type {?} */existingBindings=renderElement.nodeValue.replace(/\n/g,'').match(TEMPLATE_BINDINGS_EXP);var/** @type {?} */parsedBindings=JSON.parse(existingBindings[1]);parsedBindings[propertyName]=propertyValue;renderElement.nodeValue=TEMPLATE_COMMENT_TEXT.replace('{}',JSON.stringify(parsedBindings,null,2));}else{// Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers
propertyName=propertyName.replace(/\$/g,'_');this.setElementAttribute(renderElement,propertyName,propertyValue);}}/**
     * @param {?} renderElement
     * @param {?} className
     * @param {?} isAdd
     * @return {?}
     */},{key:'setElementClass',value:function setElementClass(renderElement,className,isAdd){if(isAdd){renderElement.classList.add(className);}else{renderElement.classList.remove(className);}}/**
     * @param {?} renderElement
     * @param {?} styleName
     * @param {?} styleValue
     * @return {?}
     */},{key:'setElementStyle',value:function setElementStyle(renderElement,styleName,styleValue){if(isPresent(styleValue)){renderElement.style[styleName]=stringify(styleValue);}else{// IE requires '' instead of null
// see https://github.com/angular/angular/issues/7916
renderElement.style[styleName]='';}}/**
     * @param {?} renderElement
     * @param {?} methodName
     * @param {?} args
     * @return {?}
     */},{key:'invokeElementMethod',value:function invokeElementMethod(renderElement,methodName,args){renderElement[methodName].apply(renderElement,args);}/**
     * @param {?} renderNode
     * @param {?} text
     * @return {?}
     */},{key:'setText',value:function setText(renderNode,text){renderNode.nodeValue=text;}/**
     * @param {?} element
     * @param {?} startingStyles
     * @param {?} keyframes
     * @param {?} duration
     * @param {?} delay
     * @param {?} easing
     * @param {?=} previousPlayers
     * @return {?}
     */},{key:'animate',value:function animate$$1(element,startingStyles,keyframes$$1,duration,delay,easing){var previousPlayers=arguments.length>6&&arguments[6]!==undefined?arguments[6]:[];if(this._rootRenderer.document.body.contains(element)){return this._animationDriver.animate(element,startingStyles,keyframes$$1,duration,delay,easing,previousPlayers);}return new NoOpAnimationPlayer();}}]);return DomRenderer;}();/**
 * @param {?} sibling
 * @param {?} nodes
 * @return {?}
 */function moveNodesAfterSibling(sibling,nodes){var/** @type {?} */parent=sibling.parentNode;if(nodes.length>0&&parent){var/** @type {?} */nextSibling=sibling.nextSibling;if(nextSibling){for(var/** @type {?} */i=0;i<nodes.length;i++){parent.insertBefore(nodes[i],nextSibling);}}else{for(var/** @type {?} */_i=0;_i<nodes.length;_i++){parent.appendChild(nodes[_i]);}}}}/**
 * @param {?} parent
 * @param {?} nodes
 * @return {?}
 */function appendNodes(parent,nodes){for(var/** @type {?} */i=0;i<nodes.length;i++){parent.appendChild(nodes[i]);}}/**
 * @param {?} eventHandler
 * @return {?}
 */function decoratePreventDefault(eventHandler){return function(event){var/** @type {?} */allowDefaultBehavior=eventHandler(event);if(allowDefaultBehavior===false){// TODO(tbosch): move preventDefault into event plugins...
event.preventDefault();event.returnValue=false;}};}var COMPONENT_REGEX=/%COMP%/g;var COMPONENT_VARIABLE='%COMP%';var HOST_ATTR='_nghost-'+COMPONENT_VARIABLE;var CONTENT_ATTR='_ngcontent-'+COMPONENT_VARIABLE;/**
 * @param {?} componentShortId
 * @return {?}
 */function shimContentAttribute(componentShortId){return CONTENT_ATTR.replace(COMPONENT_REGEX,componentShortId);}/**
 * @param {?} componentShortId
 * @return {?}
 */function shimHostAttribute(componentShortId){return HOST_ATTR.replace(COMPONENT_REGEX,componentShortId);}/**
 * @param {?} compId
 * @param {?} styles
 * @param {?} target
 * @return {?}
 */function flattenStyles(compId,styles,target){for(var/** @type {?} */i=0;i<styles.length;i++){var/** @type {?} */style$$1=styles[i];if(Array.isArray(style$$1)){flattenStyles(compId,style$$1,target);}else{style$$1=style$$1.replace(COMPONENT_REGEX,compId);target.push(style$$1);}}return target;}var NS_PREFIX_RE=/^:([^:]+):(.+)$/;/**
 * @param {?} name
 * @return {?}
 */function isNamespaced(name){return name[0]===':';}/**
 * @param {?} name
 * @return {?}
 */function splitNamespace(name){var/** @type {?} */match=name.match(NS_PREFIX_RE);return[match[1],match[2]];}var DomRendererFactoryV2=function(){/**
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     */function DomRendererFactoryV2(eventManager,sharedStylesHost){_classCallCheck(this,DomRendererFactoryV2);this.eventManager=eventManager;this.sharedStylesHost=sharedStylesHost;this.rendererByCompId=new Map();this.defaultRenderer=new DefaultDomRendererV2(eventManager);}_createClass(DomRendererFactoryV2,[{key:'createRenderer',/**
     * @param {?} element
     * @param {?} type
     * @return {?}
     */value:function createRenderer(element,type){if(!element||!type){return this.defaultRenderer;}switch(type.encapsulation){case ViewEncapsulation.Emulated:{var/** @type {?} */renderer=this.rendererByCompId.get(type.id);if(!renderer){renderer=new EmulatedEncapsulationDomRendererV2(this.eventManager,this.sharedStylesHost,type);this.rendererByCompId.set(type.id,renderer);}renderer.applyToHost(element);return renderer;}case ViewEncapsulation.Native:return new ShadowDomRenderer(this.eventManager,this.sharedStylesHost,element,type);default:{if(!this.rendererByCompId.has(type.id)){var/** @type {?} */styles=flattenStyles(type.id,type.styles,[]);this.sharedStylesHost.addStyles(styles);this.rendererByCompId.set(type.id,this.defaultRenderer);}return this.defaultRenderer;}}}}]);return DomRendererFactoryV2;}();DomRendererFactoryV2.decorators=[{type:Injectable}];/** @nocollapse */DomRendererFactoryV2.ctorParameters=function(){return[{type:EventManager},{type:DomSharedStylesHost}];};var DefaultDomRendererV2=function(){/**
     * @param {?} eventManager
     */function DefaultDomRendererV2(eventManager){_classCallCheck(this,DefaultDomRendererV2);this.eventManager=eventManager;this.data=Object.create(null);}/**
     * @return {?}
     */_createClass(DefaultDomRendererV2,[{key:'destroy',value:function destroy(){}/**
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'createElement',value:function createElement(name,namespace){if(namespace){return document.createElementNS(NAMESPACE_URIS[namespace],name);}return document.createElement(name);}/**
     * @param {?} value
     * @return {?}
     */},{key:'createComment',value:function createComment(value){return document.createComment(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'createText',value:function createText(value){return document.createTextNode(value);}/**
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){parent.appendChild(newChild);}/**
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){if(parent){parent.insertBefore(newChild,refChild);}}/**
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){if(parent){parent.removeChild(oldChild);}}/**
     * @param {?} selectorOrNode
     * @return {?}
     */},{key:'selectRootElement',value:function selectRootElement(selectorOrNode){var/** @type {?} */el=typeof selectorOrNode==='string'?document.querySelector(selectorOrNode):selectorOrNode;if(!el){throw new Error('The selector "'+selectorOrNode+'" did not match any elements');}el.textContent='';return el;}/**
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){return node.parentNode;}/**
     * @param {?} node
     * @return {?}
     */},{key:'nextSibling',value:function nextSibling(node){return node.nextSibling;}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @param {?=} namespace
     * @return {?}
     */},{key:'setAttribute',value:function setAttribute(el,name,value,namespace){if(namespace){el.setAttributeNS(NAMESPACE_URIS[namespace],namespace+':'+name,value);}else{el.setAttribute(name,value);}}/**
     * @param {?} el
     * @param {?} name
     * @param {?=} namespace
     * @return {?}
     */},{key:'removeAttribute',value:function removeAttribute(el,name,namespace){if(namespace){el.removeAttributeNS(NAMESPACE_URIS[namespace],name);}else{el.removeAttribute(name);}}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'addClass',value:function addClass(el,name){el.classList.add(name);}/**
     * @param {?} el
     * @param {?} name
     * @return {?}
     */},{key:'removeClass',value:function removeClass(el,name){el.classList.remove(name);}/**
     * @param {?} el
     * @param {?} style
     * @param {?} value
     * @param {?} hasVendorPrefix
     * @param {?} hasImportant
     * @return {?}
     */},{key:'setStyle',value:function setStyle(el,style$$1,value,hasVendorPrefix,hasImportant){if(hasVendorPrefix||hasImportant){el.style.setProperty(style$$1,value,hasImportant?'important':'');}else{el.style[style$$1]=value;}}/**
     * @param {?} el
     * @param {?} style
     * @param {?} hasVendorPrefix
     * @return {?}
     */},{key:'removeStyle',value:function removeStyle(el,style$$1,hasVendorPrefix){if(hasVendorPrefix){el.style.removeProperty(style$$1);}else{// IE requires '' instead of null
// see https://github.com/angular/angular/issues/7916
el.style[style$$1]='';}}/**
     * @param {?} el
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'setProperty',value:function setProperty(el,name,value){el[name]=value;}/**
     * @param {?} node
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(node,value){node.nodeValue=value;}/**
     * @param {?} target
     * @param {?} event
     * @param {?} callback
     * @return {?}
     */},{key:'listen',value:function listen(target,event,callback){if(typeof target==='string'){return this.eventManager.addGlobalEventListener(target,event,decoratePreventDefault(callback));}return this.eventManager.addEventListener(target,event,decoratePreventDefault(callback));}}]);return DefaultDomRendererV2;}();var EmulatedEncapsulationDomRendererV2=function(_DefaultDomRendererV){_inherits(EmulatedEncapsulationDomRendererV2,_DefaultDomRendererV);/**
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     * @param {?} component
     */function EmulatedEncapsulationDomRendererV2(eventManager,sharedStylesHost,component){_classCallCheck(this,EmulatedEncapsulationDomRendererV2);var _this16=_possibleConstructorReturn(this,(EmulatedEncapsulationDomRendererV2.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2)).call(this,eventManager));_this16.component=component;var styles=flattenStyles(component.id,component.styles,[]);sharedStylesHost.addStyles(styles);_this16.contentAttr=shimContentAttribute(component.id);_this16.hostAttr=shimHostAttribute(component.id);return _this16;}/**
     * @param {?} element
     * @return {?}
     */_createClass(EmulatedEncapsulationDomRendererV2,[{key:'applyToHost',value:function applyToHost(element){_get(EmulatedEncapsulationDomRendererV2.prototype.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2.prototype),'setAttribute',this).call(this,element,this.hostAttr,'');}/**
     * @param {?} parent
     * @param {?} name
     * @return {?}
     */},{key:'createElement',value:function createElement(parent,name){var/** @type {?} */el=_get(EmulatedEncapsulationDomRendererV2.prototype.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2.prototype),'createElement',this).call(this,parent,name);_get(EmulatedEncapsulationDomRendererV2.prototype.__proto__||Object.getPrototypeOf(EmulatedEncapsulationDomRendererV2.prototype),'setAttribute',this).call(this,el,this.contentAttr,'');return el;}}]);return EmulatedEncapsulationDomRendererV2;}(DefaultDomRendererV2);var ShadowDomRenderer=function(_DefaultDomRendererV2){_inherits(ShadowDomRenderer,_DefaultDomRendererV2);/**
     * @param {?} eventManager
     * @param {?} sharedStylesHost
     * @param {?} hostEl
     * @param {?} component
     */function ShadowDomRenderer(eventManager,sharedStylesHost,hostEl,component){_classCallCheck(this,ShadowDomRenderer);var _this17=_possibleConstructorReturn(this,(ShadowDomRenderer.__proto__||Object.getPrototypeOf(ShadowDomRenderer)).call(this,eventManager));_this17.sharedStylesHost=sharedStylesHost;_this17.hostEl=hostEl;_this17.component=component;_this17.shadowRoot=hostEl.createShadowRoot();_this17.sharedStylesHost.addHost(_this17.shadowRoot);var styles=flattenStyles(component.id,component.styles,[]);for(var i=0;i<styles.length;i++){var styleEl=document.createElement('style');styleEl.textContent=styles[i];_this17.shadowRoot.appendChild(styleEl);}return _this17;}/**
     * @param {?} node
     * @return {?}
     */_createClass(ShadowDomRenderer,[{key:'nodeOrShadowRoot',value:function nodeOrShadowRoot(node){return node===this.hostEl?this.shadowRoot:node;}/**
     * @return {?}
     */},{key:'destroy',value:function destroy(){this.sharedStylesHost.removeHost(this.shadowRoot);}/**
     * @param {?} parent
     * @param {?} newChild
     * @return {?}
     */},{key:'appendChild',value:function appendChild(parent,newChild){return _get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'appendChild',this).call(this,this.nodeOrShadowRoot(parent),newChild);}/**
     * @param {?} parent
     * @param {?} newChild
     * @param {?} refChild
     * @return {?}
     */},{key:'insertBefore',value:function insertBefore(parent,newChild,refChild){return _get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'insertBefore',this).call(this,this.nodeOrShadowRoot(parent),newChild,refChild);}/**
     * @param {?} parent
     * @param {?} oldChild
     * @return {?}
     */},{key:'removeChild',value:function removeChild(parent,oldChild){return _get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'removeChild',this).call(this,this.nodeOrShadowRoot(parent),oldChild);}/**
     * @param {?} node
     * @return {?}
     */},{key:'parentNode',value:function parentNode(node){return this.nodeOrShadowRoot(_get(ShadowDomRenderer.prototype.__proto__||Object.getPrototypeOf(ShadowDomRenderer.prototype),'parentNode',this).call(this,this.nodeOrShadowRoot(node)));}}]);return ShadowDomRenderer;}(DefaultDomRendererV2);var CORE_TOKENS={'ApplicationRef':ApplicationRef,'NgZone':NgZone};var INSPECT_GLOBAL_NAME='ng.probe';var CORE_TOKENS_GLOBAL_NAME='ng.coreTokens';/**
 * Returns a {\@link DebugElement} for the given native DOM element, or
 * null if the given native element does not have an Angular view associated
 * with it.
 * @param {?} element
 * @return {?}
 */function inspectNativeElement(element){return getDebugNode(element);}/**
 * Deprecated. Use the one from '\@angular/core'.
 * @deprecated
 */var NgProbeToken$$1=/**
     * @param {?} name
     * @param {?} token
     */function NgProbeToken$$1(name,token){_classCallCheck(this,NgProbeToken$$1);this.name=name;this.token=token;};/**
 * @param {?} rootRenderer
 * @param {?} extraTokens
 * @param {?} coreTokens
 * @return {?}
 */function _createConditionalRootRenderer(rootRenderer,extraTokens,coreTokens){return isDevMode()?_createRootRenderer(rootRenderer,(extraTokens||[]).concat(coreTokens||[])):rootRenderer;}/**
 * @param {?} rootRenderer
 * @param {?} extraTokens
 * @return {?}
 */function _createRootRenderer(rootRenderer,extraTokens){getDOM().setGlobalVar(INSPECT_GLOBAL_NAME,inspectNativeElement);getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME,StringMapWrapper.merge(CORE_TOKENS,_ngProbeTokensToMap(extraTokens||[])));return new DebugDomRootRenderer(rootRenderer);}/**
 * @param {?} tokens
 * @return {?}
 */function _ngProbeTokensToMap(tokens){return tokens.reduce(function(prev,t){return prev[t.name]=t.token,prev;},{});}/**
 * Providers which support debugging Angular applications (e.g. via `ng.probe`).
 */var ELEMENT_PROBE_PROVIDERS=[{provide:RootRenderer,useFactory:_createConditionalRootRenderer,deps:[DomRootRenderer,[NgProbeToken$$1,new Optional()],[NgProbeToken$1,new Optional()]]}];var DomEventsPlugin=function(_EventManagerPlugin){_inherits(DomEventsPlugin,_EventManagerPlugin);/**
     * @param {?} doc
     */function DomEventsPlugin(doc){_classCallCheck(this,DomEventsPlugin);return _possibleConstructorReturn(this,(DomEventsPlugin.__proto__||Object.getPrototypeOf(DomEventsPlugin)).call(this,doc));}/**
     * @param {?} eventName
     * @return {?}
     */_createClass(DomEventsPlugin,[{key:'supports',value:function supports(eventName){return true;}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){element.addEventListener(eventName,/** @type {?} */handler,false);return function(){return element.removeEventListener(eventName,/** @type {?} */handler,false);};}}]);return DomEventsPlugin;}(EventManagerPlugin);DomEventsPlugin.decorators=[{type:Injectable}];/** @nocollapse */DomEventsPlugin.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]}];};var EVENT_NAMES={// pan
'pan':true,'panstart':true,'panmove':true,'panend':true,'pancancel':true,'panleft':true,'panright':true,'panup':true,'pandown':true,// pinch
'pinch':true,'pinchstart':true,'pinchmove':true,'pinchend':true,'pinchcancel':true,'pinchin':true,'pinchout':true,// press
'press':true,'pressup':true,// rotate
'rotate':true,'rotatestart':true,'rotatemove':true,'rotateend':true,'rotatecancel':true,// swipe
'swipe':true,'swipeleft':true,'swiperight':true,'swipeup':true,'swipedown':true,// tap
'tap':true};/**
 * A DI token that you can use to provide{@link HammerGestureConfig} to Angular. Use it to configure
 * Hammer gestures.
 *
 * @experimental
 */var HAMMER_GESTURE_CONFIG=new InjectionToken('HammerGestureConfig');/**
 * \@experimental
 */var HammerGestureConfig=function(){function HammerGestureConfig(){_classCallCheck(this,HammerGestureConfig);this.events=[];this.overrides={};}/**
     * @param {?} element
     * @return {?}
     */_createClass(HammerGestureConfig,[{key:'buildHammer',value:function buildHammer(element){var/** @type {?} */mc=new Hammer(element);mc.get('pinch').set({enable:true});mc.get('rotate').set({enable:true});for(var/** @type {?} */eventName in this.overrides){mc.get(eventName).set(this.overrides[eventName]);}return mc;}}]);return HammerGestureConfig;}();HammerGestureConfig.decorators=[{type:Injectable}];/** @nocollapse */HammerGestureConfig.ctorParameters=function(){return[];};var HammerGesturesPlugin=function(_EventManagerPlugin2){_inherits(HammerGesturesPlugin,_EventManagerPlugin2);/**
     * @param {?} doc
     * @param {?} _config
     */function HammerGesturesPlugin(doc,_config){_classCallCheck(this,HammerGesturesPlugin);var _this19=_possibleConstructorReturn(this,(HammerGesturesPlugin.__proto__||Object.getPrototypeOf(HammerGesturesPlugin)).call(this,doc));_this19._config=_config;return _this19;}/**
     * @param {?} eventName
     * @return {?}
     */_createClass(HammerGesturesPlugin,[{key:'supports',value:function supports(eventName){if(!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase())&&!this.isCustomEvent(eventName)){return false;}if(!window.Hammer){throw new Error('Hammer.js is not loaded, can not bind '+eventName+' event');}return true;}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){var _this20=this;var/** @type {?} */zone=this.manager.getZone();eventName=eventName.toLowerCase();return zone.runOutsideAngular(function(){// Creating the manager bind events, must be done outside of angular
var/** @type {?} */mc=_this20._config.buildHammer(element);var/** @type {?} */callback=function callback(eventObj){zone.runGuarded(function(){handler(eventObj);});};mc.on(eventName,callback);return function(){return mc.off(eventName,callback);};});}/**
     * @param {?} eventName
     * @return {?}
     */},{key:'isCustomEvent',value:function isCustomEvent(eventName){return this._config.events.indexOf(eventName)>-1;}}]);return HammerGesturesPlugin;}(EventManagerPlugin);HammerGesturesPlugin.decorators=[{type:Injectable}];/** @nocollapse */HammerGesturesPlugin.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]},{type:HammerGestureConfig,decorators:[{type:Inject,args:[HAMMER_GESTURE_CONFIG]}]}];};var MODIFIER_KEYS=['alt','control','meta','shift'];var MODIFIER_KEY_GETTERS={'alt':function alt(event){return event.altKey;},'control':function control(event){return event.ctrlKey;},'meta':function meta(event){return event.metaKey;},'shift':function shift(event){return event.shiftKey;}};/**
 * \@experimental
 */var KeyEventsPlugin=function(_EventManagerPlugin3){_inherits(KeyEventsPlugin,_EventManagerPlugin3);/**
     * @param {?} doc
     */function KeyEventsPlugin(doc){_classCallCheck(this,KeyEventsPlugin);return _possibleConstructorReturn(this,(KeyEventsPlugin.__proto__||Object.getPrototypeOf(KeyEventsPlugin)).call(this,doc));}/**
     * @param {?} eventName
     * @return {?}
     */_createClass(KeyEventsPlugin,[{key:'supports',value:function supports(eventName){return KeyEventsPlugin.parseEventName(eventName)!=null;}/**
     * @param {?} element
     * @param {?} eventName
     * @param {?} handler
     * @return {?}
     */},{key:'addEventListener',value:function addEventListener(element,eventName,handler){var/** @type {?} */parsedEvent=KeyEventsPlugin.parseEventName(eventName);var/** @type {?} */outsideHandler=KeyEventsPlugin.eventCallback(parsedEvent['fullKey'],handler,this.manager.getZone());return this.manager.getZone().runOutsideAngular(function(){return getDOM().onAndCancel(element,parsedEvent['domEventName'],outsideHandler);});}/**
     * @param {?} eventName
     * @return {?}
     */}],[{key:'parseEventName',value:function parseEventName(eventName){var/** @type {?} */parts=eventName.toLowerCase().split('.');var/** @type {?} */domEventName=parts.shift();if(parts.length===0||!(domEventName==='keydown'||domEventName==='keyup')){return null;}var/** @type {?} */key=KeyEventsPlugin._normalizeKey(parts.pop());var/** @type {?} */fullKey='';MODIFIER_KEYS.forEach(function(modifierName){var/** @type {?} */index=parts.indexOf(modifierName);if(index>-1){parts.splice(index,1);fullKey+=modifierName+'.';}});fullKey+=key;if(parts.length!=0||key.length===0){// returning null instead of throwing to let another plugin process the event
return null;}var/** @type {?} */result={};result['domEventName']=domEventName;result['fullKey']=fullKey;return result;}/**
     * @param {?} event
     * @return {?}
     */},{key:'getEventFullKey',value:function getEventFullKey(event){var/** @type {?} */fullKey='';var/** @type {?} */key=getDOM().getEventKey(event);key=key.toLowerCase();if(key===' '){key='space';// for readability
}else if(key==='.'){key='dot';// because '.' is used as a separator in event names
}MODIFIER_KEYS.forEach(function(modifierName){if(modifierName!=key){var/** @type {?} */modifierGetter=MODIFIER_KEY_GETTERS[modifierName];if(modifierGetter(event)){fullKey+=modifierName+'.';}}});fullKey+=key;return fullKey;}/**
     * @param {?} fullKey
     * @param {?} handler
     * @param {?} zone
     * @return {?}
     */},{key:'eventCallback',value:function eventCallback(fullKey,handler,zone){return function(event/** TODO #9100 */){if(KeyEventsPlugin.getEventFullKey(event)===fullKey){zone.runGuarded(function(){return handler(event);});}};}/**
     * \@internal
     * @param {?} keyName
     * @return {?}
     */},{key:'_normalizeKey',value:function _normalizeKey(keyName){// TODO: switch to a Map if the mapping grows too much
switch(keyName){case'esc':return'escape';default:return keyName;}}}]);return KeyEventsPlugin;}(EventManagerPlugin);KeyEventsPlugin.decorators=[{type:Injectable}];/** @nocollapse */KeyEventsPlugin.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]}];};/**
 * A pattern that recognizes a commonly useful subset of URLs that are safe.
 *
 * This regular expression matches a subset of URLs that will not cause script
 * execution if used in URL context within a HTML document. Specifically, this
 * regular expression matches if (comment from here on and regex copied from
 * Soy's EscapingConventions):
 * (1) Either a protocol in a whitelist (http, https, mailto or ftp).
 * (2) or no protocol.  A protocol must be followed by a colon. The below
 *     allows that by allowing colons only after one of the characters [/?#].
 *     A colon after a hash (#) must be in the fragment.
 *     Otherwise, a colon after a (?) must be in a query.
 *     Otherwise, a colon after a single solidus (/) must be in a path.
 *     Otherwise, a colon after a double solidus (//) must be in the authority
 *     (before port).
 *
 * The pattern disallows &, used in HTML entity declarations before
 * one of the characters in [/?#]. This disallows HTML entities used in the
 * protocol name, which should never happen, e.g. "h&#116;tp" for "http".
 * It also disallows HTML entities in the first path part of a relative path,
 * e.g. "foo&lt;bar/baz".  Our existing escaping functions should not produce
 * that. More importantly, it disallows masking of a colon,
 * e.g. "javascript&#58;...".
 *
 * This regular expression was taken from the Closure sanitization library.
 */var SAFE_URL_PATTERN=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;/** A pattern that matches safe data URLs. Only matches image, video and audio types. */var DATA_URL_PATTERN=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;/**
 * @param {?} url
 * @return {?}
 */function sanitizeUrl(url){url=String(url);if(url.match(SAFE_URL_PATTERN)||url.match(DATA_URL_PATTERN))return url;if(isDevMode()){getDOM().log('WARNING: sanitizing unsafe URL value '+url+' (see http://g.co/ng/security#xss)');}return'unsafe:'+url;}/**
 * @param {?} srcset
 * @return {?}
 */function sanitizeSrcset(srcset){srcset=String(srcset);return srcset.split(',').map(function(srcset){return sanitizeUrl(srcset.trim());}).join(', ');}/** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */var inertElement=null;/** Lazily initialized to make sure the DOM adapter gets set before use. */var DOM=null;/**
 * Returns an HTML element that is guaranteed to not execute code when creating elements in it.
 * @return {?}
 */function getInertElement(){if(inertElement)return inertElement;DOM=getDOM();// Prefer using <template> element if supported.
var/** @type {?} */templateEl=DOM.createElement('template');if('content'in templateEl)return templateEl;var/** @type {?} */doc=DOM.createHtmlDocument();inertElement=DOM.querySelector(doc,'body');if(inertElement==null){// usually there should be only one body element in the document, but IE doesn't have any, so we
// need to create one.
var/** @type {?} */html=DOM.createElement('html',doc);inertElement=DOM.createElement('body',doc);DOM.appendChild(html,inertElement);DOM.appendChild(doc,html);}return inertElement;}/**
 * @param {?} tags
 * @return {?}
 */function tagSet(tags){var/** @type {?} */res={};var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=tags.split(',')[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var t=_step4.value;res[t]=true;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}return res;}/**
 * @param {...?} sets
 * @return {?}
 */function merge(){var/** @type {?} */res={};for(var _len=arguments.length,sets=Array(_len),_key=0;_key<_len;_key++){sets[_key]=arguments[_key];}var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=sets[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var s=_step5.value;for(var/** @type {?} */v in s){if(s.hasOwnProperty(v))res[v]=true;}}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return res;}// Good source of info about elements and attributes
// http://dev.w3.org/html5/spec/Overview.html#semantics
// http://simon.html5.org/html-elements
// Safe Void Elements - HTML5
// http://dev.w3.org/html5/spec/Overview.html#void-elements
var VOID_ELEMENTS=tagSet('area,br,col,hr,img,wbr');// Elements that you can, intentionally, leave open (and which close themselves)
// http://dev.w3.org/html5/spec/Overview.html#optional-tags
var OPTIONAL_END_TAG_BLOCK_ELEMENTS=tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');var OPTIONAL_END_TAG_INLINE_ELEMENTS=tagSet('rp,rt');var OPTIONAL_END_TAG_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,OPTIONAL_END_TAG_BLOCK_ELEMENTS);// Safe Block Elements - HTML5
var BLOCK_ELEMENTS=merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS,tagSet('address,article,'+'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,'+'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));// Inline Elements - HTML5
var INLINE_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,tagSet('a,abbr,acronym,audio,b,'+'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,'+'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));var VALID_ELEMENTS=merge(VOID_ELEMENTS,BLOCK_ELEMENTS,INLINE_ELEMENTS,OPTIONAL_END_TAG_ELEMENTS);// Attributes that have href and hence need to be sanitized
var URI_ATTRS=tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');// Attributes that have special href set hence need to be sanitized
var SRCSET_ATTRS=tagSet('srcset');var HTML_ATTRS=tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,'+'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,'+'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,'+'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,'+'valign,value,vspace,width');// NB: This currently conciously doesn't support SVG. SVG sanitization has had several security
// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via
// innerHTML is required, SVG attributes should be added here.
// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those
// can be sanitized, but they increase security surface area without a legitimate use case, so they
// are left out here.
var VALID_ATTRS=merge(URI_ATTRS,SRCSET_ATTRS,HTML_ATTRS);/**
 * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe
 * attributes.
 */var SanitizingHtmlSerializer=function(){function SanitizingHtmlSerializer(){_classCallCheck(this,SanitizingHtmlSerializer);this.sanitizedSomething=false;this.buf=[];}/**
     * @param {?} el
     * @return {?}
     */_createClass(SanitizingHtmlSerializer,[{key:'sanitizeChildren',value:function sanitizeChildren(el){// This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.
// However this code never accesses properties off of `document` before deleting its contents
// again, so it shouldn't be vulnerable to DOM clobbering.
var/** @type {?} */current=el.firstChild;while(current){if(DOM.isElementNode(current)){this.startElement(/** @type {?} */current);}else if(DOM.isTextNode(current)){this.chars(DOM.nodeValue(current));}else{// Strip non-element, non-text nodes.
this.sanitizedSomething=true;}if(DOM.firstChild(current)){current=DOM.firstChild(current);continue;}while(current){// Leaving the element. Walk up and to the right, closing tags as we go.
if(DOM.isElementNode(current)){this.endElement(/** @type {?} */current);}if(DOM.nextSibling(current)){current=DOM.nextSibling(current);break;}current=DOM.parentElement(current);}}return this.buf.join('');}/**
     * @param {?} element
     * @return {?}
     */},{key:'startElement',value:function startElement(element){var _this22=this;var/** @type {?} */tagName=DOM.nodeName(element).toLowerCase();if(!VALID_ELEMENTS.hasOwnProperty(tagName)){this.sanitizedSomething=true;return;}this.buf.push('<');this.buf.push(tagName);DOM.attributeMap(element).forEach(function(value,attrName){var/** @type {?} */lower=attrName.toLowerCase();if(!VALID_ATTRS.hasOwnProperty(lower)){_this22.sanitizedSomething=true;return;}// TODO(martinprobst): Special case image URIs for data:image/...
if(URI_ATTRS[lower])value=sanitizeUrl(value);if(SRCSET_ATTRS[lower])value=sanitizeSrcset(value);_this22.buf.push(' ');_this22.buf.push(attrName);_this22.buf.push('="');_this22.buf.push(encodeEntities(value));_this22.buf.push('"');});this.buf.push('>');}/**
     * @param {?} current
     * @return {?}
     */},{key:'endElement',value:function endElement(current){var/** @type {?} */tagName=DOM.nodeName(current).toLowerCase();if(VALID_ELEMENTS.hasOwnProperty(tagName)&&!VOID_ELEMENTS.hasOwnProperty(tagName)){this.buf.push('</');this.buf.push(tagName);this.buf.push('>');}}/**
     * @param {?} chars
     * @return {?}
     */},{key:'chars',value:function chars(_chars/** TODO #9100 */){this.buf.push(encodeEntities(_chars));}}]);return SanitizingHtmlSerializer;}();// Regular Expressions for parsing tags and attributes
var SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;// ! to ~ is the ASCII range.
var NON_ALPHANUMERIC_REGEXP=/([^\#-~ |!])/g;/**
 * Escapes all potentially dangerous characters, so that the
 * resulting string can be safely inserted into attribute or
 * element text.
 * @param {?} value
 * @return {?}
 */function encodeEntities(value){return value.replace(/&/g,'&amp;').replace(SURROGATE_PAIR_REGEXP,function(match){var/** @type {?} */hi=match.charCodeAt(0);var/** @type {?} */low=match.charCodeAt(1);return'&#'+((hi-0xD800)*0x400+(low-0xDC00)+0x10000)+';';}).replace(NON_ALPHANUMERIC_REGEXP,function(match){return'&#'+match.charCodeAt(0)+';';}).replace(/</g,'&lt;').replace(/>/g,'&gt;');}/**
 * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'
 * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').
 *
 * This is undesirable since we don't want to allow any of these custom attributes. This method
 * strips them all.
 * @param {?} el
 * @return {?}
 */function stripCustomNsAttrs(el){DOM.attributeMap(el).forEach(function(_,attrName){if(attrName==='xmlns:ns1'||attrName.indexOf('ns1:')===0){DOM.removeAttribute(el,attrName);}});var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=DOM.childNodesAsList(el)[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var n=_step6.value;if(DOM.isElementNode(n))stripCustomNsAttrs(/** @type {?} */n);}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}}/**
 * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to
 * the DOM in a browser environment.
 * @param {?} defaultDoc
 * @param {?} unsafeHtmlInput
 * @return {?}
 */function sanitizeHtml(defaultDoc,unsafeHtmlInput){try{var/** @type {?} */containerEl=getInertElement();// Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).
var/** @type {?} */unsafeHtml=unsafeHtmlInput?String(unsafeHtmlInput):'';// mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser
// trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.
var/** @type {?} */mXSSAttempts=5;var/** @type {?} */parsedHtml=unsafeHtml;do{if(mXSSAttempts===0){throw new Error('Failed to sanitize html because the input is unstable');}mXSSAttempts--;unsafeHtml=parsedHtml;DOM.setInnerHTML(containerEl,unsafeHtml);if(defaultDoc.documentMode){// strip custom-namespaced attributes on IE<=11
stripCustomNsAttrs(containerEl);}parsedHtml=DOM.getInnerHTML(containerEl);}while(unsafeHtml!==parsedHtml);var/** @type {?} */sanitizer=new SanitizingHtmlSerializer();var/** @type {?} */safeHtml=sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl)||containerEl);// Clear out the body element.
var/** @type {?} */parent=DOM.getTemplateContent(containerEl)||containerEl;var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=DOM.childNodesAsList(parent)[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var child=_step7.value;DOM.removeChild(parent,child);}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}if(isDevMode()&&sanitizer.sanitizedSomething){DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');}return safeHtml;}catch(e){// In case anything goes wrong, clear out inertElement to reset the entire DOM structure.
inertElement=null;throw e;}}/**
 * Regular expression for safe style values.
 *
 * Quotes (" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.
 *
 * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or
 * font-family) and hence could allow multiple values to get injected, but that should pose no risk
 * of XSS.
 *
 * The function expression checks only for XSS safety, not for CSS validity.
 *
 * This regular expression was taken from the Closure sanitization library, and augmented for
 * transformation values.
 */var VALUES='[-,."\'%_!# a-zA-Z0-9]+';var TRANSFORMATION_FNS='(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';var COLOR_FNS='(?:rgb|hsl)a?';var GRADIENTS='(?:repeating-)?(?:linear|radial)-gradient';var CSS3_FNS='(?:calc|attr)';var FN_ARGS='\\([-0-9.%, #a-zA-Z]+\\)';var SAFE_STYLE_VALUE=new RegExp('^('+VALUES+'|'+('(?:'+TRANSFORMATION_FNS+'|'+COLOR_FNS+'|'+GRADIENTS+'|'+CSS3_FNS+')')+(FN_ARGS+')$'),'g');/**
 * Matches a `url(...)` value with an arbitrary argument as long as it does
 * not contain parentheses.
 *
 * The URL value still needs to be sanitized separately.
 *
 * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted
 * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.
 * by observing whether scroll bars are displayed, or character ranges used by a font face
 * definition.
 *
 * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that
 * binding a URL value without further cooperation from the page will cause an information leak, and
 * if so, it is just a leak, not a full blown XSS vulnerability.
 *
 * Given the common use case, low likelihood of attack vector, and low impact of an attack, this
 * code is permissive and allows URLs that sanitize otherwise.
 */var URL_RE=/^url\(([^)]+)\)$/;/**
 * Checks that quotes (" and ') are properly balanced inside a string. Assumes
 * that neither escape (\) nor any other character that could result in
 * breaking out of a string parsing context are allowed;
 * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.
 *
 * This code was taken from the Closure sanitization library.
 * @param {?} value
 * @return {?}
 */function hasBalancedQuotes(value){var/** @type {?} */outsideSingle=true;var/** @type {?} */outsideDouble=true;for(var/** @type {?} */i=0;i<value.length;i++){var/** @type {?} */c=value.charAt(i);if(c==='\''&&outsideDouble){outsideSingle=!outsideSingle;}else if(c==='"'&&outsideSingle){outsideDouble=!outsideDouble;}}return outsideSingle&&outsideDouble;}/**
 * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single
 * value) and returns a value that is safe to use in a browser environment.
 * @param {?} value
 * @return {?}
 */function sanitizeStyle(value){value=String(value).trim();// Make sure it's actually a string.
if(!value)return'';// Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for
// reasoning behind this.
var/** @type {?} */urlMatch=value.match(URL_RE);if(urlMatch&&sanitizeUrl(urlMatch[1])===urlMatch[1]||value.match(SAFE_STYLE_VALUE)&&hasBalancedQuotes(value)){return value;// Safe style values.
}if(isDevMode()){getDOM().log('WARNING: sanitizing unsafe style value '+value+' (see http://g.co/ng/security#xss).');}return'unsafe';}/**
 * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing
 * values to be safe to use in the different DOM contexts.
 *
 * For example, when binding a URL in an `<a [href]="someValue">` hyperlink, `someValue` will be
 * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on
 * the website.
 *
 * In specific situations, it might be necessary to disable sanitization, for example if the
 * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.
 * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`
 * methods, and then binding to that value from the template.
 *
 * These situations should be very rare, and extraordinary care must be taken to avoid creating a
 * Cross Site Scripting (XSS) security bug!
 *
 * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as
 * close as possible to the source of the value, to make it easy to verify no security bug is
 * created by its use.
 *
 * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that
 * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous
 * code. The sanitizer leaves safe values intact.
 *
 * \@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in
 * sanitization for the value passed in. Carefully check and audit all values and code paths going
 * into this call. Make sure any user data is appropriately escaped for this security context.
 * For more detail, see the [Security Guide](http://g.co/ng/security).
 *
 * \@stable
 * @abstract
 */var DomSanitizer=function(){function DomSanitizer(){_classCallCheck(this,DomSanitizer);}_createClass(DomSanitizer,[{key:'sanitize',/**
     * Sanitizes a value for use in the given SecurityContext.
     *
     * If value is trusted for the context, this method will unwrap the contained safe value and use
     * it directly. Otherwise, value will be sanitized to be safe in the given context, for example
     * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation
     * is responsible to make sure that the value can definitely be safely used in the given context.
     * @abstract
     * @param {?} context
     * @param {?} value
     * @return {?}
     */value:function sanitize(context,value){}/**
     * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML
     * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will
     * leave safe HTML intact, so in most situations this method should not be used.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustHtml',value:function bypassSecurityTrustHtml(value){}/**
     * Bypass security and trust the given value to be safe style value (CSS).
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustStyle',value:function bypassSecurityTrustStyle(value){}/**
     * Bypass security and trust the given value to be safe JavaScript.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustScript',value:function bypassSecurityTrustScript(value){}/**
     * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used
     * in hyperlinks or `<img src>`.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustUrl',value:function bypassSecurityTrustUrl(value){}/**
     * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may
     * be used to load executable code from, like `<script src>`, or `<iframe src>`.
     *
     * **WARNING:** calling this method with untrusted user data exposes your application to XSS
     * security risks!
     * @abstract
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustResourceUrl',value:function bypassSecurityTrustResourceUrl(value){}}]);return DomSanitizer;}();var DomSanitizerImpl=function(_DomSanitizer){_inherits(DomSanitizerImpl,_DomSanitizer);/**
     * @param {?} _doc
     */function DomSanitizerImpl(_doc){_classCallCheck(this,DomSanitizerImpl);var _this23=_possibleConstructorReturn(this,(DomSanitizerImpl.__proto__||Object.getPrototypeOf(DomSanitizerImpl)).call(this));_this23._doc=_doc;return _this23;}/**
     * @param {?} ctx
     * @param {?} value
     * @return {?}
     */_createClass(DomSanitizerImpl,[{key:'sanitize',value:function sanitize(ctx,value){if(value==null)return null;switch(ctx){case SecurityContext.NONE:return value;case SecurityContext.HTML:if(value instanceof SafeHtmlImpl)return value.changingThisBreaksApplicationSecurity;this.checkNotSafeValue(value,'HTML');return sanitizeHtml(this._doc,String(value));case SecurityContext.STYLE:if(value instanceof SafeStyleImpl)return value.changingThisBreaksApplicationSecurity;this.checkNotSafeValue(value,'Style');return sanitizeStyle(value);case SecurityContext.SCRIPT:if(value instanceof SafeScriptImpl)return value.changingThisBreaksApplicationSecurity;this.checkNotSafeValue(value,'Script');throw new Error('unsafe value used in a script context');case SecurityContext.URL:if(value instanceof SafeResourceUrlImpl||value instanceof SafeUrlImpl){// Allow resource URLs in URL contexts, they are strictly more trusted.
return value.changingThisBreaksApplicationSecurity;}this.checkNotSafeValue(value,'URL');return sanitizeUrl(String(value));case SecurityContext.RESOURCE_URL:if(value instanceof SafeResourceUrlImpl){return value.changingThisBreaksApplicationSecurity;}this.checkNotSafeValue(value,'ResourceURL');throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');default:throw new Error('Unexpected SecurityContext '+ctx+' (see http://g.co/ng/security#xss)');}}/**
     * @param {?} value
     * @param {?} expectedType
     * @return {?}
     */},{key:'checkNotSafeValue',value:function checkNotSafeValue(value,expectedType){if(value instanceof SafeValueImpl){throw new Error('Required a safe '+expectedType+', got a '+value.getTypeName()+' '+'(see http://g.co/ng/security#xss)');}}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustHtml',value:function bypassSecurityTrustHtml(value){return new SafeHtmlImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustStyle',value:function bypassSecurityTrustStyle(value){return new SafeStyleImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustScript',value:function bypassSecurityTrustScript(value){return new SafeScriptImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustUrl',value:function bypassSecurityTrustUrl(value){return new SafeUrlImpl(value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'bypassSecurityTrustResourceUrl',value:function bypassSecurityTrustResourceUrl(value){return new SafeResourceUrlImpl(value);}}]);return DomSanitizerImpl;}(DomSanitizer);DomSanitizerImpl.decorators=[{type:Injectable}];/** @nocollapse */DomSanitizerImpl.ctorParameters=function(){return[{type:undefined,decorators:[{type:Inject,args:[DOCUMENT]}]}];};/**
 * @abstract
 */var SafeValueImpl=function(){/**
     * @param {?} changingThisBreaksApplicationSecurity
     */function SafeValueImpl(changingThisBreaksApplicationSecurity){_classCallCheck(this,SafeValueImpl);this.changingThisBreaksApplicationSecurity=changingThisBreaksApplicationSecurity;// empty
}/**
     * @abstract
     * @return {?}
     */_createClass(SafeValueImpl,[{key:'getTypeName',value:function getTypeName(){}/**
     * @return {?}
     */},{key:'toString',value:function toString(){return'SafeValue must use [property]=binding: '+this.changingThisBreaksApplicationSecurity+' (see http://g.co/ng/security#xss)';}}]);return SafeValueImpl;}();var SafeHtmlImpl=function(_SafeValueImpl){_inherits(SafeHtmlImpl,_SafeValueImpl);function SafeHtmlImpl(){_classCallCheck(this,SafeHtmlImpl);return _possibleConstructorReturn(this,(SafeHtmlImpl.__proto__||Object.getPrototypeOf(SafeHtmlImpl)).apply(this,arguments));}_createClass(SafeHtmlImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'HTML';}}]);return SafeHtmlImpl;}(SafeValueImpl);var SafeStyleImpl=function(_SafeValueImpl2){_inherits(SafeStyleImpl,_SafeValueImpl2);function SafeStyleImpl(){_classCallCheck(this,SafeStyleImpl);return _possibleConstructorReturn(this,(SafeStyleImpl.__proto__||Object.getPrototypeOf(SafeStyleImpl)).apply(this,arguments));}_createClass(SafeStyleImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'Style';}}]);return SafeStyleImpl;}(SafeValueImpl);var SafeScriptImpl=function(_SafeValueImpl3){_inherits(SafeScriptImpl,_SafeValueImpl3);function SafeScriptImpl(){_classCallCheck(this,SafeScriptImpl);return _possibleConstructorReturn(this,(SafeScriptImpl.__proto__||Object.getPrototypeOf(SafeScriptImpl)).apply(this,arguments));}_createClass(SafeScriptImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'Script';}}]);return SafeScriptImpl;}(SafeValueImpl);var SafeUrlImpl=function(_SafeValueImpl4){_inherits(SafeUrlImpl,_SafeValueImpl4);function SafeUrlImpl(){_classCallCheck(this,SafeUrlImpl);return _possibleConstructorReturn(this,(SafeUrlImpl.__proto__||Object.getPrototypeOf(SafeUrlImpl)).apply(this,arguments));}_createClass(SafeUrlImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'URL';}}]);return SafeUrlImpl;}(SafeValueImpl);var SafeResourceUrlImpl=function(_SafeValueImpl5){_inherits(SafeResourceUrlImpl,_SafeValueImpl5);function SafeResourceUrlImpl(){_classCallCheck(this,SafeResourceUrlImpl);return _possibleConstructorReturn(this,(SafeResourceUrlImpl.__proto__||Object.getPrototypeOf(SafeResourceUrlImpl)).apply(this,arguments));}_createClass(SafeResourceUrlImpl,[{key:'getTypeName',/**
     * @return {?}
     */value:function getTypeName(){return'ResourceURL';}}]);return SafeResourceUrlImpl;}(SafeValueImpl);var INTERNAL_BROWSER_PLATFORM_PROVIDERS=[{provide:PLATFORM_ID,useValue:PLATFORM_BROWSER_ID},{provide:PLATFORM_INITIALIZER,useValue:initDomAdapter,multi:true},{provide:PlatformLocation,useClass:BrowserPlatformLocation},{provide:DOCUMENT,useFactory:_document,deps:[]}];/**
 * @security Replacing built-in sanitization providers exposes the application to XSS risks.
 * Attacker-controlled data introduced by an unsanitized provider could expose your
 * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).
 * @experimental
 */var BROWSER_SANITIZATION_PROVIDERS=[{provide:Sanitizer,useExisting:DomSanitizer},{provide:DomSanitizer,useClass:DomSanitizerImpl}];/**
 * @stable
 */var platformBrowser=createPlatformFactory(platformCore,'browser',INTERNAL_BROWSER_PLATFORM_PROVIDERS);/**
 * @return {?}
 */function initDomAdapter(){BrowserDomAdapter.makeCurrent();BrowserGetTestability.init();}/**
 * @return {?}
 */function errorHandler(){return new ErrorHandler();}/**
 * @return {?}
 */function _document(){return document;}/**
 * @return {?}
 */function _resolveDefaultAnimationDriver(){if(getDOM().supportsWebAnimation()){return new WebAnimationsDriver();}return AnimationDriver.NOOP;}/**
 * The ng module for the browser.
 *
 * \@stable
 */var BrowserModule=function(){/**
     * @param {?} parentModule
     */function BrowserModule(parentModule){_classCallCheck(this,BrowserModule);if(parentModule){throw new Error('BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.');}}/**
     * Configures a browser-based application to transition from a server-rendered app, if
     * one is present on the page. The specified parameters must include an application id,
     * which must match between the client and server applications.
     *
     * \@experimental
     * @param {?} params
     * @return {?}
     */_createClass(BrowserModule,null,[{key:'withServerTransition',value:function withServerTransition(params){return{ngModule:BrowserModule,providers:[{provide:APP_ID,useValue:params.appId},{provide:TRANSITION_ID,useExisting:APP_ID},SERVER_TRANSITION_PROVIDERS]};}}]);return BrowserModule;}();BrowserModule.decorators=[{type:NgModule,args:[{providers:[BROWSER_SANITIZATION_PROVIDERS,{provide:ErrorHandler,useFactory:errorHandler,deps:[]},{provide:EVENT_MANAGER_PLUGINS,useClass:DomEventsPlugin,multi:true},{provide:EVENT_MANAGER_PLUGINS,useClass:KeyEventsPlugin,multi:true},{provide:EVENT_MANAGER_PLUGINS,useClass:HammerGesturesPlugin,multi:true},{provide:HAMMER_GESTURE_CONFIG,useClass:HammerGestureConfig},{provide:DomRootRenderer,useClass:DomRootRenderer_},{provide:RootRenderer,useExisting:DomRootRenderer},DomRendererFactoryV2,{provide:RendererFactoryV2,useExisting:DomRendererFactoryV2},{provide:SharedStylesHost,useExisting:DomSharedStylesHost},{provide:AnimationDriver,useFactory:_resolveDefaultAnimationDriver},DomSharedStylesHost,Testability,EventManager,ELEMENT_PROBE_PROVIDERS,Meta,Title],exports:[CommonModule,ApplicationModule]}]}];/** @nocollapse */BrowserModule.ctorParameters=function(){return[{type:BrowserModule,decorators:[{type:Optional},{type:SkipSelf}]}];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * JS version of browser APIs. This library can only run in the browser.
 */var win=typeof window!=='undefined'&&window||{};var ChangeDetectionPerfRecord=/**
     * @param {?} msPerTick
     * @param {?} numTicks
     */function ChangeDetectionPerfRecord(msPerTick,numTicks){_classCallCheck(this,ChangeDetectionPerfRecord);this.msPerTick=msPerTick;this.numTicks=numTicks;};/**
 * Entry point for all Angular profiling-related debug tools. This object
 * corresponds to the `ng.profiler` in the dev console.
 */var AngularProfiler=function(){/**
     * @param {?} ref
     */function AngularProfiler(ref){_classCallCheck(this,AngularProfiler);this.appRef=ref.injector.get(ApplicationRef);}/**
     * Exercises change detection in a loop and then prints the average amount of
     * time in milliseconds how long a single round of change detection takes for
     * the current state of the UI. It runs a minimum of 5 rounds for a minimum
     * of 500 milliseconds.
     *
     * Optionally, a user may pass a `config` parameter containing a map of
     * options. Supported options are:
     *
     * `record` (boolean) - causes the profiler to record a CPU profile while
     * it exercises the change detector. Example:
     *
     * ```
     * ng.profiler.timeChangeDetection({record: true})
     * ```
     * @param {?} config
     * @return {?}
     */_createClass(AngularProfiler,[{key:'timeChangeDetection',value:function timeChangeDetection(config){var/** @type {?} */record=config&&config['record'];var/** @type {?} */profileName='Change Detection';// Profiler is not available in Android browsers, nor in IE 9 without dev tools opened
var/** @type {?} */isProfilerAvailable=isPresent(win.console.profile);if(record&&isProfilerAvailable){win.console.profile(profileName);}var/** @type {?} */start=getDOM().performanceNow();var/** @type {?} */numTicks=0;while(numTicks<5||getDOM().performanceNow()-start<500){this.appRef.tick();numTicks++;}var/** @type {?} */end=getDOM().performanceNow();if(record&&isProfilerAvailable){// need to cast to <any> because type checker thinks there's no argument
// while in fact there is:
//
// https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd
win.console.profileEnd(profileName);}var/** @type {?} */msPerTick=(end-start)/numTicks;win.console.log('ran '+numTicks+' change detection cycles');win.console.log(msPerTick.toFixed(2)+' ms per check');return new ChangeDetectionPerfRecord(msPerTick,numTicks);}}]);return AngularProfiler;}();var By=function(){function By(){_classCallCheck(this,By);}_createClass(By,null,[{key:'all',/**
     * Match all elements.
     *
     * ## Example
     *
     * {\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}
     * @return {?}
     */value:function all(){return function(debugElement){return true;};}/**
     * Match elements by the given CSS selector.
     *
     * ## Example
     *
     * {\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}
     * @param {?} selector
     * @return {?}
     */},{key:'css',value:function css(selector){return function(debugElement){return isPresent(debugElement.nativeElement)?getDOM().elementMatches(debugElement.nativeElement,selector):false;};}/**
     * Match elements that have the given directive present.
     *
     * ## Example
     *
     * {\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}
     * @param {?} type
     * @return {?}
     */},{key:'directive',value:function directive(type){return function(debugElement){return debugElement.providerTokens.indexOf(type)!==-1;};}}]);return By;}();/**
 * @stable
 */var VERSION$$1=new Version('4.0.0-rc.1');

var toPromise = createCommonjsModule(function (module, exports) {
"use strict";
var root_1 = root;
/* tslint:disable:max-line-length */
/**
 * @param PromiseCtor
 * @return {Promise<T>}
 * @method toPromise
 * @owner Observable
 */
function toPromise(PromiseCtor) {
    var _this = this;
    if (!PromiseCtor) {
        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {
            PromiseCtor = root_1.root.Rx.config.Promise;
        }
        else if (root_1.root.Promise) {
            PromiseCtor = root_1.root.Promise;
        }
    }
    if (!PromiseCtor) {
        throw new Error('no Promise impl found');
    }
    return new PromiseCtor(function (resolve, reject) {
        var value;
        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
    });
}
exports.toPromise = toPromise;

});

var toPromise$$1 = toPromise.toPromise;

var PromiseObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = root;
var Observable_1 = Observable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var PromiseObservable = (function (_super) {
    __extends(PromiseObservable, _super);
    function PromiseObservable(promise, scheduler) {
        _super.call(this);
        this.promise = promise;
        this.scheduler = scheduler;
    }
    /**
     * Converts a Promise to an Observable.
     *
     * <span class="informal">Returns an Observable that just emits the Promise's
     * resolved value, then completes.</span>
     *
     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an
     * Observable. If the Promise resolves with a value, the output Observable
     * emits that resolved value as a `next`, and then completes. If the Promise
     * is rejected, then the output Observable emits the corresponding Error.
     *
     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>
     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindCallback}
     * @see {@link from}
     *
     * @param {Promise<T>} promise The promise to be converted.
     * @param {Scheduler} [scheduler] An optional Scheduler to use for scheduling
     * the delivery of the resolved value (or the rejection).
     * @return {Observable<T>} An Observable which wraps the Promise.
     * @static true
     * @name fromPromise
     * @owner Observable
     */
    PromiseObservable.create = function (promise, scheduler) {
        return new PromiseObservable(promise, scheduler);
    };
    PromiseObservable.prototype._subscribe = function (subscriber) {
        var _this = this;
        var promise = this.promise;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    subscriber.next(this.value);
                    subscriber.complete();
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.next(value);
                        subscriber.complete();
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.error(err);
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
        else {
            if (this._isScalar) {
                if (!subscriber.closed) {
                    return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber: subscriber });
                }
            }
            else {
                promise.then(function (value) {
                    _this.value = value;
                    _this._isScalar = true;
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchNext, 0, { value: value, subscriber: subscriber }));
                    }
                }, function (err) {
                    if (!subscriber.closed) {
                        subscriber.add(scheduler.schedule(dispatchError, 0, { err: err, subscriber: subscriber }));
                    }
                })
                    .then(null, function (err) {
                    // escape the promise trap, throw unhandled errors
                    root_1.root.setTimeout(function () { throw err; });
                });
            }
        }
    };
    return PromiseObservable;
}(Observable_1.Observable));
exports.PromiseObservable = PromiseObservable;
function dispatchNext(arg) {
    var value = arg.value, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
    }
}
function dispatchError(arg) {
    var err = arg.err, subscriber = arg.subscriber;
    if (!subscriber.closed) {
        subscriber.error(err);
    }
}

});

var fromPromise = createCommonjsModule(function (module, exports) {
"use strict";
var PromiseObservable_1 = PromiseObservable;
exports.fromPromise = PromiseObservable_1.PromiseObservable.create;

});

var fromPromise$$1 = fromPromise.fromPromise;

var _get$2=function get(object,property,receiver){if(object===null)object=Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc===undefined){var parent=Object.getPrototypeOf(object);if(parent===null){return undefined;}else{return get(parent,property,receiver);}}else if("value"in desc){return desc.value;}else{var getter=desc.get;if(getter===undefined){return undefined;}return getter.call(receiver);}};var _typeof$2=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass$3=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray$3(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _possibleConstructorReturn$3(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits$3(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _classCallCheck$3(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * Base class for control directives.
 *
 * Only used internally in the forms module.
 *
 * \@stable
 * @abstract
 */var AbstractControlDirective=function(){function AbstractControlDirective(){_classCallCheck$3(this,AbstractControlDirective);}_createClass$3(AbstractControlDirective,[{key:'reset',/**
     * @param {?=} value
     * @return {?}
     */value:function reset(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;if(this.control)this.control.reset(value);}/**
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'hasError',value:function hasError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return this.control?this.control.hasError(errorCode,path):false;}/**
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'getError',value:function getError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return this.control?this.control.getError(errorCode,path):null;}},{key:'control',/**
     * @return {?}
     */get:function get(){throw new Error('unimplemented');}/**
     * @return {?}
     */},{key:'value',get:function get(){return this.control?this.control.value:null;}/**
     * @return {?}
     */},{key:'valid',get:function get(){return this.control?this.control.valid:null;}/**
     * @return {?}
     */},{key:'invalid',get:function get(){return this.control?this.control.invalid:null;}/**
     * @return {?}
     */},{key:'pending',get:function get(){return this.control?this.control.pending:null;}/**
     * @return {?}
     */},{key:'errors',get:function get(){return this.control?this.control.errors:null;}/**
     * @return {?}
     */},{key:'pristine',get:function get(){return this.control?this.control.pristine:null;}/**
     * @return {?}
     */},{key:'dirty',get:function get(){return this.control?this.control.dirty:null;}/**
     * @return {?}
     */},{key:'touched',get:function get(){return this.control?this.control.touched:null;}/**
     * @return {?}
     */},{key:'untouched',get:function get(){return this.control?this.control.untouched:null;}/**
     * @return {?}
     */},{key:'disabled',get:function get(){return this.control?this.control.disabled:null;}/**
     * @return {?}
     */},{key:'enabled',get:function get(){return this.control?this.control.enabled:null;}/**
     * @return {?}
     */},{key:'statusChanges',get:function get(){return this.control?this.control.statusChanges:null;}/**
     * @return {?}
     */},{key:'valueChanges',get:function get(){return this.control?this.control.valueChanges:null;}/**
     * @return {?}
     */},{key:'path',get:function get(){return null;}}]);return AbstractControlDirective;}();/**
 * A directive that contains multiple {\@link NgControl}s.
 *
 * Only used by the forms module.
 *
 * \@stable
 */var ControlContainer=function(_AbstractControlDirec){_inherits$3(ControlContainer,_AbstractControlDirec);function ControlContainer(){_classCallCheck$3(this,ControlContainer);return _possibleConstructorReturn$3(this,(ControlContainer.__proto__||Object.getPrototypeOf(ControlContainer)).apply(this,arguments));}_createClass$3(ControlContainer,[{key:'formDirective',/**
     * Get the form to which this container belongs.
     * @return {?}
     */get:function get(){return null;}/**
     * Get the path to this container.
     * @return {?}
     */},{key:'path',get:function get(){return null;}}]);return ControlContainer;}(AbstractControlDirective);/**
 * @param {?} obj
 * @return {?}
 */function isPresent$3(obj){return obj!=null;}/**
 * @param {?} obj
 * @return {?}
 */function isBlank$3(obj){return obj==null;}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function looseIdentical$1(a,b){return a===b||typeof a==='number'&&typeof b==='number'&&isNaN(a)&&isNaN(b);}/**
 * @param {?} o
 * @return {?}
 */function isJsObject$2(o){return o!==null&&(typeof o==='function'||(typeof o==='undefined'?'undefined':_typeof$2(o))==='object');}/**
 * @param {?} obj
 * @return {?}
 */function isPrimitive$1(obj){return!isJsObject$2(obj);}/**
 * Wraps Javascript Objects
 */var StringMapWrapper$2=function(){function StringMapWrapper(){_classCallCheck$3(this,StringMapWrapper);}_createClass$3(StringMapWrapper,null,[{key:'merge',/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */value:function merge(m1,m2){var/** @type {?} */m={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(m1)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var k=_step.value;m[k]=m1[k];}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=Object.keys(m2)[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _k=_step2.value;m[_k]=m2[_k];}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return m;}/**
     * @param {?} m1
     * @param {?} m2
     * @return {?}
     */},{key:'equals',value:function equals(m1,m2){var/** @type {?} */k1=Object.keys(m1);var/** @type {?} */k2=Object.keys(m2);if(k1.length!=k2.length){return false;}for(var/** @type {?} */i=0;i<k1.length;i++){var/** @type {?} */key=k1[i];if(m1[key]!==m2[key]){return false;}}return true;}}]);return StringMapWrapper;}();var ListWrapper$1=function(){function ListWrapper(){_classCallCheck$3(this,ListWrapper);}_createClass$3(ListWrapper,null,[{key:'findLast',/**
     * @param {?} arr
     * @param {?} condition
     * @return {?}
     */value:function findLast(arr,condition){for(var/** @type {?} */i=arr.length-1;i>=0;i--){if(condition(arr[i])){return arr[i];}}return null;}/**
     * @param {?} list
     * @param {?} items
     * @return {?}
     */},{key:'removeAll',value:function removeAll(list,items){for(var/** @type {?} */i=0;i<items.length;++i){var/** @type {?} */index=list.indexOf(items[i]);if(index>-1){list.splice(index,1);}}}/**
     * @param {?} list
     * @param {?} el
     * @return {?}
     */},{key:'remove',value:function remove(list,el){var/** @type {?} */index=list.indexOf(el);if(index>-1){list.splice(index,1);return true;}return false;}/**
     * @param {?} a
     * @param {?} b
     * @return {?}
     */},{key:'equals',value:function equals(a,b){if(a.length!=b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i]!==b[i])return false;}return true;}/**
     * @param {?} list
     * @return {?}
     */},{key:'flatten',value:function flatten(list){return list.reduce(function(flat,item){var/** @type {?} */flatItem=Array.isArray(item)?ListWrapper.flatten(item):item;return flat.concat(flatItem);},[]);}}]);return ListWrapper;}();/**
 * @param {?} value
 * @return {?}
 */function isEmptyInputValue(value){// we don't check for string here so it also works with arrays
return value==null||value.length===0;}/**
 * Providers for validators to be used for {@link FormControl}s in a form.
 *
 * Provide this using `multi: true` to add validators.
 *
 * ### Example
 *
 * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}
 * @stable
 */var NG_VALIDATORS=new InjectionToken('NgValidators');/**
 * Providers for asynchronous validators to be used for {@link FormControl}s
 * in a form.
 *
 * Provide this using `multi: true` to add validators.
 *
 * See {@link NG_VALIDATORS} for more details.
 *
 * @stable
 */var NG_ASYNC_VALIDATORS=new InjectionToken('NgAsyncValidators');var EMAIL_REGEXP=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;/**
 * Provides a set of validators used by form controls.
 *
 * A validator is a function that processes a {\@link FormControl} or collection of
 * controls and returns a map of errors. A null map means that validation has passed.
 *
 * ### Example
 *
 * ```typescript
 * var loginControl = new FormControl("", Validators.required)
 * ```
 *
 * \@stable
 */var Validators=function(){function Validators(){_classCallCheck$3(this,Validators);}_createClass$3(Validators,null,[{key:'equalsTo',/**
     * Validator that compares the value of the given FormControls
     * @param {...?} fieldPaths
     * @return {?}
     */value:function equalsTo(){for(var _len=arguments.length,fieldPaths=Array(_len),_key=0;_key<_len;_key++){fieldPaths[_key]=arguments[_key];}return function(control){if(fieldPaths.length<1){throw new Error('You must compare to at least 1 other field');}var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=fieldPaths[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var fieldName=_step3.value;var/** @type {?} */field=control.parent.get(fieldName);if(!field){throw new Error('Field: '+fieldName+' undefined, are you sure that '+fieldName+' exists in the group');}if(field.value!==control.value){return{'equalsTo':{'unequalField':fieldName}};}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return null;};}/**
     * Validator that requires controls to have a non-empty value.
     * @param {?} control
     * @return {?}
     */},{key:'required',value:function required(control){return isEmptyInputValue(control.value)?{'required':true}:null;}/**
     * Validator that requires control value to be true.
     * @param {?} control
     * @return {?}
     */},{key:'requiredTrue',value:function requiredTrue(control){return control.value===true?null:{'required':true};}/**
     * Validator that performs email validation.
     * @param {?} control
     * @return {?}
     */},{key:'email',value:function email(control){return EMAIL_REGEXP.test(control.value)?null:{'email':true};}/**
     * Validator that requires controls to have a value of a minimum length.
     * @param {?} minLength
     * @return {?}
     */},{key:'minLength',value:function minLength(_minLength){return function(control){if(isEmptyInputValue(control.value)){return null;// don't validate empty values to allow optional controls
}var/** @type {?} */length=control.value?control.value.length:0;return length<_minLength?{'minlength':{'requiredLength':_minLength,'actualLength':length}}:null;};}/**
     * Validator that requires controls to have a value of a maximum length.
     * @param {?} maxLength
     * @return {?}
     */},{key:'maxLength',value:function maxLength(_maxLength){return function(control){var/** @type {?} */length=control.value?control.value.length:0;return length>_maxLength?{'maxlength':{'requiredLength':_maxLength,'actualLength':length}}:null;};}/**
     * Validator that requires a control to match a regex to its value.
     * @param {?} pattern
     * @return {?}
     */},{key:'pattern',value:function pattern(_pattern){if(!_pattern)return Validators.nullValidator;var/** @type {?} */regex=void 0;var/** @type {?} */regexStr=void 0;if(typeof _pattern==='string'){regexStr='^'+_pattern+'$';regex=new RegExp(regexStr);}else{regexStr=_pattern.toString();regex=_pattern;}return function(control){if(isEmptyInputValue(control.value)){return null;// don't validate empty values to allow optional controls
}var/** @type {?} */value=control.value;return regex.test(value)?null:{'pattern':{'requiredPattern':regexStr,'actualValue':value}};};}/**
     * No-op validator.
     * @param {?} c
     * @return {?}
     */},{key:'nullValidator',value:function nullValidator(c){return null;}/**
     * Compose multiple validators into a single function that returns the union
     * of the individual error maps.
     * @param {?} validators
     * @return {?}
     */},{key:'compose',value:function compose(validators){if(!validators)return null;var/** @type {?} */presentValidators=validators.filter(isPresent$3);if(presentValidators.length==0)return null;return function(control){return _mergeErrors(_executeValidators(control,presentValidators));};}/**
     * @param {?} validators
     * @return {?}
     */},{key:'composeAsync',value:function composeAsync(validators){if(!validators)return null;var/** @type {?} */presentValidators=validators.filter(isPresent$3);if(presentValidators.length==0)return null;return function(control){var/** @type {?} */promises=_executeAsyncValidators(control,presentValidators).map(_convertToPromise);return Promise.all(promises).then(_mergeErrors);};}}]);return Validators;}();/**
 * @param {?} obj
 * @return {?}
 */function _convertToPromise(obj){return isPromise(obj)?obj:toPromise$$1.call(obj);}/**
 * @param {?} control
 * @param {?} validators
 * @return {?}
 */function _executeValidators(control,validators){return validators.map(function(v){return v(control);});}/**
 * @param {?} control
 * @param {?} validators
 * @return {?}
 */function _executeAsyncValidators(control,validators){return validators.map(function(v){return v(control);});}/**
 * @param {?} arrayOfErrors
 * @return {?}
 */function _mergeErrors(arrayOfErrors){var/** @type {?} */res=arrayOfErrors.reduce(function(res,errors){return isPresent$3(errors)?StringMapWrapper$2.merge(res,errors):res;},{});return Object.keys(res).length===0?null:res;}/**
 * Used to provide a {@link ControlValueAccessor} for form controls.
 *
 * See {@link DefaultValueAccessor} for how to implement one.
 * @stable
 */var NG_VALUE_ACCESSOR=new InjectionToken('NgValueAccessor');var CHECKBOX_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return CheckboxControlValueAccessor;}),multi:true};/**
 * The accessor for writing a value and listening to changes on a checkbox input element.
 *
 *  ### Example
 *  ```
 *  <input type="checkbox" name="rememberLogin" ngModel>
 *  ```
 *
 *  \@stable
 */var CheckboxControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function CheckboxControlValueAccessor(_renderer,_elementRef){_classCallCheck$3(this,CheckboxControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass$3(CheckboxControlValueAccessor,[{key:'writeValue',value:function writeValue(value){this._renderer.setElementProperty(this._elementRef.nativeElement,'checked',value);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=fn;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return CheckboxControlValueAccessor;}();CheckboxControlValueAccessor.decorators=[{type:Directive,args:[{selector:'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',host:{'(change)':'onChange($event.target.checked)','(blur)':'onTouched()'},providers:[CHECKBOX_VALUE_ACCESSOR]}]}];/** @nocollapse */CheckboxControlValueAccessor.ctorParameters=function(){return[{type:RendererV1},{type:ElementRef}];};var DEFAULT_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return DefaultValueAccessor;}),multi:true};/**
 * The default accessor for writing a value and listening to changes that is used by the
 * {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName} directives.
 *
 *  ### Example
 *  ```
 *  <input type="text" name="searchQuery" ngModel>
 *  ```
 *
 *  \@stable
 */var DefaultValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function DefaultValueAccessor(_renderer,_elementRef){_classCallCheck$3(this,DefaultValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass$3(DefaultValueAccessor,[{key:'writeValue',value:function writeValue(value){var/** @type {?} */normalizedValue=value==null?'':value;this._renderer.setElementProperty(this._elementRef.nativeElement,'value',normalizedValue);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=fn;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return DefaultValueAccessor;}();DefaultValueAccessor.decorators=[{type:Directive,args:[{selector:'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',// TODO: vsavkin replace the above selector with the one below it once
// https://github.com/angular/angular/issues/3011 is implemented
// selector: '[ngControl],[ngModel],[ngFormControl]',
host:{'(input)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[DEFAULT_VALUE_ACCESSOR]}]}];/** @nocollapse */DefaultValueAccessor.ctorParameters=function(){return[{type:RendererV1},{type:ElementRef}];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @param {?} validator
 * @return {?}
 */function normalizeValidator(validator){if(validator.validate){return function(c){return validator.validate(c);};}else{return validator;}}/**
 * @param {?} validator
 * @return {?}
 */function normalizeAsyncValidator(validator){if(validator.validate){return function(c){return validator.validate(c);};}else{return validator;}}var NUMBER_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return NumberValueAccessor;}),multi:true};/**
 * The accessor for writing a number value and listening to changes that is used by the
 * {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName} directives.
 *
 *  ### Example
 *  ```
 *  <input type="number" [(ngModel)]="age">
 *  ```
 */var NumberValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function NumberValueAccessor(_renderer,_elementRef){_classCallCheck$3(this,NumberValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass$3(NumberValueAccessor,[{key:'writeValue',value:function writeValue(value){// The value needs to be normalized for IE9, otherwise it is set to 'null' when null
var/** @type {?} */normalizedValue=value==null?'':value;this._renderer.setElementProperty(this._elementRef.nativeElement,'value',normalizedValue);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=function(value){fn(value==''?null:parseFloat(value));};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return NumberValueAccessor;}();NumberValueAccessor.decorators=[{type:Directive,args:[{selector:'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',host:{'(change)':'onChange($event.target.value)','(input)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[NUMBER_VALUE_ACCESSOR]}]}];/** @nocollapse */NumberValueAccessor.ctorParameters=function(){return[{type:RendererV1},{type:ElementRef}];};/**
 * @return {?}
 */function unimplemented(){throw new Error('unimplemented');}/**
 * A base class that all control directive extend.
 * It binds a {\@link FormControl} object to a DOM element.
 *
 * Used internally by Angular forms.
 *
 * \@stable
 * @abstract
 */var NgControl=function(_AbstractControlDirec2){_inherits$3(NgControl,_AbstractControlDirec2);function NgControl(){_classCallCheck$3(this,NgControl);/** @internal */var _this2=_possibleConstructorReturn$3(this,(NgControl.__proto__||Object.getPrototypeOf(NgControl)).apply(this,arguments));_this2._parent=null;_this2.name=null;_this2.valueAccessor=null;/** @internal */_this2._rawValidators=[];/** @internal */_this2._rawAsyncValidators=[];return _this2;}/**
     * @return {?}
     */_createClass$3(NgControl,[{key:'viewToModelUpdate',/**
     * @abstract
     * @param {?} newValue
     * @return {?}
     */value:function viewToModelUpdate(newValue){}},{key:'validator',get:function get(){return unimplemented();}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return unimplemented();}}]);return NgControl;}(AbstractControlDirective);var RADIO_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return RadioControlValueAccessor;}),multi:true};/**
 * Internal class used by Angular to uncheck radio buttons with the matching name.
 */var RadioControlRegistry=function(){function RadioControlRegistry(){_classCallCheck$3(this,RadioControlRegistry);this._accessors=[];}/**
     * @param {?} control
     * @param {?} accessor
     * @return {?}
     */_createClass$3(RadioControlRegistry,[{key:'add',value:function add(control,accessor){this._accessors.push([control,accessor]);}/**
     * @param {?} accessor
     * @return {?}
     */},{key:'remove',value:function remove(accessor){for(var/** @type {?} */i=this._accessors.length-1;i>=0;--i){if(this._accessors[i][1]===accessor){this._accessors.splice(i,1);return;}}}/**
     * @param {?} accessor
     * @return {?}
     */},{key:'select',value:function select(accessor){var _this3=this;this._accessors.forEach(function(c){if(_this3._isSameGroup(c,accessor)&&c[1]!==accessor){c[1].fireUncheck(accessor.value);}});}/**
     * @param {?} controlPair
     * @param {?} accessor
     * @return {?}
     */},{key:'_isSameGroup',value:function _isSameGroup(controlPair,accessor){if(!controlPair[0].control)return false;return controlPair[0]._parent===accessor._control._parent&&controlPair[1].name===accessor.name;}}]);return RadioControlRegistry;}();RadioControlRegistry.decorators=[{type:Injectable}];/** @nocollapse */RadioControlRegistry.ctorParameters=function(){return[];};/**
 * \@whatItDoes Writes radio control values and listens to radio control changes.
 *
 * Used by {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName}
 * to keep the view synced with the {\@link FormControl} model.
 *
 * \@howToUse
 *
 * If you have imported the {\@link FormsModule} or the {\@link ReactiveFormsModule}, this
 * value accessor will be active on any radio control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * ### How to use radio buttons with form directives
 *
 * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons
 * in the same group have the same `name` attribute.  Radio buttons with different `name`
 * attributes do not affect each other.
 *
 * {\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}
 *
 * When using radio buttons in a reactive form, radio buttons in the same group should have the
 * same `formControlName`. You can also add a `name` attribute, but it's optional.
 *
 * {\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}
 *
 *  * **npm package**: `\@angular/forms`
 *
 *  \@stable
 */var RadioControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     * @param {?} _registry
     * @param {?} _injector
     */function RadioControlValueAccessor(_renderer,_elementRef,_registry,_injector){_classCallCheck$3(this,RadioControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this._registry=_registry;this._injector=_injector;this.onChange=function(){};this.onTouched=function(){};}/**
     * @return {?}
     */_createClass$3(RadioControlValueAccessor,[{key:'ngOnInit',value:function ngOnInit(){this._control=this._injector.get(NgControl);this._checkName();this._registry.add(this._control,this);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this._registry.remove(this);}/**
     * @param {?} value
     * @return {?}
     */},{key:'writeValue',value:function writeValue(value){this._state=value===this.value;this._renderer.setElementProperty(this._elementRef.nativeElement,'checked',this._state);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){var _this4=this;this._fn=fn;this.onChange=function(){fn(_this4.value);_this4._registry.select(_this4);};}/**
     * @param {?} value
     * @return {?}
     */},{key:'fireUncheck',value:function fireUncheck(value){this.writeValue(value);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}/**
     * @return {?}
     */},{key:'_checkName',value:function _checkName(){if(this.name&&this.formControlName&&this.name!==this.formControlName){this._throwNameError();}if(!this.name&&this.formControlName)this.name=this.formControlName;}/**
     * @return {?}
     */},{key:'_throwNameError',value:function _throwNameError(){throw new Error('\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type="radio" formControlName="food" name="food">\n    ');}}]);return RadioControlValueAccessor;}();RadioControlValueAccessor.decorators=[{type:Directive,args:[{selector:'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',host:{'(change)':'onChange()','(blur)':'onTouched()'},providers:[RADIO_VALUE_ACCESSOR]}]}];/** @nocollapse */RadioControlValueAccessor.ctorParameters=function(){return[{type:RendererV1},{type:ElementRef},{type:RadioControlRegistry},{type:Injector}];};RadioControlValueAccessor.propDecorators={'name':[{type:Input}],'formControlName':[{type:Input}],'value':[{type:Input}]};var RANGE_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return RangeValueAccessor;}),multi:true};/**
 * The accessor for writing a range value and listening to changes that is used by the
 * {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName} directives.
 *
 *  ### Example
 *  ```
 *  <input type="range" [(ngModel)]="age" >
 *  ```
 */var RangeValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function RangeValueAccessor(_renderer,_elementRef){_classCallCheck$3(this,RangeValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}/**
     * @param {?} value
     * @return {?}
     */_createClass$3(RangeValueAccessor,[{key:'writeValue',value:function writeValue(value){this._renderer.setElementProperty(this._elementRef.nativeElement,'value',parseFloat(value));}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this.onChange=function(value){fn(value==''?null:parseFloat(value));};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}}]);return RangeValueAccessor;}();RangeValueAccessor.decorators=[{type:Directive,args:[{selector:'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',host:{'(change)':'onChange($event.target.value)','(input)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[RANGE_VALUE_ACCESSOR]}]}];/** @nocollapse */RangeValueAccessor.ctorParameters=function(){return[{type:RendererV1},{type:ElementRef}];};var SELECT_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return SelectControlValueAccessor;}),multi:true};/**
 * @param {?} id
 * @param {?} value
 * @return {?}
 */function _buildValueString(id,value){if(id==null)return''+value;if(!isPrimitive$1(value))value='Object';return(id+': '+value).slice(0,50);}/**
 * @param {?} valueString
 * @return {?}
 */function _extractId(valueString){return valueString.split(':')[0];}/**
 * \@whatItDoes Writes values and listens to changes on a select element.
 *
 * Used by {\@link NgModel}, {\@link FormControlDirective}, and {\@link FormControlName}
 * to keep the view synced with the {\@link FormControl} model.
 *
 * \@howToUse
 *
 * If you have imported the {\@link FormsModule} or the {\@link ReactiveFormsModule}, this
 * value accessor will be active on any select control that has a form directive. You do
 * **not** need to add a special selector to activate it.
 *
 * ### How to use select controls with form directives
 *
 * To use a select in a template-driven form, simply add an `ngModel` and a `name`
 * attribute to the main `<select>` tag.
 *
 * If your option values are simple strings, you can bind to the normal `value` property
 * on the option.  If your option values happen to be objects (and you'd like to save the
 * selection in your form as an object), use `ngValue` instead:
 *
 * {\@example forms/ts/selectControl/select_control_example.ts region='Component'}
 *
 * In reactive forms, you'll also want to add your form directive (`formControlName` or
 * `formControl`) on the main `<select>` tag. Like in the former example, you have the
 * choice of binding to the  `value` or `ngValue` property on the select's options.
 *
 * {\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}
 *
 * ### Caveat: Option selection
 *
 * Angular uses object identity to select option. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.
 * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects option by the return value of the function.
 *
 * #### Syntax
 *
 * ```
 * <select [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 * Note: We listen to the 'change' event because 'input' events aren't fired
 * for selects in Firefox and IE:
 * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350
 * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var SelectControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function SelectControlValueAccessor(_renderer,_elementRef){_classCallCheck$3(this,SelectControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;/** @internal */this._optionMap=new Map();/** @internal */this._idCounter=0;this.onChange=function(_){};this.onTouched=function(){};this._compareWith=looseIdentical$1;}/**
     * @param {?} fn
     * @return {?}
     */_createClass$3(SelectControlValueAccessor,[{key:'writeValue',/**
     * @param {?} value
     * @return {?}
     */value:function writeValue(value){this.value=value;var/** @type {?} */id=this._getOptionId(value);if(id==null){this._renderer.setElementProperty(this._elementRef.nativeElement,'selectedIndex',-1);}var/** @type {?} */valueString=_buildValueString(id,value);this._renderer.setElementProperty(this._elementRef.nativeElement,'value',valueString);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){var _this5=this;this.onChange=function(valueString){_this5.value=valueString;fn(_this5._getOptionValue(valueString));};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}/**
     * \@internal
     * @return {?}
     */},{key:'_registerOption',value:function _registerOption(){return(this._idCounter++).toString();}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_getOptionId',value:function _getOptionId(value){var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=Array.from(this._optionMap.keys())[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var id=_step4.value;if(this._compareWith(this._optionMap.get(id),value))return id;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}return null;}/**
     * \@internal
     * @param {?} valueString
     * @return {?}
     */},{key:'_getOptionValue',value:function _getOptionValue(valueString){var/** @type {?} */id=_extractId(valueString);return this._optionMap.has(id)?this._optionMap.get(id):valueString;}},{key:'compareWith',set:function set(fn){if(typeof fn!=='function'){throw new Error('compareWith must be a function, but received '+JSON.stringify(fn));}this._compareWith=fn;}}]);return SelectControlValueAccessor;}();SelectControlValueAccessor.decorators=[{type:Directive,args:[{selector:'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',host:{'(change)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[SELECT_VALUE_ACCESSOR]}]}];/** @nocollapse */SelectControlValueAccessor.ctorParameters=function(){return[{type:RendererV1},{type:ElementRef}];};SelectControlValueAccessor.propDecorators={'compareWith':[{type:Input}]};/**
 * \@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * \@howToUse
 *
 * See docs for {\@link SelectControlValueAccessor} for usage examples.
 *
 * \@stable
 */var NgSelectOption=function(){/**
     * @param {?} _element
     * @param {?} _renderer
     * @param {?} _select
     */function NgSelectOption(_element,_renderer,_select){_classCallCheck$3(this,NgSelectOption);this._element=_element;this._renderer=_renderer;this._select=_select;if(this._select)this.id=this._select._registerOption();}/**
     * @param {?} value
     * @return {?}
     */_createClass$3(NgSelectOption,[{key:'_setElementValue',/**
     * \@internal
     * @param {?} value
     * @return {?}
     */value:function _setElementValue(value){this._renderer.setElementProperty(this._element.nativeElement,'value',value);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._select){this._select._optionMap.delete(this.id);this._select.writeValue(this._select.value);}}},{key:'ngValue',set:function set(value){if(this._select==null)return;this._select._optionMap.set(this.id,value);this._setElementValue(_buildValueString(this.id,value));this._select.writeValue(this._select.value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'value',set:function set(value){this._setElementValue(value);if(this._select)this._select.writeValue(this._select.value);}}]);return NgSelectOption;}();NgSelectOption.decorators=[{type:Directive,args:[{selector:'option'}]}];/** @nocollapse */NgSelectOption.ctorParameters=function(){return[{type:ElementRef},{type:RendererV1},{type:SelectControlValueAccessor,decorators:[{type:Optional},{type:Host}]}];};NgSelectOption.propDecorators={'ngValue':[{type:Input,args:['ngValue']}],'value':[{type:Input,args:['value']}]};var SELECT_MULTIPLE_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return SelectMultipleControlValueAccessor;}),multi:true};/**
 * @param {?} id
 * @param {?} value
 * @return {?}
 */function _buildValueString$1(id,value){if(id==null)return''+value;if(typeof value==='string')value='\''+value+'\'';if(!isPrimitive$1(value))value='Object';return(id+': '+value).slice(0,50);}/**
 * @param {?} valueString
 * @return {?}
 */function _extractId$1(valueString){return valueString.split(':')[0];}/**
 * The accessor for writing a value and listening to changes on a select element.
 *
 *  ### Caveat: Options selection
 *
 * Angular uses object identity to select options. It's possible for the identities of items
 * to change while the data does not. This can happen, for example, if the items are produced
 * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the
 * second response will produce objects with different identities.
 *
 * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`
 * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.
 * If `compareWith` is given, Angular selects options by the return value of the function.
 *
 * #### Syntax
 *
 * ```
 * <select multiple [compareWith]="compareFn"  [(ngModel)]="selectedCountries">
 *     <option *ngFor="let country of countries" [ngValue]="country">
 *         {{country.name}}
 *     </option>
 * </select>
 *
 * compareFn(c1: Country, c2: Country): boolean {
 *     return c1 && c2 ? c1.id === c2.id : c1 === c2;
 * }
 * ```
 *
 * \@stable
 */var SelectMultipleControlValueAccessor=function(){/**
     * @param {?} _renderer
     * @param {?} _elementRef
     */function SelectMultipleControlValueAccessor(_renderer,_elementRef){_classCallCheck$3(this,SelectMultipleControlValueAccessor);this._renderer=_renderer;this._elementRef=_elementRef;/** @internal */this._optionMap=new Map();/** @internal */this._idCounter=0;this.onChange=function(_){};this.onTouched=function(){};this._compareWith=looseIdentical$1;}/**
     * @param {?} fn
     * @return {?}
     */_createClass$3(SelectMultipleControlValueAccessor,[{key:'writeValue',/**
     * @param {?} value
     * @return {?}
     */value:function writeValue(value){var _this6=this;this.value=value;var/** @type {?} */optionSelectedStateSetter=void 0;if(Array.isArray(value)){// convert values to ids
var/** @type {?} */ids=value.map(function(v){return _this6._getOptionId(v);});optionSelectedStateSetter=function optionSelectedStateSetter(opt,o){opt._setSelected(ids.indexOf(o.toString())>-1);};}else{optionSelectedStateSetter=function optionSelectedStateSetter(opt,o){opt._setSelected(false);};}this._optionMap.forEach(optionSelectedStateSetter);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){var _this7=this;this.onChange=function(_){var/** @type {?} */selected=[];if(_.hasOwnProperty('selectedOptions')){var/** @type {?} */options=_.selectedOptions;for(var/** @type {?} */i=0;i<options.length;i++){var/** @type {?} */opt=options.item(i);var/** @type {?} */val=_this7._getOptionValue(opt.value);selected.push(val);}}else{var/** @type {?} */_options=_.options;for(var/** @type {?} */_i=0;_i<_options.length;_i++){var/** @type {?} */_opt=_options.item(_i);if(_opt.selected){var/** @type {?} */_val=_this7._getOptionValue(_opt.value);selected.push(_val);}}}_this7.value=selected;fn(selected);};}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnTouched',value:function registerOnTouched(fn){this.onTouched=fn;}/**
     * @param {?} isDisabled
     * @return {?}
     */},{key:'setDisabledState',value:function setDisabledState(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_registerOption',value:function _registerOption(value){var/** @type {?} */id=(this._idCounter++).toString();this._optionMap.set(id,value);return id;}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_getOptionId',value:function _getOptionId(value){var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=Array.from(this._optionMap.keys())[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var id=_step5.value;if(this._compareWith(this._optionMap.get(id)._value,value))return id;}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return null;}/**
     * \@internal
     * @param {?} valueString
     * @return {?}
     */},{key:'_getOptionValue',value:function _getOptionValue(valueString){var/** @type {?} */id=_extractId$1(valueString);return this._optionMap.has(id)?this._optionMap.get(id)._value:valueString;}},{key:'compareWith',set:function set(fn){if(typeof fn!=='function'){throw new Error('compareWith must be a function, but received '+JSON.stringify(fn));}this._compareWith=fn;}}]);return SelectMultipleControlValueAccessor;}();SelectMultipleControlValueAccessor.decorators=[{type:Directive,args:[{selector:'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',host:{'(change)':'onChange($event.target)','(blur)':'onTouched()'},providers:[SELECT_MULTIPLE_VALUE_ACCESSOR]}]}];/** @nocollapse */SelectMultipleControlValueAccessor.ctorParameters=function(){return[{type:RendererV1},{type:ElementRef}];};SelectMultipleControlValueAccessor.propDecorators={'compareWith':[{type:Input}]};/**
 * Marks `<option>` as dynamic, so Angular can be notified when options change.
 *
 * ### Example
 *
 * ```
 * <select multiple name="city" ngModel>
 *   <option *ngFor="let c of cities" [value]="c"></option>
 * </select>
 * ```
 */var NgSelectMultipleOption=function(){/**
     * @param {?} _element
     * @param {?} _renderer
     * @param {?} _select
     */function NgSelectMultipleOption(_element,_renderer,_select){_classCallCheck$3(this,NgSelectMultipleOption);this._element=_element;this._renderer=_renderer;this._select=_select;if(this._select){this.id=this._select._registerOption(this);}}/**
     * @param {?} value
     * @return {?}
     */_createClass$3(NgSelectMultipleOption,[{key:'_setElementValue',/**
     * \@internal
     * @param {?} value
     * @return {?}
     */value:function _setElementValue(value){this._renderer.setElementProperty(this._element.nativeElement,'value',value);}/**
     * \@internal
     * @param {?} selected
     * @return {?}
     */},{key:'_setSelected',value:function _setSelected(selected){this._renderer.setElementProperty(this._element.nativeElement,'selected',selected);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this._select){this._select._optionMap.delete(this.id);this._select.writeValue(this._select.value);}}},{key:'ngValue',set:function set(value){if(this._select==null)return;this._value=value;this._setElementValue(_buildValueString$1(this.id,value));this._select.writeValue(this._select.value);}/**
     * @param {?} value
     * @return {?}
     */},{key:'value',set:function set(value){if(this._select){this._value=value;this._setElementValue(_buildValueString$1(this.id,value));this._select.writeValue(this._select.value);}else{this._setElementValue(value);}}}]);return NgSelectMultipleOption;}();NgSelectMultipleOption.decorators=[{type:Directive,args:[{selector:'option'}]}];/** @nocollapse */NgSelectMultipleOption.ctorParameters=function(){return[{type:ElementRef},{type:RendererV1},{type:SelectMultipleControlValueAccessor,decorators:[{type:Optional},{type:Host}]}];};NgSelectMultipleOption.propDecorators={'ngValue':[{type:Input,args:['ngValue']}],'value':[{type:Input,args:['value']}]};/**
 * @param {?} name
 * @param {?} parent
 * @return {?}
 */function controlPath(name,parent){return[].concat(_toConsumableArray$3(parent.path),[name]);}/**
 * @param {?} control
 * @param {?} dir
 * @return {?}
 */function setUpControl(control,dir){if(!control)_throwError$1(dir,'Cannot find control with');if(!dir.valueAccessor)_throwError$1(dir,'No value accessor for form control with');control.validator=Validators.compose([control.validator,dir.validator]);control.asyncValidator=Validators.composeAsync([control.asyncValidator,dir.asyncValidator]);dir.valueAccessor.writeValue(control.value);// view -> model
dir.valueAccessor.registerOnChange(function(newValue){dir.viewToModelUpdate(newValue);control.markAsDirty();control.setValue(newValue,{emitModelToViewChange:false});});// touched
dir.valueAccessor.registerOnTouched(function(){return control.markAsTouched();});control.registerOnChange(function(newValue,emitModelEvent){// control -> view
dir.valueAccessor.writeValue(newValue);// control -> ngModel
if(emitModelEvent)dir.viewToModelUpdate(newValue);});if(dir.valueAccessor.setDisabledState){control.registerOnDisabledChange(function(isDisabled){dir.valueAccessor.setDisabledState(isDisabled);});}// re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4
dir._rawValidators.forEach(function(validator){if(validator.registerOnValidatorChange)validator.registerOnValidatorChange(function(){return control.updateValueAndValidity();});});dir._rawAsyncValidators.forEach(function(validator){if(validator.registerOnValidatorChange)validator.registerOnValidatorChange(function(){return control.updateValueAndValidity();});});}/**
 * @param {?} control
 * @param {?} dir
 * @return {?}
 */function cleanUpControl(control,dir){dir.valueAccessor.registerOnChange(function(){return _noControlError(dir);});dir.valueAccessor.registerOnTouched(function(){return _noControlError(dir);});dir._rawValidators.forEach(function(validator){if(validator.registerOnValidatorChange){validator.registerOnValidatorChange(null);}});dir._rawAsyncValidators.forEach(function(validator){if(validator.registerOnValidatorChange){validator.registerOnValidatorChange(null);}});if(control)control._clearChangeFns();}/**
 * @param {?} control
 * @param {?} dir
 * @return {?}
 */function setUpFormContainer(control,dir){if(isBlank$3(control))_throwError$1(dir,'Cannot find control with');control.validator=Validators.compose([control.validator,dir.validator]);control.asyncValidator=Validators.composeAsync([control.asyncValidator,dir.asyncValidator]);}/**
 * @param {?} dir
 * @return {?}
 */function _noControlError(dir){return _throwError$1(dir,'There is no FormControl instance attached to form control element with');}/**
 * @param {?} dir
 * @param {?} message
 * @return {?}
 */function _throwError$1(dir,message){var/** @type {?} */messageEnd=void 0;if(dir.path.length>1){messageEnd='path: \''+dir.path.join(' -> ')+'\'';}else if(dir.path[0]){messageEnd='name: \''+dir.path+'\'';}else{messageEnd='unspecified name attribute';}throw new Error(message+' '+messageEnd);}/**
 * @param {?} validators
 * @return {?}
 */function composeValidators(validators){return isPresent$3(validators)?Validators.compose(validators.map(normalizeValidator)):null;}/**
 * @param {?} validators
 * @return {?}
 */function composeAsyncValidators(validators){return isPresent$3(validators)?Validators.composeAsync(validators.map(normalizeAsyncValidator)):null;}/**
 * @param {?} changes
 * @param {?} viewModel
 * @return {?}
 */function isPropertyUpdated(changes,viewModel){if(!changes.hasOwnProperty('model'))return false;var/** @type {?} */change=changes['model'];if(change.isFirstChange())return true;return!looseIdentical$1(viewModel,change.currentValue);}var BUILTIN_ACCESSORS=[CheckboxControlValueAccessor,RangeValueAccessor,NumberValueAccessor,SelectControlValueAccessor,SelectMultipleControlValueAccessor,RadioControlValueAccessor];/**
 * @param {?} valueAccessor
 * @return {?}
 */function isBuiltInAccessor(valueAccessor){return BUILTIN_ACCESSORS.some(function(a){return valueAccessor.constructor===a;});}/**
 * @param {?} dir
 * @param {?} valueAccessors
 * @return {?}
 */function selectValueAccessor(dir,valueAccessors){if(!valueAccessors)return null;var/** @type {?} */defaultAccessor=void 0;var/** @type {?} */builtinAccessor=void 0;var/** @type {?} */customAccessor=void 0;valueAccessors.forEach(function(v){if(v.constructor===DefaultValueAccessor){defaultAccessor=v;}else if(isBuiltInAccessor(v)){if(builtinAccessor)_throwError$1(dir,'More than one built-in value accessor matches form control with');builtinAccessor=v;}else{if(customAccessor)_throwError$1(dir,'More than one custom value accessor matches form control with');customAccessor=v;}});if(customAccessor)return customAccessor;if(builtinAccessor)return builtinAccessor;if(defaultAccessor)return defaultAccessor;_throwError$1(dir,'No valid value accessor for form control with');return null;}/**
 * This is a base class for code shared between {\@link NgModelGroup} and {\@link FormGroupName}.
 *
 * \@stable
 */var AbstractFormGroupDirective=function(_ControlContainer){_inherits$3(AbstractFormGroupDirective,_ControlContainer);function AbstractFormGroupDirective(){_classCallCheck$3(this,AbstractFormGroupDirective);return _possibleConstructorReturn$3(this,(AbstractFormGroupDirective.__proto__||Object.getPrototypeOf(AbstractFormGroupDirective)).apply(this,arguments));}_createClass$3(AbstractFormGroupDirective,[{key:'ngOnInit',/**
     * @return {?}
     */value:function ngOnInit(){this._checkParentType();this.formDirective.addFormGroup(this);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this.formDirective){this.formDirective.removeFormGroup(this);}}/**
     * Get the {\@link FormGroup} backing this binding.
     * @return {?}
     */},{key:'_checkParentType',/**
     * \@internal
     * @return {?}
     */value:function _checkParentType(){}},{key:'control',get:function get(){return this.formDirective.getFormGroup(this);}/**
     * Get the path to this control group.
     * @return {?}
     */},{key:'path',get:function get(){return controlPath(this.name,this._parent);}/**
     * Get the {\@link Form} to which this group belongs.
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._validators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._asyncValidators);}}]);return AbstractFormGroupDirective;}(ControlContainer);var AbstractControlStatus=function(){/**
     * @param {?} cd
     */function AbstractControlStatus(cd){_classCallCheck$3(this,AbstractControlStatus);this._cd=cd;}/**
     * @return {?}
     */_createClass$3(AbstractControlStatus,[{key:'ngClassUntouched',get:function get(){return this._cd.control?this._cd.control.untouched:false;}/**
     * @return {?}
     */},{key:'ngClassTouched',get:function get(){return this._cd.control?this._cd.control.touched:false;}/**
     * @return {?}
     */},{key:'ngClassPristine',get:function get(){return this._cd.control?this._cd.control.pristine:false;}/**
     * @return {?}
     */},{key:'ngClassDirty',get:function get(){return this._cd.control?this._cd.control.dirty:false;}/**
     * @return {?}
     */},{key:'ngClassValid',get:function get(){return this._cd.control?this._cd.control.valid:false;}/**
     * @return {?}
     */},{key:'ngClassInvalid',get:function get(){return this._cd.control?this._cd.control.invalid:false;}/**
     * @return {?}
     */},{key:'ngClassPending',get:function get(){return this._cd.control?this._cd.control.pending:false;}}]);return AbstractControlStatus;}();var ngControlStatusHost={'[class.ng-untouched]':'ngClassUntouched','[class.ng-touched]':'ngClassTouched','[class.ng-pristine]':'ngClassPristine','[class.ng-dirty]':'ngClassDirty','[class.ng-valid]':'ngClassValid','[class.ng-invalid]':'ngClassInvalid','[class.ng-pending]':'ngClassPending'};/**
 * Directive automatically applied to Angular form controls that sets CSS classes
 * based on control status (valid/invalid/dirty/etc).
 *
 * \@stable
 */var NgControlStatus=function(_AbstractControlStatu){_inherits$3(NgControlStatus,_AbstractControlStatu);/**
     * @param {?} cd
     */function NgControlStatus(cd){_classCallCheck$3(this,NgControlStatus);return _possibleConstructorReturn$3(this,(NgControlStatus.__proto__||Object.getPrototypeOf(NgControlStatus)).call(this,cd));}return NgControlStatus;}(AbstractControlStatus);NgControlStatus.decorators=[{type:Directive,args:[{selector:'[formControlName],[ngModel],[formControl]',host:ngControlStatusHost}]}];/** @nocollapse */NgControlStatus.ctorParameters=function(){return[{type:NgControl,decorators:[{type:Self}]}];};/**
 * Directive automatically applied to Angular form groups that sets CSS classes
 * based on control status (valid/invalid/dirty/etc).
 *
 * \@stable
 */var NgControlStatusGroup=function(_AbstractControlStatu2){_inherits$3(NgControlStatusGroup,_AbstractControlStatu2);/**
     * @param {?} cd
     */function NgControlStatusGroup(cd){_classCallCheck$3(this,NgControlStatusGroup);return _possibleConstructorReturn$3(this,(NgControlStatusGroup.__proto__||Object.getPrototypeOf(NgControlStatusGroup)).call(this,cd));}return NgControlStatusGroup;}(AbstractControlStatus);NgControlStatusGroup.decorators=[{type:Directive,args:[{selector:'[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',host:ngControlStatusHost}]}];/** @nocollapse */NgControlStatusGroup.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:Self}]}];};/**
 * Use by directives and components to emit custom Events.
 *
 * ### Examples
 *
 * In the following example, `Zippy` alternatively emits `open` and `close` events when its
 * title gets clicked:
 *
 * ```
 * \@Component({
 *   selector: 'zippy',
 *   template: `
 *   <div class="zippy">
 *     <div (click)="toggle()">Toggle</div>
 *     <div [hidden]="!visible">
 *       <ng-content></ng-content>
 *     </div>
 *  </div>`})
 * export class Zippy {
 *   visible: boolean = true;
 *   \@Output() open: EventEmitter<any> = new EventEmitter();
 *   \@Output() close: EventEmitter<any> = new EventEmitter();
 *
 *   toggle() {
 *     this.visible = !this.visible;
 *     if (this.visible) {
 *       this.open.emit(null);
 *     } else {
 *       this.close.emit(null);
 *     }
 *   }
 * }
 * ```
 *
 * The events payload can be accessed by the parameter `$event` on the components output event
 * handler:
 *
 * ```
 * <zippy (open)="onOpen($event)" (close)="onClose($event)"></zippy>
 * ```
 *
 * Uses Rx.Observable but provides an adapter to make it work as specified here:
 * https://github.com/jhusain/observable-spec
 *
 * Once a reference implementation of the spec is available, switch to it.
 * \@stable
 */var EventEmitter$2=function(_Subject){_inherits$3(EventEmitter$$1,_Subject);/**
     * Creates an instance of [EventEmitter], which depending on [isAsync],
     * delivers events synchronously or asynchronously.
     * @param {?=} isAsync
     */function EventEmitter$$1(){var isAsync=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;_classCallCheck$3(this,EventEmitter$$1);var _this11=_possibleConstructorReturn$3(this,(EventEmitter$$1.__proto__||Object.getPrototypeOf(EventEmitter$$1)).call(this));_this11.__isAsync=isAsync;return _this11;}/**
     * @param {?=} value
     * @return {?}
     */_createClass$3(EventEmitter$$1,[{key:'emit',value:function emit(value){_get$2(EventEmitter$$1.prototype.__proto__||Object.getPrototypeOf(EventEmitter$$1.prototype),'next',this).call(this,value);}/**
     * @param {?=} generatorOrNext
     * @param {?=} error
     * @param {?=} complete
     * @return {?}
     */},{key:'subscribe',value:function subscribe(generatorOrNext,error,complete){var/** @type {?} */schedulerFn=void 0;var/** @type {?} */errorFn=function errorFn(err){return null;};var/** @type {?} */completeFn=function completeFn(){return null;};if(generatorOrNext&&(typeof generatorOrNext==='undefined'?'undefined':_typeof$2(generatorOrNext))==='object'){schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext.next(value);});}:function(value){generatorOrNext.next(value);};if(generatorOrNext.error){errorFn=this.__isAsync?function(err){setTimeout(function(){return generatorOrNext.error(err);});}:function(err){generatorOrNext.error(err);};}if(generatorOrNext.complete){completeFn=this.__isAsync?function(){setTimeout(function(){return generatorOrNext.complete();});}:function(){generatorOrNext.complete();};}}else{schedulerFn=this.__isAsync?function(value){setTimeout(function(){return generatorOrNext(value);});}:function(value){generatorOrNext(value);};if(error){errorFn=this.__isAsync?function(err){setTimeout(function(){return error(err);});}:function(err){error(err);};}if(complete){completeFn=this.__isAsync?function(){setTimeout(function(){return complete();});}:function(){complete();};}}return _get$2(EventEmitter$$1.prototype.__proto__||Object.getPrototypeOf(EventEmitter$$1.prototype),'subscribe',this).call(this,schedulerFn,errorFn,completeFn);}}]);return EventEmitter$$1;}(Subject$$1);/**
 * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.
 */var VALID='VALID';/**
 * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.
 */var INVALID='INVALID';/**
 * Indicates that a FormControl is pending, i.e. that async validation is occurring and
 * errors are not yet available for the input value.
 */var PENDING='PENDING';/**
 * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor
 * calculations of validity or value.
 */var DISABLED='DISABLED';/**
 * @param {?} control
 * @param {?} path
 * @param {?} delimiter
 * @return {?}
 */function _find(control,path,delimiter){if(path==null)return null;if(!(path instanceof Array)){path=path.split(delimiter);}if(path instanceof Array&&path.length===0)return null;return path.reduce(function(v,name){if(v instanceof FormGroup){return v.controls[name]||null;}if(v instanceof FormArray){return v.at(/** @type {?} */name)||null;}return null;},control);}/**
 * @param {?} r
 * @return {?}
 */function toObservable(r){return isPromise(r)?fromPromise$$1(r):r;}/**
 * @param {?} validator
 * @return {?}
 */function coerceToValidator(validator){return Array.isArray(validator)?composeValidators(validator):validator;}/**
 * @param {?} asyncValidator
 * @return {?}
 */function coerceToAsyncValidator(asyncValidator){return Array.isArray(asyncValidator)?composeAsyncValidators(asyncValidator):asyncValidator;}/**
 * \@whatItDoes This is the base class for {\@link FormControl}, {\@link FormGroup}, and
 * {\@link FormArray}.
 *
 * It provides some of the shared behavior that all controls and groups of controls have, like
 * running validators, calculating status, and resetting state. It also defines the properties
 * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be
 * instantiated directly.
 *
 * \@stable
 * @abstract
 */var AbstractControl=function(){/**
     * @param {?} validator
     * @param {?} asyncValidator
     */function AbstractControl(validator,asyncValidator){_classCallCheck$3(this,AbstractControl);this.validator=validator;this.asyncValidator=asyncValidator;/** @internal */this._onCollectionChange=function(){};this._pristine=true;this._touched=false;/** @internal */this._onDisabledChange=[];}/**
     * The value of the control.
     * @return {?}
     */_createClass$3(AbstractControl,[{key:'setValidators',/**
     * Sets the synchronous validators that are active on this control.  Calling
     * this will overwrite any existing sync validators.
     * @param {?} newValidator
     * @return {?}
     */value:function setValidators(newValidator){this.validator=coerceToValidator(newValidator);}/**
     * Sets the async validators that are active on this control. Calling this
     * will overwrite any existing async validators.
     * @param {?} newValidator
     * @return {?}
     */},{key:'setAsyncValidators',value:function setAsyncValidators(newValidator){this.asyncValidator=coerceToAsyncValidator(newValidator);}/**
     * Empties out the sync validator list.
     * @return {?}
     */},{key:'clearValidators',value:function clearValidators(){this.validator=null;}/**
     * Empties out the async validator list.
     * @return {?}
     */},{key:'clearAsyncValidators',value:function clearAsyncValidators(){this.asyncValidator=null;}/**
     * Marks the control as `touched`.
     *
     * This will also mark all direct ancestors as `touched` to maintain
     * the model.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsTouched',value:function markAsTouched(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref.onlySelf;this._touched=true;if(this._parent&&!onlySelf){this._parent.markAsTouched({onlySelf:onlySelf});}}/**
     * Marks the control as `untouched`.
     *
     * If the control has any children, it will also mark all children as `untouched`
     * to maintain the model, and re-calculate the `touched` status of all parent
     * controls.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsUntouched',value:function markAsUntouched(){var _ref2=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref2.onlySelf;this._touched=false;this._forEachChild(function(control){control.markAsUntouched({onlySelf:true});});if(this._parent&&!onlySelf){this._parent._updateTouched({onlySelf:onlySelf});}}/**
     * Marks the control as `dirty`.
     *
     * This will also mark all direct ancestors as `dirty` to maintain
     * the model.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsDirty',value:function markAsDirty(){var _ref3=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref3.onlySelf;this._pristine=false;if(this._parent&&!onlySelf){this._parent.markAsDirty({onlySelf:onlySelf});}}/**
     * Marks the control as `pristine`.
     *
     * If the control has any children, it will also mark all children as `pristine`
     * to maintain the model, and re-calculate the `pristine` status of all parent
     * controls.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsPristine',value:function markAsPristine(){var _ref4=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref4.onlySelf;this._pristine=true;this._forEachChild(function(control){control.markAsPristine({onlySelf:true});});if(this._parent&&!onlySelf){this._parent._updatePristine({onlySelf:onlySelf});}}/**
     * Marks the control as `pending`.
     * @param {?=} __0
     * @return {?}
     */},{key:'markAsPending',value:function markAsPending(){var _ref5=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref5.onlySelf;this._status=PENDING;if(this._parent&&!onlySelf){this._parent.markAsPending({onlySelf:onlySelf});}}/**
     * Disables the control. This means the control will be exempt from validation checks and
     * excluded from the aggregate value of any parent. Its status is `DISABLED`.
     *
     * If the control has children, all children will be disabled to maintain the model.
     * @param {?=} __0
     * @return {?}
     */},{key:'disable',value:function disable(){var _ref6=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref6.onlySelf,emitEvent=_ref6.emitEvent;this._status=DISABLED;this._errors=null;this._forEachChild(function(control){control.disable({onlySelf:true});});this._updateValue();if(emitEvent!==false){this._valueChanges.emit(this._value);this._statusChanges.emit(this._status);}this._updateAncestors(onlySelf);this._onDisabledChange.forEach(function(changeFn){return changeFn(true);});}/**
     * Enables the control. This means the control will be included in validation checks and
     * the aggregate value of its parent. Its status is re-calculated based on its value and
     * its validators.
     *
     * If the control has children, all children will be enabled.
     * @param {?=} __0
     * @return {?}
     */},{key:'enable',value:function enable(){var _ref7=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref7.onlySelf,emitEvent=_ref7.emitEvent;this._status=VALID;this._forEachChild(function(control){control.enable({onlySelf:true});});this.updateValueAndValidity({onlySelf:true,emitEvent:emitEvent});this._updateAncestors(onlySelf);this._onDisabledChange.forEach(function(changeFn){return changeFn(false);});}/**
     * @param {?} onlySelf
     * @return {?}
     */},{key:'_updateAncestors',value:function _updateAncestors(onlySelf){if(this._parent&&!onlySelf){this._parent.updateValueAndValidity();this._parent._updatePristine();this._parent._updateTouched();}}/**
     * @param {?} parent
     * @return {?}
     */},{key:'setParent',value:function setParent(parent){this._parent=parent;}/**
     * Sets the value of the control. Abstract method (implemented in sub-classes).
     * @abstract
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */},{key:'setValue',value:function setValue(value,options){}/**
     * Patches the value of the control. Abstract method (implemented in sub-classes).
     * @abstract
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value,options){}/**
     * Resets the control. Abstract method (implemented in sub-classes).
     * @abstract
     * @param {?=} value
     * @param {?=} options
     * @return {?}
     */},{key:'reset',value:function reset(value,options){}/**
     * Re-calculates the value and validation status of the control.
     *
     * By default, it will also update the value and validity of its ancestors.
     * @param {?=} __0
     * @return {?}
     */},{key:'updateValueAndValidity',value:function updateValueAndValidity(){var _ref8=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref8.onlySelf,emitEvent=_ref8.emitEvent;this._setInitialStatus();this._updateValue();if(this.enabled){this._cancelExistingSubscription();this._errors=this._runValidator();this._status=this._calculateStatus();if(this._status===VALID||this._status===PENDING){this._runAsyncValidator(emitEvent);}}if(emitEvent!==false){this._valueChanges.emit(this._value);this._statusChanges.emit(this._status);}if(this._parent&&!onlySelf){this._parent.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}}/**
     * \@internal
     * @param {?=} __0
     * @return {?}
     */},{key:'_updateTreeValidity',value:function _updateTreeValidity(){var _ref9=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{emitEvent:true},emitEvent=_ref9.emitEvent;this._forEachChild(function(ctrl){return ctrl._updateTreeValidity({emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:true,emitEvent:emitEvent});}/**
     * @return {?}
     */},{key:'_setInitialStatus',value:function _setInitialStatus(){this._status=this._allControlsDisabled()?DISABLED:VALID;}/**
     * @return {?}
     */},{key:'_runValidator',value:function _runValidator(){return this.validator?this.validator(this):null;}/**
     * @param {?} emitEvent
     * @return {?}
     */},{key:'_runAsyncValidator',value:function _runAsyncValidator(emitEvent){var _this12=this;if(this.asyncValidator){this._status=PENDING;var/** @type {?} */obs=toObservable(this.asyncValidator(this));if(!isObservable(obs)){throw new Error('expected the following validator to return Promise or Observable: '+this.asyncValidator+'. If you are using FormBuilder; did you forget to brace your validators in an array?');}this._asyncValidationSubscription=obs.subscribe({next:function next(res){return _this12.setErrors(res,{emitEvent:emitEvent});}});}}/**
     * @return {?}
     */},{key:'_cancelExistingSubscription',value:function _cancelExistingSubscription(){if(this._asyncValidationSubscription){this._asyncValidationSubscription.unsubscribe();}}/**
     * Sets errors on a form control.
     *
     * This is used when validations are run manually by the user, rather than automatically.
     *
     * Calling `setErrors` will also update the validity of the parent control.
     *
     * ### Example
     *
     * ```
     * const login = new FormControl("someLogin");
     * login.setErrors({
     *   "notUnique": true
     * });
     *
     * expect(login.valid).toEqual(false);
     * expect(login.errors).toEqual({"notUnique": true});
     *
     * login.setValue("someOtherLogin");
     *
     * expect(login.valid).toEqual(true);
     * ```
     * @param {?} errors
     * @param {?=} __1
     * @return {?}
     */},{key:'setErrors',value:function setErrors(errors){var _ref10=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},emitEvent=_ref10.emitEvent;this._errors=errors;this._updateControlsErrors(emitEvent!==false);}/**
     * Retrieves a child control given the control's name or path.
     *
     * Paths can be passed in as an array or a string delimited by a dot.
     *
     * To get a control nested within a `person` sub-group:
     *
     * * `this.form.get('person.name');`
     *
     * -OR-
     *
     * * `this.form.get(['person', 'name']);`
     * @param {?} path
     * @return {?}
     */},{key:'get',value:function get(path){return _find(this,path,'.');}/**
     * Returns true if the control with the given path has the error specified. Otherwise
     * returns null or undefined.
     *
     * If no path is given, it checks for the error on the present control.
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'getError',value:function getError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */control=path?this.get(path):this;return control&&control._errors?control._errors[errorCode]:null;}/**
     * Returns true if the control with the given path has the error specified. Otherwise
     * returns false.
     *
     * If no path is given, it checks for the error on the present control.
     * @param {?} errorCode
     * @param {?=} path
     * @return {?}
     */},{key:'hasError',value:function hasError(errorCode){var path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return!!this.getError(errorCode,path);}/**
     * Retrieves the top-level ancestor of this control.
     * @return {?}
     */},{key:'_updateControlsErrors',/**
     * \@internal
     * @param {?} emitEvent
     * @return {?}
     */value:function _updateControlsErrors(emitEvent){this._status=this._calculateStatus();if(emitEvent){this._statusChanges.emit(this._status);}if(this._parent){this._parent._updateControlsErrors(emitEvent);}}/**
     * \@internal
     * @return {?}
     */},{key:'_initObservables',value:function _initObservables(){this._valueChanges=new EventEmitter$2();this._statusChanges=new EventEmitter$2();}/**
     * @return {?}
     */},{key:'_calculateStatus',value:function _calculateStatus(){if(this._allControlsDisabled())return DISABLED;if(this._errors)return INVALID;if(this._anyControlsHaveStatus(PENDING))return PENDING;if(this._anyControlsHaveStatus(INVALID))return INVALID;return VALID;}/**
     * \@internal
     * @abstract
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){}/**
     * \@internal
     * @abstract
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){}/**
     * \@internal
     * @abstract
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){}/**
     * \@internal
     * @abstract
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){}/**
     * \@internal
     * @param {?} status
     * @return {?}
     */},{key:'_anyControlsHaveStatus',value:function _anyControlsHaveStatus(status){return this._anyControls(function(control){return control.status===status;});}/**
     * \@internal
     * @return {?}
     */},{key:'_anyControlsDirty',value:function _anyControlsDirty(){return this._anyControls(function(control){return control.dirty;});}/**
     * \@internal
     * @return {?}
     */},{key:'_anyControlsTouched',value:function _anyControlsTouched(){return this._anyControls(function(control){return control.touched;});}/**
     * \@internal
     * @param {?=} __0
     * @return {?}
     */},{key:'_updatePristine',value:function _updatePristine(){var _ref11=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref11.onlySelf;this._pristine=!this._anyControlsDirty();if(this._parent&&!onlySelf){this._parent._updatePristine({onlySelf:onlySelf});}}/**
     * \@internal
     * @param {?=} __0
     * @return {?}
     */},{key:'_updateTouched',value:function _updateTouched(){var _ref12=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onlySelf=_ref12.onlySelf;this._touched=this._anyControlsTouched();if(this._parent&&!onlySelf){this._parent._updateTouched({onlySelf:onlySelf});}}/**
     * \@internal
     * @param {?} formState
     * @return {?}
     */},{key:'_isBoxedValue',value:function _isBoxedValue(formState){return(typeof formState==='undefined'?'undefined':_typeof$2(formState))==='object'&&formState!==null&&Object.keys(formState).length===2&&'value'in formState&&'disabled'in formState;}/**
     * \@internal
     * @param {?} fn
     * @return {?}
     */},{key:'_registerOnCollectionChange',value:function _registerOnCollectionChange(fn){this._onCollectionChange=fn;}},{key:'value',get:function get(){return this._value;}/**
     * The parent control.
     * @return {?}
     */},{key:'parent',get:function get(){return this._parent;}/**
     * The validation status of the control. There are four possible
     * validation statuses:
     *
     * * **VALID**:  control has passed all validation checks
     * * **INVALID**: control has failed at least one validation check
     * * **PENDING**: control is in the midst of conducting a validation check
     * * **DISABLED**: control is exempt from validation checks
     *
     * These statuses are mutually exclusive, so a control cannot be
     * both valid AND invalid or invalid AND disabled.
     * @return {?}
     */},{key:'status',get:function get(){return this._status;}/**
     * A control is `valid` when its `status === VALID`.
     *
     * In order to have this status, the control must have passed all its
     * validation checks.
     * @return {?}
     */},{key:'valid',get:function get(){return this._status===VALID;}/**
     * A control is `invalid` when its `status === INVALID`.
     *
     * In order to have this status, the control must have failed
     * at least one of its validation checks.
     * @return {?}
     */},{key:'invalid',get:function get(){return this._status===INVALID;}/**
     * A control is `pending` when its `status === PENDING`.
     *
     * In order to have this status, the control must be in the
     * middle of conducting a validation check.
     * @return {?}
     */},{key:'pending',get:function get(){return this._status==PENDING;}/**
     * A control is `disabled` when its `status === DISABLED`.
     *
     * Disabled controls are exempt from validation checks and
     * are not included in the aggregate value of their ancestor
     * controls.
     * @return {?}
     */},{key:'disabled',get:function get(){return this._status===DISABLED;}/**
     * A control is `enabled` as long as its `status !== DISABLED`.
     *
     * In other words, it has a status of `VALID`, `INVALID`, or
     * `PENDING`.
     * @return {?}
     */},{key:'enabled',get:function get(){return this._status!==DISABLED;}/**
     * Returns any errors generated by failing validation. If there
     * are no errors, it will return null.
     * @return {?}
     */},{key:'errors',get:function get(){return this._errors;}/**
     * A control is `pristine` if the user has not yet changed
     * the value in the UI.
     *
     * Note that programmatic changes to a control's value will
     * *not* mark it dirty.
     * @return {?}
     */},{key:'pristine',get:function get(){return this._pristine;}/**
     * A control is `dirty` if the user has changed the value
     * in the UI.
     *
     * Note that programmatic changes to a control's value will
     * *not* mark it dirty.
     * @return {?}
     */},{key:'dirty',get:function get(){return!this.pristine;}/**
     * A control is marked `touched` once the user has triggered
     * a `blur` event on it.
     * @return {?}
     */},{key:'touched',get:function get(){return this._touched;}/**
     * A control is `untouched` if the user has not yet triggered
     * a `blur` event on it.
     * @return {?}
     */},{key:'untouched',get:function get(){return!this._touched;}/**
     * Emits an event every time the value of the control changes, in
     * the UI or programmatically.
     * @return {?}
     */},{key:'valueChanges',get:function get(){return this._valueChanges;}/**
     * Emits an event every time the validation status of the control
     * is re-calculated.
     * @return {?}
     */},{key:'statusChanges',get:function get(){return this._statusChanges;}},{key:'root',get:function get(){var/** @type {?} */x=this;while(x._parent){x=x._parent;}return x;}}]);return AbstractControl;}();/**
 * \@whatItDoes Tracks the value and validation status of an individual form control.
 *
 * It is one of the three fundamental building blocks of Angular forms, along with
 * {\@link FormGroup} and {\@link FormArray}.
 *
 * \@howToUse
 *
 * When instantiating a {\@link FormControl}, you can pass in an initial value as the
 * first argument. Example:
 *
 * ```ts
 * const ctrl = new FormControl('some value');
 * console.log(ctrl.value);     // 'some value'
 * ```
 *
 * You can also initialize the control with a form state object on instantiation,
 * which includes both the value and whether or not the control is disabled.
 * You can't use the value key without the disabled key; both are required
 * to use this way of initialization.
 *
 * ```ts
 * const ctrl = new FormControl({value: 'n/a', disabled: true});
 * console.log(ctrl.value);     // 'n/a'
 * console.log(ctrl.status);   // 'DISABLED'
 * ```
 *
 * To include a sync validator (or an array of sync validators) with the control,
 * pass it in as the second argument. Async validators are also supported, but
 * have to be passed in separately as the third arg.
 *
 * ```ts
 * const ctrl = new FormControl('', Validators.required);
 * console.log(ctrl.value);     // ''
 * console.log(ctrl.status);   // 'INVALID'
 * ```
 *
 * See its superclass, {\@link AbstractControl}, for more properties and methods.
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var FormControl=function(_AbstractControl){_inherits$3(FormControl,_AbstractControl);/**
     * @param {?=} formState
     * @param {?=} validator
     * @param {?=} asyncValidator
     */function FormControl(){var formState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck$3(this,FormControl);/** @internal */var _this13=_possibleConstructorReturn$3(this,(FormControl.__proto__||Object.getPrototypeOf(FormControl)).call(this,coerceToValidator(validator),coerceToAsyncValidator(asyncValidator)));_this13._onChange=[];_this13._applyFormState(formState);_this13.updateValueAndValidity({onlySelf:true,emitEvent:false});_this13._initObservables();return _this13;}/**
     * Set the value of the form control to `value`.
     *
     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`
     * and not its parent component. This defaults to false.
     *
     * If `emitEvent` is `true`, this
     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults
     * to true (as it falls through to `updateValueAndValidity`).
     *
     * If `emitModelToViewChange` is `true`, the view will be notified about the new value
     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not
     * specified.
     *
     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the
     * model.  This is the default behavior if `emitViewToModelChange` is not specified.
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */_createClass$3(FormControl,[{key:'setValue',value:function setValue(value){var _this14=this;var _ref13=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref13.onlySelf,emitEvent=_ref13.emitEvent,emitModelToViewChange=_ref13.emitModelToViewChange,emitViewToModelChange=_ref13.emitViewToModelChange;this._value=value;if(this._onChange.length&&emitModelToViewChange!==false){this._onChange.forEach(function(changeFn){return changeFn(_this14._value,emitViewToModelChange!==false);});}this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * Patches the value of a control.
     *
     * This function is functionally the same as {\@link FormControl.setValue} at this level.
     * It exists for symmetry with {\@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,
     * where it does behave differently.
     * @param {?} value
     * @param {?=} options
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};this.setValue(value,options);}/**
     * Resets the form control. This means by default:
     *
     * * it is marked as `pristine`
     * * it is marked as `untouched`
     * * value is set to null
     *
     * You can also reset to a specific form state by passing through a standalone
     * value or a form state object that contains both a value and a disabled state
     * (these are the only two properties that cannot be calculated).
     *
     * Ex:
     *
     * ```ts
     * this.control.reset('Nancy');
     *
     * console.log(this.control.value);  // 'Nancy'
     * ```
     *
     * OR
     *
     * ```
     * this.control.reset({value: 'Nancy', disabled: true});
     *
     * console.log(this.control.value);  // 'Nancy'
     * console.log(this.control.status);  // 'DISABLED'
     * ```
     * @param {?=} formState
     * @param {?=} __1
     * @return {?}
     */},{key:'reset',value:function reset(){var formState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var _ref14=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref14.onlySelf,emitEvent=_ref14.emitEvent;this._applyFormState(formState);this.markAsPristine({onlySelf:onlySelf});this.markAsUntouched({onlySelf:onlySelf});this.setValue(this._value,{onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * \@internal
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){}/**
     * \@internal
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){return false;}/**
     * \@internal
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){return this.disabled;}/**
     * Register a listener for change events.
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnChange',value:function registerOnChange(fn){this._onChange.push(fn);}/**
     * \@internal
     * @return {?}
     */},{key:'_clearChangeFns',value:function _clearChangeFns(){this._onChange=[];this._onDisabledChange=[];this._onCollectionChange=function(){};}/**
     * Register a listener for disabled events.
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnDisabledChange',value:function registerOnDisabledChange(fn){this._onDisabledChange.push(fn);}/**
     * \@internal
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){}/**
     * @param {?} formState
     * @return {?}
     */},{key:'_applyFormState',value:function _applyFormState(formState){if(this._isBoxedValue(formState)){this._value=formState.value;formState.disabled?this.disable({onlySelf:true,emitEvent:false}):this.enable({onlySelf:true,emitEvent:false});}else{this._value=formState;}}}]);return FormControl;}(AbstractControl);/**
 * \@whatItDoes Tracks the value and validity state of a group of {\@link FormControl}
 * instances.
 *
 * A `FormGroup` aggregates the values of each child {\@link FormControl} into one object,
 * with each control name as the key.  It calculates its status by reducing the statuses
 * of its children. For example, if one of the controls in a group is invalid, the entire
 * group becomes invalid.
 *
 * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,
 * along with {\@link FormControl} and {\@link FormArray}.
 *
 * \@howToUse
 *
 * When instantiating a {\@link FormGroup}, pass in a collection of child controls as the first
 * argument. The key for each child will be the name under which it is registered.
 *
 * ### Example
 *
 * ```
 * const form = new FormGroup({
 *   first: new FormControl('Nancy', Validators.minLength(2)),
 *   last: new FormControl('Drew'),
 * });
 *
 * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}
 * console.log(form.status);  // 'VALID'
 * ```
 *
 * You can also include group-level validators as the second arg, or group-level async
 * validators as the third arg. These come in handy when you want to perform validation
 * that considers the value of more than one child control.
 *
 * ### Example
 *
 * ```
 * const form = new FormGroup({
 *   password: new FormControl('', Validators.minLength(2)),
 *   passwordConfirm: new FormControl('', Validators.minLength(2)),
 * }, passwordMatchValidator);
 *
 *
 * function passwordMatchValidator(g: FormGroup) {
 *    return g.get('password').value === g.get('passwordConfirm').value
 *       ? null : {'mismatch': true};
 * }
 * ```
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var FormGroup=function(_AbstractControl2){_inherits$3(FormGroup,_AbstractControl2);/**
     * @param {?} controls
     * @param {?=} validator
     * @param {?=} asyncValidator
     */function FormGroup(controls){var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck$3(this,FormGroup);var _this15=_possibleConstructorReturn$3(this,(FormGroup.__proto__||Object.getPrototypeOf(FormGroup)).call(this,validator,asyncValidator));_this15.controls=controls;_this15._initObservables();_this15._setUpControls();_this15.updateValueAndValidity({onlySelf:true,emitEvent:false});return _this15;}/**
     * Registers a control with the group's list of controls.
     *
     * This method does not update value or validity of the control, so for
     * most cases you'll want to use {\@link FormGroup.addControl} instead.
     * @param {?} name
     * @param {?} control
     * @return {?}
     */_createClass$3(FormGroup,[{key:'registerControl',value:function registerControl(name,control){if(this.controls[name])return this.controls[name];this.controls[name]=control;control.setParent(this);control._registerOnCollectionChange(this._onCollectionChange);return control;}/**
     * Add a control to this group.
     * @param {?} name
     * @param {?} control
     * @return {?}
     */},{key:'addControl',value:function addControl(name,control){this.registerControl(name,control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Remove a control from this group.
     * @param {?} name
     * @return {?}
     */},{key:'removeControl',value:function removeControl(name){if(this.controls[name])this.controls[name]._registerOnCollectionChange(function(){});delete this.controls[name];this.updateValueAndValidity();this._onCollectionChange();}/**
     * Replace an existing control.
     * @param {?} name
     * @param {?} control
     * @return {?}
     */},{key:'setControl',value:function setControl(name,control){if(this.controls[name])this.controls[name]._registerOnCollectionChange(function(){});delete this.controls[name];if(control)this.registerControl(name,control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Check whether there is an enabled control with the given name in the group.
     *
     * It will return false for disabled controls. If you'd like to check for
     * existence in the group only, use {\@link AbstractControl.get} instead.
     * @param {?} controlName
     * @return {?}
     */},{key:'contains',value:function contains(controlName){return this.controls.hasOwnProperty(controlName)&&this.controls[controlName].enabled;}/**
     *  Sets the value of the {\@link FormGroup}. It accepts an object that matches
     *  the structure of the group, with control names as keys.
     *
     * This method performs strict checks, so it will throw an error if you try
     * to set the value of a control that doesn't exist or if you exclude the
     * value of a control.
     *
     *  ### Example
     *
     *  ```
     *  const form = new FormGroup({
     *     first: new FormControl(),
     *     last: new FormControl()
     *  });
     *  console.log(form.value);   // {first: null, last: null}
     *
     *  form.setValue({first: 'Nancy', last: 'Drew'});
     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}
     *
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */},{key:'setValue',value:function setValue(value){var _this16=this;var _ref15=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref15.onlySelf,emitEvent=_ref15.emitEvent;this._checkAllValuesPresent(value);Object.keys(value).forEach(function(name){_this16._throwIfControlMissing(name);_this16.controls[name].setValue(value[name],{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     *  Patches the value of the {\@link FormGroup}. It accepts an object with control
     *  names as keys, and will do its best to match the values to the correct controls
     *  in the group.
     *
     *  It accepts both super-sets and sub-sets of the group without throwing an error.
     *
     *  ### Example
     *
     *  ```
     *  const form = new FormGroup({
     *     first: new FormControl(),
     *     last: new FormControl()
     *  });
     *  console.log(form.value);   // {first: null, last: null}
     *
     *  form.patchValue({first: 'Nancy'});
     *  console.log(form.value);   // {first: 'Nancy', last: null}
     *
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value){var _this17=this;var _ref16=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref16.onlySelf,emitEvent=_ref16.emitEvent;Object.keys(value).forEach(function(name){if(_this17.controls[name]){_this17.controls[name].patchValue(value[name],{onlySelf:true,emitEvent:emitEvent});}});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * Resets the {\@link FormGroup}. This means by default:
     *
     * * The group and all descendants are marked `pristine`
     * * The group and all descendants are marked `untouched`
     * * The value of all descendants will be null or null maps
     *
     * You can also reset to a specific form state by passing in a map of states
     * that matches the structure of your form, with control names as keys. The state
     * can be a standalone value or a form state object with both a value and a disabled
     * status.
     *
     * ### Example
     *
     * ```ts
     * this.form.reset({first: 'name', last: 'last name'});
     *
     * console.log(this.form.value);  // {first: 'name', last: 'last name'}
     * ```
     *
     * - OR -
     *
     * ```
     * this.form.reset({
     *   first: {value: 'name', disabled: true},
     *   last: 'last'
     * });
     *
     * console.log(this.form.value);  // {first: 'name', last: 'last name'}
     * console.log(this.form.get('first').status);  // 'DISABLED'
     * ```
     * @param {?=} value
     * @param {?=} __1
     * @return {?}
     */},{key:'reset',value:function reset(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref17=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref17.onlySelf,emitEvent=_ref17.emitEvent;this._forEachChild(function(control,name){control.reset(value[name],{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});this._updatePristine({onlySelf:onlySelf});this._updateTouched({onlySelf:onlySelf});}/**
     * The aggregate value of the {\@link FormGroup}, including any disabled controls.
     *
     * If you'd like to include all values regardless of disabled status, use this method.
     * Otherwise, the `value` property is the best way to get the value of the group.
     * @return {?}
     */},{key:'getRawValue',value:function getRawValue(){return this._reduceChildren({},function(acc,control,name){acc[name]=control instanceof FormControl?control.value:control.getRawValue();return acc;});}/**
     * \@internal
     * @param {?} name
     * @return {?}
     */},{key:'_throwIfControlMissing',value:function _throwIfControlMissing(name){if(!Object.keys(this.controls).length){throw new Error('\n        There are no form controls registered with this group yet.  If you\'re using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ');}if(!this.controls[name]){throw new Error('Cannot find form control with name: '+name+'.');}}/**
     * \@internal
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){var _this18=this;Object.keys(this.controls).forEach(function(k){return cb(_this18.controls[k],k);});}/**
     * \@internal
     * @return {?}
     */},{key:'_setUpControls',value:function _setUpControls(){var _this19=this;this._forEachChild(function(control){control.setParent(_this19);control._registerOnCollectionChange(_this19._onCollectionChange);});}/**
     * \@internal
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){this._value=this._reduceValue();}/**
     * \@internal
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){var _this20=this;var/** @type {?} */res=false;this._forEachChild(function(control,name){res=res||_this20.contains(name)&&condition(control);});return res;}/**
     * \@internal
     * @return {?}
     */},{key:'_reduceValue',value:function _reduceValue(){var _this21=this;return this._reduceChildren({},function(acc,control,name){if(control.enabled||_this21.disabled){acc[name]=control.value;}return acc;});}/**
     * \@internal
     * @param {?} initValue
     * @param {?} fn
     * @return {?}
     */},{key:'_reduceChildren',value:function _reduceChildren(initValue,fn){var/** @type {?} */res=initValue;this._forEachChild(function(control,name){res=fn(res,control,name);});return res;}/**
     * \@internal
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=Object.keys(this.controls)[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var controlName=_step6.value;if(this.controls[controlName].enabled){return false;}}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}return Object.keys(this.controls).length>0||this.disabled;}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_checkAllValuesPresent',value:function _checkAllValuesPresent(value){this._forEachChild(function(control,name){if(value[name]===undefined){throw new Error('Must supply a value for form control with name: \''+name+'\'.');}});}}]);return FormGroup;}(AbstractControl);/**
 * \@whatItDoes Tracks the value and validity state of an array of {\@link FormControl},
 * {\@link FormGroup} or {\@link FormArray} instances.
 *
 * A `FormArray` aggregates the values of each child {\@link FormControl} into an array.
 * It calculates its status by reducing the statuses of its children. For example, if one of
 * the controls in a `FormArray` is invalid, the entire array becomes invalid.
 *
 * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,
 * along with {\@link FormControl} and {\@link FormGroup}.
 *
 * \@howToUse
 *
 * When instantiating a {\@link FormArray}, pass in an array of child controls as the first
 * argument.
 *
 * ### Example
 *
 * ```
 * const arr = new FormArray([
 *   new FormControl('Nancy', Validators.minLength(2)),
 *   new FormControl('Drew'),
 * ]);
 *
 * console.log(arr.value);   // ['Nancy', 'Drew']
 * console.log(arr.status);  // 'VALID'
 * ```
 *
 * You can also include array-level validators as the second arg, or array-level async
 * validators as the third arg. These come in handy when you want to perform validation
 * that considers the value of more than one child control.
 *
 * ### Adding or removing controls
 *
 * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods
 * in `FormArray` itself. These methods ensure the controls are properly tracked in the
 * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate
 * the `FormArray` directly, as that will result in strange and unexpected behavior such
 * as broken change detection.
 *
 * * **npm package**: `\@angular/forms`
 *
 * \@stable
 */var FormArray=function(_AbstractControl3){_inherits$3(FormArray,_AbstractControl3);/**
     * @param {?} controls
     * @param {?=} validator
     * @param {?=} asyncValidator
     */function FormArray(controls){var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck$3(this,FormArray);var _this22=_possibleConstructorReturn$3(this,(FormArray.__proto__||Object.getPrototypeOf(FormArray)).call(this,validator,asyncValidator));_this22.controls=controls;_this22._initObservables();_this22._setUpControls();_this22.updateValueAndValidity({onlySelf:true,emitEvent:false});return _this22;}/**
     * Get the {\@link AbstractControl} at the given `index` in the array.
     * @param {?} index
     * @return {?}
     */_createClass$3(FormArray,[{key:'at',value:function at(index){return this.controls[index];}/**
     * Insert a new {\@link AbstractControl} at the end of the array.
     * @param {?} control
     * @return {?}
     */},{key:'push',value:function push(control){this.controls.push(control);this._registerControl(control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Insert a new {\@link AbstractControl} at the given `index` in the array.
     * @param {?} index
     * @param {?} control
     * @return {?}
     */},{key:'insert',value:function insert(index,control){this.controls.splice(index,0,control);this._registerControl(control);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Remove the control at the given `index` in the array.
     * @param {?} index
     * @return {?}
     */},{key:'removeAt',value:function removeAt(index){if(this.controls[index])this.controls[index]._registerOnCollectionChange(function(){});this.controls.splice(index,1);this.updateValueAndValidity();this._onCollectionChange();}/**
     * Replace an existing control.
     * @param {?} index
     * @param {?} control
     * @return {?}
     */},{key:'setControl',value:function setControl(index,control){if(this.controls[index])this.controls[index]._registerOnCollectionChange(function(){});this.controls.splice(index,1);if(control){this.controls.splice(index,0,control);this._registerControl(control);}this.updateValueAndValidity();this._onCollectionChange();}/**
     * Length of the control array.
     * @return {?}
     */},{key:'setValue',/**
     *  Sets the value of the {\@link FormArray}. It accepts an array that matches
     *  the structure of the control.
     *
     * This method performs strict checks, so it will throw an error if you try
     * to set the value of a control that doesn't exist or if you exclude the
     * value of a control.
     *
     *  ### Example
     *
     *  ```
     *  const arr = new FormArray([
     *     new FormControl(),
     *     new FormControl()
     *  ]);
     *  console.log(arr.value);   // [null, null]
     *
     *  arr.setValue(['Nancy', 'Drew']);
     *  console.log(arr.value);   // ['Nancy', 'Drew']
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */value:function setValue(value){var _this23=this;var _ref18=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref18.onlySelf,emitEvent=_ref18.emitEvent;this._checkAllValuesPresent(value);value.forEach(function(newValue,index){_this23._throwIfControlMissing(index);_this23.at(index).setValue(newValue,{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     *  Patches the value of the {\@link FormArray}. It accepts an array that matches the
     *  structure of the control, and will do its best to match the values to the correct
     *  controls in the group.
     *
     *  It accepts both super-sets and sub-sets of the array without throwing an error.
     *
     *  ### Example
     *
     *  ```
     *  const arr = new FormArray([
     *     new FormControl(),
     *     new FormControl()
     *  ]);
     *  console.log(arr.value);   // [null, null]
     *
     *  arr.patchValue(['Nancy']);
     *  console.log(arr.value);   // ['Nancy', null]
     *  ```
     * @param {?} value
     * @param {?=} __1
     * @return {?}
     */},{key:'patchValue',value:function patchValue(value){var _this24=this;var _ref19=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref19.onlySelf,emitEvent=_ref19.emitEvent;value.forEach(function(newValue,index){if(_this24.at(index)){_this24.at(index).patchValue(newValue,{onlySelf:true,emitEvent:emitEvent});}});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});}/**
     * Resets the {\@link FormArray}. This means by default:
     *
     * * The array and all descendants are marked `pristine`
     * * The array and all descendants are marked `untouched`
     * * The value of all descendants will be null or null maps
     *
     * You can also reset to a specific form state by passing in an array of states
     * that matches the structure of the control. The state can be a standalone value
     * or a form state object with both a value and a disabled status.
     *
     * ### Example
     *
     * ```ts
     * this.arr.reset(['name', 'last name']);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * ```
     *
     * - OR -
     *
     * ```
     * this.arr.reset([
     *   {value: 'name', disabled: true},
     *   'last'
     * ]);
     *
     * console.log(this.arr.value);  // ['name', 'last name']
     * console.log(this.arr.get(0).status);  // 'DISABLED'
     * ```
     * @param {?=} value
     * @param {?=} __1
     * @return {?}
     */},{key:'reset',value:function reset(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var _ref20=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},onlySelf=_ref20.onlySelf,emitEvent=_ref20.emitEvent;this._forEachChild(function(control,index){control.reset(value[index],{onlySelf:true,emitEvent:emitEvent});});this.updateValueAndValidity({onlySelf:onlySelf,emitEvent:emitEvent});this._updatePristine({onlySelf:onlySelf});this._updateTouched({onlySelf:onlySelf});}/**
     * The aggregate value of the array, including any disabled controls.
     *
     * If you'd like to include all values regardless of disabled status, use this method.
     * Otherwise, the `value` property is the best way to get the value of the array.
     * @return {?}
     */},{key:'getRawValue',value:function getRawValue(){return this.controls.map(function(control){return control instanceof FormControl?control.value:control.getRawValue();});}/**
     * \@internal
     * @param {?} index
     * @return {?}
     */},{key:'_throwIfControlMissing',value:function _throwIfControlMissing(index){if(!this.controls.length){throw new Error('\n        There are no form controls registered with this array yet.  If you\'re using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ');}if(!this.at(index)){throw new Error('Cannot find form control at index '+index);}}/**
     * \@internal
     * @param {?} cb
     * @return {?}
     */},{key:'_forEachChild',value:function _forEachChild(cb){this.controls.forEach(function(control,index){cb(control,index);});}/**
     * \@internal
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(){var _this25=this;this._value=this.controls.filter(function(control){return control.enabled||_this25.disabled;}).map(function(control){return control.value;});}/**
     * \@internal
     * @param {?} condition
     * @return {?}
     */},{key:'_anyControls',value:function _anyControls(condition){return this.controls.some(function(control){return control.enabled&&condition(control);});}/**
     * \@internal
     * @return {?}
     */},{key:'_setUpControls',value:function _setUpControls(){var _this26=this;this._forEachChild(function(control){return _this26._registerControl(control);});}/**
     * \@internal
     * @param {?} value
     * @return {?}
     */},{key:'_checkAllValuesPresent',value:function _checkAllValuesPresent(value){this._forEachChild(function(control,i){if(value[i]===undefined){throw new Error('Must supply a value for form control at index: '+i+'.');}});}/**
     * \@internal
     * @return {?}
     */},{key:'_allControlsDisabled',value:function _allControlsDisabled(){var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=this.controls[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var control=_step7.value;if(control.enabled)return false;}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}return this.controls.length>0||this.disabled;}/**
     * @param {?} control
     * @return {?}
     */},{key:'_registerControl',value:function _registerControl(control){control.setParent(this);control._registerOnCollectionChange(this._onCollectionChange);}},{key:'length',get:function get(){return this.controls.length;}}]);return FormArray;}(AbstractControl);var formDirectiveProvider={provide:ControlContainer,useExisting:forwardRef(function(){return NgForm;})};var resolvedPromise=Promise.resolve(null);/**
 * \@whatItDoes Creates a top-level {\@link FormGroup} instance and binds it to a form
 * to track aggregate form value and validation status.
 *
 * \@howToUse
 *
 * As soon as you import the `FormsModule`, this directive becomes active by default on
 * all `<form>` tags.  You don't need to add a special selector.
 *
 * You can export the directive into a local template variable using `ngForm` as the key
 * (ex: `#myForm="ngForm"`). This is optional, but useful.  Many properties from the underlying
 * {\@link FormGroup} instance are duplicated on the directive itself, so a reference to it
 * will give you access to the aggregate value and validity status of the form, as well as
 * user interaction properties like `dirty` and `touched`.
 *
 * To register child controls with the form, you'll want to use {\@link NgModel} with a
 * `name` attribute.  You can also use {\@link NgModelGroup} if you'd like to create
 * sub-groups within the form.
 *
 * You can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * {\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `FormsModule`
 *
 *  \@stable
 */var NgForm=function(_ControlContainer2){_inherits$3(NgForm,_ControlContainer2);/**
     * @param {?} validators
     * @param {?} asyncValidators
     */function NgForm(validators,asyncValidators){_classCallCheck$3(this,NgForm);var _this27=_possibleConstructorReturn$3(this,(NgForm.__proto__||Object.getPrototypeOf(NgForm)).call(this));_this27._submitted=false;_this27.ngSubmit=new EventEmitter$2();_this27.form=new FormGroup({},composeValidators(validators),composeAsyncValidators(asyncValidators));return _this27;}/**
     * @return {?}
     */_createClass$3(NgForm,[{key:'addControl',/**
     * @param {?} dir
     * @return {?}
     */value:function addControl(dir){var _this28=this;resolvedPromise.then(function(){var/** @type {?} */container=_this28._findContainer(dir.path);dir._control=container.registerControl(dir.name,dir.control);setUpControl(dir.control,dir);dir.control.updateValueAndValidity({emitEvent:false});});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getControl',value:function getControl(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeControl',value:function removeControl(dir){var _this29=this;resolvedPromise.then(function(){var/** @type {?} */container=_this29._findContainer(dir.path);if(container){container.removeControl(dir.name);}});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'addFormGroup',value:function addFormGroup(dir){var _this30=this;resolvedPromise.then(function(){var/** @type {?} */container=_this30._findContainer(dir.path);var/** @type {?} */group$$1=new FormGroup({});setUpFormContainer(group$$1,dir);container.registerControl(dir.name,group$$1);group$$1.updateValueAndValidity({emitEvent:false});});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeFormGroup',value:function removeFormGroup(dir){var _this31=this;resolvedPromise.then(function(){var/** @type {?} */container=_this31._findContainer(dir.path);if(container){container.removeControl(dir.name);}});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getFormGroup',value:function getFormGroup(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @param {?} value
     * @return {?}
     */},{key:'updateModel',value:function updateModel(dir,value){var _this32=this;resolvedPromise.then(function(){var/** @type {?} */ctrl=_this32.form.get(dir.path);ctrl.setValue(value);});}/**
     * @param {?} value
     * @return {?}
     */},{key:'setValue',value:function setValue(value){this.control.setValue(value);}/**
     * @param {?} $event
     * @return {?}
     */},{key:'onSubmit',value:function onSubmit($event){this._submitted=true;this.ngSubmit.emit($event);return false;}/**
     * @return {?}
     */},{key:'onReset',value:function onReset(){this.resetForm();}/**
     * @param {?=} value
     * @return {?}
     */},{key:'resetForm',value:function resetForm(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this.form.reset(value);this._submitted=false;}/**
     * \@internal
     * @param {?} path
     * @return {?}
     */},{key:'_findContainer',value:function _findContainer(path){path.pop();return path.length?this.form.get(path):this.form;}},{key:'submitted',get:function get(){return this._submitted;}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this;}/**
     * @return {?}
     */},{key:'control',get:function get(){return this.form;}/**
     * @return {?}
     */},{key:'path',get:function get(){return[];}/**
     * @return {?}
     */},{key:'controls',get:function get(){return this.form.controls;}}]);return NgForm;}(ControlContainer);NgForm.decorators=[{type:Directive,args:[{selector:'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',providers:[formDirectiveProvider],host:{'(submit)':'onSubmit($event)','(reset)':'onReset()'},outputs:['ngSubmit'],exportAs:'ngForm'}]}];/** @nocollapse */NgForm.ctorParameters=function(){return[{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]}];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Examples={formControlName:'\n    <div [formGroup]="myGroup">\n      <input formControlName="firstName">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });',formGroupName:'\n    <div [formGroup]="myGroup">\n       <div formGroupName="person">\n          <input formControlName="firstName">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });',formArrayName:'\n    <div [formGroup]="myGroup">\n      <div formArrayName="cities">\n        <div *ngFor="let city of cityArray.controls; let i=index">\n          <input [formControlName]="i">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl(\'SF\')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });',ngModelGroup:'\n    <form>\n       <div ngModelGroup="person">\n          <input [(ngModel)]="person.name" name="firstName">\n       </div>\n    </form>',ngModelWithFormGroup:'\n    <div [formGroup]="myGroup">\n       <input formControlName="firstName">\n       <input [(ngModel)]="showMoreControls" [ngModelOptions]="{standalone: true}">\n    </div>\n  '};var TemplateDrivenErrors=function(){function TemplateDrivenErrors(){_classCallCheck$3(this,TemplateDrivenErrors);}_createClass$3(TemplateDrivenErrors,null,[{key:'modelParentException',/**
     * @return {?}
     */value:function modelParentException(){throw new Error('\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup\'s partner directive "formControlName" instead.  Example:\n\n      '+Examples.formControlName+'\n\n      Or, if you\'d like to avoid registering this form control, indicate that it\'s standalone in ngModelOptions:\n\n      Example:\n\n      '+Examples.ngModelWithFormGroup);}/**
     * @return {?}
     */},{key:'formGroupNameException',value:function formGroupNameException(){throw new Error('\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      '+Examples.formGroupName+'\n\n      Option 2:  Update ngModel\'s parent be ngModelGroup (template-driven strategy):\n\n      '+Examples.ngModelGroup);}/**
     * @return {?}
     */},{key:'missingNameException',value:function missingNameException(){throw new Error('If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as \'standalone\' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]="person.firstName" name="first">\n      Example 2: <input [(ngModel)]="person.firstName" [ngModelOptions]="{standalone: true}">');}/**
     * @return {?}
     */},{key:'modelGroupParentException',value:function modelGroupParentException(){throw new Error('\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      '+Examples.formGroupName+'\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      '+Examples.ngModelGroup);}}]);return TemplateDrivenErrors;}();var modelGroupProvider={provide:ControlContainer,useExisting:forwardRef(function(){return NgModelGroup;})};/**
 * \@whatItDoes Creates and binds a {\@link FormGroup} instance to a DOM element.
 *
 * \@howToUse
 *
 * This directive can only be used as a child of {\@link NgForm} (or in other words,
 * within `<form>` tags).
 *
 * Use this directive if you'd like to create a sub-group within a form. This can
 * come in handy if you want to validate a sub-group of your form separately from
 * the rest of your form, or if some values in your domain model make more sense to
 * consume together in a nested object.
 *
 * Pass in the name you'd like this sub-group to have and it will become the key
 * for the sub-group in the form's full value. You can also export the directive into
 * a local template variable using `ngModelGroup` (ex: `#myGroup="ngModelGroup"`).
 *
 * {\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `FormsModule`
 *
 * \@stable
 */var NgModelGroup=function(_AbstractFormGroupDir){_inherits$3(NgModelGroup,_AbstractFormGroupDir);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     */function NgModelGroup(parent,validators,asyncValidators){_classCallCheck$3(this,NgModelGroup);var _this33=_possibleConstructorReturn$3(this,(NgModelGroup.__proto__||Object.getPrototypeOf(NgModelGroup)).call(this));_this33._parent=parent;_this33._validators=validators;_this33._asyncValidators=asyncValidators;return _this33;}/**
     * \@internal
     * @return {?}
     */_createClass$3(NgModelGroup,[{key:'_checkParentType',value:function _checkParentType(){if(!(this._parent instanceof NgModelGroup)&&!(this._parent instanceof NgForm)){TemplateDrivenErrors.modelGroupParentException();}}}]);return NgModelGroup;}(AbstractFormGroupDirective);NgModelGroup.decorators=[{type:Directive,args:[{selector:'[ngModelGroup]',providers:[modelGroupProvider],exportAs:'ngModelGroup'}]}];/** @nocollapse */NgModelGroup.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:Host},{type:SkipSelf}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]}];};NgModelGroup.propDecorators={'name':[{type:Input,args:['ngModelGroup']}]};var formControlBinding={provide:NgControl,useExisting:forwardRef(function(){return NgModel;})};/**
 * `ngModel` forces an additional change detection run when its inputs change:
 * E.g.:
 * ```
 * <div>{{myModel.valid}}</div>
 * <input [(ngModel)]="myValue" #myModel="ngModel">
 * ```
 * I.e. `ngModel` can export itself on the element and then be used in the template.
 * Normally, this would result in expressions before the `input` that use the exported directive
 * to have and old value as they have been
 * dirty checked before. As this is a very common case for `ngModel`, we added this second change
 * detection run.
 *
 * Notes:
 * - this is just one extra run no matter how many `ngModel` have been changed.
 * - this is a general problem when using `exportAs` for directives!
 */var resolvedPromise$1=Promise.resolve(null);/**
 * \@whatItDoes Creates a {\@link FormControl} instance from a domain model and binds it
 * to a form control element.
 *
 * The {\@link FormControl} instance will track the value, user interaction, and
 * validation status of the control and keep the view synced with the model. If used
 * within a parent form, the directive will also register itself with the form as a child
 * control.
 *
 * \@howToUse
 *
 * This directive can be used by itself or as part of a larger form. All you need is the
 * `ngModel` selector to activate it.
 *
 * It accepts a domain model as an optional {\@link \@Input}. If you have a one-way binding
 * to `ngModel` with `[]` syntax, changing the value of the domain model in the component
 * class will set the value in the view. If you have a two-way binding with `[()]` syntax
 * (also known as 'banana-box syntax'), the value in the UI will always be synced back to
 * the domain model in your class as well.
 *
 * If you wish to inspect the properties of the associated {\@link FormControl} (like
 * validity state), you can also export the directive into a local template variable using
 * `ngModel` as the key (ex: `#myVar="ngModel"`). You can then access the control using the
 * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)
 * will fall through to the control anyway, so you can access them directly. You can see a
 * full list of properties directly available in {\@link AbstractControlDirective}.
 *
 * The following is an example of a simple standalone control using `ngModel`:
 *
 * {\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}
 *
 * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute
 * so that the control can be registered with the parent form under that name.
 *
 * It's worth noting that in the context of a parent form, you often can skip one-way or
 * two-way binding because the parent form will sync the value for you. You can access
 * its properties by exporting it into a local template variable using `ngForm` (ex:
 * `#f="ngForm"`). Then you can pass it where it needs to go on submit.
 *
 * If you do need to populate initial values into your form, using a one-way binding for
 * `ngModel` tends to be sufficient as long as you use the exported form's value rather
 * than the domain model's value on submit.
 *
 * Take a look at an example of using `ngModel` within a form:
 *
 * {\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}
 *
 * To see `ngModel` examples with different form control types, see:
 *
 * * Radio buttons: {\@link RadioControlValueAccessor}
 * * Selects: {\@link SelectControlValueAccessor}
 *
 * **npm package**: `\@angular/forms`
 *
 * **NgModule**: `FormsModule`
 *
 *  \@stable
 */var NgModel=function(_NgControl){_inherits$3(NgModel,_NgControl);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     * @param {?} valueAccessors
     */function NgModel(parent,validators,asyncValidators,valueAccessors){_classCallCheck$3(this,NgModel);/** @internal */var _this34=_possibleConstructorReturn$3(this,(NgModel.__proto__||Object.getPrototypeOf(NgModel)).call(this));_this34._control=new FormControl();/** @internal */_this34._registered=false;_this34._composing=false;_this34.update=new EventEmitter$2();_this34._parent=parent;_this34._rawValidators=validators||[];_this34._rawAsyncValidators=asyncValidators||[];_this34.valueAccessor=selectValueAccessor(_this34,valueAccessors);return _this34;}/**
     * @return {?}
     */_createClass$3(NgModel,[{key:'compositionStart',value:function compositionStart(){this._composing=true;}/**
     * @return {?}
     */},{key:'compositionEnd',value:function compositionEnd(){this._composing=false;this.update.emit(this.viewModel);}/**
     * @param {?} changes
     * @return {?}
     */},{key:'ngOnChanges',value:function ngOnChanges(changes){this._checkForErrors();if(!this._registered)this._setUpControl();if('isDisabled'in changes){this._updateDisabled(changes);}if(isPropertyUpdated(changes,this.viewModel)){this._updateValue(this.model);this.viewModel=this.model;}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this);}/**
     * @return {?}
     */},{key:'viewToModelUpdate',/**
     * @param {?} newValue
     * @return {?}
     */value:function viewToModelUpdate(newValue){this.viewModel=newValue;!this._composing&&this.update.emit(newValue);}/**
     * @return {?}
     */},{key:'_setUpControl',value:function _setUpControl(){this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this);this._registered=true;}/**
     * @return {?}
     */},{key:'_isStandalone',value:function _isStandalone(){return!this._parent||this.options&&this.options.standalone;}/**
     * @return {?}
     */},{key:'_setUpStandalone',value:function _setUpStandalone(){setUpControl(this._control,this);this._control.updateValueAndValidity({emitEvent:false});}/**
     * @return {?}
     */},{key:'_checkForErrors',value:function _checkForErrors(){if(!this._isStandalone()){this._checkParentType();}this._checkName();}/**
     * @return {?}
     */},{key:'_checkParentType',value:function _checkParentType(){if(!(this._parent instanceof NgModelGroup)&&this._parent instanceof AbstractFormGroupDirective){TemplateDrivenErrors.formGroupNameException();}else if(!(this._parent instanceof NgModelGroup)&&!(this._parent instanceof NgForm)){TemplateDrivenErrors.modelParentException();}}/**
     * @return {?}
     */},{key:'_checkName',value:function _checkName(){if(this.options&&this.options.name)this.name=this.options.name;if(!this._isStandalone()&&!this.name){TemplateDrivenErrors.missingNameException();}}/**
     * @param {?} value
     * @return {?}
     */},{key:'_updateValue',value:function _updateValue(value){var _this35=this;resolvedPromise$1.then(function(){_this35.control.setValue(value,{emitViewToModelChange:false});});}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_updateDisabled',value:function _updateDisabled(changes){var _this36=this;var/** @type {?} */disabledValue=changes['isDisabled'].currentValue;var/** @type {?} */isDisabled=disabledValue===''||disabledValue&&disabledValue!=='false';resolvedPromise$1.then(function(){if(isDisabled&&!_this36.control.disabled){_this36.control.disable();}else if(!isDisabled&&_this36.control.disabled){_this36.control.enable();}});}},{key:'control',get:function get(){return this._control;}/**
     * @return {?}
     */},{key:'path',get:function get(){return this._parent?controlPath(this.name,this._parent):[this.name];}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._rawValidators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._rawAsyncValidators);}}]);return NgModel;}(NgControl);NgModel.decorators=[{type:Directive,args:[{selector:'[ngModel]:not([formControlName]):not([formControl])',providers:[formControlBinding],exportAs:'ngModel'}]}];/** @nocollapse */NgModel.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:Optional},{type:Host}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALUE_ACCESSOR]}]}];};NgModel.propDecorators={'name':[{type:Input}],'isDisabled':[{type:Input,args:['disabled']}],'model':[{type:Input,args:['ngModel']}],'options':[{type:Input,args:['ngModelOptions']}],'update':[{type:Output,args:['ngModelChange']}],'compositionStart':[{type:HostListener,args:['compositionstart']}],'compositionEnd':[{type:HostListener,args:['compositionend']}]};var ReactiveErrors=function(){function ReactiveErrors(){_classCallCheck$3(this,ReactiveErrors);}_createClass$3(ReactiveErrors,null,[{key:'controlParentException',/**
     * @return {?}
     */value:function controlParentException(){throw new Error('formControlName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      '+Examples.formControlName);}/**
     * @return {?}
     */},{key:'ngModelGroupException',value:function ngModelGroupException(){throw new Error('formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a "form" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        '+Examples.formGroupName+'\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        '+Examples.ngModelGroup);}/**
     * @return {?}
     */},{key:'missingFormException',value:function missingFormException(){throw new Error('formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       '+Examples.formControlName);}/**
     * @return {?}
     */},{key:'groupParentException',value:function groupParentException(){throw new Error('formGroupName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      '+Examples.formGroupName);}/**
     * @return {?}
     */},{key:'arrayParentException',value:function arrayParentException(){throw new Error('formArrayName must be used with a parent formGroup directive.  You\'ll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        '+Examples.formArrayName);}/**
     * @return {?}
     */},{key:'disabledAttrWarning',value:function disabledAttrWarning(){console.warn('\n      It looks like you\'re using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid \'changed after checked\' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: \'Nancy\', disabled: true}, Validators.required),\n        last: new FormControl(\'Drew\', Validators.required)\n      });\n    ');}}]);return ReactiveErrors;}();var formControlBinding$1={provide:NgControl,useExisting:forwardRef(function(){return FormControlDirective;})};/**
 * \@whatItDoes Syncs a standalone {\@link FormControl} instance to a form control element.
 *
 * In other words, this directive ensures that any values written to the {\@link FormControl}
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * {\@link FormControl} instance (view -> model).
 *
 * \@howToUse
 *
 * Use this directive if you'd like to create and manage a {\@link FormControl} instance directly.
 * Simply create a {\@link FormControl}, save it to your component class, and pass it into the
 * {\@link FormControlDirective}.
 *
 * This directive is designed to be used as a standalone control.  Unlike {\@link FormControlName},
 * it does not require that your {\@link FormControl} instance be part of any parent
 * {\@link FormGroup}, and it won't be registered to any {\@link FormGroupDirective} that
 * exists above it.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * {\@link FormControl} instance. See a full list of available properties in
 * {\@link AbstractControl}.
 *
 * **Set the value**: You can pass in an initial value when instantiating the {\@link FormControl},
 * or you can set it programmatically later using {\@link AbstractControl.setValue} or
 * {\@link AbstractControl.patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {\@link AbstractControl.valueChanges} event.  You can also listen to
 * {\@link AbstractControl.statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 *  \@stable
 */var FormControlDirective=function(_NgControl2){_inherits$3(FormControlDirective,_NgControl2);/**
     * @param {?} validators
     * @param {?} asyncValidators
     * @param {?} valueAccessors
     */function FormControlDirective(validators,asyncValidators,valueAccessors){_classCallCheck$3(this,FormControlDirective);var _this37=_possibleConstructorReturn$3(this,(FormControlDirective.__proto__||Object.getPrototypeOf(FormControlDirective)).call(this));_this37.update=new EventEmitter$2();_this37._rawValidators=validators||[];_this37._rawAsyncValidators=asyncValidators||[];_this37.valueAccessor=selectValueAccessor(_this37,valueAccessors);return _this37;}/**
     * @param {?} isDisabled
     * @return {?}
     */_createClass$3(FormControlDirective,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if(this._isControlChanged(changes)){setUpControl(this.form,this);if(this.control.disabled&&this.valueAccessor.setDisabledState){this.valueAccessor.setDisabledState(true);}this.form.updateValueAndValidity({emitEvent:false});}if(isPropertyUpdated(changes,this.viewModel)){this.form.setValue(this.model);this.viewModel=this.model;}}/**
     * @return {?}
     */},{key:'viewToModelUpdate',/**
     * @param {?} newValue
     * @return {?}
     */value:function viewToModelUpdate(newValue){this.viewModel=newValue;this.update.emit(newValue);}/**
     * @param {?} changes
     * @return {?}
     */},{key:'_isControlChanged',value:function _isControlChanged(changes){return changes.hasOwnProperty('form');}},{key:'isDisabled',set:function set(isDisabled){ReactiveErrors.disabledAttrWarning();}},{key:'path',get:function get(){return[];}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._rawValidators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._rawAsyncValidators);}/**
     * @return {?}
     */},{key:'control',get:function get(){return this.form;}}]);return FormControlDirective;}(NgControl);FormControlDirective.decorators=[{type:Directive,args:[{selector:'[formControl]',providers:[formControlBinding$1],exportAs:'ngForm'}]}];/** @nocollapse */FormControlDirective.ctorParameters=function(){return[{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALUE_ACCESSOR]}]}];};FormControlDirective.propDecorators={'form':[{type:Input,args:['formControl']}],'model':[{type:Input,args:['ngModel']}],'update':[{type:Output,args:['ngModelChange']}],'isDisabled':[{type:Input,args:['disabled']}]};var formDirectiveProvider$1={provide:ControlContainer,useExisting:forwardRef(function(){return FormGroupDirective;})};/**
 * \@whatItDoes Binds an existing {\@link FormGroup} to a DOM element.
 *
 * \@howToUse
 *
 * This directive accepts an existing {\@link FormGroup} instance. It will then use this
 * {\@link FormGroup} instance to match any child {\@link FormControl}, {\@link FormGroup},
 * and {\@link FormArray} instances to child {\@link FormControlName}, {\@link FormGroupName},
 * and {\@link FormArrayName} directives.
 *
 * **Set value**: You can set the form's initial value when instantiating the
 * {\@link FormGroup}, or you can set it programmatically later using the {\@link FormGroup}'s
 * {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue} methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe
 * to the {\@link FormGroup}'s {\@link AbstractControl.valueChanges} event.  You can also listen to
 * its {\@link AbstractControl.statusChanges} event to be notified when the validation status is
 * re-calculated.
 *
 * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has
 * triggered a form submission. The `ngSubmit` event will be emitted with the original form
 * submission event.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * **npm package**: `\@angular/forms`
 *
 * **NgModule**: {\@link ReactiveFormsModule}
 *
 *  \@stable
 */var FormGroupDirective=function(_ControlContainer3){_inherits$3(FormGroupDirective,_ControlContainer3);/**
     * @param {?} _validators
     * @param {?} _asyncValidators
     */function FormGroupDirective(_validators,_asyncValidators){_classCallCheck$3(this,FormGroupDirective);var _this38=_possibleConstructorReturn$3(this,(FormGroupDirective.__proto__||Object.getPrototypeOf(FormGroupDirective)).call(this));_this38._validators=_validators;_this38._asyncValidators=_asyncValidators;_this38._submitted=false;_this38.directives=[];_this38.form=null;_this38.ngSubmit=new EventEmitter$2();return _this38;}/**
     * @param {?} changes
     * @return {?}
     */_createClass$3(FormGroupDirective,[{key:'ngOnChanges',value:function ngOnChanges(changes){this._checkFormPresent();if(changes.hasOwnProperty('form')){this._updateValidators();this._updateDomValue();this._updateRegistrations();}}/**
     * @return {?}
     */},{key:'addControl',/**
     * @param {?} dir
     * @return {?}
     */value:function addControl(dir){var/** @type {?} */ctrl=this.form.get(dir.path);setUpControl(ctrl,dir);ctrl.updateValueAndValidity({emitEvent:false});this.directives.push(dir);return ctrl;}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getControl',value:function getControl(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeControl',value:function removeControl(dir){ListWrapper$1.remove(this.directives,dir);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'addFormGroup',value:function addFormGroup(dir){var/** @type {?} */ctrl=this.form.get(dir.path);setUpFormContainer(ctrl,dir);ctrl.updateValueAndValidity({emitEvent:false});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeFormGroup',value:function removeFormGroup(dir){}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getFormGroup',value:function getFormGroup(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @return {?}
     */},{key:'addFormArray',value:function addFormArray(dir){var/** @type {?} */ctrl=this.form.get(dir.path);setUpFormContainer(ctrl,dir);ctrl.updateValueAndValidity({emitEvent:false});}/**
     * @param {?} dir
     * @return {?}
     */},{key:'removeFormArray',value:function removeFormArray(dir){}/**
     * @param {?} dir
     * @return {?}
     */},{key:'getFormArray',value:function getFormArray(dir){return this.form.get(dir.path);}/**
     * @param {?} dir
     * @param {?} value
     * @return {?}
     */},{key:'updateModel',value:function updateModel(dir,value){var/** @type {?} */ctrl=this.form.get(dir.path);ctrl.setValue(value);}/**
     * @param {?} $event
     * @return {?}
     */},{key:'onSubmit',value:function onSubmit($event){this._submitted=true;this.ngSubmit.emit($event);return false;}/**
     * @return {?}
     */},{key:'onReset',value:function onReset(){this.resetForm();}/**
     * @param {?=} value
     * @return {?}
     */},{key:'resetForm',value:function resetForm(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this.form.reset(value);this._submitted=false;}/**
     * \@internal
     * @return {?}
     */},{key:'_updateDomValue',value:function _updateDomValue(){var _this39=this;this.directives.forEach(function(dir){var/** @type {?} */newCtrl=_this39.form.get(dir.path);if(dir._control!==newCtrl){cleanUpControl(dir._control,dir);if(newCtrl)setUpControl(newCtrl,dir);dir._control=newCtrl;}});this.form._updateTreeValidity({emitEvent:false});}/**
     * @return {?}
     */},{key:'_updateRegistrations',value:function _updateRegistrations(){var _this40=this;this.form._registerOnCollectionChange(function(){return _this40._updateDomValue();});if(this._oldForm)this._oldForm._registerOnCollectionChange(function(){});this._oldForm=this.form;}/**
     * @return {?}
     */},{key:'_updateValidators',value:function _updateValidators(){var/** @type {?} */sync=composeValidators(this._validators);this.form.validator=Validators.compose([this.form.validator,sync]);var/** @type {?} */async=composeAsyncValidators(this._asyncValidators);this.form.asyncValidator=Validators.composeAsync([this.form.asyncValidator,async]);}/**
     * @return {?}
     */},{key:'_checkFormPresent',value:function _checkFormPresent(){if(!this.form){ReactiveErrors.missingFormException();}}},{key:'submitted',get:function get(){return this._submitted;}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this;}/**
     * @return {?}
     */},{key:'control',get:function get(){return this.form;}/**
     * @return {?}
     */},{key:'path',get:function get(){return[];}}]);return FormGroupDirective;}(ControlContainer);FormGroupDirective.decorators=[{type:Directive,args:[{selector:'[formGroup]',providers:[formDirectiveProvider$1],host:{'(submit)':'onSubmit($event)','(reset)':'onReset()'},exportAs:'ngForm'}]}];/** @nocollapse */FormGroupDirective.ctorParameters=function(){return[{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]}];};FormGroupDirective.propDecorators={'form':[{type:Input,args:['formGroup']}],'ngSubmit':[{type:Output}]};var formGroupNameProvider={provide:ControlContainer,useExisting:forwardRef(function(){return FormGroupName;})};/**
 * \@whatItDoes Syncs a nested {\@link FormGroup} to a DOM element.
 *
 * \@howToUse
 *
 * This directive can only be used with a parent {\@link FormGroupDirective} (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested {\@link FormGroup} you want to link, and
 * will look for a {\@link FormGroup} registered with that name in the parent
 * {\@link FormGroup} instance you passed into {\@link FormGroupDirective}.
 *
 * Nested form groups can come in handy when you want to validate a sub-group of a
 * form separately from the rest or when you'd like to group the values of certain
 * controls into their own nested object.
 *
 * **Access the group**: You can access the associated {\@link FormGroup} using the
 * {\@link AbstractControl.get} method. Ex: `this.form.get('name')`.
 *
 * You can also access individual controls within the group using dot syntax.
 * Ex: `this.form.get('name.first')`
 *
 * **Get the value**: the `value` property is always synced and available on the
 * {\@link FormGroup}. See a full list of available properties in {\@link AbstractControl}.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the {\@link FormGroup}, or you can set it programmatically later using
 * {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the group, you can
 * subscribe to the {\@link AbstractControl.valueChanges} event.  You can also listen to
 * {\@link AbstractControl.statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * {\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 * \@stable
 */var FormGroupName=function(_AbstractFormGroupDir2){_inherits$3(FormGroupName,_AbstractFormGroupDir2);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     */function FormGroupName(parent,validators,asyncValidators){_classCallCheck$3(this,FormGroupName);var _this41=_possibleConstructorReturn$3(this,(FormGroupName.__proto__||Object.getPrototypeOf(FormGroupName)).call(this));_this41._parent=parent;_this41._validators=validators;_this41._asyncValidators=asyncValidators;return _this41;}/**
     * \@internal
     * @return {?}
     */_createClass$3(FormGroupName,[{key:'_checkParentType',value:function _checkParentType(){if(_hasInvalidParent(this._parent)){ReactiveErrors.groupParentException();}}}]);return FormGroupName;}(AbstractFormGroupDirective);FormGroupName.decorators=[{type:Directive,args:[{selector:'[formGroupName]',providers:[formGroupNameProvider]}]}];/** @nocollapse */FormGroupName.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:Optional},{type:Host},{type:SkipSelf}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]}];};FormGroupName.propDecorators={'name':[{type:Input,args:['formGroupName']}]};var formArrayNameProvider={provide:ControlContainer,useExisting:forwardRef(function(){return FormArrayName;})};/**
 * \@whatItDoes Syncs a nested {\@link FormArray} to a DOM element.
 *
 * \@howToUse
 *
 * This directive is designed to be used with a parent {\@link FormGroupDirective} (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the nested {\@link FormArray} you want to link, and
 * will look for a {\@link FormArray} registered with that name in the parent
 * {\@link FormGroup} instance you passed into {\@link FormGroupDirective}.
 *
 * Nested form arrays can come in handy when you have a group of form controls but
 * you're not sure how many there will be. Form arrays allow you to create new
 * form controls dynamically.
 *
 * **Access the array**: You can access the associated {\@link FormArray} using the
 * {\@link AbstractControl.get} method on the parent {\@link FormGroup}.
 * Ex: `this.form.get('cities')`.
 *
 * **Get the value**: the `value` property is always synced and available on the
 * {\@link FormArray}. See a full list of available properties in {\@link AbstractControl}.
 *
 * **Set the value**: You can set an initial value for each child control when instantiating
 * the {\@link FormArray}, or you can set the value programmatically later using the
 * {\@link FormArray}'s {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue}
 * methods.
 *
 * **Listen to value**: If you want to listen to changes in the value of the array, you can
 * subscribe to the {\@link FormArray}'s {\@link AbstractControl.valueChanges} event.  You can also
 * listen to its {\@link AbstractControl.statusChanges} event to be notified when the validation
 * status is re-calculated.
 *
 * **Add new controls**: You can add new controls to the {\@link FormArray} dynamically by
 * calling its {\@link FormArray.push} method.
 *  Ex: `this.form.get('cities').push(new FormControl());`
 *
 * ### Example
 *
 * {\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}
 *
 * * **npm package**: `\@angular/forms`
 *
 * * **NgModule**: `ReactiveFormsModule`
 *
 * \@stable
 */var FormArrayName=function(_ControlContainer4){_inherits$3(FormArrayName,_ControlContainer4);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     */function FormArrayName(parent,validators,asyncValidators){_classCallCheck$3(this,FormArrayName);var _this42=_possibleConstructorReturn$3(this,(FormArrayName.__proto__||Object.getPrototypeOf(FormArrayName)).call(this));_this42._parent=parent;_this42._validators=validators;_this42._asyncValidators=asyncValidators;return _this42;}/**
     * @return {?}
     */_createClass$3(FormArrayName,[{key:'ngOnInit',value:function ngOnInit(){this._checkParentType();this.formDirective.addFormArray(this);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this.formDirective){this.formDirective.removeFormArray(this);}}/**
     * @return {?}
     */},{key:'_checkParentType',/**
     * @return {?}
     */value:function _checkParentType(){if(_hasInvalidParent(this._parent)){ReactiveErrors.arrayParentException();}}},{key:'control',get:function get(){return this.formDirective.getFormArray(this);}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'path',get:function get(){return controlPath(this.name,this._parent);}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._validators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._asyncValidators);}}]);return FormArrayName;}(ControlContainer);FormArrayName.decorators=[{type:Directive,args:[{selector:'[formArrayName]',providers:[formArrayNameProvider]}]}];/** @nocollapse */FormArrayName.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:Optional},{type:Host},{type:SkipSelf}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]}];};FormArrayName.propDecorators={'name':[{type:Input,args:['formArrayName']}]};/**
 * @param {?} parent
 * @return {?}
 */function _hasInvalidParent(parent){return!(parent instanceof FormGroupName)&&!(parent instanceof FormGroupDirective)&&!(parent instanceof FormArrayName);}var controlNameBinding={provide:NgControl,useExisting:forwardRef(function(){return FormControlName;})};/**
 * \@whatItDoes Syncs a {\@link FormControl} in an existing {\@link FormGroup} to a form control
 * element by name.
 *
 * In other words, this directive ensures that any values written to the {\@link FormControl}
 * instance programmatically will be written to the DOM element (model -> view). Conversely,
 * any values written to the DOM element through user input will be reflected in the
 * {\@link FormControl} instance (view -> model).
 *
 * \@howToUse
 *
 * This directive is designed to be used with a parent {\@link FormGroupDirective} (selector:
 * `[formGroup]`).
 *
 * It accepts the string name of the {\@link FormControl} instance you want to
 * link, and will look for a {\@link FormControl} registered with that name in the
 * closest {\@link FormGroup} or {\@link FormArray} above it.
 *
 * **Access the control**: You can access the {\@link FormControl} associated with
 * this directive by using the {\@link AbstractControl.get} method.
 * Ex: `this.form.get('first');`
 *
 * **Get value**: the `value` property is always synced and available on the {\@link FormControl}.
 * See a full list of available properties in {\@link AbstractControl}.
 *
 *  **Set value**: You can set an initial value for the control when instantiating the
 *  {\@link FormControl}, or you can set it programmatically later using
 *  {\@link AbstractControl.setValue} or {\@link AbstractControl.patchValue}.
 *
 * **Listen to value**: If you want to listen to changes in the value of the control, you can
 * subscribe to the {\@link AbstractControl.valueChanges} event.  You can also listen to
 * {\@link AbstractControl.statusChanges} to be notified when the validation status is
 * re-calculated.
 *
 * ### Example
 *
 * In this example, we create form controls for first name and last name.
 *
 * {\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}
 *
 * To see `formControlName` examples with different form control types, see:
 *
 * * Radio buttons: {\@link RadioControlValueAccessor}
 * * Selects: {\@link SelectControlValueAccessor}
 *
 * **npm package**: `\@angular/forms`
 *
 * **NgModule**: {\@link ReactiveFormsModule}
 *
 *  \@stable
 */var FormControlName=function(_NgControl3){_inherits$3(FormControlName,_NgControl3);/**
     * @param {?} parent
     * @param {?} validators
     * @param {?} asyncValidators
     * @param {?} valueAccessors
     */function FormControlName(parent,validators,asyncValidators,valueAccessors){_classCallCheck$3(this,FormControlName);var _this43=_possibleConstructorReturn$3(this,(FormControlName.__proto__||Object.getPrototypeOf(FormControlName)).call(this));_this43._added=false;_this43.update=new EventEmitter$2();_this43._parent=parent;_this43._rawValidators=validators||[];_this43._rawAsyncValidators=asyncValidators||[];_this43.valueAccessor=selectValueAccessor(_this43,valueAccessors);return _this43;}/**
     * @param {?} isDisabled
     * @return {?}
     */_createClass$3(FormControlName,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if(!this._added)this._setUpControl();if(isPropertyUpdated(changes,this.viewModel)){this.viewModel=this.model;this.formDirective.updateModel(this,this.model);}}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){if(this.formDirective){this.formDirective.removeControl(this);}}/**
     * @param {?} newValue
     * @return {?}
     */},{key:'viewToModelUpdate',value:function viewToModelUpdate(newValue){this.viewModel=newValue;this.update.emit(newValue);}/**
     * @return {?}
     */},{key:'_checkParentType',/**
     * @return {?}
     */value:function _checkParentType(){if(!(this._parent instanceof FormGroupName)&&this._parent instanceof AbstractFormGroupDirective){ReactiveErrors.ngModelGroupException();}else if(!(this._parent instanceof FormGroupName)&&!(this._parent instanceof FormGroupDirective)&&!(this._parent instanceof FormArrayName)){ReactiveErrors.controlParentException();}}/**
     * @return {?}
     */},{key:'_setUpControl',value:function _setUpControl(){this._checkParentType();this._control=this.formDirective.addControl(this);if(this.control.disabled&&this.valueAccessor.setDisabledState){this.valueAccessor.setDisabledState(true);}this._added=true;}},{key:'isDisabled',set:function set(isDisabled){ReactiveErrors.disabledAttrWarning();}},{key:'path',get:function get(){return controlPath(this.name,this._parent);}/**
     * @return {?}
     */},{key:'formDirective',get:function get(){return this._parent?this._parent.formDirective:null;}/**
     * @return {?}
     */},{key:'validator',get:function get(){return composeValidators(this._rawValidators);}/**
     * @return {?}
     */},{key:'asyncValidator',get:function get(){return composeAsyncValidators(this._rawAsyncValidators);}/**
     * @return {?}
     */},{key:'control',get:function get(){return this._control;}}]);return FormControlName;}(NgControl);FormControlName.decorators=[{type:Directive,args:[{selector:'[formControlName]',providers:[controlNameBinding]}]}];/** @nocollapse */FormControlName.ctorParameters=function(){return[{type:ControlContainer,decorators:[{type:Optional},{type:Host},{type:SkipSelf}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS]}]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALUE_ACCESSOR]}]}];};FormControlName.propDecorators={'name':[{type:Input,args:['formControlName']}],'model':[{type:Input,args:['ngModel']}],'update':[{type:Output,args:['ngModelChange']}],'isDisabled':[{type:Input,args:['disabled']}]};var REQUIRED_VALIDATOR={provide:NG_VALIDATORS,useExisting:forwardRef(function(){return RequiredValidator;}),multi:true};var CHECKBOX_REQUIRED_VALIDATOR={provide:NG_VALIDATORS,useExisting:forwardRef(function(){return CheckboxRequiredValidator;}),multi:true};/**
 * A Directive that adds the `required` validator to any controls marked with the
 * `required` attribute, via the {\@link NG_VALIDATORS} binding.
 *
 * ### Example
 *
 * ```
 * <input name="fullName" ngModel required>
 * ```
 *
 * \@stable
 */var RequiredValidator=function(){function RequiredValidator(){_classCallCheck$3(this,RequiredValidator);}_createClass$3(RequiredValidator,[{key:'validate',/**
     * @param {?} c
     * @return {?}
     */value:function validate(c){return this.required?Validators.required(c):null;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}},{key:'required',/**
     * @return {?}
     */get:function get(){return this._required;}/**
     * @param {?} value
     * @return {?}
     */,set:function set(value){this._required=value!=null&&value!==false&&''+value!=='false';if(this._onChange)this._onChange();}}]);return RequiredValidator;}();RequiredValidator.decorators=[{type:Directive,args:[{selector:':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',providers:[REQUIRED_VALIDATOR],host:{'[attr.required]':'required ? "" : null'}}]}];/** @nocollapse */RequiredValidator.ctorParameters=function(){return[];};RequiredValidator.propDecorators={'required':[{type:Input}]};/**
 * A Directive that adds the `required` validator to checkbox controls marked with the
 * `required` attribute, via the {\@link NG_VALIDATORS} binding.
 *
 * ### Example
 *
 * ```
 * <input type="checkbox" name="active" ngModel required>
 * ```
 *
 * \@experimental
 */var CheckboxRequiredValidator=function(_RequiredValidator){_inherits$3(CheckboxRequiredValidator,_RequiredValidator);function CheckboxRequiredValidator(){_classCallCheck$3(this,CheckboxRequiredValidator);return _possibleConstructorReturn$3(this,(CheckboxRequiredValidator.__proto__||Object.getPrototypeOf(CheckboxRequiredValidator)).apply(this,arguments));}_createClass$3(CheckboxRequiredValidator,[{key:'validate',/**
     * @param {?} c
     * @return {?}
     */value:function validate(c){return this.required?Validators.requiredTrue(c):null;}}]);return CheckboxRequiredValidator;}(RequiredValidator);CheckboxRequiredValidator.decorators=[{type:Directive,args:[{selector:'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',providers:[CHECKBOX_REQUIRED_VALIDATOR],host:{'[attr.required]':'required ? "" : null'}}]}];/** @nocollapse */CheckboxRequiredValidator.ctorParameters=function(){return[];};/**
 * Provider which adds {@link EmailValidator} to {@link NG_VALIDATORS}.
 */var EMAIL_VALIDATOR={provide:NG_VALIDATORS,useExisting:forwardRef(function(){return EmailValidator;}),multi:true};/**
 * A Directive that adds the `email` validator to controls marked with the
 * `email` attribute, via the {\@link NG_VALIDATORS} binding.
 *
 * ### Example
 *
 * ```
 * <input type="email" name="email" ngModel email>
 * <input type="email" name="email" ngModel email="true">
 * <input type="email" name="email" ngModel [email]="true">
 * ```
 *
 * \@experimental
 */var EmailValidator=function(){function EmailValidator(){_classCallCheck$3(this,EmailValidator);}_createClass$3(EmailValidator,[{key:'validate',/**
     * @param {?} c
     * @return {?}
     */value:function validate(c){return this._enabled?Validators.email(c):null;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}},{key:'email',/**
     * @param {?} value
     * @return {?}
     */set:function set(value){this._enabled=value===''||value===true||value==='true';if(this._onChange)this._onChange();}}]);return EmailValidator;}();EmailValidator.decorators=[{type:Directive,args:[{selector:'[email][formControlName],[email][formControl],[email][ngModel]',providers:[EMAIL_VALIDATOR]}]}];/** @nocollapse */EmailValidator.ctorParameters=function(){return[];};EmailValidator.propDecorators={'email':[{type:Input}]};/**
 * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.
 *
 * ## Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='min'}
 */var MIN_LENGTH_VALIDATOR={provide:NG_VALIDATORS,useExisting:forwardRef(function(){return MinLengthValidator;}),multi:true};/**
 * A directive which installs the {\@link MinLengthValidator} for any `formControlName`,
 * `formControl`, or control with `ngModel` that also has a `minlength` attribute.
 *
 * \@stable
 */var MinLengthValidator=function(){function MinLengthValidator(){_classCallCheck$3(this,MinLengthValidator);}_createClass$3(MinLengthValidator,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('minlength'in changes){this._createValidator();if(this._onChange)this._onChange();}}/**
     * @param {?} c
     * @return {?}
     */},{key:'validate',value:function validate(c){return this.minlength==null?null:this._validator(c);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}/**
     * @return {?}
     */},{key:'_createValidator',value:function _createValidator(){this._validator=Validators.minLength(parseInt(this.minlength,10));}}]);return MinLengthValidator;}();MinLengthValidator.decorators=[{type:Directive,args:[{selector:'[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',providers:[MIN_LENGTH_VALIDATOR],host:{'[attr.minlength]':'minlength ? minlength : null'}}]}];/** @nocollapse */MinLengthValidator.ctorParameters=function(){return[];};MinLengthValidator.propDecorators={'minlength':[{type:Input}]};/**
 * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.
 *
 * ## Example:
 *
 * {@example common/forms/ts/validators/validators.ts region='max'}
 */var MAX_LENGTH_VALIDATOR={provide:NG_VALIDATORS,useExisting:forwardRef(function(){return MaxLengthValidator;}),multi:true};/**
 * A directive which installs the {\@link MaxLengthValidator} for any `formControlName,
 * `formControl`,
 * or control with `ngModel` that also has a `maxlength` attribute.
 *
 * \@stable
 */var MaxLengthValidator=function(){function MaxLengthValidator(){_classCallCheck$3(this,MaxLengthValidator);}_createClass$3(MaxLengthValidator,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('maxlength'in changes){this._createValidator();if(this._onChange)this._onChange();}}/**
     * @param {?} c
     * @return {?}
     */},{key:'validate',value:function validate(c){return this.maxlength!=null?this._validator(c):null;}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}/**
     * @return {?}
     */},{key:'_createValidator',value:function _createValidator(){this._validator=Validators.maxLength(parseInt(this.maxlength,10));}}]);return MaxLengthValidator;}();MaxLengthValidator.decorators=[{type:Directive,args:[{selector:'[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',providers:[MAX_LENGTH_VALIDATOR],host:{'[attr.maxlength]':'maxlength ? maxlength : null'}}]}];/** @nocollapse */MaxLengthValidator.ctorParameters=function(){return[];};MaxLengthValidator.propDecorators={'maxlength':[{type:Input}]};var PATTERN_VALIDATOR={provide:NG_VALIDATORS,useExisting:forwardRef(function(){return PatternValidator;}),multi:true};/**
 * A Directive that adds the `pattern` validator to any controls marked with the
 * `pattern` attribute, via the {\@link NG_VALIDATORS} binding. Uses attribute value
 * as the regex to validate Control value against.  Follows pattern attribute
 * semantics; i.e. regex must match entire Control value.
 *
 * ### Example
 *
 * ```
 * <input [name]="fullName" pattern="[a-zA-Z ]*" ngModel>
 * ```
 * \@stable
 */var PatternValidator=function(){function PatternValidator(){_classCallCheck$3(this,PatternValidator);}_createClass$3(PatternValidator,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){if('pattern'in changes){this._createValidator();if(this._onChange)this._onChange();}}/**
     * @param {?} c
     * @return {?}
     */},{key:'validate',value:function validate(c){return this._validator(c);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'registerOnValidatorChange',value:function registerOnValidatorChange(fn){this._onChange=fn;}/**
     * @return {?}
     */},{key:'_createValidator',value:function _createValidator(){this._validator=Validators.pattern(this.pattern);}}]);return PatternValidator;}();PatternValidator.decorators=[{type:Directive,args:[{selector:'[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',providers:[PATTERN_VALIDATOR],host:{'[attr.pattern]':'pattern ? pattern : null'}}]}];/** @nocollapse */PatternValidator.ctorParameters=function(){return[];};PatternValidator.propDecorators={'pattern':[{type:Input}]};/**
 * \@whatItDoes Creates an {\@link AbstractControl} from a user-specified configuration.
 *
 * It is essentially syntactic sugar that shortens the `new FormGroup()`,
 * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger
 * forms.
 *
 * \@howToUse
 *
 * To use, inject `FormBuilder` into your component class. You can then call its methods
 * directly.
 *
 * {\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}
 *
 *  * **npm package**: `\@angular/forms`
 *
 *  * **NgModule**: {\@link ReactiveFormsModule}
 *
 * \@stable
 */var FormBuilder=function(){function FormBuilder(){_classCallCheck$3(this,FormBuilder);}_createClass$3(FormBuilder,[{key:'group',/**
     * Construct a new {\@link FormGroup} with the given map of configuration.
     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.
     *
     * See the {\@link FormGroup} constructor for more details.
     * @param {?} controlsConfig
     * @param {?=} extra
     * @return {?}
     */value:function group$$1(controlsConfig){var extra=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var/** @type {?} */controls=this._reduceControls(controlsConfig);var/** @type {?} */validator=isPresent$3(extra)?extra['validator']:null;var/** @type {?} */asyncValidator=isPresent$3(extra)?extra['asyncValidator']:null;return new FormGroup(controls,validator,asyncValidator);}/**
     * Construct a new {\@link FormControl} with the given `formState`,`validator`, and
     * `asyncValidator`.
     *
     * `formState` can either be a standalone value for the form control or an object
     * that contains both a value and a disabled status.
     *
     * @param {?} formState
     * @param {?=} validator
     * @param {?=} asyncValidator
     * @return {?}
     */},{key:'control',value:function control(formState){var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return new FormControl(formState,validator,asyncValidator);}/**
     * Construct a {\@link FormArray} from the given `controlsConfig` array of
     * configuration, with the given optional `validator` and `asyncValidator`.
     * @param {?} controlsConfig
     * @param {?=} validator
     * @param {?=} asyncValidator
     * @return {?}
     */},{key:'array',value:function array(controlsConfig){var _this45=this;var validator=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var asyncValidator=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var/** @type {?} */controls=controlsConfig.map(function(c){return _this45._createControl(c);});return new FormArray(controls,validator,asyncValidator);}/**
     * \@internal
     * @param {?} controlsConfig
     * @return {?}
     */},{key:'_reduceControls',value:function _reduceControls(controlsConfig){var _this46=this;var/** @type {?} */controls={};Object.keys(controlsConfig).forEach(function(controlName){controls[controlName]=_this46._createControl(controlsConfig[controlName]);});return controls;}/**
     * \@internal
     * @param {?} controlConfig
     * @return {?}
     */},{key:'_createControl',value:function _createControl(controlConfig){if(controlConfig instanceof FormControl||controlConfig instanceof FormGroup||controlConfig instanceof FormArray){return controlConfig;}else if(Array.isArray(controlConfig)){var/** @type {?} */value=controlConfig[0];var/** @type {?} */validator=controlConfig.length>1?controlConfig[1]:null;var/** @type {?} */asyncValidator=controlConfig.length>2?controlConfig[2]:null;return this.control(value,validator,asyncValidator);}else{return this.control(controlConfig);}}}]);return FormBuilder;}();FormBuilder.decorators=[{type:Injectable}];/** @nocollapse */FormBuilder.ctorParameters=function(){return[];};/**
 * @stable
 */var VERSION$3=new Version('4.0.0-rc.1');/**
 * \@whatItDoes Adds `novalidate` attribute to all forms by default.
 *
 * `novalidate` is used to disable browser's native form validation.
 *
 * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:
 *
 * ```
 * <form ngNativeValidate></form>
 * ```
 *
 * \@experimental
 */var NgNoValidate=function NgNoValidate(){_classCallCheck$3(this,NgNoValidate);};NgNoValidate.decorators=[{type:Directive,args:[{selector:'form:not([ngNoForm]):not([ngNativeValidate])',host:{'novalidate':''}}]}];/** @nocollapse */NgNoValidate.ctorParameters=function(){return[];};var SHARED_FORM_DIRECTIVES=[NgNoValidate,NgSelectOption,NgSelectMultipleOption,DefaultValueAccessor,NumberValueAccessor,RangeValueAccessor,CheckboxControlValueAccessor,SelectControlValueAccessor,SelectMultipleControlValueAccessor,RadioControlValueAccessor,NgControlStatus,NgControlStatusGroup,RequiredValidator,MinLengthValidator,MaxLengthValidator,PatternValidator,CheckboxRequiredValidator,EmailValidator];var TEMPLATE_DRIVEN_DIRECTIVES=[NgModel,NgModelGroup,NgForm];var REACTIVE_DRIVEN_DIRECTIVES=[FormControlDirective,FormGroupDirective,FormControlName,FormGroupName,FormArrayName];/**
 * Internal module used for sharing directives between FormsModule and ReactiveFormsModule
 */var InternalFormsSharedModule=function InternalFormsSharedModule(){_classCallCheck$3(this,InternalFormsSharedModule);};InternalFormsSharedModule.decorators=[{type:NgModule,args:[{declarations:SHARED_FORM_DIRECTIVES,exports:SHARED_FORM_DIRECTIVES}]}];/** @nocollapse */InternalFormsSharedModule.ctorParameters=function(){return[];};/**
 * The ng module for forms.
 * \@stable
 */var FormsModule=function FormsModule(){_classCallCheck$3(this,FormsModule);};FormsModule.decorators=[{type:NgModule,args:[{declarations:TEMPLATE_DRIVEN_DIRECTIVES,providers:[RadioControlRegistry],exports:[InternalFormsSharedModule,TEMPLATE_DRIVEN_DIRECTIVES]}]}];/** @nocollapse */FormsModule.ctorParameters=function(){return[];};/**
 * The ng module for reactive forms.
 * \@stable
 */var ReactiveFormsModule=function ReactiveFormsModule(){_classCallCheck$3(this,ReactiveFormsModule);};ReactiveFormsModule.decorators=[{type:NgModule,args:[{declarations:[REACTIVE_DRIVEN_DIRECTIVES],providers:[FormBuilder,RadioControlRegistry],exports:[InternalFormsSharedModule,REACTIVE_DRIVEN_DIRECTIVES]}]}];/** @nocollapse */ReactiveFormsModule.ctorParameters=function(){return[];};

var AppComponent = (function () {
    function AppComponent(location) {
        this.location = location;
    }
    AppComponent.prototype.getLinkStyle = function (path) {
        if (path === this.location.path()) {
            return true;
        }
        else if (path.length > 0) {
            return this.location.path().indexOf(path) > -1;
        }
    };
    return AppComponent;
}());
AppComponent.ctorParameters = function () { return [
    { type: Location, },
]; };

var BehaviorSubject = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = Subject;
var ObjectUnsubscribedError_1 = ObjectUnsubscribedError;
/**
 * @class BehaviorSubject<T>
 */
var BehaviorSubject = (function (_super) {
    __extends(BehaviorSubject, _super);
    function BehaviorSubject(_value) {
        _super.call(this);
        this._value = _value;
    }
    Object.defineProperty(BehaviorSubject.prototype, "value", {
        get: function () {
            return this.getValue();
        },
        enumerable: true,
        configurable: true
    });
    BehaviorSubject.prototype._subscribe = function (subscriber) {
        var subscription = _super.prototype._subscribe.call(this, subscriber);
        if (subscription && !subscription.closed) {
            subscriber.next(this._value);
        }
        return subscription;
    };
    BehaviorSubject.prototype.getValue = function () {
        if (this.hasError) {
            throw this.thrownError;
        }
        else if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else {
            return this._value;
        }
    };
    BehaviorSubject.prototype.next = function (value) {
        _super.prototype.next.call(this, this._value = value);
    };
    return BehaviorSubject;
}(Subject_1.Subject));
exports.BehaviorSubject = BehaviorSubject;

});

var BehaviorSubject$$1 = BehaviorSubject.BehaviorSubject;

var IteratorObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = root;
var Observable_1 = Observable;
var iterator_1 = iterator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var IteratorObservable = (function (_super) {
    __extends(IteratorObservable, _super);
    function IteratorObservable(iterator$$1, scheduler) {
        _super.call(this);
        this.scheduler = scheduler;
        if (iterator$$1 == null) {
            throw new Error('iterator cannot be null.');
        }
        this.iterator = getIterator(iterator$$1);
    }
    IteratorObservable.create = function (iterator$$1, scheduler) {
        return new IteratorObservable(iterator$$1, scheduler);
    };
    IteratorObservable.dispatch = function (state) {
        var index = state.index, hasError = state.hasError, iterator$$1 = state.iterator, subscriber = state.subscriber;
        if (hasError) {
            subscriber.error(state.error);
            return;
        }
        var result = iterator$$1.next();
        if (result.done) {
            subscriber.complete();
            return;
        }
        subscriber.next(result.value);
        state.index = index + 1;
        if (subscriber.closed) {
            if (typeof iterator$$1.return === 'function') {
                iterator$$1.return();
            }
            return;
        }
        this.schedule(state);
    };
    IteratorObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, iterator$$1 = _a.iterator, scheduler = _a.scheduler;
        if (scheduler) {
            return scheduler.schedule(IteratorObservable.dispatch, 0, {
                index: index, iterator: iterator$$1, subscriber: subscriber
            });
        }
        else {
            do {
                var result = iterator$$1.next();
                if (result.done) {
                    subscriber.complete();
                    break;
                }
                else {
                    subscriber.next(result.value);
                }
                if (subscriber.closed) {
                    if (typeof iterator$$1.return === 'function') {
                        iterator$$1.return();
                    }
                    break;
                }
            } while (true);
        }
    };
    return IteratorObservable;
}(Observable_1.Observable));
exports.IteratorObservable = IteratorObservable;
var StringIterator = (function () {
    function StringIterator(str, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = str.length; }
        this.str = str;
        this.idx = idx;
        this.len = len;
    }
    StringIterator.prototype[iterator_1.$$iterator] = function () { return (this); };
    StringIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.str.charAt(this.idx++)
        } : {
            done: true,
            value: undefined
        };
    };
    return StringIterator;
}());
var ArrayIterator = (function () {
    function ArrayIterator(arr, idx, len) {
        if (idx === void 0) { idx = 0; }
        if (len === void 0) { len = toLength(arr); }
        this.arr = arr;
        this.idx = idx;
        this.len = len;
    }
    ArrayIterator.prototype[iterator_1.$$iterator] = function () { return this; };
    ArrayIterator.prototype.next = function () {
        return this.idx < this.len ? {
            done: false,
            value: this.arr[this.idx++]
        } : {
            done: true,
            value: undefined
        };
    };
    return ArrayIterator;
}());
function getIterator(obj) {
    var i = obj[iterator_1.$$iterator];
    if (!i && typeof obj === 'string') {
        return new StringIterator(obj);
    }
    if (!i && obj.length !== undefined) {
        return new ArrayIterator(obj);
    }
    if (!i) {
        throw new TypeError('object is not iterable');
    }
    return obj[iterator_1.$$iterator]();
}
var maxSafeInteger = Math.pow(2, 53) - 1;
function toLength(o) {
    var len = +o.length;
    if (isNaN(len)) {
        return 0;
    }
    if (len === 0 || !numberIsFinite(len)) {
        return len;
    }
    len = sign(len) * Math.floor(Math.abs(len));
    if (len <= 0) {
        return 0;
    }
    if (len > maxSafeInteger) {
        return maxSafeInteger;
    }
    return len;
}
function numberIsFinite(value) {
    return typeof value === 'number' && root_1.root.isFinite(value);
}
function sign(value) {
    var valueAsNumber = +value;
    if (valueAsNumber === 0) {
        return valueAsNumber;
    }
    if (isNaN(valueAsNumber)) {
        return valueAsNumber;
    }
    return valueAsNumber < 0 ? -1 : 1;
}

});

var ArrayLikeObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = Observable;
var ScalarObservable_1 = ScalarObservable;
var EmptyObservable_1 = EmptyObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ArrayLikeObservable = (function (_super) {
    __extends(ArrayLikeObservable, _super);
    function ArrayLikeObservable(arrayLike, scheduler) {
        _super.call(this);
        this.arrayLike = arrayLike;
        this.scheduler = scheduler;
        if (!scheduler && arrayLike.length === 1) {
            this._isScalar = true;
            this.value = arrayLike[0];
        }
    }
    ArrayLikeObservable.create = function (arrayLike, scheduler) {
        var length = arrayLike.length;
        if (length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        else if (length === 1) {
            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);
        }
        else {
            return new ArrayLikeObservable(arrayLike, scheduler);
        }
    };
    ArrayLikeObservable.dispatch = function (state) {
        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;
        if (subscriber.closed) {
            return;
        }
        if (index >= length) {
            subscriber.complete();
            return;
        }
        subscriber.next(arrayLike[index]);
        state.index = index + 1;
        this.schedule(state);
    };
    ArrayLikeObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;
        var length = arrayLike.length;
        if (scheduler) {
            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {
                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber
            });
        }
        else {
            for (var i = 0; i < length && !subscriber.closed; i++) {
                subscriber.next(arrayLike[i]);
            }
            subscriber.complete();
        }
    };
    return ArrayLikeObservable;
}(Observable_1.Observable));
exports.ArrayLikeObservable = ArrayLikeObservable;

});

var Notification = createCommonjsModule(function (module, exports) {
"use strict";
var Observable_1 = Observable;
/**
 * Represents a push-based event or value that an {@link Observable} can emit.
 * This class is particularly useful for operators that manage notifications,
 * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and
 * others. Besides wrapping the actual delivered value, it also annotates it
 * with metadata of, for instance, what type of push message it is (`next`,
 * `error`, or `complete`).
 *
 * @see {@link materialize}
 * @see {@link dematerialize}
 * @see {@link observeOn}
 *
 * @class Notification<T>
 */
var Notification = (function () {
    function Notification(kind, value, error) {
        this.kind = kind;
        this.value = value;
        this.error = error;
        this.hasValue = kind === 'N';
    }
    /**
     * Delivers to the given `observer` the value wrapped by this Notification.
     * @param {Observer} observer
     * @return
     */
    Notification.prototype.observe = function (observer) {
        switch (this.kind) {
            case 'N':
                return observer.next && observer.next(this.value);
            case 'E':
                return observer.error && observer.error(this.error);
            case 'C':
                return observer.complete && observer.complete();
        }
    };
    /**
     * Given some {@link Observer} callbacks, deliver the value represented by the
     * current Notification to the correctly corresponding callback.
     * @param {function(value: T): void} next An Observer `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.do = function (next, error, complete) {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return next && next(this.value);
            case 'E':
                return error && error(this.error);
            case 'C':
                return complete && complete();
        }
    };
    /**
     * Takes an Observer or its individual callback functions, and calls `observe`
     * or `do` methods accordingly.
     * @param {Observer|function(value: T): void} nextOrObserver An Observer or
     * the `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */
    Notification.prototype.accept = function (nextOrObserver, error, complete) {
        if (nextOrObserver && typeof nextOrObserver.next === 'function') {
            return this.observe(nextOrObserver);
        }
        else {
            return this.do(nextOrObserver, error, complete);
        }
    };
    /**
     * Returns a simple Observable that just delivers the notification represented
     * by this Notification instance.
     * @return {any}
     */
    Notification.prototype.toObservable = function () {
        var kind = this.kind;
        switch (kind) {
            case 'N':
                return Observable_1.Observable.of(this.value);
            case 'E':
                return Observable_1.Observable.throw(this.error);
            case 'C':
                return Observable_1.Observable.empty();
        }
        throw new Error('unexpected notification kind value');
    };
    /**
     * A shortcut to create a Notification instance of the type `next` from a
     * given value.
     * @param {T} value The `next` value.
     * @return {Notification<T>} The "next" Notification representing the
     * argument.
     */
    Notification.createNext = function (value) {
        if (typeof value !== 'undefined') {
            return new Notification('N', value);
        }
        return this.undefinedValueNotification;
    };
    /**
     * A shortcut to create a Notification instance of the type `error` from a
     * given error.
     * @param {any} [err] The `error` error.
     * @return {Notification<T>} The "error" Notification representing the
     * argument.
     */
    Notification.createError = function (err) {
        return new Notification('E', undefined, err);
    };
    /**
     * A shortcut to create a Notification instance of the type `complete`.
     * @return {Notification<any>} The valueless "complete" Notification.
     */
    Notification.createComplete = function () {
        return this.completeNotification;
    };
    Notification.completeNotification = new Notification('C');
    Notification.undefinedValueNotification = new Notification('N', undefined);
    return Notification;
}());
exports.Notification = Notification;

});

var observeOn = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
var Notification_1 = Notification;
/**
 * @see {@link Notification}
 *
 * @param scheduler
 * @param delay
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method observeOn
 * @owner Observable
 */
function observeOn(scheduler, delay) {
    if (delay === void 0) { delay = 0; }
    return this.lift(new ObserveOnOperator(scheduler, delay));
}
exports.observeOn = observeOn;
var ObserveOnOperator = (function () {
    function ObserveOnOperator(scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
    };
    return ObserveOnOperator;
}());
exports.ObserveOnOperator = ObserveOnOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ObserveOnSubscriber = (function (_super) {
    __extends(ObserveOnSubscriber, _super);
    function ObserveOnSubscriber(destination, scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        _super.call(this, destination);
        this.scheduler = scheduler;
        this.delay = delay;
    }
    ObserveOnSubscriber.dispatch = function (arg) {
        var notification = arg.notification, destination = arg.destination;
        notification.observe(destination);
    };
    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
    };
    ObserveOnSubscriber.prototype._next = function (value) {
        this.scheduleMessage(Notification_1.Notification.createNext(value));
    };
    ObserveOnSubscriber.prototype._error = function (err) {
        this.scheduleMessage(Notification_1.Notification.createError(err));
    };
    ObserveOnSubscriber.prototype._complete = function () {
        this.scheduleMessage(Notification_1.Notification.createComplete());
    };
    return ObserveOnSubscriber;
}(Subscriber_1.Subscriber));
exports.ObserveOnSubscriber = ObserveOnSubscriber;
var ObserveOnMessage = (function () {
    function ObserveOnMessage(notification, destination) {
        this.notification = notification;
        this.destination = destination;
    }
    return ObserveOnMessage;
}());
exports.ObserveOnMessage = ObserveOnMessage;

});

var FromObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isArray_1 = isArray;
var isPromise_1 = isPromise$1;
var PromiseObservable_1 = PromiseObservable;
var IteratorObservable_1 = IteratorObservable;
var ArrayObservable_1 = ArrayObservable;
var ArrayLikeObservable_1 = ArrayLikeObservable;
var iterator_1 = iterator;
var Observable_1 = Observable;
var observeOn_1 = observeOn;
var observable_1 = observable;
var isArrayLike = (function (x) { return x && typeof x.length === 'number'; });
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromObservable = (function (_super) {
    __extends(FromObservable, _super);
    function FromObservable(ish, scheduler) {
        _super.call(this, null);
        this.ish = ish;
        this.scheduler = scheduler;
    }
    /**
     * Creates an Observable from an Array, an array-like object, a Promise, an
     * iterable object, or an Observable-like object.
     *
     * <span class="informal">Converts almost anything to an Observable.</span>
     *
     * <img src="./img/from.png" width="100%">
     *
     * Convert various other objects and data types into Observables. `from`
     * converts a Promise or an array-like or an
     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)
     * object into an Observable that emits the items in that promise or array or
     * iterable. A String, in this context, is treated as an array of characters.
     * Observable-like objects (contains a function named with the ES2015 Symbol
     * for Observable) can also be converted through this operator.
     *
     * @example <caption>Converts an array to an Observable</caption>
     * var array = [10, 20, 30];
     * var result = Rx.Observable.from(array);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 10 20 30
     *
     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>
     * function* generateDoubles(seed) {
     *   var i = seed;
     *   while (true) {
     *     yield i;
     *     i = 2 * i; // double it
     *   }
     * }
     *
     * var iterator = generateDoubles(3);
     * var result = Rx.Observable.from(iterator).take(10);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 3 6 12 24 48 96 192 384 768 1536
     *
     * @see {@link create}
     * @see {@link fromEvent}
     * @see {@link fromEventPattern}
     * @see {@link fromPromise}
     *
     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an
     * Observable-like, an Array, an iterable or an array-like object to be
     * converted.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * emissions of values.
     * @return {Observable<T>} The Observable whose values are originally from the
     * input object that was converted.
     * @static true
     * @name from
     * @owner Observable
     */
    FromObservable.create = function (ish, scheduler) {
        if (ish != null) {
            if (typeof ish[observable_1.$$observable] === 'function') {
                if (ish instanceof Observable_1.Observable && !scheduler) {
                    return ish;
                }
                return new FromObservable(ish, scheduler);
            }
            else if (isArray_1.isArray(ish)) {
                return new ArrayObservable_1.ArrayObservable(ish, scheduler);
            }
            else if (isPromise_1.isPromise(ish)) {
                return new PromiseObservable_1.PromiseObservable(ish, scheduler);
            }
            else if (typeof ish[iterator_1.$$iterator] === 'function' || typeof ish === 'string') {
                return new IteratorObservable_1.IteratorObservable(ish, scheduler);
            }
            else if (isArrayLike(ish)) {
                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);
            }
        }
        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');
    };
    FromObservable.prototype._subscribe = function (subscriber) {
        var ish = this.ish;
        var scheduler = this.scheduler;
        if (scheduler == null) {
            return ish[observable_1.$$observable]().subscribe(subscriber);
        }
        else {
            return ish[observable_1.$$observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));
        }
    };
    return FromObservable;
}(Observable_1.Observable));
exports.FromObservable = FromObservable;

});

var from = createCommonjsModule(function (module, exports) {
"use strict";
var FromObservable_1 = FromObservable;
exports.from = FromObservable_1.FromObservable.create;

});

var from$$1 = from.from;

var of = createCommonjsModule(function (module, exports) {
"use strict";
var ArrayObservable_1 = ArrayObservable;
exports.of = ArrayObservable_1.ArrayObservable.of;

});

var of$$1 = of.of;

var mergeMap = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var subscribeToResult_1 = subscribeToResult;
var OuterSubscriber_1 = OuterSubscriber;
/* tslint:disable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */
function mergeMap(project, resultSelector, concurrent) {
    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
    if (typeof resultSelector === 'number') {
        concurrent = resultSelector;
        resultSelector = null;
    }
    return this.lift(new MergeMapOperator(project, resultSelector, concurrent));
}
exports.mergeMap = mergeMap;
var MergeMapOperator = (function () {
    function MergeMapOperator(project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function (observer, source) {
        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));
    };
    return MergeMapOperator;
}());
exports.MergeMapOperator = MergeMapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MergeMapSubscriber = (function (_super) {
    __extends(MergeMapSubscriber, _super);
    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.concurrent = concurrent;
        this.hasCompleted = false;
        this.buffer = [];
        this.active = 0;
        this.index = 0;
    }
    MergeMapSubscriber.prototype._next = function (value) {
        if (this.active < this.concurrent) {
            this._tryNext(value);
        }
        else {
            this.buffer.push(value);
        }
    };
    MergeMapSubscriber.prototype._tryNext = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.active++;
        this._innerSub(result, value, index);
    };
    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));
    };
    MergeMapSubscriber.prototype._complete = function () {
        this.hasCompleted = true;
        if (this.active === 0 && this.buffer.length === 0) {
            this.destination.complete();
        }
    };
    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
        var buffer = this.buffer;
        this.remove(innerSub);
        this.active--;
        if (buffer.length > 0) {
            this._next(buffer.shift());
        }
        else if (this.active === 0 && this.hasCompleted) {
            this.destination.complete();
        }
    };
    return MergeMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));
exports.MergeMapSubscriber = MergeMapSubscriber;

});



var mergeMap$$1 = mergeMap.mergeMap;

var concatMap = createCommonjsModule(function (module, exports) {
"use strict";
var mergeMap_1 = mergeMap;
/* tslint:disable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} an observable of values merged from the projected
 * Observables as they were subscribed to, one at a time. Optionally, these
 * values may have been projected from a passed `projectResult` argument.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */
function concatMap(project, resultSelector) {
    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));
}
exports.concatMap = concatMap;

});

var concatMap$$1 = concatMap.concatMap;

var every = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 * @param {function} predicate a function for determining if an item meets a specified condition.
 * @param {any} [thisArg] optional object to use for `this` in the callback
 * @return {Observable} an Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */
function every(predicate, thisArg) {
    return this.lift(new EveryOperator(predicate, thisArg, this));
}
exports.every = every;
var EveryOperator = (function () {
    function EveryOperator(predicate, thisArg, source) {
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
    }
    EveryOperator.prototype.call = function (observer, source) {
        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
    };
    return EveryOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var EverySubscriber = (function (_super) {
    __extends(EverySubscriber, _super);
    function EverySubscriber(destination, predicate, thisArg, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.source = source;
        this.index = 0;
        this.thisArg = thisArg || this;
    }
    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
        this.destination.next(everyValueMatch);
        this.destination.complete();
    };
    EverySubscriber.prototype._next = function (value) {
        var result = false;
        try {
            result = this.predicate.call(this.thisArg, value, this.index++, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (!result) {
            this.notifyComplete(false);
        }
    };
    EverySubscriber.prototype._complete = function () {
        this.notifyComplete(true);
    };
    return EverySubscriber;
}(Subscriber_1.Subscriber));

});

var every$$1 = every.every;

var EmptyError = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */
var EmptyError = (function (_super) {
    __extends(EmptyError, _super);
    function EmptyError() {
        var err = _super.call(this, 'no elements in sequence');
        this.name = err.name = 'EmptyError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return EmptyError;
}(Error));
exports.EmptyError = EmptyError;

});

var EmptyError$$1 = EmptyError.EmptyError;

var first = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
var EmptyError_1 = EmptyError;
/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} an Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */
function first(predicate, resultSelector, defaultValue) {
    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));
}
exports.first = first;
var FirstOperator = (function () {
    function FirstOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    FirstOperator.prototype.call = function (observer, source) {
        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return FirstOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FirstSubscriber = (function (_super) {
    __extends(FirstSubscriber, _super);
    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.index = 0;
        this.hasCompleted = false;
        this._emitted = false;
    }
    FirstSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this._emit(value, index);
        }
    };
    FirstSubscriber.prototype._emit = function (value, index) {
        if (this.resultSelector) {
            this._tryResultSelector(value, index);
            return;
        }
        this._emitFinal(value);
    };
    FirstSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this._emitFinal(result);
    };
    FirstSubscriber.prototype._emitFinal = function (value) {
        var destination = this.destination;
        if (!this._emitted) {
            this._emitted = true;
            destination.next(value);
            destination.complete();
            this.hasCompleted = true;
        }
    };
    FirstSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {
            destination.next(this.defaultValue);
            destination.complete();
        }
        else if (!this.hasCompleted) {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return FirstSubscriber;
}(Subscriber_1.Subscriber));

});

var first$$1 = first.first;

var map = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */
function map(project, thisArg) {
    if (typeof project !== 'function') {
        throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
    }
    return this.lift(new MapOperator(project, thisArg));
}
exports.map = map;
var MapOperator = (function () {
    function MapOperator(project, thisArg) {
        this.project = project;
        this.thisArg = thisArg;
    }
    MapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
    };
    return MapOperator;
}());
exports.MapOperator = MapOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var MapSubscriber = (function (_super) {
    __extends(MapSubscriber, _super);
    function MapSubscriber(destination, project, thisArg) {
        _super.call(this, destination);
        this.project = project;
        this.count = 0;
        this.thisArg = thisArg || this;
    }
    // NOTE: This looks unoptimized, but it's actually purposefully NOT
    // using try/catch optimizations.
    MapSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.project.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return MapSubscriber;
}(Subscriber_1.Subscriber));

});


var map$$1 = map.map;

var reduce = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/* tslint:disable:max-line-length */
/**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */
function reduce(accumulator, seed) {
    var hasSeed = false;
    // providing a seed of `undefined` *should* be valid and trigger
    // hasSeed! so don't use `seed !== undefined` checks!
    // For this reason, we have to check it here at the original call site
    // otherwise inside Operator/Subscriber we won't know if `undefined`
    // means they didn't provide anything or if they literally provided `undefined`
    if (arguments.length >= 2) {
        hasSeed = true;
    }
    return this.lift(new ReduceOperator(accumulator, seed, hasSeed));
}
exports.reduce = reduce;
var ReduceOperator = (function () {
    function ReduceOperator(accumulator, seed, hasSeed) {
        if (hasSeed === void 0) { hasSeed = false; }
        this.accumulator = accumulator;
        this.seed = seed;
        this.hasSeed = hasSeed;
    }
    ReduceOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new ReduceSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
    };
    return ReduceOperator;
}());
exports.ReduceOperator = ReduceOperator;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ReduceSubscriber = (function (_super) {
    __extends(ReduceSubscriber, _super);
    function ReduceSubscriber(destination, accumulator, seed, hasSeed) {
        _super.call(this, destination);
        this.accumulator = accumulator;
        this.hasSeed = hasSeed;
        this.hasValue = false;
        this.acc = seed;
    }
    ReduceSubscriber.prototype._next = function (value) {
        if (this.hasValue || (this.hasValue = this.hasSeed)) {
            this._tryReduce(value);
        }
        else {
            this.acc = value;
            this.hasValue = true;
        }
    };
    ReduceSubscriber.prototype._tryReduce = function (value) {
        var result;
        try {
            result = this.accumulator(this.acc, value);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.acc = result;
    };
    ReduceSubscriber.prototype._complete = function () {
        if (this.hasValue || this.hasSeed) {
            this.destination.next(this.acc);
        }
        this.destination.complete();
    };
    return ReduceSubscriber;
}(Subscriber_1.Subscriber));
exports.ReduceSubscriber = ReduceSubscriber;

});



var reduce$$1 = reduce.reduce;

var _catch = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = OuterSubscriber;
var subscribeToResult_1 = subscribeToResult;
/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} an observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @method catch
 * @name catch
 * @owner Observable
 */
function _catch(selector) {
    var operator = new CatchOperator(selector);
    var caught = this.lift(operator);
    return (operator.caught = caught);
}
exports._catch = _catch;
var CatchOperator = (function () {
    function CatchOperator(selector) {
        this.selector = selector;
    }
    CatchOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
    };
    return CatchOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var CatchSubscriber = (function (_super) {
    __extends(CatchSubscriber, _super);
    function CatchSubscriber(destination, selector, caught) {
        _super.call(this, destination);
        this.selector = selector;
        this.caught = caught;
    }
    // NOTE: overriding `error` instead of `_error` because we don't want
    // to have this flag this subscriber as `isStopped`.
    CatchSubscriber.prototype.error = function (err) {
        if (!this.isStopped) {
            var result = void 0;
            try {
                result = this.selector(err, this.caught);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.unsubscribe();
            this.destination.remove(this);
            subscribeToResult_1.subscribeToResult(this, result);
        }
    };
    return CatchSubscriber;
}(OuterSubscriber_1.OuterSubscriber));

});

var _catch$$1 = _catch._catch;

var concatAll = createCommonjsModule(function (module, exports) {
"use strict";
var mergeAll_1 = mergeAll;
/* tslint:disable:max-line-length */
/**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */
function concatAll() {
    return this.lift(new mergeAll_1.MergeAllOperator(1));
}
exports.concatAll = concatAll;

});

var concatAll$$1 = concatAll.concatAll;

var last$1 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
var EmptyError_1 = EmptyError;
/* tslint:disable:max-line-length */
/**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} predicate - the condition any source emitted item has to satisfy.
 * @return {Observable} an Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 * @method last
 * @owner Observable
 */
function last(predicate, resultSelector, defaultValue) {
    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));
}
exports.last = last;
var LastOperator = (function () {
    function LastOperator(predicate, resultSelector, defaultValue, source) {
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
    }
    LastOperator.prototype.call = function (observer, source) {
        return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));
    };
    return LastOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var LastSubscriber = (function (_super) {
    __extends(LastSubscriber, _super);
    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.resultSelector = resultSelector;
        this.defaultValue = defaultValue;
        this.source = source;
        this.hasValue = false;
        this.index = 0;
        if (typeof defaultValue !== 'undefined') {
            this.lastValue = defaultValue;
            this.hasValue = true;
        }
    }
    LastSubscriber.prototype._next = function (value) {
        var index = this.index++;
        if (this.predicate) {
            this._tryPredicate(value, index);
        }
        else {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryPredicate = function (value, index) {
        var result;
        try {
            result = this.predicate(value, index, this.source);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            if (this.resultSelector) {
                this._tryResultSelector(value, index);
                return;
            }
            this.lastValue = value;
            this.hasValue = true;
        }
    };
    LastSubscriber.prototype._tryResultSelector = function (value, index) {
        var result;
        try {
            result = this.resultSelector(value, index);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.lastValue = result;
        this.hasValue = true;
    };
    LastSubscriber.prototype._complete = function () {
        var destination = this.destination;
        if (this.hasValue) {
            destination.next(this.lastValue);
            destination.complete();
        }
        else {
            destination.error(new EmptyError_1.EmptyError);
        }
    };
    return LastSubscriber;
}(Subscriber_1.Subscriber));

});

var last$$1 = last$1.last;

var filter = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/* tslint:disable:max-line-length */
/**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */
function filter(predicate, thisArg) {
    return this.lift(new FilterOperator(predicate, thisArg));
}
exports.filter = filter;
var FilterOperator = (function () {
    function FilterOperator(predicate, thisArg) {
        this.predicate = predicate;
        this.thisArg = thisArg;
    }
    FilterOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
    };
    return FilterOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var FilterSubscriber = (function (_super) {
    __extends(FilterSubscriber, _super);
    function FilterSubscriber(destination, predicate, thisArg) {
        _super.call(this, destination);
        this.predicate = predicate;
        this.thisArg = thisArg;
        this.count = 0;
        this.predicate = predicate;
    }
    // the try catch block below is left specifically for
    // optimization and perf reasons. a tryCatcher is not necessary here.
    FilterSubscriber.prototype._next = function (value) {
        var result;
        try {
            result = this.predicate.call(this.thisArg, value, this.count++);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        if (result) {
            this.destination.next(value);
        }
    };
    return FilterSubscriber;
}(Subscriber_1.Subscriber));

});

var filter$$1 = filter.filter;

var _typeof$3=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass$4=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _possibleConstructorReturn$4(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits$4(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _toConsumableArray$4(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck$4(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 *//**
 * \@whatItDoes Represents an event triggered when a navigation starts.
 *
 * \@stable
 */var NavigationStart=function(){/**
     * @param {?} id
     * @param {?} url
     */function NavigationStart(id,url){_classCallCheck$4(this,NavigationStart);this.id=id;this.url=url;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass$4(NavigationStart,[{key:'toString',value:function toString(){return'NavigationStart(id: '+this.id+', url: \''+this.url+'\')';}}]);return NavigationStart;}();/**
 * \@whatItDoes Represents an event triggered when a navigation ends successfully.
 *
 * \@stable
 */var NavigationEnd=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} urlAfterRedirects
     */function NavigationEnd(id,url,urlAfterRedirects){_classCallCheck$4(this,NavigationEnd);this.id=id;this.url=url;this.urlAfterRedirects=urlAfterRedirects;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass$4(NavigationEnd,[{key:'toString',value:function toString(){return'NavigationEnd(id: '+this.id+', url: \''+this.url+'\', urlAfterRedirects: \''+this.urlAfterRedirects+'\')';}}]);return NavigationEnd;}();/**
 * \@whatItDoes Represents an event triggered when a navigation is canceled.
 *
 * \@stable
 */var NavigationCancel=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} reason
     */function NavigationCancel(id,url,reason){_classCallCheck$4(this,NavigationCancel);this.id=id;this.url=url;this.reason=reason;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass$4(NavigationCancel,[{key:'toString',value:function toString(){return'NavigationCancel(id: '+this.id+', url: \''+this.url+'\')';}}]);return NavigationCancel;}();/**
 * \@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.
 *
 * \@stable
 */var NavigationError=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} error
     */function NavigationError(id,url,error){_classCallCheck$4(this,NavigationError);this.id=id;this.url=url;this.error=error;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass$4(NavigationError,[{key:'toString',value:function toString(){return'NavigationError(id: '+this.id+', url: \''+this.url+'\', error: '+this.error+')';}}]);return NavigationError;}();/**
 * \@whatItDoes Represents an event triggered when routes are recognized.
 *
 * \@stable
 */var RoutesRecognized=function(){/**
     * @param {?} id
     * @param {?} url
     * @param {?} urlAfterRedirects
     * @param {?} state
     */function RoutesRecognized(id,url,urlAfterRedirects,state$$1){_classCallCheck$4(this,RoutesRecognized);this.id=id;this.url=url;this.urlAfterRedirects=urlAfterRedirects;this.state=state$$1;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass$4(RoutesRecognized,[{key:'toString',value:function toString(){return'RoutesRecognized(id: '+this.id+', url: \''+this.url+'\', urlAfterRedirects: \''+this.urlAfterRedirects+'\', state: '+this.state+')';}}]);return RoutesRecognized;}();/**
 * \@whatItDoes Represents an event triggered before lazy loading a route config.
 *
 * \@experimental
 */var RouteConfigLoadStart=function(){/**
     * @param {?} route
     */function RouteConfigLoadStart(route){_classCallCheck$4(this,RouteConfigLoadStart);this.route=route;}/**
     * @return {?}
     */_createClass$4(RouteConfigLoadStart,[{key:'toString',value:function toString(){return'RouteConfigLoadStart(path: '+this.route.path+')';}}]);return RouteConfigLoadStart;}();/**
 * \@whatItDoes Represents an event triggered when a route has been lazy loaded.
 *
 * \@experimental
 */var RouteConfigLoadEnd=function(){/**
     * @param {?} route
     */function RouteConfigLoadEnd(route){_classCallCheck$4(this,RouteConfigLoadEnd);this.route=route;}/**
     * @return {?}
     */_createClass$4(RouteConfigLoadEnd,[{key:'toString',value:function toString(){return'RouteConfigLoadEnd(path: '+this.route.path+')';}}]);return RouteConfigLoadEnd;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * @whatItDoes Name of the primary outlet.
 *
 * @stable
 */var PRIMARY_OUTLET='primary';var NAVIGATION_CANCELING_ERROR='ngNavigationCancelingError';/**
 * @param {?} message
 * @return {?}
 */function navigationCancelingError(message){var/** @type {?} */error=Error('NavigationCancelingError: '+message);error[NAVIGATION_CANCELING_ERROR]=true;return error;}/**
 * @param {?} error
 * @return {?}
 */function isNavigationCancelingError(error){return error[NAVIGATION_CANCELING_ERROR];}/**
 * @param {?} segments
 * @param {?} segmentGroup
 * @param {?} route
 * @return {?}
 */function defaultUrlMatcher(segments,segmentGroup,route){var/** @type {?} */path=route.path;var/** @type {?} */parts=path.split('/');var/** @type {?} */posParams={};var/** @type {?} */consumed=[];var/** @type {?} */currentIndex=0;for(var/** @type {?} */i=0;i<parts.length;++i){if(currentIndex>=segments.length)return null;var/** @type {?} */current=segments[currentIndex];var/** @type {?} */p=parts[i];var/** @type {?} */isPosParam=p.startsWith(':');if(!isPosParam&&p!==current.path)return null;if(isPosParam){posParams[p.substring(1)]=current;}consumed.push(current);currentIndex++;}if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||currentIndex<segments.length)){return null;}else{return{consumed:consumed,posParams:posParams};}}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function shallowEqualArrays(a,b){if(a.length!==b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(!shallowEqual(a[i],b[i]))return false;}return true;}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function shallowEqual(a,b){var/** @type {?} */k1=Object.keys(a);var/** @type {?} */k2=Object.keys(b);if(k1.length!=k2.length){return false;}var/** @type {?} */key=void 0;for(var/** @type {?} */i=0;i<k1.length;i++){key=k1[i];if(a[key]!==b[key]){return false;}}return true;}/**
 * @param {?} a
 * @return {?}
 */function flatten(a){var/** @type {?} */target=[];for(var/** @type {?} */i=0;i<a.length;++i){for(var/** @type {?} */j=0;j<a[i].length;++j){target.push(a[i][j]);}}return target;}/**
 * @param {?} a
 * @return {?}
 */function last$$1(a){return a.length>0?a[a.length-1]:null;}/**
 * @param {?} m1
 * @param {?} m2
 * @return {?}
 */function merge$5(m1,m2){var/** @type {?} */m={};for(var/** @type {?} */attr in m1){if(m1.hasOwnProperty(attr)){m[attr]=m1[attr];}}for(var/** @type {?} */_attr in m2){if(m2.hasOwnProperty(_attr)){m[_attr]=m2[_attr];}}return m;}/**
 * @param {?} map
 * @param {?} callback
 * @return {?}
 */function forEach(map$$2,callback){for(var/** @type {?} */prop in map$$2){if(map$$2.hasOwnProperty(prop)){callback(map$$2[prop],prop);}}}/**
 * @param {?} obj
 * @param {?} fn
 * @return {?}
 */function waitForMap(obj,fn){var/** @type {?} */waitFor=[];var/** @type {?} */res={};forEach(obj,function(a,k){if(k===PRIMARY_OUTLET){waitFor.push(map$$1.call(fn(k,a),function(_){res[k]=_;return _;}));}});forEach(obj,function(a,k){if(k!==PRIMARY_OUTLET){waitFor.push(map$$1.call(fn(k,a),function(_){res[k]=_;return _;}));}});if(waitFor.length>0){var/** @type {?} */concatted$=concatAll$$1.call(of$$1.apply(undefined,waitFor));var/** @type {?} */last$=last$$1.call(concatted$);return map$$1.call(last$,function(){return res;});}return of$$1(res);}/**
 * @param {?} observables
 * @return {?}
 */function andObservables(observables){var/** @type {?} */merged$=mergeAll$$1.call(observables);return every$$1.call(merged$,function(result){return result===true;});}/**
 * @param {?} value
 * @return {?}
 */function wrapIntoObservable(value){if(isObservable(value)){return value;}if(isPromise(value)){return fromPromise$$1(value);}return of$$1(value);}/**
 * @docsNotRequired
 * @experimental
 */var ROUTES=new InjectionToken('ROUTES');var LoadedRouterConfig=/**
     * @param {?} routes
     * @param {?} injector
     * @param {?} factoryResolver
     * @param {?} injectorFactory
     */function LoadedRouterConfig(routes,injector,factoryResolver,injectorFactory){_classCallCheck$4(this,LoadedRouterConfig);this.routes=routes;this.injector=injector;this.factoryResolver=factoryResolver;this.injectorFactory=injectorFactory;};var RouterConfigLoader=function(){/**
     * @param {?} loader
     * @param {?} compiler
     * @param {?=} onLoadStartListener
     * @param {?=} onLoadEndListener
     */function RouterConfigLoader(loader,compiler,onLoadStartListener,onLoadEndListener){_classCallCheck$4(this,RouterConfigLoader);this.loader=loader;this.compiler=compiler;this.onLoadStartListener=onLoadStartListener;this.onLoadEndListener=onLoadEndListener;}/**
     * @param {?} parentInjector
     * @param {?} route
     * @return {?}
     */_createClass$4(RouterConfigLoader,[{key:'load',value:function load(parentInjector,route){var _this=this;if(this.onLoadStartListener){this.onLoadStartListener(route);}var/** @type {?} */moduleFactory$=this.loadModuleFactory(route.loadChildren);return map$$1.call(moduleFactory$,function(factory){if(_this.onLoadEndListener){_this.onLoadEndListener(route);}var/** @type {?} */module=factory.create(parentInjector);var/** @type {?} */injectorFactory=function injectorFactory(parent){return factory.create(parent).injector;};return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)),module.injector,module.componentFactoryResolver,injectorFactory);});}/**
     * @param {?} loadChildren
     * @return {?}
     */},{key:'loadModuleFactory',value:function loadModuleFactory(loadChildren){var _this2=this;if(typeof loadChildren==='string'){return fromPromise$$1(this.loader.load(loadChildren));}else{var/** @type {?} */offlineMode=this.compiler instanceof Compiler;return mergeMap$$1.call(wrapIntoObservable(loadChildren()),function(t){return offlineMode?of$$1(/** @type {?} */t):fromPromise$$1(_this2.compiler.compileModuleAsync(t));});}}}]);return RouterConfigLoader;}();/**
 * @return {?}
 */function createEmptyUrlTree(){return new UrlTree(new UrlSegmentGroup([],{}),{},null);}/**
 * @param {?} container
 * @param {?} containee
 * @param {?} exact
 * @return {?}
 */function containsTree(container,containee,exact){if(exact){return equalQueryParams(container.queryParams,containee.queryParams)&&equalSegmentGroups(container.root,containee.root);}return containsQueryParams(container.queryParams,containee.queryParams)&&containsSegmentGroup(container.root,containee.root);}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function equalQueryParams(container,containee){return shallowEqual(container,containee);}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function equalSegmentGroups(container,containee){if(!equalPath(container.segments,containee.segments))return false;if(container.numberOfChildren!==containee.numberOfChildren)return false;for(var/** @type {?} */c in containee.children){if(!container.children[c])return false;if(!equalSegmentGroups(container.children[c],containee.children[c]))return false;}return true;}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function containsQueryParams(container,containee){return Object.keys(containee).length<=Object.keys(container).length&&Object.keys(containee).every(function(key){return containee[key]===container[key];});}/**
 * @param {?} container
 * @param {?} containee
 * @return {?}
 */function containsSegmentGroup(container,containee){return containsSegmentGroupHelper(container,containee,containee.segments);}/**
 * @param {?} container
 * @param {?} containee
 * @param {?} containeePaths
 * @return {?}
 */function containsSegmentGroupHelper(container,containee,containeePaths){if(container.segments.length>containeePaths.length){var/** @type {?} */current=container.segments.slice(0,containeePaths.length);if(!equalPath(current,containeePaths))return false;if(containee.hasChildren())return false;return true;}else if(container.segments.length===containeePaths.length){if(!equalPath(container.segments,containeePaths))return false;for(var/** @type {?} */c in containee.children){if(!container.children[c])return false;if(!containsSegmentGroup(container.children[c],containee.children[c]))return false;}return true;}else{var/** @type {?} */_current=containeePaths.slice(0,container.segments.length);var/** @type {?} */next=containeePaths.slice(container.segments.length);if(!equalPath(container.segments,_current))return false;if(!container.children[PRIMARY_OUTLET])return false;return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET],containee,next);}}/**
 * \@whatItDoes Represents the parsed URL.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree =
 *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');
 *     const f = tree.fragment; // return 'fragment'
 *     const q = tree.queryParams; // returns {debug: 'true'}
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'
 *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'
 *     g.children['support'].segments; // return 1 segment 'help'
 *   }
 * }
 * ```
 *
 * \@description
 *
 * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a
 * serialized tree.
 * UrlTree is a data structure that provides a lot of affordances in dealing with URLs
 *
 * \@stable
 */var UrlTree=function(){/**
     * \@internal
     * @param {?} root
     * @param {?} queryParams
     * @param {?} fragment
     */function UrlTree(root,queryParams,fragment){_classCallCheck$4(this,UrlTree);this.root=root;this.queryParams=queryParams;this.fragment=fragment;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass$4(UrlTree,[{key:'toString',value:function toString(){return new DefaultUrlSerializer().serialize(this);}}]);return UrlTree;}();/**
 * \@whatItDoes Represents the parsed URL segment group.
 *
 * See {\@link UrlTree} for more information.
 *
 * \@stable
 */var UrlSegmentGroup=function(){/**
     * @param {?} segments
     * @param {?} children
     */function UrlSegmentGroup(segments,children){var _this3=this;_classCallCheck$4(this,UrlSegmentGroup);this.segments=segments;this.children=children;/** The parent node in the url tree */this.parent=null;forEach(children,function(v,k){return v.parent=_this3;});}/**
     * Wether the segment has child segments
     * @return {?}
     */_createClass$4(UrlSegmentGroup,[{key:'hasChildren',value:function hasChildren(){return this.numberOfChildren>0;}/**
     * Number of child segments
     * @return {?}
     */},{key:'toString',/**
     * \@docsNotRequired
     * @return {?}
     */value:function toString(){return serializePaths(this);}},{key:'numberOfChildren',get:function get(){return Object.keys(this.children).length;}}]);return UrlSegmentGroup;}();/**
 * \@whatItDoes Represents a single URL segment.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const tree: UrlTree = router.parseUrl('/team;id=33');
 *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];
 *     const s: UrlSegment[] = g.segments;
 *     s[0].path; // returns 'team'
 *     s[0].parameters; // returns {id: 33}
 *   }
 * }
 * ```
 *
 * \@description
 *
 * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix
 * parameters associated with the segment.
 *
 * \@stable
 */var UrlSegment=function(){/**
     * @param {?} path
     * @param {?} parameters
     */function UrlSegment(path,parameters){_classCallCheck$4(this,UrlSegment);this.path=path;this.parameters=parameters;}/**
     * \@docsNotRequired
     * @return {?}
     */_createClass$4(UrlSegment,[{key:'toString',value:function toString(){return serializePath(this);}}]);return UrlSegment;}();/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function equalSegments(a,b){if(a.length!==b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i].path!==b[i].path)return false;if(!shallowEqual(a[i].parameters,b[i].parameters))return false;}return true;}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function equalPath(a,b){if(a.length!==b.length)return false;for(var/** @type {?} */i=0;i<a.length;++i){if(a[i].path!==b[i].path)return false;}return true;}/**
 * @param {?} segment
 * @param {?} fn
 * @return {?}
 */function mapChildrenIntoArray(segment,fn){var/** @type {?} */res=[];forEach(segment.children,function(child,childOutlet){if(childOutlet===PRIMARY_OUTLET){res=res.concat(fn(child,childOutlet));}});forEach(segment.children,function(child,childOutlet){if(childOutlet!==PRIMARY_OUTLET){res=res.concat(fn(child,childOutlet));}});return res;}/**
 * \@whatItDoes Serializes and deserializes a URL string into a URL tree.
 *
 * \@description The url serialization strategy is customizable. You can
 * make all URLs case insensitive by providing a custom UrlSerializer.
 *
 * See {\@link DefaultUrlSerializer} for an example of a URL serializer.
 *
 * \@stable
 * @abstract
 */var UrlSerializer=function(){function UrlSerializer(){_classCallCheck$4(this,UrlSerializer);}_createClass$4(UrlSerializer,[{key:'parse',/**
     * Parse a url into a {\@link UrlTree}
     * @abstract
     * @param {?} url
     * @return {?}
     */value:function parse(url){}/**
     * Converts a {\@link UrlTree} into a url
     * @abstract
     * @param {?} tree
     * @return {?}
     */},{key:'serialize',value:function serialize(tree){}}]);return UrlSerializer;}();/**
 * \@whatItDoes A default implementation of the {\@link UrlSerializer}.
 *
 * \@description
 *
 * Example URLs:
 *
 * ```
 * /inbox/33(popup:compose)
 * /inbox/33;open=true/messages/44
 * ```
 *
 * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the
 * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to
 * specify route specific parameters.
 *
 * \@stable
 */var DefaultUrlSerializer=function(){function DefaultUrlSerializer(){_classCallCheck$4(this,DefaultUrlSerializer);}_createClass$4(DefaultUrlSerializer,[{key:'parse',/**
     * Parses a url into a {\@link UrlTree}
     * @param {?} url
     * @return {?}
     */value:function parse(url){var/** @type {?} */p=new UrlParser(url);return new UrlTree(p.parseRootSegment(),p.parseQueryParams(),p.parseFragment());}/**
     * Converts a {\@link UrlTree} into a url
     * @param {?} tree
     * @return {?}
     */},{key:'serialize',value:function serialize(tree){var/** @type {?} */segment='/'+serializeSegment(tree.root,true);var/** @type {?} */query=serializeQueryParams(tree.queryParams);var/** @type {?} */fragment=tree.fragment!==null&&tree.fragment!==undefined?'#'+encodeURI(tree.fragment):'';return''+segment+query+fragment;}}]);return DefaultUrlSerializer;}();/**
 * @param {?} segment
 * @return {?}
 */function serializePaths(segment){return segment.segments.map(function(p){return serializePath(p);}).join('/');}/**
 * @param {?} segment
 * @param {?} root
 * @return {?}
 */function serializeSegment(segment,root){if(segment.hasChildren()&&root){var/** @type {?} */primary=segment.children[PRIMARY_OUTLET]?serializeSegment(segment.children[PRIMARY_OUTLET],false):'';var/** @type {?} */children=[];forEach(segment.children,function(v,k){if(k!==PRIMARY_OUTLET){children.push(k+':'+serializeSegment(v,false));}});if(children.length>0){return primary+'('+children.join('//')+')';}else{return''+primary;}}else if(segment.hasChildren()&&!root){var/** @type {?} */_children=mapChildrenIntoArray(segment,function(v,k){if(k===PRIMARY_OUTLET){return[serializeSegment(segment.children[PRIMARY_OUTLET],false)];}else{return[k+':'+serializeSegment(v,false)];}});return serializePaths(segment)+'/('+_children.join('//')+')';}else{return serializePaths(segment);}}/**
 * @param {?} s
 * @return {?}
 */function encode(s){return encodeURIComponent(s);}/**
 * @param {?} s
 * @return {?}
 */function decode(s){return decodeURIComponent(s);}/**
 * @param {?} path
 * @return {?}
 */function serializePath(path){return''+encode(path.path)+serializeParams(path.parameters);}/**
 * @param {?} params
 * @return {?}
 */function serializeParams(params){return pairs(params).map(function(p){return';'+encode(p.first)+'='+encode(p.second);}).join('');}/**
 * @param {?} params
 * @return {?}
 */function serializeQueryParams(params){var/** @type {?} */strParams=Object.keys(params).map(function(name){var/** @type {?} */value=params[name];return Array.isArray(value)?value.map(function(v){return encode(name)+'='+encode(v);}).join('&'):encode(name)+'='+encode(value);});return strParams.length?'?'+strParams.join("&"):'';}var Pair=/**
     * @param {?} first
     * @param {?} second
     */function Pair(first$$2,second){_classCallCheck$4(this,Pair);this.first=first$$2;this.second=second;};/**
 * @param {?} obj
 * @return {?}
 */function pairs(obj){var/** @type {?} */res=[];for(var/** @type {?} */prop in obj){if(obj.hasOwnProperty(prop)){res.push(new Pair(prop,obj[prop]));}}return res;}var SEGMENT_RE=/^[^\/()?;=&#]+/;/**
 * @param {?} str
 * @return {?}
 */function matchSegments(str){SEGMENT_RE.lastIndex=0;var/** @type {?} */match=str.match(SEGMENT_RE);return match?match[0]:'';}var QUERY_PARAM_RE=/^[^=?&#]+/;/**
 * @param {?} str
 * @return {?}
 */function matchQueryParams(str){QUERY_PARAM_RE.lastIndex=0;var/** @type {?} */match=str.match(SEGMENT_RE);return match?match[0]:'';}var QUERY_PARAM_VALUE_RE=/^[^?&#]+/;/**
 * @param {?} str
 * @return {?}
 */function matchUrlQueryParamValue(str){QUERY_PARAM_VALUE_RE.lastIndex=0;var/** @type {?} */match=str.match(QUERY_PARAM_VALUE_RE);return match?match[0]:'';}var UrlParser=function(){/**
     * @param {?} url
     */function UrlParser(url){_classCallCheck$4(this,UrlParser);this.url=url;this.remaining=url;}/**
     * @param {?} str
     * @return {?}
     */_createClass$4(UrlParser,[{key:'peekStartsWith',value:function peekStartsWith(str){return this.remaining.startsWith(str);}/**
     * @param {?} str
     * @return {?}
     */},{key:'capture',value:function capture(str){if(!this.remaining.startsWith(str)){throw new Error('Expected "'+str+'".');}this.remaining=this.remaining.substring(str.length);}/**
     * @return {?}
     */},{key:'parseRootSegment',value:function parseRootSegment(){if(this.remaining.startsWith('/')){this.capture('/');}if(this.remaining===''||this.remaining.startsWith('?')||this.remaining.startsWith('#')){return new UrlSegmentGroup([],{});}return new UrlSegmentGroup([],this.parseChildren());}/**
     * @return {?}
     */},{key:'parseChildren',value:function parseChildren(){if(this.remaining.length==0){return{};}if(this.peekStartsWith('/')){this.capture('/');}var/** @type {?} */paths=[];if(!this.peekStartsWith('(')){paths.push(this.parseSegments());}while(this.peekStartsWith('/')&&!this.peekStartsWith('//')&&!this.peekStartsWith('/(')){this.capture('/');paths.push(this.parseSegments());}var/** @type {?} */children={};if(this.peekStartsWith('/(')){this.capture('/');children=this.parseParens(true);}var/** @type {?} */res={};if(this.peekStartsWith('(')){res=this.parseParens(false);}if(paths.length>0||Object.keys(children).length>0){res[PRIMARY_OUTLET]=new UrlSegmentGroup(paths,children);}return res;}/**
     * @return {?}
     */},{key:'parseSegments',value:function parseSegments(){var/** @type {?} */path=matchSegments(this.remaining);if(path===''&&this.peekStartsWith(';')){throw new Error('Empty path url segment cannot have parameters: \''+this.remaining+'\'.');}this.capture(path);var/** @type {?} */matrixParams={};if(this.peekStartsWith(';')){matrixParams=this.parseMatrixParams();}return new UrlSegment(decode(path),matrixParams);}/**
     * @return {?}
     */},{key:'parseQueryParams',value:function parseQueryParams(){var/** @type {?} */params={};if(this.peekStartsWith('?')){this.capture('?');this.parseQueryParam(params);while(this.remaining.length>0&&this.peekStartsWith('&')){this.capture('&');this.parseQueryParam(params);}}return params;}/**
     * @return {?}
     */},{key:'parseFragment',value:function parseFragment(){if(this.peekStartsWith('#')){return decodeURI(this.remaining.substring(1));}return null;}/**
     * @return {?}
     */},{key:'parseMatrixParams',value:function parseMatrixParams(){var/** @type {?} */params={};while(this.remaining.length>0&&this.peekStartsWith(';')){this.capture(';');this.parseParam(params);}return params;}/**
     * @param {?} params
     * @return {?}
     */},{key:'parseParam',value:function parseParam(params){var/** @type {?} */key=matchSegments(this.remaining);if(!key){return;}this.capture(key);var/** @type {?} */value='';if(this.peekStartsWith('=')){this.capture('=');var/** @type {?} */valueMatch=matchSegments(this.remaining);if(valueMatch){value=valueMatch;this.capture(value);}}params[decode(key)]=decode(value);}/**
     * @param {?} params
     * @return {?}
     */},{key:'parseQueryParam',value:function parseQueryParam(params){var/** @type {?} */key=matchQueryParams(this.remaining);if(!key){return;}this.capture(key);var/** @type {?} */value='';if(this.peekStartsWith('=')){this.capture('=');var/** @type {?} */valueMatch=matchUrlQueryParamValue(this.remaining);if(valueMatch){value=valueMatch;this.capture(value);}}var/** @type {?} */decodedKey=decode(key);var/** @type {?} */decodedVal=decode(value);if(params.hasOwnProperty(decodedKey)){// Append to existing values
var/** @type {?} */currentVal=params[decodedKey];if(!Array.isArray(currentVal)){currentVal=[currentVal];params[decodedKey]=currentVal;}currentVal.push(decodedVal);}else{// Create a new value
params[decodedKey]=decodedVal;}}/**
     * @param {?} allowPrimary
     * @return {?}
     */},{key:'parseParens',value:function parseParens(allowPrimary){var/** @type {?} */segments={};this.capture('(');while(!this.peekStartsWith(')')&&this.remaining.length>0){var/** @type {?} */path=matchSegments(this.remaining);var/** @type {?} */next=this.remaining[path.length];// if is is not one of these characters, then the segment was unescaped
// or the group was not closed
if(next!=='/'&&next!==')'&&next!==';'){throw new Error('Cannot parse url \''+this.url+'\'');}var/** @type {?} */outletName=void 0;if(path.indexOf(':')>-1){outletName=path.substr(0,path.indexOf(':'));this.capture(outletName);this.capture(':');}else if(allowPrimary){outletName=PRIMARY_OUTLET;}var/** @type {?} */children=this.parseChildren();segments[outletName]=Object.keys(children).length===1?children[PRIMARY_OUTLET]:new UrlSegmentGroup([],children);if(this.peekStartsWith('//')){this.capture('//');}}this.capture(')');return segments;}}]);return UrlParser;}();var NoMatch=/**
     * @param {?=} segmentGroup
     */function NoMatch(){var segmentGroup=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck$4(this,NoMatch);this.segmentGroup=segmentGroup;};var AbsoluteRedirect=/**
     * @param {?} urlTree
     */function AbsoluteRedirect(urlTree){_classCallCheck$4(this,AbsoluteRedirect);this.urlTree=urlTree;};/**
 * @param {?} segmentGroup
 * @return {?}
 */function noMatch(segmentGroup){return new Observable$$1(function(obs){return obs.error(new NoMatch(segmentGroup));});}/**
 * @param {?} newTree
 * @return {?}
 */function absoluteRedirect(newTree){return new Observable$$1(function(obs){return obs.error(new AbsoluteRedirect(newTree));});}/**
 * @param {?} redirectTo
 * @return {?}
 */function namedOutletsRedirect(redirectTo){return new Observable$$1(function(obs){return obs.error(new Error('Only absolute redirects can have named outlets. redirectTo: \''+redirectTo+'\''));});}/**
 * @param {?} route
 * @return {?}
 */function canLoadFails(route){return new Observable$$1(function(obs){return obs.error(navigationCancelingError('Cannot load children because the guard of the route "path: \''+route.path+'\'" returned false'));});}/**
 * @param {?} injector
 * @param {?} configLoader
 * @param {?} urlSerializer
 * @param {?} urlTree
 * @param {?} config
 * @return {?}
 */function applyRedirects(injector,configLoader,urlSerializer,urlTree,config){return new ApplyRedirects(injector,configLoader,urlSerializer,urlTree,config).apply();}var ApplyRedirects=function(){/**
     * @param {?} injector
     * @param {?} configLoader
     * @param {?} urlSerializer
     * @param {?} urlTree
     * @param {?} config
     */function ApplyRedirects(injector,configLoader,urlSerializer,urlTree,config){_classCallCheck$4(this,ApplyRedirects);this.injector=injector;this.configLoader=configLoader;this.urlSerializer=urlSerializer;this.urlTree=urlTree;this.config=config;this.allowRedirects=true;}/**
     * @return {?}
     */_createClass$4(ApplyRedirects,[{key:'apply',value:function apply(){var _this4=this;var/** @type {?} */expanded$=this.expandSegmentGroup(this.injector,this.config,this.urlTree.root,PRIMARY_OUTLET);var/** @type {?} */urlTrees$=map$$1.call(expanded$,function(rootSegmentGroup){return _this4.createUrlTree(rootSegmentGroup,_this4.urlTree.queryParams,_this4.urlTree.fragment);});return _catch$$1.call(urlTrees$,function(e){if(e instanceof AbsoluteRedirect){// after an absolute redirect we do not apply any more redirects!
_this4.allowRedirects=false;// we need to run matching, so we can fetch all lazy-loaded modules
return _this4.match(e.urlTree);}if(e instanceof NoMatch){throw _this4.noMatchError(e);}throw e;});}/**
     * @param {?} tree
     * @return {?}
     */},{key:'match',value:function match(tree){var _this5=this;var/** @type {?} */expanded$=this.expandSegmentGroup(this.injector,this.config,tree.root,PRIMARY_OUTLET);var/** @type {?} */mapped$=map$$1.call(expanded$,function(rootSegmentGroup){return _this5.createUrlTree(rootSegmentGroup,tree.queryParams,tree.fragment);});return _catch$$1.call(mapped$,function(e){if(e instanceof NoMatch){throw _this5.noMatchError(e);}throw e;});}/**
     * @param {?} e
     * @return {?}
     */},{key:'noMatchError',value:function noMatchError(e){return new Error('Cannot match any routes. URL Segment: \''+e.segmentGroup+'\'');}/**
     * @param {?} rootCandidate
     * @param {?} queryParams
     * @param {?} fragment
     * @return {?}
     */},{key:'createUrlTree',value:function createUrlTree(rootCandidate,queryParams,fragment){var/** @type {?} */root=rootCandidate.segments.length>0?new UrlSegmentGroup([],_defineProperty({},PRIMARY_OUTLET,rootCandidate)):rootCandidate;return new UrlTree(root,queryParams,fragment);}/**
     * @param {?} injector
     * @param {?} routes
     * @param {?} segmentGroup
     * @param {?} outlet
     * @return {?}
     */},{key:'expandSegmentGroup',value:function expandSegmentGroup(injector,routes,segmentGroup,outlet){if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return map$$1.call(this.expandChildren(injector,routes,segmentGroup),function(children){return new UrlSegmentGroup([],children);});}return this.expandSegment(injector,segmentGroup,routes,segmentGroup.segments,outlet,true);}/**
     * @param {?} injector
     * @param {?} routes
     * @param {?} segmentGroup
     * @return {?}
     */},{key:'expandChildren',value:function expandChildren(injector,routes,segmentGroup){var _this6=this;return waitForMap(segmentGroup.children,function(childOutlet,child){return _this6.expandSegmentGroup(injector,routes,child,childOutlet);});}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} segments
     * @param {?} outlet
     * @param {?} allowRedirects
     * @return {?}
     */},{key:'expandSegment',value:function expandSegment(injector,segmentGroup,routes,segments,outlet,allowRedirects){var _this7=this;var/** @type {?} */routes$=of$$1.apply(undefined,_toConsumableArray$4(routes));var/** @type {?} */processedRoutes$=map$$1.call(routes$,function(r){var/** @type {?} */expanded$=_this7.expandSegmentAgainstRoute(injector,segmentGroup,routes,r,segments,outlet,allowRedirects);return _catch$$1.call(expanded$,function(e){if(e instanceof NoMatch){return of$$1(null);}throw e;});});var/** @type {?} */concattedProcessedRoutes$=concatAll$$1.call(processedRoutes$);var/** @type {?} */first$=first$$1.call(concattedProcessedRoutes$,function(s){return!!s;});return _catch$$1.call(first$,function(e,_){if(e instanceof EmptyError$$1){if(_this7.noLeftoversInUrl(segmentGroup,segments,outlet)){return of$$1(new UrlSegmentGroup([],{}));}throw new NoMatch(segmentGroup);}throw e;});}/**
     * @param {?} segmentGroup
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'noLeftoversInUrl',value:function noLeftoversInUrl(segmentGroup,segments,outlet){return segments.length===0&&!segmentGroup.children[outlet];}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} route
     * @param {?} paths
     * @param {?} outlet
     * @param {?} allowRedirects
     * @return {?}
     */},{key:'expandSegmentAgainstRoute',value:function expandSegmentAgainstRoute(injector,segmentGroup,routes,route,paths,outlet,allowRedirects){if(getOutlet$1(route)!==outlet){return noMatch(segmentGroup);}if(route.redirectTo!==undefined&&!(allowRedirects&&this.allowRedirects)){return noMatch(segmentGroup);}if(route.redirectTo===undefined){return this.matchSegmentAgainstRoute(injector,segmentGroup,route,paths);}return this.expandSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,paths,outlet);}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} route
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'expandSegmentAgainstRouteUsingRedirect',value:function expandSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,segments,outlet){if(route.path==='**'){return this.expandWildCardWithParamsAgainstRouteUsingRedirect(injector,routes,route,outlet);}return this.expandRegularSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,segments,outlet);}/**
     * @param {?} injector
     * @param {?} routes
     * @param {?} route
     * @param {?} outlet
     * @return {?}
     */},{key:'expandWildCardWithParamsAgainstRouteUsingRedirect',value:function expandWildCardWithParamsAgainstRouteUsingRedirect(injector,routes,route,outlet){var _this8=this;var/** @type {?} */newTree=this.applyRedirectCommands([],route.redirectTo,{});if(route.redirectTo.startsWith('/')){return absoluteRedirect(newTree);}return mergeMap$$1.call(this.lineralizeSegments(route,newTree),function(newSegments){var/** @type {?} */group$$1=new UrlSegmentGroup(newSegments,{});return _this8.expandSegment(injector,group$$1,routes,newSegments,outlet,false);});}/**
     * @param {?} injector
     * @param {?} segmentGroup
     * @param {?} routes
     * @param {?} route
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'expandRegularSegmentAgainstRouteUsingRedirect',value:function expandRegularSegmentAgainstRouteUsingRedirect(injector,segmentGroup,routes,route,segments,outlet){var _this9=this;var _match=match(segmentGroup,route,segments),matched=_match.matched,consumedSegments=_match.consumedSegments,lastChild=_match.lastChild,positionalParamSegments=_match.positionalParamSegments;if(!matched)return noMatch(segmentGroup);var/** @type {?} */newTree=this.applyRedirectCommands(consumedSegments,route.redirectTo,/** @type {?} */positionalParamSegments);if(route.redirectTo.startsWith('/')){return absoluteRedirect(newTree);}return mergeMap$$1.call(this.lineralizeSegments(route,newTree),function(newSegments){return _this9.expandSegment(injector,segmentGroup,routes,newSegments.concat(segments.slice(lastChild)),outlet,false);});}/**
     * @param {?} injector
     * @param {?} rawSegmentGroup
     * @param {?} route
     * @param {?} segments
     * @return {?}
     */},{key:'matchSegmentAgainstRoute',value:function matchSegmentAgainstRoute(injector,rawSegmentGroup,route,segments){var _this10=this;if(route.path==='**'){if(route.loadChildren){return map$$1.call(this.configLoader.load(injector,route),function(cfg){route._loadedConfig=cfg;return new UrlSegmentGroup(segments,{});});}return of$$1(new UrlSegmentGroup(segments,{}));}var _match2=match(rawSegmentGroup,route,segments),matched=_match2.matched,consumedSegments=_match2.consumedSegments,lastChild=_match2.lastChild;if(!matched)return noMatch(rawSegmentGroup);var/** @type {?} */rawSlicedSegments=segments.slice(lastChild);var/** @type {?} */childConfig$=this.getChildConfig(injector,route);return mergeMap$$1.call(childConfig$,function(routerConfig){var/** @type {?} */childInjector=routerConfig.injector;var/** @type {?} */childConfig=routerConfig.routes;var _split=split(rawSegmentGroup,consumedSegments,rawSlicedSegments,childConfig),segmentGroup=_split.segmentGroup,slicedSegments=_split.slicedSegments;if(slicedSegments.length===0&&segmentGroup.hasChildren()){var/** @type {?} */_expanded$=_this10.expandChildren(childInjector,childConfig,segmentGroup);return map$$1.call(_expanded$,function(children){return new UrlSegmentGroup(consumedSegments,children);});}if(childConfig.length===0&&slicedSegments.length===0){return of$$1(new UrlSegmentGroup(consumedSegments,{}));}var/** @type {?} */expanded$=_this10.expandSegment(childInjector,segmentGroup,childConfig,slicedSegments,PRIMARY_OUTLET,true);return map$$1.call(expanded$,function(cs){return new UrlSegmentGroup(consumedSegments.concat(cs.segments),cs.children);});});}/**
     * @param {?} injector
     * @param {?} route
     * @return {?}
     */},{key:'getChildConfig',value:function getChildConfig(injector,route){var _this11=this;if(route.children){return of$$1(new LoadedRouterConfig(route.children,injector,null,null));}if(route.loadChildren){return mergeMap$$1.call(runGuards(injector,route),function(shouldLoad){if(shouldLoad){return route._loadedConfig?of$$1(route._loadedConfig):map$$1.call(_this11.configLoader.load(injector,route),function(cfg){route._loadedConfig=cfg;return cfg;});}return canLoadFails(route);});}return of$$1(new LoadedRouterConfig([],injector,null,null));}/**
     * @param {?} route
     * @param {?} urlTree
     * @return {?}
     */},{key:'lineralizeSegments',value:function lineralizeSegments(route,urlTree){var/** @type {?} */res=[];var/** @type {?} */c=urlTree.root;while(true){res=res.concat(c.segments);if(c.numberOfChildren===0){return of$$1(res);}if(c.numberOfChildren>1||!c.children[PRIMARY_OUTLET]){return namedOutletsRedirect(route.redirectTo);}c=c.children[PRIMARY_OUTLET];}}/**
     * @param {?} segments
     * @param {?} redirectTo
     * @param {?} posParams
     * @return {?}
     */},{key:'applyRedirectCommands',value:function applyRedirectCommands(segments,redirectTo,posParams){return this.applyRedirectCreatreUrlTree(redirectTo,this.urlSerializer.parse(redirectTo),segments,posParams);}/**
     * @param {?} redirectTo
     * @param {?} urlTree
     * @param {?} segments
     * @param {?} posParams
     * @return {?}
     */},{key:'applyRedirectCreatreUrlTree',value:function applyRedirectCreatreUrlTree(redirectTo,urlTree,segments,posParams){var/** @type {?} */newRoot=this.createSegmentGroup(redirectTo,urlTree.root,segments,posParams);return new UrlTree(newRoot,this.createQueryParams(urlTree.queryParams,this.urlTree.queryParams),urlTree.fragment);}/**
     * @param {?} redirectToParams
     * @param {?} actualParams
     * @return {?}
     */},{key:'createQueryParams',value:function createQueryParams(redirectToParams,actualParams){var/** @type {?} */res={};forEach(redirectToParams,function(v,k){res[k]=v.startsWith(':')?actualParams[v.substring(1)]:v;});return res;}/**
     * @param {?} redirectTo
     * @param {?} group
     * @param {?} segments
     * @param {?} posParams
     * @return {?}
     */},{key:'createSegmentGroup',value:function createSegmentGroup(redirectTo,group$$1,segments,posParams){var _this12=this;var/** @type {?} */updatedSegments=this.createSegments(redirectTo,group$$1.segments,segments,posParams);var/** @type {?} */children={};forEach(group$$1.children,function(child,name){children[name]=_this12.createSegmentGroup(redirectTo,child,segments,posParams);});return new UrlSegmentGroup(updatedSegments,children);}/**
     * @param {?} redirectTo
     * @param {?} redirectToSegments
     * @param {?} actualSegments
     * @param {?} posParams
     * @return {?}
     */},{key:'createSegments',value:function createSegments(redirectTo,redirectToSegments,actualSegments,posParams){var _this13=this;return redirectToSegments.map(function(s){return s.path.startsWith(':')?_this13.findPosParam(redirectTo,s,posParams):_this13.findOrReturn(s,actualSegments);});}/**
     * @param {?} redirectTo
     * @param {?} redirectToUrlSegment
     * @param {?} posParams
     * @return {?}
     */},{key:'findPosParam',value:function findPosParam(redirectTo,redirectToUrlSegment,posParams){var/** @type {?} */pos=posParams[redirectToUrlSegment.path.substring(1)];if(!pos)throw new Error('Cannot redirect to \''+redirectTo+'\'. Cannot find \''+redirectToUrlSegment.path+'\'.');return pos;}/**
     * @param {?} redirectToUrlSegment
     * @param {?} actualSegments
     * @return {?}
     */},{key:'findOrReturn',value:function findOrReturn(redirectToUrlSegment,actualSegments){var/** @type {?} */idx=0;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=actualSegments[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var s=_step.value;if(s.path===redirectToUrlSegment.path){actualSegments.splice(idx);return s;}idx++;}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}return redirectToUrlSegment;}}]);return ApplyRedirects;}();/**
 * @param {?} injector
 * @param {?} route
 * @return {?}
 */function runGuards(injector,route){var/** @type {?} */canLoad=route.canLoad;if(!canLoad||canLoad.length===0)return of$$1(true);var/** @type {?} */obs=map$$1.call(from$$1(canLoad),function(c){var/** @type {?} */guard=injector.get(c);return wrapIntoObservable(guard.canLoad?guard.canLoad(route):guard(route));});return andObservables(obs);}/**
 * @param {?} segmentGroup
 * @param {?} route
 * @param {?} segments
 * @return {?}
 */function match(segmentGroup,route,segments){var/** @type {?} */noMatch={matched:false,consumedSegments:/** @type {?} */[],lastChild:0,positionalParamSegments:{}};if(route.path===''){if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||segments.length>0)){return{matched:false,consumedSegments:[],lastChild:0,positionalParamSegments:{}};}return{matched:true,consumedSegments:[],lastChild:0,positionalParamSegments:{}};}var/** @type {?} */matcher=route.matcher||defaultUrlMatcher;var/** @type {?} */res=matcher(segments,segmentGroup,route);if(!res)return noMatch;return{matched:true,consumedSegments:res.consumed,lastChild:res.consumed.length,positionalParamSegments:res.posParams};}/**
 * @param {?} segmentGroup
 * @param {?} consumedSegments
 * @param {?} slicedSegments
 * @param {?} config
 * @return {?}
 */function split(segmentGroup,consumedSegments,slicedSegments,config){if(slicedSegments.length>0&&containsEmptyPathRedirectsWithNamedOutlets(segmentGroup,slicedSegments,config)){var/** @type {?} */s=new UrlSegmentGroup(consumedSegments,createChildrenForEmptySegments(config,new UrlSegmentGroup(slicedSegments,segmentGroup.children)));return{segmentGroup:mergeTrivialChildren(s),slicedSegments:[]};}if(slicedSegments.length===0&&containsEmptyPathRedirects(segmentGroup,slicedSegments,config)){var/** @type {?} */_s=new UrlSegmentGroup(segmentGroup.segments,addEmptySegmentsToChildrenIfNeeded(segmentGroup,slicedSegments,config,segmentGroup.children));return{segmentGroup:mergeTrivialChildren(_s),slicedSegments:slicedSegments};}return{segmentGroup:segmentGroup,slicedSegments:slicedSegments};}/**
 * @param {?} s
 * @return {?}
 */function mergeTrivialChildren(s){if(s.numberOfChildren===1&&s.children[PRIMARY_OUTLET]){var/** @type {?} */c=s.children[PRIMARY_OUTLET];return new UrlSegmentGroup(s.segments.concat(c.segments),c.children);}return s;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @param {?} children
 * @return {?}
 */function addEmptySegmentsToChildrenIfNeeded(segmentGroup,slicedSegments,routes,children){var/** @type {?} */res={};var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=routes[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var r=_step2.value;if(emptyPathRedirect(segmentGroup,slicedSegments,r)&&!children[getOutlet$1(r)]){res[getOutlet$1(r)]=new UrlSegmentGroup([],{});}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}return merge$5(children,res);}/**
 * @param {?} routes
 * @param {?} primarySegmentGroup
 * @return {?}
 */function createChildrenForEmptySegments(routes,primarySegmentGroup){var/** @type {?} */res={};res[PRIMARY_OUTLET]=primarySegmentGroup;var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=routes[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var r=_step3.value;if(r.path===''&&getOutlet$1(r)!==PRIMARY_OUTLET){res[getOutlet$1(r)]=new UrlSegmentGroup([],{});}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return res;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathRedirectsWithNamedOutlets(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathRedirect(segmentGroup,slicedSegments,r)&&getOutlet$1(r)!==PRIMARY_OUTLET;}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathRedirects(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathRedirect(segmentGroup,slicedSegments,r);}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} r
 * @return {?}
 */function emptyPathRedirect(segmentGroup,slicedSegments,r){if((segmentGroup.hasChildren()||slicedSegments.length>0)&&r.pathMatch==='full'){return false;}return r.path===''&&r.redirectTo!==undefined;}/**
 * @param {?} route
 * @return {?}
 */function getOutlet$1(route){return route.outlet?route.outlet:PRIMARY_OUTLET;}/**
 * @param {?} config
 * @param {?=} parentPath
 * @return {?}
 */function validateConfig(config){var parentPath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';// forEach doesn't iterate undefined values
for(var/** @type {?} */i=0;i<config.length;i++){var/** @type {?} */route=config[i];var/** @type {?} */fullPath=getFullPath(parentPath,route);validateNode$1(route,fullPath);}}/**
 * @param {?} route
 * @param {?} fullPath
 * @return {?}
 */function validateNode$1(route,fullPath){if(!route){throw new Error('\n      Invalid configuration of route \''+fullPath+'\': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: \'\', redirectTo: \'/dashboard\', pathMatch: \'full\' },\n        { path: \'dashboard\',  component: DashboardComponent },, << two commas\n        { path: \'detail/:id\', component: HeroDetailComponent }\n      ];\n    ');}if(Array.isArray(route)){throw new Error('Invalid configuration of route \''+fullPath+'\': Array cannot be specified');}if(!route.component&&route.outlet&&route.outlet!==PRIMARY_OUTLET){throw new Error('Invalid configuration of route \''+fullPath+'\': a componentless route cannot have a named outlet set');}if(route.redirectTo&&route.children){throw new Error('Invalid configuration of route \''+fullPath+'\': redirectTo and children cannot be used together');}if(route.redirectTo&&route.loadChildren){throw new Error('Invalid configuration of route \''+fullPath+'\': redirectTo and loadChildren cannot be used together');}if(route.children&&route.loadChildren){throw new Error('Invalid configuration of route \''+fullPath+'\': children and loadChildren cannot be used together');}if(route.redirectTo&&route.component){throw new Error('Invalid configuration of route \''+fullPath+'\': redirectTo and component cannot be used together');}if(route.path&&route.matcher){throw new Error('Invalid configuration of route \''+fullPath+'\': path and matcher cannot be used together');}if(route.redirectTo===void 0&&!route.component&&!route.children&&!route.loadChildren){throw new Error('Invalid configuration of route \''+fullPath+'\'. One of the following must be provided: component, redirectTo, children or loadChildren');}if(route.path===void 0&&route.matcher===void 0){throw new Error('Invalid configuration of route \''+fullPath+'\': routes must have either a path or a matcher specified');}if(typeof route.path==='string'&&route.path.charAt(0)==='/'){throw new Error('Invalid configuration of route \''+fullPath+'\': path cannot start with a slash');}if(route.path===''&&route.redirectTo!==void 0&&route.pathMatch===void 0){var/** @type {?} */exp='The default value of \'pathMatch\' is \'prefix\', but often the intent is to use \'full\'.';throw new Error('Invalid configuration of route \'{path: "'+fullPath+'", redirectTo: "'+route.redirectTo+'"}\': please provide \'pathMatch\'. '+exp);}if(route.pathMatch!==void 0&&route.pathMatch!=='full'&&route.pathMatch!=='prefix'){throw new Error('Invalid configuration of route \''+fullPath+'\': pathMatch can only be set to \'prefix\' or \'full\'');}if(route.children){validateConfig(route.children,fullPath);}}/**
 * @param {?} parentPath
 * @param {?} currentRoute
 * @return {?}
 */function getFullPath(parentPath,currentRoute){if(!currentRoute){return parentPath;}if(!parentPath&&!currentRoute.path){return'';}else if(parentPath&&!currentRoute.path){return parentPath+'/';}else if(!parentPath&&currentRoute.path){return currentRoute.path;}else{return parentPath+'/'+currentRoute.path;}}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */var Tree=function(){/**
     * @param {?} root
     */function Tree(root){_classCallCheck$4(this,Tree);this._root=root;}/**
     * @return {?}
     */_createClass$4(Tree,[{key:'parent',/**
     * \@internal
     * @param {?} t
     * @return {?}
     */value:function parent(t){var/** @type {?} */p=this.pathFromRoot(t);return p.length>1?p[p.length-2]:null;}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'children',value:function children(t){var/** @type {?} */n=findNode(t,this._root);return n?n.children.map(function(t){return t.value;}):[];}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'firstChild',value:function firstChild(t){var/** @type {?} */n=findNode(t,this._root);return n&&n.children.length>0?n.children[0].value:null;}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'siblings',value:function siblings(t){var/** @type {?} */p=findPath(t,this._root,[]);if(p.length<2)return[];var/** @type {?} */c=p[p.length-2].children.map(function(c){return c.value;});return c.filter(function(cc){return cc!==t;});}/**
     * \@internal
     * @param {?} t
     * @return {?}
     */},{key:'pathFromRoot',value:function pathFromRoot(t){return findPath(t,this._root,[]).map(function(s){return s.value;});}},{key:'root',get:function get(){return this._root.value;}}]);return Tree;}();/**
 * @param {?} expected
 * @param {?} c
 * @return {?}
 */function findNode(expected,c){if(expected===c.value)return c;var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=c.children[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var cc=_step4.value;var/** @type {?} */r=findNode(expected,cc);if(r)return r;}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}return null;}/**
 * @param {?} expected
 * @param {?} c
 * @param {?} collected
 * @return {?}
 */function findPath(expected,c,collected){collected.push(c);if(expected===c.value)return collected;var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=c.children[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var cc=_step5.value;var/** @type {?} */cloned=collected.slice(0);var/** @type {?} */r=findPath(expected,cc,cloned);if(r.length>0)return r;}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}return[];}var TreeNode=function(){/**
     * @param {?} value
     * @param {?} children
     */function TreeNode(value,children){_classCallCheck$4(this,TreeNode);this.value=value;this.children=children;}/**
     * @return {?}
     */_createClass$4(TreeNode,[{key:'toString',value:function toString(){return'TreeNode('+this.value+')';}}]);return TreeNode;}();/**
 * \@whatItDoes Represents the state of the router.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const root: ActivatedRoute = state.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * \@description
 * RouterState is a tree of activated routes. Every node in this tree knows about the "consumed" URL
 * segments,
 * the extracted parameters, and the resolved data.
 *
 * See {\@link ActivatedRoute} for more information.
 *
 * \@stable
 */var RouterState=function(_Tree){_inherits$4(RouterState,_Tree);/**
     * \@internal
     * @param {?} root
     * @param {?} snapshot
     */function RouterState(root,snapshot){_classCallCheck$4(this,RouterState);var _this14=_possibleConstructorReturn$4(this,(RouterState.__proto__||Object.getPrototypeOf(RouterState)).call(this,root));_this14.snapshot=snapshot;setRouterStateSnapshot(_this14,root);return _this14;}/**
     * @return {?}
     */_createClass$4(RouterState,[{key:'toString',value:function toString(){return this.snapshot.toString();}}]);return RouterState;}(Tree);/**
 * @param {?} urlTree
 * @param {?} rootComponent
 * @return {?}
 */function createEmptyState(urlTree,rootComponent){var/** @type {?} */snapshot=createEmptyStateSnapshot(urlTree,rootComponent);var/** @type {?} */emptyUrl=new BehaviorSubject$$1([new UrlSegment('',{})]);var/** @type {?} */emptyParams=new BehaviorSubject$$1({});var/** @type {?} */emptyData=new BehaviorSubject$$1({});var/** @type {?} */emptyQueryParams=new BehaviorSubject$$1({});var/** @type {?} */fragment=new BehaviorSubject$$1('');var/** @type {?} */activated=new ActivatedRoute(emptyUrl,emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,snapshot.root);activated.snapshot=snapshot.root;return new RouterState(new TreeNode(activated,[]),snapshot);}/**
 * @param {?} urlTree
 * @param {?} rootComponent
 * @return {?}
 */function createEmptyStateSnapshot(urlTree,rootComponent){var/** @type {?} */emptyParams={};var/** @type {?} */emptyData={};var/** @type {?} */emptyQueryParams={};var/** @type {?} */fragment='';var/** @type {?} */activated=new ActivatedRouteSnapshot([],emptyParams,emptyQueryParams,fragment,emptyData,PRIMARY_OUTLET,rootComponent,null,urlTree.root,-1,{});return new RouterStateSnapshot('',new TreeNode(activated,[]));}/**
 * \@whatItDoes Contains the information about a route associated with a component loaded in an
 * outlet.
 * An `ActivatedRoute` can also be used to traverse the router state tree.
 *
 * \@howToUse
 *
 * ```
 * \@Component({...})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: Observable<string> = route.params.map(p => p.id);
 *     const url: Observable<string> = route.url.map(segments => segments.join(''));
 *     // route.data includes both `data` and `resolve`
 *     const user = route.data.map(d => d.user);
 *   }
 * }
 * ```
 *
 * \@stable
 */var ActivatedRoute=function(){/**
     * \@internal
     * @param {?} url
     * @param {?} params
     * @param {?} queryParams
     * @param {?} fragment
     * @param {?} data
     * @param {?} outlet
     * @param {?} component
     * @param {?} futureSnapshot
     */function ActivatedRoute(url,params,queryParams,fragment,data,outlet,component,futureSnapshot){_classCallCheck$4(this,ActivatedRoute);this.url=url;this.params=params;this.queryParams=queryParams;this.fragment=fragment;this.data=data;this.outlet=outlet;this.component=component;this._futureSnapshot=futureSnapshot;}/**
     * The configuration used to match this route
     * @return {?}
     */_createClass$4(ActivatedRoute,[{key:'toString',/**
     * @return {?}
     */value:function toString(){return this.snapshot?this.snapshot.toString():'Future('+this._futureSnapshot+')';}},{key:'routeConfig',get:function get(){return this._futureSnapshot.routeConfig;}/**
     * The root of the router state
     * @return {?}
     */},{key:'root',get:function get(){return this._routerState.root;}/**
     * The parent of this route in the router state tree
     * @return {?}
     */},{key:'parent',get:function get(){return this._routerState.parent(this);}/**
     * The first child of this route in the router state tree
     * @return {?}
     */},{key:'firstChild',get:function get(){return this._routerState.firstChild(this);}/**
     * The children of this route in the router state tree
     * @return {?}
     */},{key:'children',get:function get(){return this._routerState.children(this);}/**
     * The path from the root of the router state tree to this route
     * @return {?}
     */},{key:'pathFromRoot',get:function get(){return this._routerState.pathFromRoot(this);}}]);return ActivatedRoute;}();/**
 * \@internal
 * @param {?} route
 * @return {?}
 */function inheritedParamsDataResolve(route){var/** @type {?} */pathToRoot=route.pathFromRoot;var/** @type {?} */inhertingStartingFrom=pathToRoot.length-1;while(inhertingStartingFrom>=1){var/** @type {?} */current=pathToRoot[inhertingStartingFrom];var/** @type {?} */parent=pathToRoot[inhertingStartingFrom-1];// current route is an empty path => inherits its parent's params and data
if(current.routeConfig&&current.routeConfig.path===''){inhertingStartingFrom--;}else if(!parent.component){inhertingStartingFrom--;}else{break;}}return pathToRoot.slice(inhertingStartingFrom).reduce(function(res,curr){var/** @type {?} */params=merge$5(res.params,curr.params);var/** @type {?} */data=merge$5(res.data,curr.data);var/** @type {?} */resolve=merge$5(res.resolve,curr._resolvedData);return{params:params,data:data,resolve:resolve};},/** @type {?} */{params:{},data:{},resolve:{}});}/**
 * \@whatItDoes Contains the information about a route associated with a component loaded in an
 * outlet
 * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router
 * state tree.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'./my-component.html'})
 * class MyComponent {
 *   constructor(route: ActivatedRoute) {
 *     const id: string = route.snapshot.params.id;
 *     const url: string = route.snapshot.url.join('');
 *     const user = route.snapshot.data.user;
 *   }
 * }
 * ```
 *
 * \@stable
 */var ActivatedRouteSnapshot=function(){/**
     * \@internal
     * @param {?} url
     * @param {?} params
     * @param {?} queryParams
     * @param {?} fragment
     * @param {?} data
     * @param {?} outlet
     * @param {?} component
     * @param {?} routeConfig
     * @param {?} urlSegment
     * @param {?} lastPathIndex
     * @param {?} resolve
     */function ActivatedRouteSnapshot(url,params,queryParams,fragment,data,outlet,component,routeConfig,urlSegment,lastPathIndex,resolve){_classCallCheck$4(this,ActivatedRouteSnapshot);this.url=url;this.params=params;this.queryParams=queryParams;this.fragment=fragment;this.data=data;this.outlet=outlet;this.component=component;this._routeConfig=routeConfig;this._urlSegment=urlSegment;this._lastPathIndex=lastPathIndex;this._resolve=resolve;}/**
     * The configuration used to match this route
     * @return {?}
     */_createClass$4(ActivatedRouteSnapshot,[{key:'toString',/**
     * @return {?}
     */value:function toString(){var/** @type {?} */url=this.url.map(function(segment){return segment.toString();}).join('/');var/** @type {?} */matched=this._routeConfig?this._routeConfig.path:'';return'Route(url:\''+url+'\', path:\''+matched+'\')';}},{key:'routeConfig',get:function get(){return this._routeConfig;}/**
     * The root of the router state
     * @return {?}
     */},{key:'root',get:function get(){return this._routerState.root;}/**
     * The parent of this route in the router state tree
     * @return {?}
     */},{key:'parent',get:function get(){return this._routerState.parent(this);}/**
     * The first child of this route in the router state tree
     * @return {?}
     */},{key:'firstChild',get:function get(){return this._routerState.firstChild(this);}/**
     * The children of this route in the router state tree
     * @return {?}
     */},{key:'children',get:function get(){return this._routerState.children(this);}/**
     * The path from the root of the router state tree to this route
     * @return {?}
     */},{key:'pathFromRoot',get:function get(){return this._routerState.pathFromRoot(this);}}]);return ActivatedRouteSnapshot;}();/**
 * \@whatItDoes Represents the state of the router at a moment in time.
 *
 * \@howToUse
 *
 * ```
 * \@Component({templateUrl:'template.html'})
 * class MyComponent {
 *   constructor(router: Router) {
 *     const state: RouterState = router.routerState;
 *     const snapshot: RouterStateSnapshot = state.snapshot;
 *     const root: ActivatedRouteSnapshot = snapshot.root;
 *     const child = root.firstChild;
 *     const id: Observable<string> = child.params.map(p => p.id);
 *     //...
 *   }
 * }
 * ```
 *
 * \@description
 * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about
 * the "consumed" URL segments, the extracted parameters, and the resolved data.
 *
 * \@stable
 */var RouterStateSnapshot=function(_Tree2){_inherits$4(RouterStateSnapshot,_Tree2);/**
     * \@internal
     * @param {?} url
     * @param {?} root
     */function RouterStateSnapshot(url,root){_classCallCheck$4(this,RouterStateSnapshot);var _this15=_possibleConstructorReturn$4(this,(RouterStateSnapshot.__proto__||Object.getPrototypeOf(RouterStateSnapshot)).call(this,root));_this15.url=url;setRouterStateSnapshot(_this15,root);return _this15;}/**
     * @return {?}
     */_createClass$4(RouterStateSnapshot,[{key:'toString',value:function toString(){return serializeNode(this._root);}}]);return RouterStateSnapshot;}(Tree);/**
 * @param {?} state
 * @param {?} node
 * @return {?}
 */function setRouterStateSnapshot(state$$1,node){node.value._routerState=state$$1;node.children.forEach(function(c){return setRouterStateSnapshot(state$$1,c);});}/**
 * @param {?} node
 * @return {?}
 */function serializeNode(node){var/** @type {?} */c=node.children.length>0?' { '+node.children.map(serializeNode).join(", ")+' } ':'';return''+node.value+c;}/**
 * The expectation is that the activate route is created with the right set of parameters.
 * So we push new values into the observables only when they are not the initial values.
 * And we detect that by checking if the snapshot field is set.
 * @param {?} route
 * @return {?}
 */function advanceActivatedRoute(route){if(route.snapshot){var/** @type {?} */currentSnapshot=route.snapshot;route.snapshot=route._futureSnapshot;if(!shallowEqual(currentSnapshot.queryParams,route._futureSnapshot.queryParams)){route.queryParams.next(route._futureSnapshot.queryParams);}if(currentSnapshot.fragment!==route._futureSnapshot.fragment){route.fragment.next(route._futureSnapshot.fragment);}if(!shallowEqual(currentSnapshot.params,route._futureSnapshot.params)){route.params.next(route._futureSnapshot.params);}if(!shallowEqualArrays(currentSnapshot.url,route._futureSnapshot.url)){route.url.next(route._futureSnapshot.url);}if(!equalParamsAndUrlSegments(currentSnapshot,route._futureSnapshot)){route.data.next(route._futureSnapshot.data);}}else{route.snapshot=route._futureSnapshot;// this is for resolved data
route.data.next(route._futureSnapshot.data);}}/**
 * @param {?} a
 * @param {?} b
 * @return {?}
 */function equalParamsAndUrlSegments(a,b){var/** @type {?} */equalUrlParams=shallowEqual(a.params,b.params)&&equalSegments(a.url,b.url);var/** @type {?} */parentsMismatch=!a.parent!==!b.parent;return equalUrlParams&&!parentsMismatch&&(!a.parent||equalParamsAndUrlSegments(a.parent,b.parent));}/**
 * @param {?} routeReuseStrategy
 * @param {?} curr
 * @param {?} prevState
 * @return {?}
 */function createRouterState(routeReuseStrategy,curr,prevState){var/** @type {?} */root=createNode(routeReuseStrategy,curr._root,prevState?prevState._root:undefined);return new RouterState(root,curr);}/**
 * @param {?} routeReuseStrategy
 * @param {?} curr
 * @param {?=} prevState
 * @return {?}
 */function createNode(routeReuseStrategy,curr,prevState){// reuse an activated route that is currently displayed on the screen
if(prevState&&routeReuseStrategy.shouldReuseRoute(curr.value,prevState.value.snapshot)){var/** @type {?} */value=prevState.value;value._futureSnapshot=curr.value;var/** @type {?} */children=createOrReuseChildren(routeReuseStrategy,curr,prevState);return new TreeNode(value,children);}else if(routeReuseStrategy.retrieve(curr.value)){var/** @type {?} */_tree=routeReuseStrategy.retrieve(curr.value).route;setFutureSnapshotsOfActivatedRoutes(curr,_tree);return _tree;}else{var/** @type {?} */_value=createActivatedRoute(curr.value);var/** @type {?} */_children2=curr.children.map(function(c){return createNode(routeReuseStrategy,c);});return new TreeNode(_value,_children2);}}/**
 * @param {?} curr
 * @param {?} result
 * @return {?}
 */function setFutureSnapshotsOfActivatedRoutes(curr,result){if(curr.value.routeConfig!==result.value.routeConfig){throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');}if(curr.children.length!==result.children.length){throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');}result.value._futureSnapshot=curr.value;for(var/** @type {?} */i=0;i<curr.children.length;++i){setFutureSnapshotsOfActivatedRoutes(curr.children[i],result.children[i]);}}/**
 * @param {?} routeReuseStrategy
 * @param {?} curr
 * @param {?} prevState
 * @return {?}
 */function createOrReuseChildren(routeReuseStrategy,curr,prevState){return curr.children.map(function(child){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=prevState.children[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var p=_step6.value;if(routeReuseStrategy.shouldReuseRoute(p.value.snapshot,child.value)){return createNode(routeReuseStrategy,child,p);}}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}return createNode(routeReuseStrategy,child);});}/**
 * @param {?} c
 * @return {?}
 */function createActivatedRoute(c){return new ActivatedRoute(new BehaviorSubject$$1(c.url),new BehaviorSubject$$1(c.params),new BehaviorSubject$$1(c.queryParams),new BehaviorSubject$$1(c.fragment),new BehaviorSubject$$1(c.data),c.outlet,c.component,c);}/**
 * @param {?} route
 * @param {?} urlTree
 * @param {?} commands
 * @param {?} queryParams
 * @param {?} fragment
 * @return {?}
 */function _createUrlTree(route,urlTree,commands,queryParams,fragment){if(commands.length===0){return tree(urlTree.root,urlTree.root,urlTree,queryParams,fragment);}var/** @type {?} */nav=computeNavigation(commands);if(nav.toRoot()){return tree(urlTree.root,new UrlSegmentGroup([],{}),urlTree,queryParams,fragment);}var/** @type {?} */startingPosition=findStartingPosition(nav,urlTree,route);var/** @type {?} */segmentGroup=startingPosition.processChildren?updateSegmentGroupChildren(startingPosition.segmentGroup,startingPosition.index,nav.commands):updateSegmentGroup(startingPosition.segmentGroup,startingPosition.index,nav.commands);return tree(startingPosition.segmentGroup,segmentGroup,urlTree,queryParams,fragment);}/**
 * @param {?} command
 * @return {?}
 */function isMatrixParams(command){return(typeof command==='undefined'?'undefined':_typeof$3(command))==='object'&&command!=null&&!command.outlets&&!command.segmentPath;}/**
 * @param {?} oldSegmentGroup
 * @param {?} newSegmentGroup
 * @param {?} urlTree
 * @param {?} queryParams
 * @param {?} fragment
 * @return {?}
 */function tree(oldSegmentGroup,newSegmentGroup,urlTree,queryParams,fragment){if(urlTree.root===oldSegmentGroup){return new UrlTree(newSegmentGroup,stringify$3(queryParams),fragment);}return new UrlTree(replaceSegment(urlTree.root,oldSegmentGroup,newSegmentGroup),stringify$3(queryParams),fragment);}/**
 * @param {?} current
 * @param {?} oldSegment
 * @param {?} newSegment
 * @return {?}
 */function replaceSegment(current,oldSegment,newSegment){var/** @type {?} */children={};forEach(current.children,function(c,outletName){if(c===oldSegment){children[outletName]=newSegment;}else{children[outletName]=replaceSegment(c,oldSegment,newSegment);}});return new UrlSegmentGroup(current.segments,children);}var Navigation=function(){/**
     * @param {?} isAbsolute
     * @param {?} numberOfDoubleDots
     * @param {?} commands
     */function Navigation(isAbsolute,numberOfDoubleDots,commands){_classCallCheck$4(this,Navigation);this.isAbsolute=isAbsolute;this.numberOfDoubleDots=numberOfDoubleDots;this.commands=commands;if(isAbsolute&&commands.length>0&&isMatrixParams(commands[0])){throw new Error('Root segment cannot have matrix parameters');}var cmdWithOutlet=commands.find(function(c){return(typeof c==='undefined'?'undefined':_typeof$3(c))==='object'&&c!=null&&c.outlets;});if(cmdWithOutlet&&cmdWithOutlet!==last$$1(commands)){throw new Error('{outlets:{}} has to be the last command');}}/**
     * @return {?}
     */_createClass$4(Navigation,[{key:'toRoot',value:function toRoot(){return this.isAbsolute&&this.commands.length===1&&this.commands[0]=='/';}}]);return Navigation;}();/**
 * Transforms commands to a normalized `Navigation`
 * @param {?} commands
 * @return {?}
 */function computeNavigation(commands){if(typeof commands[0]==='string'&&commands.length===1&&commands[0]==='/'){return new Navigation(true,0,commands);}var/** @type {?} */numberOfDoubleDots=0;var/** @type {?} */isAbsolute=false;var/** @type {?} */res=commands.reduce(function(res,cmd,cmdIdx){if((typeof cmd==='undefined'?'undefined':_typeof$3(cmd))==='object'&&cmd!=null){if(cmd.outlets){var/** @type {?} */outlets={};forEach(cmd.outlets,function(commands,name){outlets[name]=typeof commands==='string'?commands.split('/'):commands;});return[].concat(_toConsumableArray$4(res),[{outlets:outlets}]);}if(cmd.segmentPath){return[].concat(_toConsumableArray$4(res),[cmd.segmentPath]);}}if(!(typeof cmd==='string')){return[].concat(_toConsumableArray$4(res),[cmd]);}if(cmdIdx===0){cmd.split('/').forEach(function(urlPart,partIndex){if(partIndex==0&&urlPart==='.'){}else if(partIndex==0&&urlPart===''){isAbsolute=true;}else if(urlPart==='..'){numberOfDoubleDots++;}else if(urlPart!=''){res.push(urlPart);}});return res;}return[].concat(_toConsumableArray$4(res),[cmd]);},[]);return new Navigation(isAbsolute,numberOfDoubleDots,res);}var Position=/**
     * @param {?} segmentGroup
     * @param {?} processChildren
     * @param {?} index
     */function Position(segmentGroup,processChildren,index){_classCallCheck$4(this,Position);this.segmentGroup=segmentGroup;this.processChildren=processChildren;this.index=index;};/**
 * @param {?} nav
 * @param {?} tree
 * @param {?} route
 * @return {?}
 */function findStartingPosition(nav,tree,route){if(nav.isAbsolute){return new Position(tree.root,true,0);}if(route.snapshot._lastPathIndex===-1){return new Position(route.snapshot._urlSegment,true,0);}var/** @type {?} */modifier=isMatrixParams(nav.commands[0])?0:1;var/** @type {?} */index=route.snapshot._lastPathIndex+modifier;return createPositionApplyingDoubleDots(route.snapshot._urlSegment,index,nav.numberOfDoubleDots);}/**
 * @param {?} group
 * @param {?} index
 * @param {?} numberOfDoubleDots
 * @return {?}
 */function createPositionApplyingDoubleDots(group$$1,index,numberOfDoubleDots){var/** @type {?} */g=group$$1;var/** @type {?} */ci=index;var/** @type {?} */dd=numberOfDoubleDots;while(dd>ci){dd-=ci;g=g.parent;if(!g){throw new Error('Invalid number of \'../\'');}ci=g.segments.length;}return new Position(g,false,ci-dd);}/**
 * @param {?} command
 * @return {?}
 */function getPath(command){if((typeof command==='undefined'?'undefined':_typeof$3(command))==='object'&&command!=null&&command.outlets){return command.outlets[PRIMARY_OUTLET];}return''+command;}/**
 * @param {?} commands
 * @return {?}
 */function getOutlets(commands){if(!(_typeof$3(commands[0])==='object'))return _defineProperty({},PRIMARY_OUTLET,commands);if(commands[0].outlets===undefined)return _defineProperty({},PRIMARY_OUTLET,commands);return commands[0].outlets;}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function updateSegmentGroup(segmentGroup,startIndex,commands){if(!segmentGroup){segmentGroup=new UrlSegmentGroup([],{});}if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return updateSegmentGroupChildren(segmentGroup,startIndex,commands);}var/** @type {?} */m=prefixedWith(segmentGroup,startIndex,commands);var/** @type {?} */slicedCommands=commands.slice(m.commandIndex);if(m.match&&m.pathIndex<segmentGroup.segments.length){var/** @type {?} */g=new UrlSegmentGroup(segmentGroup.segments.slice(0,m.pathIndex),{});g.children[PRIMARY_OUTLET]=new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex),segmentGroup.children);return updateSegmentGroupChildren(g,0,slicedCommands);}else if(m.match&&slicedCommands.length===0){return new UrlSegmentGroup(segmentGroup.segments,{});}else if(m.match&&!segmentGroup.hasChildren()){return createNewSegmentGroup(segmentGroup,startIndex,commands);}else if(m.match){return updateSegmentGroupChildren(segmentGroup,0,slicedCommands);}else{return createNewSegmentGroup(segmentGroup,startIndex,commands);}}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function updateSegmentGroupChildren(segmentGroup,startIndex,commands){if(commands.length===0){return new UrlSegmentGroup(segmentGroup.segments,{});}else{var/** @type {?} */outlets=getOutlets(commands);var/** @type {?} */children={};forEach(outlets,function(commands,outlet){if(commands!==null){children[outlet]=updateSegmentGroup(segmentGroup.children[outlet],startIndex,commands);}});forEach(segmentGroup.children,function(child,childOutlet){if(outlets[childOutlet]===undefined){children[childOutlet]=child;}});return new UrlSegmentGroup(segmentGroup.segments,children);}}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function prefixedWith(segmentGroup,startIndex,commands){var/** @type {?} */currentCommandIndex=0;var/** @type {?} */currentPathIndex=startIndex;var/** @type {?} */noMatch={match:false,pathIndex:0,commandIndex:0};while(currentPathIndex<segmentGroup.segments.length){if(currentCommandIndex>=commands.length)return noMatch;var/** @type {?} */path=segmentGroup.segments[currentPathIndex];var/** @type {?} */curr=getPath(commands[currentCommandIndex]);var/** @type {?} */next=currentCommandIndex<commands.length-1?commands[currentCommandIndex+1]:null;if(currentPathIndex>0&&curr===undefined)break;if(curr&&next&&(typeof next==='undefined'?'undefined':_typeof$3(next))==='object'&&next.outlets===undefined){if(!compare(curr,next,path))return noMatch;currentCommandIndex+=2;}else{if(!compare(curr,{},path))return noMatch;currentCommandIndex++;}currentPathIndex++;}return{match:true,pathIndex:currentPathIndex,commandIndex:currentCommandIndex};}/**
 * @param {?} segmentGroup
 * @param {?} startIndex
 * @param {?} commands
 * @return {?}
 */function createNewSegmentGroup(segmentGroup,startIndex,commands){var/** @type {?} */paths=segmentGroup.segments.slice(0,startIndex);var/** @type {?} */i=0;while(i<commands.length){if(_typeof$3(commands[i])==='object'&&commands[i].outlets!==undefined){var/** @type {?} */children=createNewSegmentChildren(commands[i].outlets);return new UrlSegmentGroup(paths,children);}// if we start with an object literal, we need to reuse the path part from the segment
if(i===0&&isMatrixParams(commands[0])){var/** @type {?} */p=segmentGroup.segments[startIndex];paths.push(new UrlSegment(p.path,commands[0]));i++;continue;}var/** @type {?} */curr=getPath(commands[i]);var/** @type {?} */next=i<commands.length-1?commands[i+1]:null;if(curr&&next&&isMatrixParams(next)){paths.push(new UrlSegment(curr,stringify$3(next)));i+=2;}else{paths.push(new UrlSegment(curr,{}));i++;}}return new UrlSegmentGroup(paths,{});}/**
 * @param {?} outlets
 * @return {?}
 */function createNewSegmentChildren(outlets){var/** @type {?} */children={};forEach(outlets,function(commands,outlet){if(commands!==null){children[outlet]=createNewSegmentGroup(new UrlSegmentGroup([],{}),0,commands);}});return children;}/**
 * @param {?} params
 * @return {?}
 */function stringify$3(params){var/** @type {?} */res={};forEach(params,function(v,k){return res[k]=''+v;});return res;}/**
 * @param {?} path
 * @param {?} params
 * @param {?} segment
 * @return {?}
 */function compare(path,params,segment){return path==segment.path&&shallowEqual(params,segment.parameters);}var NoMatch$1=function NoMatch$1(){_classCallCheck$4(this,NoMatch$1);};/**
 * @param {?} rootComponentType
 * @param {?} config
 * @param {?} urlTree
 * @param {?} url
 * @return {?}
 */function recognize(rootComponentType,config,urlTree,url){return new Recognizer(rootComponentType,config,urlTree,url).recognize();}var Recognizer=function(){/**
     * @param {?} rootComponentType
     * @param {?} config
     * @param {?} urlTree
     * @param {?} url
     */function Recognizer(rootComponentType,config,urlTree,url){_classCallCheck$4(this,Recognizer);this.rootComponentType=rootComponentType;this.config=config;this.urlTree=urlTree;this.url=url;}/**
     * @return {?}
     */_createClass$4(Recognizer,[{key:'recognize',value:function recognize(){try{var/** @type {?} */rootSegmentGroup=split$1(this.urlTree.root,[],[],this.config).segmentGroup;var/** @type {?} */children=this.processSegmentGroup(this.config,rootSegmentGroup,PRIMARY_OUTLET);var/** @type {?} */root=new ActivatedRouteSnapshot([],Object.freeze({}),Object.freeze(this.urlTree.queryParams),this.urlTree.fragment,{},PRIMARY_OUTLET,this.rootComponentType,null,this.urlTree.root,-1,{});var/** @type {?} */rootNode=new TreeNode(root,children);var/** @type {?} */routeState=new RouterStateSnapshot(this.url,rootNode);this.inheriteParamsAndData(routeState._root);return of$$1(routeState);}catch(e){return new Observable$$1(function(obs){return obs.error(e);});}}/**
     * @param {?} routeNode
     * @return {?}
     */},{key:'inheriteParamsAndData',value:function inheriteParamsAndData(routeNode){var _this16=this;var/** @type {?} */route=routeNode.value;var/** @type {?} */i=inheritedParamsDataResolve(route);route.params=Object.freeze(i.params);route.data=Object.freeze(i.data);routeNode.children.forEach(function(n){return _this16.inheriteParamsAndData(n);});}/**
     * @param {?} config
     * @param {?} segmentGroup
     * @param {?} outlet
     * @return {?}
     */},{key:'processSegmentGroup',value:function processSegmentGroup(config,segmentGroup,outlet){if(segmentGroup.segments.length===0&&segmentGroup.hasChildren()){return this.processChildren(config,segmentGroup);}else{return this.processSegment(config,segmentGroup,segmentGroup.segments,outlet);}}/**
     * @param {?} config
     * @param {?} segmentGroup
     * @return {?}
     */},{key:'processChildren',value:function processChildren(config,segmentGroup){var _this17=this;var/** @type {?} */children=mapChildrenIntoArray(segmentGroup,function(child,childOutlet){return _this17.processSegmentGroup(config,child,childOutlet);});checkOutletNameUniqueness(children);sortActivatedRouteSnapshots(children);return children;}/**
     * @param {?} config
     * @param {?} segmentGroup
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'processSegment',value:function processSegment(config,segmentGroup,segments,outlet){var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=config[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var r=_step7.value;try{return this.processSegmentAgainstRoute(r,segmentGroup,segments,outlet);}catch(e){if(!(e instanceof NoMatch$1))throw e;}}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}if(this.noLeftoversInUrl(segmentGroup,segments,outlet)){return[];}else{throw new NoMatch$1();}}/**
     * @param {?} segmentGroup
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'noLeftoversInUrl',value:function noLeftoversInUrl(segmentGroup,segments,outlet){return segments.length===0&&!segmentGroup.children[outlet];}/**
     * @param {?} route
     * @param {?} rawSegment
     * @param {?} segments
     * @param {?} outlet
     * @return {?}
     */},{key:'processSegmentAgainstRoute',value:function processSegmentAgainstRoute(route,rawSegment,segments,outlet){if(route.redirectTo)throw new NoMatch$1();if((route.outlet?route.outlet:PRIMARY_OUTLET)!==outlet)throw new NoMatch$1();if(route.path==='**'){var/** @type {?} */params=segments.length>0?last$$1(segments).parameters:{};var/** @type {?} */_snapshot=new ActivatedRouteSnapshot(segments,params,Object.freeze(this.urlTree.queryParams),this.urlTree.fragment,getData(route),outlet,route.component,route,getSourceSegmentGroup(rawSegment),getPathIndexShift(rawSegment)+segments.length,getResolve(route));return[new TreeNode(_snapshot,[])];}var _match$=match$1(rawSegment,route,segments),consumedSegments=_match$.consumedSegments,parameters=_match$.parameters,lastChild=_match$.lastChild;var/** @type {?} */rawSlicedSegments=segments.slice(lastChild);var/** @type {?} */childConfig=getChildConfig(route);var _split$=split$1(rawSegment,consumedSegments,rawSlicedSegments,childConfig),segmentGroup=_split$.segmentGroup,slicedSegments=_split$.slicedSegments;var/** @type {?} */snapshot=new ActivatedRouteSnapshot(consumedSegments,parameters,Object.freeze(this.urlTree.queryParams),this.urlTree.fragment,getData(route),outlet,route.component,route,getSourceSegmentGroup(rawSegment),getPathIndexShift(rawSegment)+consumedSegments.length,getResolve(route));if(slicedSegments.length===0&&segmentGroup.hasChildren()){var/** @type {?} */children=this.processChildren(childConfig,segmentGroup);return[new TreeNode(snapshot,children)];}else if(childConfig.length===0&&slicedSegments.length===0){return[new TreeNode(snapshot,[])];}else{var/** @type {?} */_children3=this.processSegment(childConfig,segmentGroup,slicedSegments,PRIMARY_OUTLET);return[new TreeNode(snapshot,_children3)];}}}]);return Recognizer;}();/**
 * @param {?} nodes
 * @return {?}
 */function sortActivatedRouteSnapshots(nodes){nodes.sort(function(a,b){if(a.value.outlet===PRIMARY_OUTLET)return-1;if(b.value.outlet===PRIMARY_OUTLET)return 1;return a.value.outlet.localeCompare(b.value.outlet);});}/**
 * @param {?} route
 * @return {?}
 */function getChildConfig(route){if(route.children){return route.children;}else if(route.loadChildren){return route._loadedConfig.routes;}else{return[];}}/**
 * @param {?} segmentGroup
 * @param {?} route
 * @param {?} segments
 * @return {?}
 */function match$1(segmentGroup,route,segments){if(route.path===''){if(route.pathMatch==='full'&&(segmentGroup.hasChildren()||segments.length>0)){throw new NoMatch$1();}else{return{consumedSegments:[],lastChild:0,parameters:{}};}}var/** @type {?} */matcher=route.matcher||defaultUrlMatcher;var/** @type {?} */res=matcher(segments,segmentGroup,route);if(!res)throw new NoMatch$1();var/** @type {?} */posParams={};forEach(res.posParams,function(v,k){posParams[k]=v.path;});var/** @type {?} */parameters=merge$5(posParams,res.consumed[res.consumed.length-1].parameters);return{consumedSegments:res.consumed,lastChild:res.consumed.length,parameters:parameters};}/**
 * @param {?} nodes
 * @return {?}
 */function checkOutletNameUniqueness(nodes){var/** @type {?} */names={};nodes.forEach(function(n){var/** @type {?} */routeWithSameOutletName=names[n.value.outlet];if(routeWithSameOutletName){var/** @type {?} */p=routeWithSameOutletName.url.map(function(s){return s.toString();}).join('/');var/** @type {?} */c=n.value.url.map(function(s){return s.toString();}).join('/');throw new Error('Two segments cannot have the same outlet name: \''+p+'\' and \''+c+'\'.');}names[n.value.outlet]=n.value;});}/**
 * @param {?} segmentGroup
 * @return {?}
 */function getSourceSegmentGroup(segmentGroup){var/** @type {?} */s=segmentGroup;while(s._sourceSegment){s=s._sourceSegment;}return s;}/**
 * @param {?} segmentGroup
 * @return {?}
 */function getPathIndexShift(segmentGroup){var/** @type {?} */s=segmentGroup;var/** @type {?} */res=s._segmentIndexShift?s._segmentIndexShift:0;while(s._sourceSegment){s=s._sourceSegment;res+=s._segmentIndexShift?s._segmentIndexShift:0;}return res-1;}/**
 * @param {?} segmentGroup
 * @param {?} consumedSegments
 * @param {?} slicedSegments
 * @param {?} config
 * @return {?}
 */function split$1(segmentGroup,consumedSegments,slicedSegments,config){if(slicedSegments.length>0&&containsEmptyPathMatchesWithNamedOutlets(segmentGroup,slicedSegments,config)){var/** @type {?} */s=new UrlSegmentGroup(consumedSegments,createChildrenForEmptyPaths(segmentGroup,consumedSegments,config,new UrlSegmentGroup(slicedSegments,segmentGroup.children)));s._sourceSegment=segmentGroup;s._segmentIndexShift=consumedSegments.length;return{segmentGroup:s,slicedSegments:[]};}else if(slicedSegments.length===0&&containsEmptyPathMatches(segmentGroup,slicedSegments,config)){var/** @type {?} */_s2=new UrlSegmentGroup(segmentGroup.segments,addEmptyPathsToChildrenIfNeeded(segmentGroup,slicedSegments,config,segmentGroup.children));_s2._sourceSegment=segmentGroup;_s2._segmentIndexShift=consumedSegments.length;return{segmentGroup:_s2,slicedSegments:slicedSegments};}else{var/** @type {?} */_s3=new UrlSegmentGroup(segmentGroup.segments,segmentGroup.children);_s3._sourceSegment=segmentGroup;_s3._segmentIndexShift=consumedSegments.length;return{segmentGroup:_s3,slicedSegments:slicedSegments};}}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @param {?} children
 * @return {?}
 */function addEmptyPathsToChildrenIfNeeded(segmentGroup,slicedSegments,routes,children){var/** @type {?} */res={};var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=routes[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var r=_step8.value;if(emptyPathMatch(segmentGroup,slicedSegments,r)&&!children[getOutlet$2(r)]){var/** @type {?} */s=new UrlSegmentGroup([],{});s._sourceSegment=segmentGroup;s._segmentIndexShift=segmentGroup.segments.length;res[getOutlet$2(r)]=s;}}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}return merge$5(children,res);}/**
 * @param {?} segmentGroup
 * @param {?} consumedSegments
 * @param {?} routes
 * @param {?} primarySegment
 * @return {?}
 */function createChildrenForEmptyPaths(segmentGroup,consumedSegments,routes,primarySegment){var/** @type {?} */res={};res[PRIMARY_OUTLET]=primarySegment;primarySegment._sourceSegment=segmentGroup;primarySegment._segmentIndexShift=consumedSegments.length;var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=routes[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var r=_step9.value;if(r.path===''&&getOutlet$2(r)!==PRIMARY_OUTLET){var/** @type {?} */s=new UrlSegmentGroup([],{});s._sourceSegment=segmentGroup;s._segmentIndexShift=consumedSegments.length;res[getOutlet$2(r)]=s;}}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}return res;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathMatchesWithNamedOutlets(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathMatch(segmentGroup,slicedSegments,r)&&getOutlet$2(r)!==PRIMARY_OUTLET;}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} routes
 * @return {?}
 */function containsEmptyPathMatches(segmentGroup,slicedSegments,routes){return routes.filter(function(r){return emptyPathMatch(segmentGroup,slicedSegments,r);}).length>0;}/**
 * @param {?} segmentGroup
 * @param {?} slicedSegments
 * @param {?} r
 * @return {?}
 */function emptyPathMatch(segmentGroup,slicedSegments,r){if((segmentGroup.hasChildren()||slicedSegments.length>0)&&r.pathMatch==='full')return false;return r.path===''&&r.redirectTo===undefined;}/**
 * @param {?} route
 * @return {?}
 */function getOutlet$2(route){return route.outlet?route.outlet:PRIMARY_OUTLET;}/**
 * @param {?} route
 * @return {?}
 */function getData(route){return route.data?route.data:{};}/**
 * @param {?} route
 * @return {?}
 */function getResolve(route){return route.resolve?route.resolve:{};}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * \@whatItDoes Contains all the router outlets created in a component.
 *
 * \@stable
 */var RouterOutletMap=function(){function RouterOutletMap(){_classCallCheck$4(this,RouterOutletMap);/** @internal */this._outlets={};}/**
     * Adds an outlet to this map.
     * @param {?} name
     * @param {?} outlet
     * @return {?}
     */_createClass$4(RouterOutletMap,[{key:'registerOutlet',value:function registerOutlet(name,outlet){this._outlets[name]=outlet;}/**
     * Removes an outlet from this map.
     * @param {?} name
     * @return {?}
     */},{key:'removeOutlet',value:function removeOutlet(name){this._outlets[name]=undefined;}}]);return RouterOutletMap;}();/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * \@whatItDoes Provides a way to migrate AngularJS applications to Angular.
 *
 * \@experimental
 * @abstract
 */var UrlHandlingStrategy=function(){function UrlHandlingStrategy(){_classCallCheck$4(this,UrlHandlingStrategy);}_createClass$4(UrlHandlingStrategy,[{key:'shouldProcessUrl',/**
     * Tells the router if this URL should be processed.
     *
     * When it returns true, the router will execute the regular navigation.
     * When it returns false, the router will set the router state to an empty state.
     * As a result, all the active components will be destroyed.
     *
     * @abstract
     * @param {?} url
     * @return {?}
     */value:function shouldProcessUrl(url){}/**
     * Extracts the part of the URL that should be handled by the router.
     * The rest of the URL will remain untouched.
     * @abstract
     * @param {?} url
     * @return {?}
     */},{key:'extract',value:function extract(url){}/**
     * Merges the URL fragment with the rest of the URL.
     * @abstract
     * @param {?} newUrlPart
     * @param {?} rawUrl
     * @return {?}
     */},{key:'merge',value:function merge(newUrlPart,rawUrl){}}]);return UrlHandlingStrategy;}();/**
 * \@experimental
 */var DefaultUrlHandlingStrategy=function(){function DefaultUrlHandlingStrategy(){_classCallCheck$4(this,DefaultUrlHandlingStrategy);}_createClass$4(DefaultUrlHandlingStrategy,[{key:'shouldProcessUrl',/**
     * @param {?} url
     * @return {?}
     */value:function shouldProcessUrl(url){return true;}/**
     * @param {?} url
     * @return {?}
     */},{key:'extract',value:function extract(url){return url;}/**
     * @param {?} newUrlPart
     * @param {?} wholeUrl
     * @return {?}
     */},{key:'merge',value:function merge(newUrlPart,wholeUrl){return newUrlPart;}}]);return DefaultUrlHandlingStrategy;}();/**
 * @param {?} error
 * @return {?}
 */function defaultErrorHandler(error){throw error;}/**
 * Does not detach any subtrees. Reuses routes as long as their route config is the same.
 */var DefaultRouteReuseStrategy=function(){function DefaultRouteReuseStrategy(){_classCallCheck$4(this,DefaultRouteReuseStrategy);}_createClass$4(DefaultRouteReuseStrategy,[{key:'shouldDetach',/**
     * @param {?} route
     * @return {?}
     */value:function shouldDetach(route){return false;}/**
     * @param {?} route
     * @param {?} detachedTree
     * @return {?}
     */},{key:'store',value:function store(route,detachedTree){}/**
     * @param {?} route
     * @return {?}
     */},{key:'shouldAttach',value:function shouldAttach(route){return false;}/**
     * @param {?} route
     * @return {?}
     */},{key:'retrieve',value:function retrieve(route){return null;}/**
     * @param {?} future
     * @param {?} curr
     * @return {?}
     */},{key:'shouldReuseRoute',value:function shouldReuseRoute(future,curr){return future.routeConfig===curr.routeConfig;}}]);return DefaultRouteReuseStrategy;}();/**
 * \@whatItDoes Provides the navigation and url manipulation capabilities.
 *
 * See {\@link Routes} for more details and examples.
 *
 * \@ngModule RouterModule
 *
 * \@stable
 */var Router=function(){/**
     * @param {?} rootComponentType
     * @param {?} urlSerializer
     * @param {?} outletMap
     * @param {?} location
     * @param {?} injector
     * @param {?} loader
     * @param {?} compiler
     * @param {?} config
     */function Router(rootComponentType,urlSerializer,outletMap,location,injector,loader,compiler,config){var _this18=this;_classCallCheck$4(this,Router);this.rootComponentType=rootComponentType;this.urlSerializer=urlSerializer;this.outletMap=outletMap;this.location=location;this.injector=injector;this.config=config;this.navigations=new BehaviorSubject$$1(null);this.routerEvents=new Subject$$1();this.navigationId=0;/**
         * Error handler that is invoked when a navigation errors.
         *
         * See {@link ErrorHandler} for more information.
         */this.errorHandler=defaultErrorHandler;/**
         * Indicates if at least one navigation happened.
         */this.navigated=false;/**
         * Extracts and merges URLs. Used for AngularJS to Angular migrations.
         */this.urlHandlingStrategy=new DefaultUrlHandlingStrategy();this.routeReuseStrategy=new DefaultRouteReuseStrategy();var onLoadStart=function onLoadStart(r){return _this18.triggerEvent(new RouteConfigLoadStart(r));};var onLoadEnd=function onLoadEnd(r){return _this18.triggerEvent(new RouteConfigLoadEnd(r));};this.resetConfig(config);this.currentUrlTree=createEmptyUrlTree();this.rawUrlTree=this.currentUrlTree;this.configLoader=new RouterConfigLoader(loader,compiler,onLoadStart,onLoadEnd);this.currentRouterState=createEmptyState(this.currentUrlTree,this.rootComponentType);this.processNavigations();}/**
     * \@internal
     * TODO: this should be removed once the constructor of the router made internal
     * @param {?} rootComponentType
     * @return {?}
     */_createClass$4(Router,[{key:'resetRootComponentType',value:function resetRootComponentType(rootComponentType){this.rootComponentType=rootComponentType;// TODO: vsavkin router 4.0 should make the root component set to null
// this will simplify the lifecycle of the router.
this.currentRouterState.root.component=this.rootComponentType;}/**
     * Sets up the location change listener and performs the initial navigation.
     * @return {?}
     */},{key:'initialNavigation',value:function initialNavigation(){this.setUpLocationChangeListener();if(this.navigationId===0){this.navigateByUrl(this.location.path(true),{replaceUrl:true});}}/**
     * Sets up the location change listener.
     * @return {?}
     */},{key:'setUpLocationChangeListener',value:function setUpLocationChangeListener(){var _this19=this;// Zone.current.wrap is needed because of the issue with RxJS scheduler,
// which does not work properly with zone.js in IE and Safari
if(!this.locationSubscription){this.locationSubscription=this.location.subscribe(Zone.current.wrap(function(change){var/** @type {?} */rawUrlTree=_this19.urlSerializer.parse(change['url']);var/** @type {?} */source=change['type']==='popstate'?'popstate':'hashchange';setTimeout(function(){_this19.scheduleNavigation(rawUrlTree,source,{replaceUrl:true});},0);}));}}/**
     * The current route state
     * @return {?}
     */},{key:'triggerEvent',/**
     * \@internal
     * @param {?} e
     * @return {?}
     */value:function triggerEvent(e){this.routerEvents.next(e);}/**
     * Resets the configuration used for navigation and generating links.
     *
     * ### Usage
     *
     * ```
     * router.resetConfig([
     *  { path: 'team/:id', component: TeamCmp, children: [
     *    { path: 'simple', component: SimpleCmp },
     *    { path: 'user/:name', component: UserCmp }
     *  ]}
     * ]);
     * ```
     * @param {?} config
     * @return {?}
     */},{key:'resetConfig',value:function resetConfig(config){validateConfig(config);this.config=config;}/**
     * \@docsNotRequired
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.dispose();}/**
     * Disposes of the router
     * @return {?}
     */},{key:'dispose',value:function dispose(){if(this.locationSubscription){this.locationSubscription.unsubscribe();this.locationSubscription=null;}}/**
     * Applies an array of commands to the current url tree and creates a new url tree.
     *
     * When given an activate route, applies the given commands starting from the route.
     * When not given a route, applies the given command starting from the root.
     *
     * ### Usage
     *
     * ```
     * // create /team/33/user/11
     * router.createUrlTree(['/team', 33, 'user', 11]);
     *
     * // create /team/33;expand=true/user/11
     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);
     *
     * // you can collapse static segments like this (this works only with the first passed-in value):
     * router.createUrlTree(['/team/33/user', userId]);
     *
     * // If the first segment can contain slashes, and you do not want the router to split it, you
     * // can do the following:
     *
     * router.createUrlTree([{segmentPath: '/one/two'}]);
     *
     * // create /team/33/(user/11//right:chat)
     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);
     *
     * // remove the right secondary node
     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);
     *
     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`
     *
     * // navigate to /team/33/user/11/details
     * router.createUrlTree(['details'], {relativeTo: route});
     *
     * // navigate to /team/33/user/22
     * router.createUrlTree(['../22'], {relativeTo: route});
     *
     * // navigate to /team/44/user/22
     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});
     * ```
     * @param {?} commands
     * @param {?=} __1
     * @return {?}
     */},{key:'createUrlTree',value:function createUrlTree(commands){var _ref4=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},relativeTo=_ref4.relativeTo,queryParams=_ref4.queryParams,fragment=_ref4.fragment,preserveQueryParams=_ref4.preserveQueryParams,queryParamsHandling=_ref4.queryParamsHandling,preserveFragment=_ref4.preserveFragment;if(isDevMode()&&preserveQueryParams&&console&&console.warn){console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');}var/** @type {?} */a=relativeTo||this.routerState.root;var/** @type {?} */f=preserveFragment?this.currentUrlTree.fragment:fragment;var/** @type {?} */q=null;if(queryParamsHandling){switch(queryParamsHandling){case'merge':q=merge$5(this.currentUrlTree.queryParams,queryParams);break;case'preserve':q=this.currentUrlTree.queryParams;break;default:q=queryParams;}}else{q=preserveQueryParams?this.currentUrlTree.queryParams:queryParams;}return _createUrlTree(a,this.currentUrlTree,commands,q,f);}/**
     * Navigate based on the provided url. This navigation is always absolute.
     *
     * Returns a promise that:
     * - resolves to 'true' when navigation succeeds,
     * - resolves to 'false' when navigation fails,
     * - is rejected when an error happens.
     *
     * ### Usage
     *
     * ```
     * router.navigateByUrl("/team/33/user/11");
     *
     * // Navigate without updating the URL
     * router.navigateByUrl("/team/33/user/11", { skipLocationChange: true });
     * ```
     *
     * In opposite to `navigate`, `navigateByUrl` takes a whole URL
     * and does not apply any delta to the current one.
     * @param {?} url
     * @param {?=} extras
     * @return {?}
     */},{key:'navigateByUrl',value:function navigateByUrl(url){var extras=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{skipLocationChange:false};var/** @type {?} */urlTree=url instanceof UrlTree?url:this.parseUrl(url);var/** @type {?} */mergedTree=this.urlHandlingStrategy.merge(urlTree,this.rawUrlTree);return this.scheduleNavigation(mergedTree,'imperative',extras);}/**
     * Navigate based on the provided array of commands and a starting point.
     * If no starting route is provided, the navigation is absolute.
     *
     * Returns a promise that:
     * - resolves to 'true' when navigation succeeds,
     * - resolves to 'false' when navigation fails,
     * - is rejected when an error happens.
     *
     * ### Usage
     *
     * ```
     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});
     *
     * // Navigate without updating the URL
     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});
     * ```
     *
     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current
     * URL.
     * @param {?} commands
     * @param {?=} extras
     * @return {?}
     */},{key:'navigate',value:function navigate(commands){var extras=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{skipLocationChange:false};validateCommands(commands);if(_typeof$3(extras.queryParams)==='object'&&extras.queryParams!==null){extras.queryParams=this.removeEmptyProps(extras.queryParams);}return this.navigateByUrl(this.createUrlTree(commands,extras),extras);}/**
     * Serializes a {\@link UrlTree} into a string
     * @param {?} url
     * @return {?}
     */},{key:'serializeUrl',value:function serializeUrl(url){return this.urlSerializer.serialize(url);}/**
     * Parses a string into a {\@link UrlTree}
     * @param {?} url
     * @return {?}
     */},{key:'parseUrl',value:function parseUrl(url){return this.urlSerializer.parse(url);}/**
     * Returns whether the url is activated
     * @param {?} url
     * @param {?} exact
     * @return {?}
     */},{key:'isActive',value:function isActive(url,exact){if(url instanceof UrlTree){return containsTree(this.currentUrlTree,url,exact);}else{var/** @type {?} */urlTree=this.urlSerializer.parse(url);return containsTree(this.currentUrlTree,urlTree,exact);}}/**
     * @param {?} params
     * @return {?}
     */},{key:'removeEmptyProps',value:function removeEmptyProps(params){return Object.keys(params).reduce(function(result,key){var/** @type {?} */value=params[key];if(value!==null&&value!==undefined){result[key]=value;}return result;},{});}/**
     * @return {?}
     */},{key:'processNavigations',value:function processNavigations(){var _this20=this;concatMap$$1.call(this.navigations,function(nav){if(nav){_this20.executeScheduledNavigation(nav);// a failed navigation should not stop the router from processing
// further navigations => the catch
return nav.promise.catch(function(){});}else{return of$$1(null);}}).subscribe(function(){});}/**
     * @param {?} rawUrl
     * @param {?} source
     * @param {?} extras
     * @return {?}
     */},{key:'scheduleNavigation',value:function scheduleNavigation(rawUrl,source,extras){var/** @type {?} */lastNavigation=this.navigations.value;// If the user triggers a navigation imperatively (e.g., by using navigateByUrl),
// and that navigation results in 'replaceState' that leads to the same URL,
// we should skip those.
if(lastNavigation&&source!=='imperative'&&lastNavigation.source==='imperative'&&lastNavigation.rawUrl.toString()===rawUrl.toString()){return null;// return value is not used
}// Because of a bug in IE and Edge, the location class fires two events (popstate and
// hashchange) every single time. The second one should be ignored. Otherwise, the URL will
// flicker.
if(lastNavigation&&source=='hashchange'&&lastNavigation.source==='popstate'&&lastNavigation.rawUrl.toString()===rawUrl.toString()){return null;// return value is not used
}var/** @type {?} */resolve=null;var/** @type {?} */reject=null;var/** @type {?} */promise=new Promise(function(res,rej){resolve=res;reject=rej;});var/** @type {?} */id=++this.navigationId;this.navigations.next({id:id,source:source,rawUrl:rawUrl,extras:extras,resolve:resolve,reject:reject,promise:promise});// Make sure that the error is propagated even though `processNavigations` catch
// handler does not rethrow
return promise.catch(function(e){return Promise.reject(e);});}/**
     * @param {?} __0
     * @return {?}
     */},{key:'executeScheduledNavigation',value:function executeScheduledNavigation(_ref5){var _this21=this;var id=_ref5.id,rawUrl=_ref5.rawUrl,extras=_ref5.extras,resolve=_ref5.resolve,reject=_ref5.reject;var/** @type {?} */url=this.urlHandlingStrategy.extract(rawUrl);var/** @type {?} */urlTransition=!this.navigated||url.toString()!==this.currentUrlTree.toString();if(urlTransition&&this.urlHandlingStrategy.shouldProcessUrl(rawUrl)){this.routerEvents.next(new NavigationStart(id,this.serializeUrl(url)));Promise.resolve().then(function(_){return _this21.runNavigate(url,rawUrl,extras.skipLocationChange,extras.replaceUrl,id,null);}).then(resolve,reject);}else if(urlTransition&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){this.routerEvents.next(new NavigationStart(id,this.serializeUrl(url)));Promise.resolve().then(function(_){return _this21.runNavigate(url,rawUrl,false,false,id,createEmptyState(url,_this21.rootComponentType).snapshot);}).then(resolve,reject);}else{this.rawUrlTree=rawUrl;resolve(null);}}/**
     * @param {?} url
     * @param {?} rawUrl
     * @param {?} shouldPreventPushState
     * @param {?} shouldReplaceUrl
     * @param {?} id
     * @param {?} precreatedState
     * @return {?}
     */},{key:'runNavigate',value:function runNavigate(url,rawUrl,shouldPreventPushState,shouldReplaceUrl,id,precreatedState){var _this22=this;if(id!==this.navigationId){this.location.go(this.urlSerializer.serialize(this.currentUrlTree));this.routerEvents.next(new NavigationCancel(id,this.serializeUrl(url),'Navigation ID '+id+' is not equal to the current navigation id '+this.navigationId));return Promise.resolve(false);}return new Promise(function(resolvePromise,rejectPromise){// create an observable of the url and route state snapshot
// this operation do not result in any side effects
var/** @type {?} */urlAndSnapshot$=void 0;if(!precreatedState){var/** @type {?} */redirectsApplied$=applyRedirects(_this22.injector,_this22.configLoader,_this22.urlSerializer,url,_this22.config);urlAndSnapshot$=mergeMap$$1.call(redirectsApplied$,function(appliedUrl){return map$$1.call(recognize(_this22.rootComponentType,_this22.config,appliedUrl,_this22.serializeUrl(appliedUrl)),function(snapshot){_this22.routerEvents.next(new RoutesRecognized(id,_this22.serializeUrl(url),_this22.serializeUrl(appliedUrl),snapshot));return{appliedUrl:appliedUrl,snapshot:snapshot};});});}else{urlAndSnapshot$=of$$1({appliedUrl:url,snapshot:precreatedState});}// run preactivation: guards and data resolvers
var/** @type {?} */preActivation=void 0;var/** @type {?} */preactivationTraverse$=map$$1.call(urlAndSnapshot$,function(_ref6){var appliedUrl=_ref6.appliedUrl,snapshot=_ref6.snapshot;preActivation=new PreActivation(snapshot,_this22.currentRouterState.snapshot,_this22.injector);preActivation.traverse(_this22.outletMap);return{appliedUrl:appliedUrl,snapshot:snapshot};});var/** @type {?} */preactivationCheckGuards=mergeMap$$1.call(preactivationTraverse$,function(_ref7){var appliedUrl=_ref7.appliedUrl,snapshot=_ref7.snapshot;if(_this22.navigationId!==id)return of$$1(false);return map$$1.call(preActivation.checkGuards(),function(shouldActivate){return{appliedUrl:appliedUrl,snapshot:snapshot,shouldActivate:shouldActivate};});});var/** @type {?} */preactivationResolveData$=mergeMap$$1.call(preactivationCheckGuards,function(p){if(_this22.navigationId!==id)return of$$1(false);if(p.shouldActivate){return map$$1.call(preActivation.resolveData(),function(){return p;});}else{return of$$1(p);}});// create router state
// this operation has side effects => route state is being affected
var/** @type {?} */routerState$=map$$1.call(preactivationResolveData$,function(_ref8){var appliedUrl=_ref8.appliedUrl,snapshot=_ref8.snapshot,shouldActivate=_ref8.shouldActivate;if(shouldActivate){var/** @type {?} */state$$1=createRouterState(_this22.routeReuseStrategy,snapshot,_this22.currentRouterState);return{appliedUrl:appliedUrl,state:state$$1,shouldActivate:shouldActivate};}else{return{appliedUrl:appliedUrl,state:null,shouldActivate:shouldActivate};}});// applied the new router state
// this operation has side effects
var/** @type {?} */navigationIsSuccessful=void 0;var/** @type {?} */storedState=_this22.currentRouterState;var/** @type {?} */storedUrl=_this22.currentUrlTree;routerState$.forEach(function(_ref9){var appliedUrl=_ref9.appliedUrl,state$$1=_ref9.state,shouldActivate=_ref9.shouldActivate;if(!shouldActivate||id!==_this22.navigationId){navigationIsSuccessful=false;return;}_this22.currentUrlTree=appliedUrl;_this22.rawUrlTree=_this22.urlHandlingStrategy.merge(_this22.currentUrlTree,rawUrl);_this22.currentRouterState=state$$1;if(!shouldPreventPushState){var/** @type {?} */path=_this22.urlSerializer.serialize(_this22.rawUrlTree);if(_this22.location.isCurrentPathEqualTo(path)||shouldReplaceUrl){_this22.location.replaceState(path);}else{_this22.location.go(path);}}new ActivateRoutes(_this22.routeReuseStrategy,state$$1,storedState).activate(_this22.outletMap);navigationIsSuccessful=true;}).then(function(){if(navigationIsSuccessful){_this22.navigated=true;_this22.routerEvents.next(new NavigationEnd(id,_this22.serializeUrl(url),_this22.serializeUrl(_this22.currentUrlTree)));resolvePromise(true);}else{_this22.resetUrlToCurrentUrlTree();_this22.routerEvents.next(new NavigationCancel(id,_this22.serializeUrl(url),''));resolvePromise(false);}},function(e){if(isNavigationCancelingError(e)){_this22.resetUrlToCurrentUrlTree();_this22.navigated=true;_this22.routerEvents.next(new NavigationCancel(id,_this22.serializeUrl(url),e.message));resolvePromise(false);}else{_this22.routerEvents.next(new NavigationError(id,_this22.serializeUrl(url),e));try{resolvePromise(_this22.errorHandler(e));}catch(ee){rejectPromise(ee);}}_this22.currentRouterState=storedState;_this22.currentUrlTree=storedUrl;_this22.rawUrlTree=_this22.urlHandlingStrategy.merge(_this22.currentUrlTree,rawUrl);_this22.location.replaceState(_this22.serializeUrl(_this22.rawUrlTree));});});}/**
     * @return {?}
     */},{key:'resetUrlToCurrentUrlTree',value:function resetUrlToCurrentUrlTree(){var/** @type {?} */path=this.urlSerializer.serialize(this.rawUrlTree);this.location.replaceState(path);}},{key:'routerState',get:function get(){return this.currentRouterState;}/**
     * The current url
     * @return {?}
     */},{key:'url',get:function get(){return this.serializeUrl(this.currentUrlTree);}/**
     * An observable of router events
     * @return {?}
     */},{key:'events',get:function get(){return this.routerEvents;}}]);return Router;}();var CanActivate=function(){/**
     * @param {?} path
     */function CanActivate(path){_classCallCheck$4(this,CanActivate);this.path=path;}/**
     * @return {?}
     */_createClass$4(CanActivate,[{key:'route',get:function get(){return this.path[this.path.length-1];}}]);return CanActivate;}();var CanDeactivate=/**
     * @param {?} component
     * @param {?} route
     */function CanDeactivate(component,route){_classCallCheck$4(this,CanDeactivate);this.component=component;this.route=route;};var PreActivation=function(){/**
     * @param {?} future
     * @param {?} curr
     * @param {?} injector
     */function PreActivation(future,curr,injector){_classCallCheck$4(this,PreActivation);this.future=future;this.curr=curr;this.injector=injector;this.checks=[];}/**
     * @param {?} parentOutletMap
     * @return {?}
     */_createClass$4(PreActivation,[{key:'traverse',value:function traverse(parentOutletMap){var/** @type {?} */futureRoot=this.future._root;var/** @type {?} */currRoot=this.curr?this.curr._root:null;this.traverseChildRoutes(futureRoot,currRoot,parentOutletMap,[futureRoot.value]);}/**
     * @return {?}
     */},{key:'checkGuards',value:function checkGuards(){var _this23=this;if(this.checks.length===0)return of$$1(true);var/** @type {?} */checks$=from$$1(this.checks);var/** @type {?} */runningChecks$=mergeMap$$1.call(checks$,function(s){if(s instanceof CanActivate){return andObservables(from$$1([_this23.runCanActivateChild(s.path),_this23.runCanActivate(s.route)]));}else if(s instanceof CanDeactivate){// workaround https://github.com/Microsoft/TypeScript/issues/7271
var/** @type {?} */s2=s;return _this23.runCanDeactivate(s2.component,s2.route);}else{throw new Error('Cannot be reached');}});return every$$1.call(runningChecks$,function(result){return result===true;});}/**
     * @return {?}
     */},{key:'resolveData',value:function resolveData(){var _this24=this;if(this.checks.length===0)return of$$1(null);var/** @type {?} */checks$=from$$1(this.checks);var/** @type {?} */runningChecks$=concatMap$$1.call(checks$,function(s){if(s instanceof CanActivate){return _this24.runResolve(s.route);}else{return of$$1(null);}});return reduce$$1.call(runningChecks$,function(_,__){return _;});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} outletMap
     * @param {?} futurePath
     * @return {?}
     */},{key:'traverseChildRoutes',value:function traverseChildRoutes(futureNode,currNode,outletMap,futurePath){var _this25=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this25.traverseRoutes(c,prevChildren[c.value.outlet],outletMap,futurePath.concat([c.value]));delete prevChildren[c.value.outlet];});forEach(prevChildren,function(v,k){return _this25.deactiveRouteAndItsChildren(v,outletMap._outlets[k]);});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} parentOutletMap
     * @param {?} futurePath
     * @return {?}
     */},{key:'traverseRoutes',value:function traverseRoutes(futureNode,currNode,parentOutletMap,futurePath){var/** @type {?} */future=futureNode.value;var/** @type {?} */curr=currNode?currNode.value:null;var/** @type {?} */outlet=parentOutletMap?parentOutletMap._outlets[futureNode.value.outlet]:null;// reusing the node
if(curr&&future._routeConfig===curr._routeConfig){if(this.shouldRunGuardsAndResolvers(curr,future,future._routeConfig.runGuardsAndResolvers)){this.checks.push(new CanDeactivate(outlet.component,curr),new CanActivate(futurePath));}else{// we need to set the data
future.data=curr.data;future._resolvedData=curr._resolvedData;}// If we have a component, we need to go through an outlet.
if(future.component){this.traverseChildRoutes(futureNode,currNode,outlet?outlet.outletMap:null,futurePath);}else{this.traverseChildRoutes(futureNode,currNode,parentOutletMap,futurePath);}}else{if(curr){this.deactiveRouteAndItsChildren(currNode,outlet);}this.checks.push(new CanActivate(futurePath));// If we have a component, we need to go through an outlet.
if(future.component){this.traverseChildRoutes(futureNode,null,outlet?outlet.outletMap:null,futurePath);}else{this.traverseChildRoutes(futureNode,null,parentOutletMap,futurePath);}}}/**
     * @param {?} curr
     * @param {?} future
     * @param {?} mode
     * @return {?}
     */},{key:'shouldRunGuardsAndResolvers',value:function shouldRunGuardsAndResolvers(curr,future,mode){switch(mode){case'always':return true;case'paramsOrQueryParamsChange':return!equalParamsAndUrlSegments(curr,future)||!shallowEqual(curr.queryParams,future.queryParams);case'paramsChange':default:return!equalParamsAndUrlSegments(curr,future);}}/**
     * @param {?} route
     * @param {?} outlet
     * @return {?}
     */},{key:'deactiveRouteAndItsChildren',value:function deactiveRouteAndItsChildren(route,outlet){var _this26=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(route);var/** @type {?} */r=route.value;forEach(prevChildren,function(v,k){if(!r.component){_this26.deactiveRouteAndItsChildren(v,outlet);}else if(!!outlet){_this26.deactiveRouteAndItsChildren(v,outlet.outletMap._outlets[k]);}else{_this26.deactiveRouteAndItsChildren(v,null);}});if(!r.component){this.checks.push(new CanDeactivate(null,r));}else if(outlet&&outlet.isActivated){this.checks.push(new CanDeactivate(outlet.component,r));}else{this.checks.push(new CanDeactivate(null,r));}}/**
     * @param {?} future
     * @return {?}
     */},{key:'runCanActivate',value:function runCanActivate(future){var _this27=this;var/** @type {?} */canActivate=future._routeConfig?future._routeConfig.canActivate:null;if(!canActivate||canActivate.length===0)return of$$1(true);var/** @type {?} */obs=map$$1.call(from$$1(canActivate),function(c){var/** @type {?} */guard=_this27.getToken(c,future);var/** @type {?} */observable=void 0;if(guard.canActivate){observable=wrapIntoObservable(guard.canActivate(future,_this27.future));}else{observable=wrapIntoObservable(guard(future,_this27.future));}return first$$1.call(observable);});return andObservables(obs);}/**
     * @param {?} path
     * @return {?}
     */},{key:'runCanActivateChild',value:function runCanActivateChild(path){var _this28=this;var/** @type {?} */future=path[path.length-1];var/** @type {?} */canActivateChildGuards=path.slice(0,path.length-1).reverse().map(function(p){return _this28.extractCanActivateChild(p);}).filter(function(_){return _!==null;});return andObservables(map$$1.call(from$$1(canActivateChildGuards),function(d){var/** @type {?} */obs=map$$1.call(from$$1(d.guards),function(c){var/** @type {?} */guard=_this28.getToken(c,d.node);var/** @type {?} */observable=void 0;if(guard.canActivateChild){observable=wrapIntoObservable(guard.canActivateChild(future,_this28.future));}else{observable=wrapIntoObservable(guard(future,_this28.future));}return first$$1.call(observable);});return andObservables(obs);}));}/**
     * @param {?} p
     * @return {?}
     */},{key:'extractCanActivateChild',value:function extractCanActivateChild(p){var/** @type {?} */canActivateChild=p._routeConfig?p._routeConfig.canActivateChild:null;if(!canActivateChild||canActivateChild.length===0)return null;return{node:p,guards:canActivateChild};}/**
     * @param {?} component
     * @param {?} curr
     * @return {?}
     */},{key:'runCanDeactivate',value:function runCanDeactivate(component,curr){var _this29=this;var/** @type {?} */canDeactivate=curr&&curr._routeConfig?curr._routeConfig.canDeactivate:null;if(!canDeactivate||canDeactivate.length===0)return of$$1(true);var/** @type {?} */canDeactivate$=mergeMap$$1.call(from$$1(canDeactivate),function(c){var/** @type {?} */guard=_this29.getToken(c,curr);var/** @type {?} */observable=void 0;if(guard.canDeactivate){observable=wrapIntoObservable(guard.canDeactivate(component,curr,_this29.curr,_this29.future));}else{observable=wrapIntoObservable(guard(component,curr,_this29.curr,_this29.future));}return first$$1.call(observable);});return every$$1.call(canDeactivate$,function(result){return result===true;});}/**
     * @param {?} future
     * @return {?}
     */},{key:'runResolve',value:function runResolve(future){var/** @type {?} */resolve=future._resolve;return map$$1.call(this.resolveNode(resolve,future),function(resolvedData){future._resolvedData=resolvedData;future.data=merge$5(future.data,inheritedParamsDataResolve(future).resolve);return null;});}/**
     * @param {?} resolve
     * @param {?} future
     * @return {?}
     */},{key:'resolveNode',value:function resolveNode(resolve,future){var _this30=this;return waitForMap(resolve,function(k,v){var/** @type {?} */resolver=_this30.getToken(v,future);return resolver.resolve?wrapIntoObservable(resolver.resolve(future,_this30.future)):wrapIntoObservable(resolver(future,_this30.future));});}/**
     * @param {?} token
     * @param {?} snapshot
     * @return {?}
     */},{key:'getToken',value:function getToken(token,snapshot){var/** @type {?} */config=closestLoadedConfig(snapshot);var/** @type {?} */injector=config?config.injector:this.injector;return injector.get(token);}}]);return PreActivation;}();var ActivateRoutes=function(){/**
     * @param {?} routeReuseStrategy
     * @param {?} futureState
     * @param {?} currState
     */function ActivateRoutes(routeReuseStrategy,futureState,currState){_classCallCheck$4(this,ActivateRoutes);this.routeReuseStrategy=routeReuseStrategy;this.futureState=futureState;this.currState=currState;}/**
     * @param {?} parentOutletMap
     * @return {?}
     */_createClass$4(ActivateRoutes,[{key:'activate',value:function activate(parentOutletMap){var/** @type {?} */futureRoot=this.futureState._root;var/** @type {?} */currRoot=this.currState?this.currState._root:null;this.deactivateChildRoutes(futureRoot,currRoot,parentOutletMap);advanceActivatedRoute(this.futureState.root);this.activateChildRoutes(futureRoot,currRoot,parentOutletMap);}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} outletMap
     * @return {?}
     */},{key:'deactivateChildRoutes',value:function deactivateChildRoutes(futureNode,currNode,outletMap){var _this31=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this31.deactivateRoutes(c,prevChildren[c.value.outlet],outletMap);delete prevChildren[c.value.outlet];});forEach(prevChildren,function(v,k){return _this31.deactiveRouteAndItsChildren(v,outletMap);});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} outletMap
     * @return {?}
     */},{key:'activateChildRoutes',value:function activateChildRoutes(futureNode,currNode,outletMap){var _this32=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this32.activateRoutes(c,prevChildren[c.value.outlet],outletMap);});}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'deactivateRoutes',value:function deactivateRoutes(futureNode,currNode,parentOutletMap){var/** @type {?} */future=futureNode.value;var/** @type {?} */curr=currNode?currNode.value:null;// reusing the node
if(future===curr){// If we have a normal route, we need to go through an outlet.
if(future.component){var/** @type {?} */outlet=getOutlet(parentOutletMap,future);this.deactivateChildRoutes(futureNode,currNode,outlet.outletMap);}else{this.deactivateChildRoutes(futureNode,currNode,parentOutletMap);}}else{if(curr){this.deactiveRouteAndItsChildren(currNode,parentOutletMap);}}}/**
     * @param {?} futureNode
     * @param {?} currNode
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'activateRoutes',value:function activateRoutes(futureNode,currNode,parentOutletMap){var/** @type {?} */future=futureNode.value;var/** @type {?} */curr=currNode?currNode.value:null;// reusing the node
if(future===curr){// advance the route to push the parameters
advanceActivatedRoute(future);// If we have a normal route, we need to go through an outlet.
if(future.component){var/** @type {?} */outlet=getOutlet(parentOutletMap,future);this.activateChildRoutes(futureNode,currNode,outlet.outletMap);}else{this.activateChildRoutes(futureNode,currNode,parentOutletMap);}}else{// if we have a normal route, we need to advance the route
// and place the component into the outlet. After that recurse.
if(future.component){advanceActivatedRoute(future);var/** @type {?} */_outlet=getOutlet(parentOutletMap,futureNode.value);if(this.routeReuseStrategy.shouldAttach(future.snapshot)){var/** @type {?} */stored=this.routeReuseStrategy.retrieve(future.snapshot);this.routeReuseStrategy.store(future.snapshot,null);_outlet.attach(stored.componentRef,stored.route.value);advanceActivatedRouteNodeAndItsChildren(stored.route);}else{var/** @type {?} */outletMap=new RouterOutletMap();this.placeComponentIntoOutlet(outletMap,future,_outlet);this.activateChildRoutes(futureNode,null,outletMap);}}else{advanceActivatedRoute(future);this.activateChildRoutes(futureNode,null,parentOutletMap);}}}/**
     * @param {?} outletMap
     * @param {?} future
     * @param {?} outlet
     * @return {?}
     */},{key:'placeComponentIntoOutlet',value:function placeComponentIntoOutlet(outletMap,future,outlet){var/** @type {?} */resolved=[{provide:ActivatedRoute,useValue:future},{provide:RouterOutletMap,useValue:outletMap}];var/** @type {?} */config=parentLoadedConfig(future.snapshot);var/** @type {?} */resolver=null;var/** @type {?} */injector=null;if(config){injector=config.injectorFactory(outlet.locationInjector);resolver=config.factoryResolver;resolved.push({provide:ComponentFactoryResolver,useValue:resolver});}else{injector=outlet.locationInjector;resolver=outlet.locationFactoryResolver;}outlet.activate(future,resolver,injector,ReflectiveInjector.resolve(resolved),outletMap);}/**
     * @param {?} route
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'deactiveRouteAndItsChildren',value:function deactiveRouteAndItsChildren(route,parentOutletMap){if(this.routeReuseStrategy.shouldDetach(route.value.snapshot)){this.detachAndStoreRouteSubtree(route,parentOutletMap);}else{this.deactiveRouteAndOutlet(route,parentOutletMap);}}/**
     * @param {?} route
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'detachAndStoreRouteSubtree',value:function detachAndStoreRouteSubtree(route,parentOutletMap){var/** @type {?} */outlet=getOutlet(parentOutletMap,route.value);var/** @type {?} */componentRef=outlet.detach();this.routeReuseStrategy.store(route.value.snapshot,{componentRef:componentRef,route:route});}/**
     * @param {?} route
     * @param {?} parentOutletMap
     * @return {?}
     */},{key:'deactiveRouteAndOutlet',value:function deactiveRouteAndOutlet(route,parentOutletMap){var _this33=this;var/** @type {?} */prevChildren=nodeChildrenAsMap(route);var/** @type {?} */outlet=null;// getOutlet throws when cannot find the right outlet,
// which can happen if an outlet was in an NgIf and was removed
try{outlet=getOutlet(parentOutletMap,route.value);}catch(e){return;}var/** @type {?} */childOutletMap=outlet.outletMap;forEach(prevChildren,function(v,k){if(route.value.component){_this33.deactiveRouteAndItsChildren(v,childOutletMap);}else{_this33.deactiveRouteAndItsChildren(v,parentOutletMap);}});if(outlet&&outlet.isActivated){outlet.deactivate();}}}]);return ActivateRoutes;}();/**
 * @param {?} node
 * @return {?}
 */function advanceActivatedRouteNodeAndItsChildren(node){advanceActivatedRoute(node.value);node.children.forEach(advanceActivatedRouteNodeAndItsChildren);}/**
 * @param {?} snapshot
 * @return {?}
 */function parentLoadedConfig(snapshot){var/** @type {?} */s=snapshot.parent;while(s){var/** @type {?} */c=s._routeConfig;if(c&&c._loadedConfig)return c._loadedConfig;if(c&&c.component)return null;s=s.parent;}return null;}/**
 * @param {?} snapshot
 * @return {?}
 */function closestLoadedConfig(snapshot){if(!snapshot)return null;var/** @type {?} */s=snapshot.parent;while(s){var/** @type {?} */c=s._routeConfig;if(c&&c._loadedConfig)return c._loadedConfig;s=s.parent;}return null;}/**
 * @param {?} node
 * @return {?}
 */function nodeChildrenAsMap(node){return node?node.children.reduce(function(m,c){m[c.value.outlet]=c;return m;},{}):{};}/**
 * @param {?} outletMap
 * @param {?} route
 * @return {?}
 */function getOutlet(outletMap,route){var/** @type {?} */outlet=outletMap._outlets[route.outlet];if(!outlet){var/** @type {?} */componentName=route.component.name;if(route.outlet===PRIMARY_OUTLET){throw new Error('Cannot find primary outlet to load \''+componentName+'\'');}else{throw new Error('Cannot find the outlet '+route.outlet+' to load \''+componentName+'\'');}}return outlet;}/**
 * @param {?} commands
 * @return {?}
 */function validateCommands(commands){for(var/** @type {?} */i=0;i<commands.length;i++){var/** @type {?} */cmd=commands[i];if(cmd==null){throw new Error('The requested path contains '+cmd+' segment at index '+i);}}}/**
 * \@whatItDoes Lets you link to specific parts of your app.
 *
 * \@howToUse
 *
 * Consider the following route configuration:
 * `[{ path: 'user/:name', component: UserCmp }]`
 *
 * When linking to this `user/:name` route, you can write:
 * `<a routerLink='/user/bob'>link to user component</a>`
 *
 * \@description
 *
 * The RouterLink directives let you link to specific parts of your app.
 *
 * When the link is static, you can use the directive as follows:
 * `<a routerLink="/user/bob">link to user component</a>`
 *
 * If you use dynamic values to generate the link, you can pass an array of path
 * segments, followed by the params for each segment.
 *
 * For instance `['/team', teamId, 'user', userName, {details: true}]`
 * means that we want to generate a link to `/team/11/user/bob;details=true`.
 *
 * Multiple static segments can be merged into one
 * (e.g., `['/team/11/user', userName, {details: true}]`).
 *
 * The first segment name can be prepended with `/`, `./`, or `../`:
 * * If the first segment begins with `/`, the router will look up the route from the root of the
 *   app.
 * * If the first segment begins with `./`, or doesn't begin with a slash, the router will
 *   instead look in the children of the current activated route.
 * * And if the first segment begins with `../`, the router will go up one level.
 *
 * You can set query params and fragment as follows:
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" fragment="education">
 *   link to user component
 * </a>
 * ```
 * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.
 *
 * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the
 * directive to preserve the current query params and fragment:
 *
 * ```
 * <a [routerLink]="['/user/bob']" preserveQueryParams preserveFragment>
 *   link to user component
 * </a>
 * ```
 *
 * You can tell the directive to how to handle queryParams, available options are:
 *  - 'merge' merge the queryParams into the current queryParams
 *  - 'preserve' prserve the current queryParams
 *  - default / '' use the queryParams only
 *  same options for {\@link NavigationExtras.queryParamsHandling}
 *
 * ```
 * <a [routerLink]="['/user/bob']" [queryParams]="{debug: true}" queryParamsHandling="merge">
 *   link to user component
 * </a>
 * ```
 *
 * The router link directive always treats the provided input as a delta to the current url.
 *
 * For instance, if the current url is `/user/(box//aux:team)`.
 *
 * Then the following link `<a [routerLink]="['/user/jim']">Jim</a>` will generate the link
 * `/user/(jim//aux:team)`.
 *
 * \@ngModule RouterModule
 *
 * See {\@link Router.createUrlTree} for more information.
 *
 * \@stable
 */var RouterLink=function(){/**
     * @param {?} router
     * @param {?} route
     * @param {?} tabIndex
     * @param {?} renderer
     * @param {?} el
     */function RouterLink(router,route,tabIndex,renderer,el){_classCallCheck$4(this,RouterLink);this.router=router;this.route=route;this.commands=[];if(tabIndex==null){renderer.setElementAttribute(el.nativeElement,'tabindex','0');}}/**
     * @param {?} commands
     * @return {?}
     */_createClass$4(RouterLink,[{key:'onClick',/**
     * @return {?}
     */value:function onClick(){var/** @type {?} */extras={skipLocationChange:attrBoolValue(this.skipLocationChange),replaceUrl:attrBoolValue(this.replaceUrl)};this.router.navigateByUrl(this.urlTree,extras);return true;}/**
     * @return {?}
     */},{key:'routerLink',set:function set(commands){if(commands!=null){this.commands=Array.isArray(commands)?commands:[commands];}else{this.commands=[];}}/**
     * @deprecated 4.0.0 use `queryParamsHandling` instead.
     * @param {?} value
     * @return {?}
     */},{key:'preserveQueryParams',set:function set(value){if(isDevMode()&&console&&console.warn){console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');}this.preserve=value;}},{key:'urlTree',get:function get(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:attrBoolValue(this.preserve),queryParamsHandling:this.queryParamsHandling,preserveFragment:attrBoolValue(this.preserveFragment)});}}]);return RouterLink;}();RouterLink.decorators=[{type:Directive,args:[{selector:':not(a)[routerLink]'}]}];/** @nocollapse */RouterLink.ctorParameters=function(){return[{type:Router},{type:ActivatedRoute},{type:undefined,decorators:[{type:Attribute,args:['tabindex']}]},{type:RendererV1},{type:ElementRef}];};RouterLink.propDecorators={'queryParams':[{type:Input}],'fragment':[{type:Input}],'queryParamsHandling':[{type:Input}],'preserveFragment':[{type:Input}],'skipLocationChange':[{type:Input}],'replaceUrl':[{type:Input}],'routerLink':[{type:Input}],'preserveQueryParams':[{type:Input}],'onClick':[{type:HostListener,args:['click']}]};/**
 * \@whatItDoes Lets you link to specific parts of your app.
 *
 * See {\@link RouterLink} for more information.
 *
 * \@ngModule RouterModule
 *
 * \@stable
 */var RouterLinkWithHref=function(){/**
     * @param {?} router
     * @param {?} route
     * @param {?} locationStrategy
     */function RouterLinkWithHref(router,route,locationStrategy){var _this34=this;_classCallCheck$4(this,RouterLinkWithHref);this.router=router;this.route=route;this.locationStrategy=locationStrategy;this.commands=[];this.subscription=router.events.subscribe(function(s){if(s instanceof NavigationEnd){_this34.updateTargetUrlAndHref();}});}/**
     * @param {?} commands
     * @return {?}
     */_createClass$4(RouterLinkWithHref,[{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){this.updateTargetUrlAndHref();}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.subscription.unsubscribe();}/**
     * @param {?} button
     * @param {?} ctrlKey
     * @param {?} metaKey
     * @return {?}
     */},{key:'onClick',value:function onClick(button,ctrlKey,metaKey){if(button!==0||ctrlKey||metaKey){return true;}if(typeof this.target==='string'&&this.target!='_self'){return true;}var/** @type {?} */extras={skipLocationChange:attrBoolValue(this.skipLocationChange),replaceUrl:attrBoolValue(this.replaceUrl)};this.router.navigateByUrl(this.urlTree,extras);return false;}/**
     * @return {?}
     */},{key:'updateTargetUrlAndHref',value:function updateTargetUrlAndHref(){this.href=this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));}/**
     * @return {?}
     */},{key:'routerLink',set:function set(commands){if(commands!=null){this.commands=Array.isArray(commands)?commands:[commands];}else{this.commands=[];}}/**
     * @param {?} value
     * @return {?}
     */},{key:'preserveQueryParams',set:function set(value){if(isDevMode()&&console&&console.warn){console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');}this.preserve=value;}},{key:'urlTree',get:function get(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:attrBoolValue(this.preserve),queryParamsHandling:this.queryParamsHandling,preserveFragment:attrBoolValue(this.preserveFragment)});}}]);return RouterLinkWithHref;}();RouterLinkWithHref.decorators=[{type:Directive,args:[{selector:'a[routerLink]'}]}];/** @nocollapse */RouterLinkWithHref.ctorParameters=function(){return[{type:Router},{type:ActivatedRoute},{type:LocationStrategy}];};RouterLinkWithHref.propDecorators={'target':[{type:HostBinding,args:['attr.target']},{type:Input}],'queryParams':[{type:Input}],'fragment':[{type:Input}],'queryParamsHandling':[{type:Input}],'preserveFragment':[{type:Input}],'skipLocationChange':[{type:Input}],'replaceUrl':[{type:Input}],'href':[{type:HostBinding}],'routerLink':[{type:Input}],'preserveQueryParams':[{type:Input}],'onClick':[{type:HostListener,args:['click',['$event.button','$event.ctrlKey','$event.metaKey']]}]};/**
 * @param {?} s
 * @return {?}
 */function attrBoolValue(s){return s===''||!!s;}/**
 * \@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.
 *
 * \@howToUse
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link">Bob</a>
 * ```
 *
 * \@description
 *
 * The RouterLinkActive directive lets you add a CSS class to an element when the link's route
 * becomes active.
 *
 * Consider the following example:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link">Bob</a>
 * ```
 *
 * When the url is either '/user' or '/user/bob', the active-link class will
 * be added to the `a` tag. If the url changes, the class will be removed.
 *
 * You can set more than one class, as follows:
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="class1 class2">Bob</a>
 * <a routerLink="/user/bob" [routerLinkActive]="['class1', 'class2']">Bob</a>
 * ```
 *
 * You can configure RouterLinkActive by passing `exact: true`. This will add the classes
 * only when the url matches the link exactly.
 *
 * ```
 * <a routerLink="/user/bob" routerLinkActive="active-link" [routerLinkActiveOptions]="{exact:
 * true}">Bob</a>
 * ```
 *
 * You can assign the RouterLinkActive instance to a template variable and directly check
 * the `isActive` status.
 * ```
 * <a routerLink="/user/bob" routerLinkActive #rla="routerLinkActive">
 *   Bob {{ rla.isActive ? '(already open)' : ''}}
 * </a>
 * ```
 *
 * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.
 *
 * ```
 * <div routerLinkActive="active-link" [routerLinkActiveOptions]="{exact: true}">
 *   <a routerLink="/user/jim">Jim</a>
 *   <a routerLink="/user/bob">Bob</a>
 * </div>
 * ```
 *
 * This will set the active-link class on the div tag if the url is either '/user/jim' or
 * '/user/bob'.
 *
 * \@ngModule RouterModule
 *
 * \@stable
 */var RouterLinkActive=function(){/**
     * @param {?} router
     * @param {?} element
     * @param {?} renderer
     * @param {?} cdr
     */function RouterLinkActive(router,element,renderer,cdr){var _this35=this;_classCallCheck$4(this,RouterLinkActive);this.router=router;this.element=element;this.renderer=renderer;this.cdr=cdr;this.classes=[];this.active=false;this.routerLinkActiveOptions={exact:false};this.subscription=router.events.subscribe(function(s){if(s instanceof NavigationEnd){_this35.update();}});}/**
     * @return {?}
     */_createClass$4(RouterLinkActive,[{key:'ngAfterContentInit',/**
     * @return {?}
     */value:function ngAfterContentInit(){var _this36=this;this.links.changes.subscribe(function(_){return _this36.update();});this.linksWithHrefs.changes.subscribe(function(_){return _this36.update();});this.update();}/**
     * @param {?} data
     * @return {?}
     */},{key:'ngOnChanges',/**
     * @param {?} changes
     * @return {?}
     */value:function ngOnChanges(changes){this.update();}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.subscription.unsubscribe();}/**
     * @return {?}
     */},{key:'update',value:function update(){var _this37=this;if(!this.links||!this.linksWithHrefs||!this.router.navigated)return;var/** @type {?} */hasActiveLinks=this.hasActiveLinks();// react only when status has changed to prevent unnecessary dom updates
if(this.active!==hasActiveLinks){this.active=hasActiveLinks;this.classes.forEach(function(c){return _this37.renderer.setElementClass(_this37.element.nativeElement,c,hasActiveLinks);});this.cdr.detectChanges();}}/**
     * @param {?} router
     * @return {?}
     */},{key:'isLinkActive',value:function isLinkActive(router){var _this38=this;return function(link){return router.isActive(link.urlTree,_this38.routerLinkActiveOptions.exact);};}/**
     * @return {?}
     */},{key:'hasActiveLinks',value:function hasActiveLinks(){return this.links.some(this.isLinkActive(this.router))||this.linksWithHrefs.some(this.isLinkActive(this.router));}},{key:'isActive',get:function get(){return this.active;}},{key:'routerLinkActive',set:function set(data){var/** @type {?} */classes=Array.isArray(data)?data:data.split(' ');this.classes=classes.filter(function(c){return!!c;});}}]);return RouterLinkActive;}();RouterLinkActive.decorators=[{type:Directive,args:[{selector:'[routerLinkActive]',exportAs:'routerLinkActive'}]}];/** @nocollapse */RouterLinkActive.ctorParameters=function(){return[{type:Router},{type:ElementRef},{type:RendererV1},{type:ChangeDetectorRef}];};RouterLinkActive.propDecorators={'links':[{type:ContentChildren,args:[RouterLink,{descendants:true}]}],'linksWithHrefs':[{type:ContentChildren,args:[RouterLinkWithHref,{descendants:true}]}],'routerLinkActiveOptions':[{type:Input}],'routerLinkActive':[{type:Input}]};/**
 * \@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router
 * state.
 *
 * \@howToUse
 *
 * ```
 * <router-outlet></router-outlet>
 * <router-outlet name='left'></router-outlet>
 * <router-outlet name='right'></router-outlet>
 * ```
 *
 * A router outlet will emit an activate event any time a new component is being instantiated,
 * and a deactivate event when it is being destroyed.
 *
 * ```
 * <router-outlet
 *   (activate)='onActivate($event)'
 *   (deactivate)='onDeactivate($event)'></router-outlet>
 * ```
 * \@ngModule RouterModule
 *
 * \@stable
 */var RouterOutlet=function(){/**
     * @param {?} parentOutletMap
     * @param {?} location
     * @param {?} resolver
     * @param {?} name
     */function RouterOutlet(parentOutletMap,location,resolver,name){_classCallCheck$4(this,RouterOutlet);this.parentOutletMap=parentOutletMap;this.location=location;this.resolver=resolver;this.name=name;this.activateEvents=new EventEmitter$1();this.deactivateEvents=new EventEmitter$1();parentOutletMap.registerOutlet(name?name:PRIMARY_OUTLET,this);}/**
     * @return {?}
     */_createClass$4(RouterOutlet,[{key:'ngOnDestroy',value:function ngOnDestroy(){this.parentOutletMap.removeOutlet(this.name?this.name:PRIMARY_OUTLET);}/**
     * @return {?}
     */},{key:'detach',/**
     * @return {?}
     */value:function detach(){if(!this.activated)throw new Error('Outlet is not activated');this.location.detach();var/** @type {?} */r=this.activated;this.activated=null;this._activatedRoute=null;return r;}/**
     * @param {?} ref
     * @param {?} activatedRoute
     * @return {?}
     */},{key:'attach',value:function attach(ref,activatedRoute){this.activated=ref;this._activatedRoute=activatedRoute;this.location.insert(ref.hostView);}/**
     * @return {?}
     */},{key:'deactivate',value:function deactivate(){if(this.activated){var/** @type {?} */c=this.component;this.activated.destroy();this.activated=null;this._activatedRoute=null;this.deactivateEvents.emit(c);}}/**
     * @param {?} activatedRoute
     * @param {?} resolver
     * @param {?} injector
     * @param {?} providers
     * @param {?} outletMap
     * @return {?}
     */},{key:'activate',value:function activate(activatedRoute,resolver,injector,providers,outletMap){if(this.isActivated){throw new Error('Cannot activate an already activated outlet');}this.outletMap=outletMap;this._activatedRoute=activatedRoute;var/** @type {?} */snapshot=activatedRoute._futureSnapshot;var/** @type {?} */component=snapshot._routeConfig.component;var/** @type {?} */factory=resolver.resolveComponentFactory(component);var/** @type {?} */inj=ReflectiveInjector.fromResolvedProviders(providers,injector);this.activated=this.location.createComponent(factory,this.location.length,inj,[]);this.activated.changeDetectorRef.detectChanges();this.activateEvents.emit(this.activated.instance);}},{key:'locationInjector',get:function get(){return this.location.injector;}/**
     * @return {?}
     */},{key:'locationFactoryResolver',get:function get(){return this.resolver;}/**
     * @return {?}
     */},{key:'isActivated',get:function get(){return!!this.activated;}/**
     * @return {?}
     */},{key:'component',get:function get(){if(!this.activated)throw new Error('Outlet is not activated');return this.activated.instance;}/**
     * @return {?}
     */},{key:'activatedRoute',get:function get(){if(!this.activated)throw new Error('Outlet is not activated');return this._activatedRoute;}}]);return RouterOutlet;}();RouterOutlet.decorators=[{type:Directive,args:[{selector:'router-outlet'}]}];/** @nocollapse */RouterOutlet.ctorParameters=function(){return[{type:RouterOutletMap},{type:ViewContainerRef},{type:ComponentFactoryResolver},{type:undefined,decorators:[{type:Attribute,args:['name']}]}];};RouterOutlet.propDecorators={'activateEvents':[{type:Output,args:['activate']}],'deactivateEvents':[{type:Output,args:['deactivate']}]};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * \@whatItDoes Provides a way to customize when activated routes get reused.
 *
 * \@experimental
 * @abstract
 */var RouteReuseStrategy=function(){function RouteReuseStrategy(){_classCallCheck$4(this,RouteReuseStrategy);}_createClass$4(RouteReuseStrategy,[{key:'shouldDetach',/**
     * Determines if this route (and its subtree) should be detached to be reused later
     * @abstract
     * @param {?} route
     * @return {?}
     */value:function shouldDetach(route){}/**
     * Stores the detached route
     * @abstract
     * @param {?} route
     * @param {?} handle
     * @return {?}
     */},{key:'store',value:function store(route,handle){}/**
     * Determines if this route (and its subtree) should be reattached
     * @abstract
     * @param {?} route
     * @return {?}
     */},{key:'shouldAttach',value:function shouldAttach(route){}/**
     * Retrieves the previously stored route
     * @abstract
     * @param {?} route
     * @return {?}
     */},{key:'retrieve',value:function retrieve(route){}/**
     * Determines if a route should be reused
     * @abstract
     * @param {?} future
     * @param {?} curr
     * @return {?}
     */},{key:'shouldReuseRoute',value:function shouldReuseRoute(future,curr){}}]);return RouteReuseStrategy;}();/**
 * \@whatItDoes Provides a preloading strategy.
 *
 * \@experimental
 * @abstract
 */var PreloadingStrategy=function(){function PreloadingStrategy(){_classCallCheck$4(this,PreloadingStrategy);}_createClass$4(PreloadingStrategy,[{key:'preload',/**
     * @abstract
     * @param {?} route
     * @param {?} fn
     * @return {?}
     */value:function preload(route,fn){}}]);return PreloadingStrategy;}();/**
 * \@whatItDoes Provides a preloading strategy that preloads all modules as quicky as possible.
 *
 * \@howToUse
 *
 * ```
 * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})
 * ```
 *
 * \@experimental
 */var PreloadAllModules=function(){function PreloadAllModules(){_classCallCheck$4(this,PreloadAllModules);}_createClass$4(PreloadAllModules,[{key:'preload',/**
     * @param {?} route
     * @param {?} fn
     * @return {?}
     */value:function preload(route,fn){return _catch$$1.call(fn(),function(){return of$$1(null);});}}]);return PreloadAllModules;}();/**
 * \@whatItDoes Provides a preloading strategy that does not preload any modules.
 *
 * \@description
 *
 * This strategy is enabled by default.
 *
 * \@experimental
 */var NoPreloading=function(){function NoPreloading(){_classCallCheck$4(this,NoPreloading);}_createClass$4(NoPreloading,[{key:'preload',/**
     * @param {?} route
     * @param {?} fn
     * @return {?}
     */value:function preload(route,fn){return of$$1(null);}}]);return NoPreloading;}();/**
 * The preloader optimistically loads all router configurations to
 * make navigations into lazily-loaded sections of the application faster.
 *
 * The preloader runs in the background. When the router bootstraps, the preloader
 * starts listening to all navigation events. After every such event, the preloader
 * will check if any configurations can be loaded lazily.
 *
 * If a route is protected by `canLoad` guards, the preloaded will not load it.
 *
 * \@stable
 */var RouterPreloader=function(){/**
     * @param {?} router
     * @param {?} moduleLoader
     * @param {?} compiler
     * @param {?} injector
     * @param {?} preloadingStrategy
     */function RouterPreloader(router,moduleLoader,compiler,injector,preloadingStrategy){_classCallCheck$4(this,RouterPreloader);this.router=router;this.injector=injector;this.preloadingStrategy=preloadingStrategy;var onStartLoad=function onStartLoad(r){return router.triggerEvent(new RouteConfigLoadStart(r));};var onEndLoad=function onEndLoad(r){return router.triggerEvent(new RouteConfigLoadEnd(r));};this.loader=new RouterConfigLoader(moduleLoader,compiler,onStartLoad,onEndLoad);}_createClass$4(RouterPreloader,[{key:'setUpPreloading',/**
     * @return {?}
     */value:function setUpPreloading(){var _this39=this;var/** @type {?} */navigations=filter$$1.call(this.router.events,function(e){return e instanceof NavigationEnd;});this.subscription=concatMap$$1.call(navigations,function(){return _this39.preload();}).subscribe(function(){});}/**
     * @return {?}
     */},{key:'preload',value:function preload(){return this.processRoutes(this.injector,this.router.config);}/**
     * @return {?}
     */},{key:'ngOnDestroy',value:function ngOnDestroy(){this.subscription.unsubscribe();}/**
     * @param {?} injector
     * @param {?} routes
     * @return {?}
     */},{key:'processRoutes',value:function processRoutes(injector,routes){var/** @type {?} */res=[];var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=routes[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var c=_step10.value;// we already have the config loaded, just recurse
if(c.loadChildren&&!c.canLoad&&c._loadedConfig){var/** @type {?} */childConfig=c._loadedConfig;res.push(this.processRoutes(childConfig.injector,childConfig.routes));}else if(c.loadChildren&&!c.canLoad){res.push(this.preloadConfig(injector,c));}else if(c.children){res.push(this.processRoutes(injector,c.children));}}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}return mergeAll$$1.call(from$$1(res));}/**
     * @param {?} injector
     * @param {?} route
     * @return {?}
     */},{key:'preloadConfig',value:function preloadConfig(injector,route){var _this40=this;return this.preloadingStrategy.preload(route,function(){var/** @type {?} */loaded=_this40.loader.load(injector,route);return mergeMap$$1.call(loaded,function(config){var/** @type {?} */c=route;c._loadedConfig=config;return _this40.processRoutes(config.injector,config.routes);});});}}]);return RouterPreloader;}();RouterPreloader.decorators=[{type:Injectable}];/** @nocollapse */RouterPreloader.ctorParameters=function(){return[{type:Router},{type:NgModuleFactoryLoader},{type:Compiler},{type:Injector},{type:PreloadingStrategy}];};/**
 * @whatItDoes Contains a list of directives
 * @stable
 */var ROUTER_DIRECTIVES=[RouterOutlet,RouterLink,RouterLinkWithHref,RouterLinkActive];/**
 * @whatItDoes Is used in DI to configure the router.
 * @stable
 */var ROUTER_CONFIGURATION=new InjectionToken('ROUTER_CONFIGURATION');/**
 * @docsNotRequired
 */var ROUTER_FORROOT_GUARD=new InjectionToken('ROUTER_FORROOT_GUARD');var ROUTER_PROVIDERS=[Location,{provide:UrlSerializer,useClass:DefaultUrlSerializer},{provide:Router,useFactory:setupRouter,deps:[ApplicationRef,UrlSerializer,RouterOutletMap,Location,Injector,NgModuleFactoryLoader,Compiler,ROUTES,ROUTER_CONFIGURATION,[UrlHandlingStrategy,new Optional()],[RouteReuseStrategy,new Optional()]]},RouterOutletMap,{provide:ActivatedRoute,useFactory:rootRoute,deps:[Router]},{provide:NgModuleFactoryLoader,useClass:SystemJsNgModuleLoader},RouterPreloader,NoPreloading,PreloadAllModules,{provide:ROUTER_CONFIGURATION,useValue:{enableTracing:false}}];/**
 * @return {?}
 */function routerNgProbeToken(){return new NgProbeToken$1('Router',Router);}/**
 * \@whatItDoes Adds router directives and providers.
 *
 * \@howToUse
 *
 * RouterModule can be imported multiple times: once per lazily-loaded bundle.
 * Since the router deals with a global shared resource--location, we cannot have
 * more than one router service active.
 *
 * That is why there are two ways to create the module: `RouterModule.forRoot` and
 * `RouterModule.forChild`.
 *
 * * `forRoot` creates a module that contains all the directives, the given routes, and the router
 *   service itself.
 * * `forChild` creates a module that contains all the directives and the given routes, but does not
 *   include the router service.
 *
 * When registered at the root, the module should be used as follows
 *
 * ```
 * \@NgModule({
 *   imports: [RouterModule.forRoot(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * For submodules and lazy loaded submodules the module should be used as follows:
 *
 * ```
 * \@NgModule({
 *   imports: [RouterModule.forChild(ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * \@description
 *
 * Managing state transitions is one of the hardest parts of building applications. This is
 * especially true on the web, where you also need to ensure that the state is reflected in the URL.
 * In addition, we often want to split applications into multiple bundles and load them on demand.
 * Doing this transparently is not trivial.
 *
 * The Angular router solves these problems. Using the router, you can declaratively specify
 * application states, manage state transitions while taking care of the URL, and load bundles on
 * demand.
 *
 * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an
 * overview of how the router should be used.
 *
 * \@stable
 */var RouterModule=function(){/**
     * @param {?} guard
     */function RouterModule(guard){_classCallCheck$4(this,RouterModule);}/**
     * Creates a module with all the router providers and directives. It also optionally sets up an
     * application listener to perform an initial navigation.
     *
     * Options:
     * * `enableTracing` makes the router log all its internal events to the console.
     * * `useHash` enables the location strategy that uses the URL fragment instead of the history
     * API.
     * * `initialNavigation` disables the initial navigation.
     * * `errorHandler` provides a custom error handler.
     * @param {?} routes
     * @param {?=} config
     * @return {?}
     */_createClass$4(RouterModule,null,[{key:'forRoot',value:function forRoot(routes,config){return{ngModule:RouterModule,providers:[ROUTER_PROVIDERS,provideRoutes(routes),{provide:ROUTER_FORROOT_GUARD,useFactory:provideForRootGuard,deps:[[Router,new Optional(),new SkipSelf()]]},{provide:ROUTER_CONFIGURATION,useValue:config?config:{}},{provide:LocationStrategy,useFactory:provideLocationStrategy,deps:[PlatformLocation,[new Inject(APP_BASE_HREF),new Optional()],ROUTER_CONFIGURATION]},{provide:PreloadingStrategy,useExisting:config&&config.preloadingStrategy?config.preloadingStrategy:NoPreloading},{provide:NgProbeToken$1,multi:true,useFactory:routerNgProbeToken},provideRouterInitializer()]};}/**
     * Creates a module with all the router directives and a provider registering routes.
     * @param {?} routes
     * @return {?}
     */},{key:'forChild',value:function forChild(routes){return{ngModule:RouterModule,providers:[provideRoutes(routes)]};}}]);return RouterModule;}();RouterModule.decorators=[{type:NgModule,args:[{declarations:ROUTER_DIRECTIVES,exports:ROUTER_DIRECTIVES}]}];/** @nocollapse */RouterModule.ctorParameters=function(){return[{type:undefined,decorators:[{type:Optional},{type:Inject,args:[ROUTER_FORROOT_GUARD]}]}];};/**
 * @param {?} platformLocationStrategy
 * @param {?} baseHref
 * @param {?=} options
 * @return {?}
 */function provideLocationStrategy(platformLocationStrategy,baseHref){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};return options.useHash?new HashLocationStrategy(platformLocationStrategy,baseHref):new PathLocationStrategy(platformLocationStrategy,baseHref);}/**
 * @param {?} router
 * @return {?}
 */function provideForRootGuard(router){if(router){throw new Error('RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.');}return'guarded';}/**
 * \@whatItDoes Registers routes.
 *
 * \@howToUse
 *
 * ```
 * \@NgModule({
 *   imports: [RouterModule.forChild(ROUTES)],
 *   providers: [provideRoutes(EXTRA_ROUTES)]
 * })
 * class MyNgModule {}
 * ```
 *
 * \@stable
 * @param {?} routes
 * @return {?}
 */function provideRoutes(routes){return[{provide:ANALYZE_FOR_ENTRY_COMPONENTS,multi:true,useValue:routes},{provide:ROUTES,multi:true,useValue:routes}];}/**
 * @param {?} ref
 * @param {?} urlSerializer
 * @param {?} outletMap
 * @param {?} location
 * @param {?} injector
 * @param {?} loader
 * @param {?} compiler
 * @param {?} config
 * @param {?=} opts
 * @param {?=} urlHandlingStrategy
 * @param {?=} routeReuseStrategy
 * @return {?}
 */function setupRouter(ref,urlSerializer,outletMap,location,injector,loader,compiler,config){var opts=arguments.length>8&&arguments[8]!==undefined?arguments[8]:{};var urlHandlingStrategy=arguments[9];var routeReuseStrategy=arguments[10];var/** @type {?} */router=new Router(null,urlSerializer,outletMap,location,injector,loader,compiler,flatten(config));if(urlHandlingStrategy){router.urlHandlingStrategy=urlHandlingStrategy;}if(routeReuseStrategy){router.routeReuseStrategy=routeReuseStrategy;}if(opts.errorHandler){router.errorHandler=opts.errorHandler;}if(opts.enableTracing){var/** @type {?} */dom=getDOM();router.events.subscribe(function(e){dom.logGroup('Router Event: '+e.constructor.name);dom.log(e.toString());dom.log(e);dom.logGroupEnd();});}return router;}/**
 * @param {?} router
 * @return {?}
 */function rootRoute(router){return router.routerState.root;}/**
 * @param {?} router
 * @param {?} ref
 * @param {?} preloader
 * @param {?} opts
 * @return {?}
 */function initialRouterNavigation(router,ref,preloader,opts){return function(bootstrappedComponentRef){if(bootstrappedComponentRef!==ref.components[0]){return;}router.resetRootComponentType(ref.componentTypes[0]);preloader.setUpPreloading();if(opts.initialNavigation===false){router.setUpLocationChangeListener();}else{router.initialNavigation();}};}/**
 * A token for the router initializer that will be called after the app is bootstrapped.
 *
 * @experimental
 */var ROUTER_INITIALIZER=new InjectionToken('Router Initializer');/**
 * @return {?}
 */function provideRouterInitializer(){return[{provide:ROUTER_INITIALIZER,useFactory:initialRouterNavigation,deps:[Router,ApplicationRef,RouterPreloader,ROUTER_CONFIGURATION]},{provide:APP_BOOTSTRAP_LISTENER,multi:true,useExisting:ROUTER_INITIALIZER}];}/**
 * @stable
 */var VERSION$4=new Version('4.0.0-rc.1');

var DemoPage = (function () {
    function DemoPage(location) {
        this.location = location;
    }
    DemoPage.prototype.getLinkStyle = function (path) {
        return this.location.path().indexOf(path) > -1;
    };
    return DemoPage;
}());
DemoPage.ctorParameters = function () { return [
    { type: Location, },
]; };

var About = (function () {
    function About() {
    }
    return About;
}());
About.ctorParameters = function () { return []; };

var Directory = (function () {
    function Directory(name, directories, files) {
        this.name = name;
        this.directories = directories;
        this.files = files;
        this.expanded = true;
        this.checked = false;
    }
    Directory.prototype.toggle = function () {
        this.expanded = !this.expanded;
    };
    Directory.prototype.getIcon = function () {
        if (this.expanded) {
            return '-';
        }
        return '+';
    };
    Directory.prototype.check = function () {
        this.checked = !this.checked;
        this.checkRecursive(this.checked);
    };
    Directory.prototype.checkRecursive = function (state) {
        this.directories.forEach(function (d) {
            d.checked = state;
            d.checkRecursive(state);
        });
    };
    return Directory;
}());

var TreeViewDemo = (function () {
    function TreeViewDemo() {
        this.loadDirectories();
    }
    TreeViewDemo.prototype.loadDirectories = function () {
        var fall2014 = new Directory('Fall 2014', [], ['image1.jpg', 'image2.jpg', 'image3.jpg']);
        var summer2014 = new Directory('Summer 2014', [], ['image10.jpg', 'image20.jpg', 'image30.jpg']);
        var pics = new Directory('Pictures', [summer2014, fall2014], []);
        var music = new Directory('Music', [], ['song1.mp3', 'song2.mp3']);
        this.directories = [pics, music];
    };
    return TreeViewDemo;
}());
TreeViewDemo.ctorParameters = function () { return []; };

var Contact = (function () {
    function Contact(name, phone) {
        this.name = name;
        this.phone = phone;
        this.descr = this.name + ' ' + this.phone;
    }
    return Contact;
}());

var ContactList = (function () {
    function ContactList() {
        this.contacts = [];
    }
    ContactList.prototype.addContact = function (name, phone) {
        var contact = new Contact(name.value, phone.value);
        this.contacts.push(contact);
        name.value = '';
        phone.value = '';
    };
    ContactList.prototype.removeContact = function (contact) {
        var index = this.contacts.indexOf(contact);
        this.contacts.splice(index, 1);
    };
    return ContactList;
}());
ContactList.ctorParameters = function () { return []; };

var BoundTextbox = (function () {
    function BoundTextbox() {
        this.text = 'hello';
    }
    BoundTextbox.prototype.typing = function ($event) {
        this.text = $event.target.value;
    };
    return BoundTextbox;
}());
BoundTextbox.ctorParameters = function () { return []; };

var Column = (function () {
    function Column(name, descr) {
        this.name = name;
        this.descr = descr;
    }
    return Column;
}());

var GridDemo = (function () {
    function GridDemo() {
        this.people = this.getPeople();
        this.columns = this.getColumns();
    }
    GridDemo.prototype.getPeople = function () {
        return [
            { firstName: 'Joe', lastName: 'Jackson', age: 20 },
            { firstName: 'Peter', lastName: 'Smith', age: 30 },
            { firstName: 'Jane', lastName: 'Doe', age: 50 },
            { firstName: 'Tim', lastName: 'Smith', age: 80 }
        ];
    };
    GridDemo.prototype.getColumns = function () {
        return [
            new Column('firstName', 'First Name'),
            new Column('lastName', 'Last Name'),
            new Column('age', 'Age')
        ];
    };
    return GridDemo;
}());
GridDemo.ctorParameters = function () { return []; };

var IgnoreBindings = (function () {
    function IgnoreBindings() {
    }
    return IgnoreBindings;
}());
IgnoreBindings.ctorParameters = function () { return []; };

var _typeof$4=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _slicedToArray$3=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _createClass$5=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _possibleConstructorReturn$5(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits$5(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}function _toConsumableArray$5(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck$5(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @license Angular v4.0.0-rc.1
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */var BrowserXhr=function(){function BrowserXhr(){_classCallCheck$5(this,BrowserXhr);}/**
     * @return {?}
     */_createClass$5(BrowserXhr,[{key:'build',value:function build(){return new XMLHttpRequest();}}]);return BrowserXhr;}();BrowserXhr.decorators=[{type:Injectable}];/** @nocollapse */BrowserXhr.ctorParameters=function(){return[];};var RequestMethod={};RequestMethod.Get=0;RequestMethod.Post=1;RequestMethod.Put=2;RequestMethod.Delete=3;RequestMethod.Options=4;RequestMethod.Head=5;RequestMethod.Patch=6;RequestMethod[RequestMethod.Get]="Get";RequestMethod[RequestMethod.Post]="Post";RequestMethod[RequestMethod.Put]="Put";RequestMethod[RequestMethod.Delete]="Delete";RequestMethod[RequestMethod.Options]="Options";RequestMethod[RequestMethod.Head]="Head";RequestMethod[RequestMethod.Patch]="Patch";var ReadyState={};ReadyState.Unsent=0;ReadyState.Open=1;ReadyState.HeadersReceived=2;ReadyState.Loading=3;ReadyState.Done=4;ReadyState.Cancelled=5;ReadyState[ReadyState.Unsent]="Unsent";ReadyState[ReadyState.Open]="Open";ReadyState[ReadyState.HeadersReceived]="HeadersReceived";ReadyState[ReadyState.Loading]="Loading";ReadyState[ReadyState.Done]="Done";ReadyState[ReadyState.Cancelled]="Cancelled";var ResponseType={};ResponseType.Basic=0;ResponseType.Cors=1;ResponseType.Default=2;ResponseType.Error=3;ResponseType.Opaque=4;ResponseType[ResponseType.Basic]="Basic";ResponseType[ResponseType.Cors]="Cors";ResponseType[ResponseType.Default]="Default";ResponseType[ResponseType.Error]="Error";ResponseType[ResponseType.Opaque]="Opaque";var ContentType={};ContentType.NONE=0;ContentType.JSON=1;ContentType.FORM=2;ContentType.FORM_DATA=3;ContentType.TEXT=4;ContentType.BLOB=5;ContentType.ARRAY_BUFFER=6;ContentType[ContentType.NONE]="NONE";ContentType[ContentType.JSON]="JSON";ContentType[ContentType.FORM]="FORM";ContentType[ContentType.FORM_DATA]="FORM_DATA";ContentType[ContentType.TEXT]="TEXT";ContentType[ContentType.BLOB]="BLOB";ContentType[ContentType.ARRAY_BUFFER]="ARRAY_BUFFER";var ResponseContentType={};ResponseContentType.Text=0;ResponseContentType.Json=1;ResponseContentType.ArrayBuffer=2;ResponseContentType.Blob=3;ResponseContentType[ResponseContentType.Text]="Text";ResponseContentType[ResponseContentType.Json]="Json";ResponseContentType[ResponseContentType.ArrayBuffer]="ArrayBuffer";ResponseContentType[ResponseContentType.Blob]="Blob";/**
 * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as
 * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).
 *
 * The only known difference between this `Headers` implementation and the spec is the
 * lack of an `entries` method.
 *
 * ### Example
 *
 * ```
 * import {Headers} from '\@angular/http';
 *
 * var firstHeaders = new Headers();
 * firstHeaders.append('Content-Type', 'image/jpeg');
 * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'
 *
 * // Create headers from Plain Old JavaScript Object
 * var secondHeaders = new Headers({
 *   'X-My-Custom-Header': 'Angular'
 * });
 * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'
 *
 * var thirdHeaders = new Headers(secondHeaders);
 * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'
 * ```
 *
 * \@experimental
 */var Headers=function(){/**
     * @param {?=} headers
     */function Headers(headers){var _this=this;_classCallCheck$5(this,Headers);/** @internal header names are lower case */this._headers=new Map();/** @internal map lower case names to actual names */this._normalizedNames=new Map();if(!headers){return;}if(headers instanceof Headers){headers.forEach(function(values,name){values.forEach(function(value){return _this.append(name,value);});});return;}Object.keys(headers).forEach(function(name){var values=Array.isArray(headers[name])?headers[name]:[headers[name]];_this.delete(name);values.forEach(function(value){return _this.append(name,value);});});}/**
     * Returns a new Headers instance from the given DOMString of Response Headers
     * @param {?} headersString
     * @return {?}
     */_createClass$5(Headers,[{key:'append',/**
     * Appends a header to existing list of header values for a given header name.
     * @param {?} name
     * @param {?} value
     * @return {?}
     */value:function append(name,value){var/** @type {?} */values=this.getAll(name);if(values===null){this.set(name,value);}else{values.push(value);}}/**
     * Deletes all header values for the given name.
     * @param {?} name
     * @return {?}
     */},{key:'delete',value:function _delete(name){var/** @type {?} */lcName=name.toLowerCase();this._normalizedNames.delete(lcName);this._headers.delete(lcName);}/**
     * @param {?} fn
     * @return {?}
     */},{key:'forEach',value:function forEach(fn){var _this2=this;this._headers.forEach(function(values,lcName){return fn(values,_this2._normalizedNames.get(lcName),_this2._headers);});}/**
     * Returns first header that matches given name.
     * @param {?} name
     * @return {?}
     */},{key:'get',value:function get(name){var/** @type {?} */values=this.getAll(name);if(values===null){return null;}return values.length>0?values[0]:null;}/**
     * Checks for existence of header by given name.
     * @param {?} name
     * @return {?}
     */},{key:'has',value:function has(name){return this._headers.has(name.toLowerCase());}/**
     * Returns the names of the headers
     * @return {?}
     */},{key:'keys',value:function keys(){return Array.from(this._normalizedNames.values());}/**
     * Sets or overrides header value for given name.
     * @param {?} name
     * @param {?} value
     * @return {?}
     */},{key:'set',value:function set(name,value){if(Array.isArray(value)){if(value.length){this._headers.set(name.toLowerCase(),[value.join(',')]);}}else{this._headers.set(name.toLowerCase(),[value]);}this.mayBeSetNormalizedName(name);}/**
     * Returns values of all headers.
     * @return {?}
     */},{key:'values',value:function values(){return Array.from(this._headers.values());}/**
     * @return {?}
     */},{key:'toJSON',value:function toJSON(){var _this3=this;var/** @type {?} */serialized={};this._headers.forEach(function(values,name){var/** @type {?} */split=[];values.forEach(function(v){return split.push.apply(split,_toConsumableArray$5(v.split(',')));});serialized[_this3._normalizedNames.get(name)]=split;});return serialized;}/**
     * Returns list of header values for a given name.
     * @param {?} name
     * @return {?}
     */},{key:'getAll',value:function getAll(name){return this.has(name)?this._headers.get(name.toLowerCase()):null;}/**
     * This method is not implemented.
     * @return {?}
     */},{key:'entries',value:function entries(){throw new Error('"entries" method is not implemented on Headers class');}/**
     * @param {?} name
     * @return {?}
     */},{key:'mayBeSetNormalizedName',value:function mayBeSetNormalizedName(name){var/** @type {?} */lcName=name.toLowerCase();if(!this._normalizedNames.has(lcName)){this._normalizedNames.set(lcName,name);}}}],[{key:'fromResponseHeaderString',value:function fromResponseHeaderString(headersString){var/** @type {?} */headers=new Headers();headersString.split('\n').forEach(function(line){var/** @type {?} */index=line.indexOf(':');if(index>0){var/** @type {?} */name=line.slice(0,index);var/** @type {?} */value=line.slice(index+1).trim();headers.set(name,value);}});return headers;}}]);return Headers;}();/**
 * Creates a response options object to be optionally provided when instantiating a
 * {\@link Response}.
 *
 * This class is based on the `ResponseInit` description in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#responseinit).
 *
 * All values are null by default. Typical defaults can be found in the
 * {\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.
 *
 * This class may be used in tests to build {\@link Response Responses} for
 * mock responses (see {\@link MockBackend}).
 *
 * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))
 *
 * ```typescript
 * import {ResponseOptions, Response} from '\@angular/http';
 *
 * var options = new ResponseOptions({
 *   body: '{"name":"Jeff"}'
 * });
 * var res = new Response(options);
 *
 * console.log('res.json():', res.json()); // Object {name: "Jeff"}
 * ```
 *
 * \@experimental
 */var ResponseOptions=function(){/**
     * @param {?=} __0
     */function ResponseOptions(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},body=_ref.body,status=_ref.status,headers=_ref.headers,statusText=_ref.statusText,type=_ref.type,url=_ref.url;_classCallCheck$5(this,ResponseOptions);this.body=body!=null?body:null;this.status=status!=null?status:null;this.headers=headers!=null?headers:null;this.statusText=statusText!=null?statusText:null;this.type=type!=null?type:null;this.url=url!=null?url:null;}/**
     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to
     * override
     * existing values. This method will not change the values of the instance on which it is being
     * called.
     *
     * This may be useful when sharing a base `ResponseOptions` object inside tests,
     * where certain properties may change from test to test.
     *
     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))
     *
     * ```typescript
     * import {ResponseOptions, Response} from '\@angular/http';
     *
     * var options = new ResponseOptions({
     *   body: {name: 'Jeff'}
     * });
     * var res = new Response(options.merge({
     *   url: 'https://google.com'
     * }));
     * console.log('options.url:', options.url); // null
     * console.log('res.json():', res.json()); // Object {name: "Jeff"}
     * console.log('res.url:', res.url); // https://google.com
     * ```
     * @param {?=} options
     * @return {?}
     */_createClass$5(ResponseOptions,[{key:'merge',value:function merge(options){return new ResponseOptions({body:options&&options.body!=null?options.body:this.body,status:options&&options.status!=null?options.status:this.status,headers:options&&options.headers!=null?options.headers:this.headers,statusText:options&&options.statusText!=null?options.statusText:this.statusText,type:options&&options.type!=null?options.type:this.type,url:options&&options.url!=null?options.url:this.url});}}]);return ResponseOptions;}();/**
 * Subclass of {\@link ResponseOptions}, with default values.
 *
 * Default values:
 *  * status: 200
 *  * headers: empty {\@link Headers} object
 *
 * This class could be extended and bound to the {\@link ResponseOptions} class
 * when configuring an {\@link Injector}, in order to override the default options
 * used by {\@link Http} to create {\@link Response Responses}.
 *
 * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))
 *
 * ```typescript
 * import {provide} from '\@angular/core';
 * import {bootstrap} from '\@angular/platform-browser/browser';
 * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from
 * '\@angular/http';
 * import {App} from './myapp';
 *
 * class MyOptions extends BaseResponseOptions {
 *   headers:Headers = new Headers({network: 'github'});
 * }
 *
 * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);
 * ```
 *
 * The options could also be extended when manually creating a {\@link Response}
 * object.
 *
 * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))
 *
 * ```
 * import {BaseResponseOptions, Response} from '\@angular/http';
 *
 * var options = new BaseResponseOptions();
 * var res = new Response(options.merge({
 *   body: 'Angular',
 *   headers: new Headers({framework: 'angular'})
 * }));
 * console.log('res.headers.get("framework"):', res.headers.get('framework')); // angular
 * console.log('res.text():', res.text()); // Angular;
 * ```
 *
 * \@experimental
 */var BaseResponseOptions=function(_ResponseOptions){_inherits$5(BaseResponseOptions,_ResponseOptions);function BaseResponseOptions(){_classCallCheck$5(this,BaseResponseOptions);return _possibleConstructorReturn$5(this,(BaseResponseOptions.__proto__||Object.getPrototypeOf(BaseResponseOptions)).call(this,{status:200,statusText:'Ok',type:ResponseType.Default,headers:new Headers()}));}return BaseResponseOptions;}(ResponseOptions);BaseResponseOptions.decorators=[{type:Injectable}];/** @nocollapse */BaseResponseOptions.ctorParameters=function(){return[];};/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *//**
 * Abstract class from which real backends are derived.
 *
 * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given
 * {\@link Request}.
 *
 * \@experimental
 * @abstract
 */var ConnectionBackend=function(){function ConnectionBackend(){_classCallCheck$5(this,ConnectionBackend);}_createClass$5(ConnectionBackend,[{key:'createConnection',/**
     * @abstract
     * @param {?} request
     * @return {?}
     */value:function createConnection(request){}}]);return ConnectionBackend;}();/**
 * Abstract class from which real connections are derived.
 *
 * \@experimental
 * @abstract
 */var XSRFStrategy=function(){function XSRFStrategy(){_classCallCheck$5(this,XSRFStrategy);}_createClass$5(XSRFStrategy,[{key:'configureRequest',/**
     * @abstract
     * @param {?} req
     * @return {?}
     */value:function configureRequest(req){}}]);return XSRFStrategy;}();/**
 * @param {?} method
 * @return {?}
 */function normalizeMethodName(method){if(typeof method!=='string')return method;switch(method.toUpperCase()){case'GET':return RequestMethod.Get;case'POST':return RequestMethod.Post;case'PUT':return RequestMethod.Put;case'DELETE':return RequestMethod.Delete;case'OPTIONS':return RequestMethod.Options;case'HEAD':return RequestMethod.Head;case'PATCH':return RequestMethod.Patch;}throw new Error('Invalid request method. The method "'+method+'" is not supported.');}var isSuccess=function isSuccess(status){return status>=200&&status<300;};/**
 * @param {?} xhr
 * @return {?}
 */function getResponseURL(xhr){if('responseURL'in xhr){return xhr.responseURL;}if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){return xhr.getResponseHeader('X-Request-URL');}return;}/**
 * @param {?} input
 * @return {?}
 */function stringToArrayBuffer(input){var/** @type {?} */view=new Uint16Array(input.length);for(var/** @type {?} */i=0,/** @type {?} */strLen=input.length;i<strLen;i++){view[i]=input.charCodeAt(i);}return view.buffer;}/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 * @param {?=} rawParams
 * @return {?}
 */function paramParser(){var rawParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var/** @type {?} */map=new Map();if(rawParams.length>0){var/** @type {?} */params=rawParams.split('&');params.forEach(function(param){var/** @type {?} */eqIdx=param.indexOf('=');var _ref2=eqIdx==-1?[param,'']:[param.slice(0,eqIdx),param.slice(eqIdx+1)],_ref3=_slicedToArray$3(_ref2,2),key=_ref3[0],val=_ref3[1];var/** @type {?} */list=map.get(key)||[];list.push(val);map.set(key,list);});}return map;}/**
 * \@experimental
 *
 */var QueryEncoder=function(){function QueryEncoder(){_classCallCheck$5(this,QueryEncoder);}_createClass$5(QueryEncoder,[{key:'encodeKey',/**
     * @param {?} k
     * @return {?}
     */value:function encodeKey(k){return standardEncoding(k);}/**
     * @param {?} v
     * @return {?}
     */},{key:'encodeValue',value:function encodeValue(v){return standardEncoding(v);}}]);return QueryEncoder;}();/**
 * @param {?} v
 * @return {?}
 */function standardEncoding(v){return encodeURIComponent(v).replace(/%40/gi,'@').replace(/%3A/gi,':').replace(/%24/gi,'$').replace(/%2C/gi,',').replace(/%3B/gi,';').replace(/%2B/gi,'+').replace(/%3D/gi,'=').replace(/%3F/gi,'?').replace(/%2F/gi,'/');}/**
 * Map-like representation of url search parameters, based on
 * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,
 * with several extensions for merging URLSearchParams objects:
 *   - setAll()
 *   - appendAll()
 *   - replaceAll()
 *
 * This class accepts an optional second parameter of ${\@link QueryEncoder},
 * which is used to serialize parameters before making a request. By default,
 * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,
 * and then un-encodes certain characters that are allowed to be part of the query
 * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.
 *
 * These are the characters that are not encoded: `! $ \' ( ) * + , ; A 9 - . _ ~ ? /`
 *
 * If the set of allowed query characters is not acceptable for a particular backend,
 * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.
 *
 * ```
 * import {URLSearchParams, QueryEncoder} from '\@angular/http';
 * class MyQueryEncoder extends QueryEncoder {
 *   encodeKey(k: string): string {
 *     return myEncodingFunction(k);
 *   }
 *
 *   encodeValue(v: string): string {
 *     return myEncodingFunction(v);
 *   }
 * }
 *
 * let params = new URLSearchParams('', new MyQueryEncoder());
 * ```
 * \@experimental
 */var URLSearchParams=function(){/**
     * @param {?=} rawParams
     * @param {?=} queryEncoder
     */function URLSearchParams(){var rawParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var queryEncoder=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new QueryEncoder();_classCallCheck$5(this,URLSearchParams);this.rawParams=rawParams;this.queryEncoder=queryEncoder;this.paramsMap=paramParser(rawParams);}/**
     * @return {?}
     */_createClass$5(URLSearchParams,[{key:'clone',value:function clone(){var/** @type {?} */clone=new URLSearchParams('',this.queryEncoder);clone.appendAll(this);return clone;}/**
     * @param {?} param
     * @return {?}
     */},{key:'has',value:function has(param){return this.paramsMap.has(param);}/**
     * @param {?} param
     * @return {?}
     */},{key:'get',value:function get(param){var/** @type {?} */storedParam=this.paramsMap.get(param);return Array.isArray(storedParam)?storedParam[0]:null;}/**
     * @param {?} param
     * @return {?}
     */},{key:'getAll',value:function getAll(param){return this.paramsMap.get(param)||[];}/**
     * @param {?} param
     * @param {?} val
     * @return {?}
     */},{key:'set',value:function set(param,val){if(val===void 0||val===null){this.delete(param);return;}var/** @type {?} */list=this.paramsMap.get(param)||[];list.length=0;list.push(val);this.paramsMap.set(param,list);}/**
     * @param {?} searchParams
     * @return {?}
     */},{key:'setAll',value:function setAll(searchParams){var _this5=this;searchParams.paramsMap.forEach(function(value,param){var/** @type {?} */list=_this5.paramsMap.get(param)||[];list.length=0;list.push(value[0]);_this5.paramsMap.set(param,list);});}/**
     * @param {?} param
     * @param {?} val
     * @return {?}
     */},{key:'append',value:function append(param,val){if(val===void 0||val===null)return;var/** @type {?} */list=this.paramsMap.get(param)||[];list.push(val);this.paramsMap.set(param,list);}/**
     * @param {?} searchParams
     * @return {?}
     */},{key:'appendAll',value:function appendAll(searchParams){var _this6=this;searchParams.paramsMap.forEach(function(value,param){var/** @type {?} */list=_this6.paramsMap.get(param)||[];for(var/** @type {?} */i=0;i<value.length;++i){list.push(value[i]);}_this6.paramsMap.set(param,list);});}/**
     * @param {?} searchParams
     * @return {?}
     */},{key:'replaceAll',value:function replaceAll(searchParams){var _this7=this;searchParams.paramsMap.forEach(function(value,param){var/** @type {?} */list=_this7.paramsMap.get(param)||[];list.length=0;for(var/** @type {?} */i=0;i<value.length;++i){list.push(value[i]);}_this7.paramsMap.set(param,list);});}/**
     * @return {?}
     */},{key:'toString',value:function toString(){var _this8=this;var/** @type {?} */paramsList=[];this.paramsMap.forEach(function(values,k){values.forEach(function(v){return paramsList.push(_this8.queryEncoder.encodeKey(k)+'='+_this8.queryEncoder.encodeValue(v));});});return paramsList.join('&');}/**
     * @param {?} param
     * @return {?}
     */},{key:'delete',value:function _delete(param){this.paramsMap.delete(param);}}]);return URLSearchParams;}();/**
 * HTTP request body used by both {\@link Request} and {\@link Response}
 * https://fetch.spec.whatwg.org/#body
 * @abstract
 */var Body=function(){function Body(){_classCallCheck$5(this,Body);}_createClass$5(Body,[{key:'json',/**
     * Attempts to return body as parsed `JSON` object, or raises an exception.
     * @return {?}
     */value:function json(){if(typeof this._body==='string'){return JSON.parse(/** @type {?} */this._body);}if(this._body instanceof ArrayBuffer){return JSON.parse(this.text());}return this._body;}/**
     * Returns the body as a string, presuming `toString()` can be called on the response body.
     * @return {?}
     */},{key:'text',value:function text(){if(this._body instanceof URLSearchParams){return this._body.toString();}if(this._body instanceof ArrayBuffer){return String.fromCharCode.apply(null,new Uint16Array(/** @type {?} */this._body));}if(this._body==null){return'';}if(_typeof$4(this._body)==='object'){return JSON.stringify(this._body,null,2);}return this._body.toString();}/**
     * Return the body as an ArrayBuffer
     * @return {?}
     */},{key:'arrayBuffer',value:function arrayBuffer(){if(this._body instanceof ArrayBuffer){return this._body;}return stringToArrayBuffer(this.text());}/**
     * Returns the request's body as a Blob, assuming that body exists.
     * @return {?}
     */},{key:'blob',value:function blob(){if(this._body instanceof Blob){return this._body;}if(this._body instanceof ArrayBuffer){return new Blob([this._body]);}throw new Error('The request body isn\'t either a blob or an array buffer');}}]);return Body;}();/**
 * Creates `Response` instances from provided values.
 *
 * Though this object isn't
 * usually instantiated by end-users, it is the primary object interacted with when it comes time to
 * add data to a view.
 *
 * ### Example
 *
 * ```
 * http.request('my-friends.txt').subscribe(response => this.friends = response.text());
 * ```
 *
 * The Response's interface is inspired by the Response constructor defined in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body
 * can be accessed many times. There are other differences in the implementation, but this is the
 * most significant.
 *
 * \@experimental
 */var Response=function(_Body){_inherits$5(Response,_Body);/**
     * @param {?} responseOptions
     */function Response(responseOptions){_classCallCheck$5(this,Response);var _this9=_possibleConstructorReturn$5(this,(Response.__proto__||Object.getPrototypeOf(Response)).call(this));_this9._body=responseOptions.body;_this9.status=responseOptions.status;_this9.ok=_this9.status>=200&&_this9.status<=299;_this9.statusText=responseOptions.statusText;_this9.headers=responseOptions.headers;_this9.type=responseOptions.type;_this9.url=responseOptions.url;return _this9;}/**
     * @return {?}
     */_createClass$5(Response,[{key:'toString',value:function toString(){return'Response with status: '+this.status+' '+this.statusText+' for URL: '+this.url;}}]);return Response;}(Body);var _nextRequestId=0;var JSONP_HOME='__ng_jsonp__';var _jsonpConnections=null;/**
 * @return {?}
 */function _getJsonpConnections(){var/** @type {?} */w=(typeof window==='undefined'?'undefined':_typeof$4(window))=='object'?window:{};if(_jsonpConnections===null){_jsonpConnections=w[JSONP_HOME]={};}return _jsonpConnections;}var BrowserJsonp=function(){function BrowserJsonp(){_classCallCheck$5(this,BrowserJsonp);}_createClass$5(BrowserJsonp,[{key:'build',/**
     * @param {?} url
     * @return {?}
     */value:function build(url){var/** @type {?} */node=document.createElement('script');node.src=url;return node;}/**
     * @return {?}
     */},{key:'nextRequestID',value:function nextRequestID(){return'__req'+_nextRequestId++;}/**
     * @param {?} id
     * @return {?}
     */},{key:'requestCallback',value:function requestCallback(id){return JSONP_HOME+'.'+id+'.finished';}/**
     * @param {?} id
     * @param {?} connection
     * @return {?}
     */},{key:'exposeConnection',value:function exposeConnection(id,connection){var/** @type {?} */connections=_getJsonpConnections();connections[id]=connection;}/**
     * @param {?} id
     * @return {?}
     */},{key:'removeConnection',value:function removeConnection(id){var/** @type {?} */connections=_getJsonpConnections();connections[id]=null;}/**
     * @param {?} node
     * @return {?}
     */},{key:'send',value:function send(node){document.body.appendChild(/** @type {?} */node);}/**
     * @param {?} node
     * @return {?}
     */},{key:'cleanup',value:function cleanup(node){if(node.parentNode){node.parentNode.removeChild(/** @type {?} */node);}}}]);return BrowserJsonp;}();BrowserJsonp.decorators=[{type:Injectable}];/** @nocollapse */BrowserJsonp.ctorParameters=function(){return[];};var JSONP_ERR_NO_CALLBACK='JSONP injected script did not invoke callback.';var JSONP_ERR_WRONG_METHOD='JSONP requests must use GET request method.';/**
 * Abstract base class for an in-flight JSONP request.
 *
 * \@experimental
 * @abstract
 */var JSONPConnection=function(){function JSONPConnection(){_classCallCheck$5(this,JSONPConnection);}_createClass$5(JSONPConnection,[{key:'finished',/**
     * Callback called when the JSONP request completes, to notify the application
     * of the new data.
     * @abstract
     * @param {?=} data
     * @return {?}
     */value:function finished(data){}}]);return JSONPConnection;}();var JSONPConnection_=function(_JSONPConnection){_inherits$5(JSONPConnection_,_JSONPConnection);/**
     * @param {?} req
     * @param {?} _dom
     * @param {?=} baseResponseOptions
     */function JSONPConnection_(req,_dom,baseResponseOptions){_classCallCheck$5(this,JSONPConnection_);var _this10=_possibleConstructorReturn$5(this,(JSONPConnection_.__proto__||Object.getPrototypeOf(JSONPConnection_)).call(this));_this10._dom=_dom;_this10.baseResponseOptions=baseResponseOptions;_this10._finished=false;if(req.method!==RequestMethod.Get){throw new TypeError(JSONP_ERR_WRONG_METHOD);}_this10.request=req;_this10.response=new Observable$$1(function(responseObserver){_this10.readyState=ReadyState.Loading;var id=_this10._id=_dom.nextRequestID();_dom.exposeConnection(id,_this10);// Workaround Dart
// url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);
var callback=_dom.requestCallback(_this10._id);var url=req.url;if(url.indexOf('=JSONP_CALLBACK&')>-1){url=url.replace('=JSONP_CALLBACK&','='+callback+'&');}else if(url.lastIndexOf('=JSONP_CALLBACK')===url.length-'=JSONP_CALLBACK'.length){url=url.substring(0,url.length-'=JSONP_CALLBACK'.length)+('='+callback);}var script=_this10._script=_dom.build(url);var onLoad=function onLoad(event){if(_this10.readyState===ReadyState.Cancelled)return;_this10.readyState=ReadyState.Done;_dom.cleanup(script);if(!_this10._finished){var _responseOptions=new ResponseOptions({body:JSONP_ERR_NO_CALLBACK,type:ResponseType.Error,url:url});if(baseResponseOptions){_responseOptions=baseResponseOptions.merge(_responseOptions);}responseObserver.error(new Response(_responseOptions));return;}var responseOptions=new ResponseOptions({body:_this10._responseData,url:url});if(_this10.baseResponseOptions){responseOptions=_this10.baseResponseOptions.merge(responseOptions);}responseObserver.next(new Response(responseOptions));responseObserver.complete();};var onError=function onError(error){if(_this10.readyState===ReadyState.Cancelled)return;_this10.readyState=ReadyState.Done;_dom.cleanup(script);var responseOptions=new ResponseOptions({body:error.message,type:ResponseType.Error});if(baseResponseOptions){responseOptions=baseResponseOptions.merge(responseOptions);}responseObserver.error(new Response(responseOptions));};script.addEventListener('load',onLoad);script.addEventListener('error',onError);_dom.send(script);return function(){_this10.readyState=ReadyState.Cancelled;script.removeEventListener('load',onLoad);script.removeEventListener('error',onError);_this10._dom.cleanup(script);};});return _this10;}/**
     * @param {?=} data
     * @return {?}
     */_createClass$5(JSONPConnection_,[{key:'finished',value:function finished(data){// Don't leak connections
this._finished=true;this._dom.removeConnection(this._id);if(this.readyState===ReadyState.Cancelled)return;this._responseData=data;}}]);return JSONPConnection_;}(JSONPConnection);/**
 * A {\@link ConnectionBackend} that uses the JSONP strategy of making requests.
 *
 * \@experimental
 * @abstract
 */var JSONPBackend=function(_ConnectionBackend){_inherits$5(JSONPBackend,_ConnectionBackend);function JSONPBackend(){_classCallCheck$5(this,JSONPBackend);return _possibleConstructorReturn$5(this,(JSONPBackend.__proto__||Object.getPrototypeOf(JSONPBackend)).apply(this,arguments));}return JSONPBackend;}(ConnectionBackend);var JSONPBackend_=function(_JSONPBackend){_inherits$5(JSONPBackend_,_JSONPBackend);/**
     * @param {?} _browserJSONP
     * @param {?} _baseResponseOptions
     */function JSONPBackend_(_browserJSONP,_baseResponseOptions){_classCallCheck$5(this,JSONPBackend_);var _this12=_possibleConstructorReturn$5(this,(JSONPBackend_.__proto__||Object.getPrototypeOf(JSONPBackend_)).call(this));_this12._browserJSONP=_browserJSONP;_this12._baseResponseOptions=_baseResponseOptions;return _this12;}/**
     * @param {?} request
     * @return {?}
     */_createClass$5(JSONPBackend_,[{key:'createConnection',value:function createConnection(request){return new JSONPConnection_(request,this._browserJSONP,this._baseResponseOptions);}}]);return JSONPBackend_;}(JSONPBackend);JSONPBackend_.decorators=[{type:Injectable}];/** @nocollapse */JSONPBackend_.ctorParameters=function(){return[{type:BrowserJsonp},{type:ResponseOptions}];};var XSSI_PREFIX=/^\)\]\}',?\n/;/**
 * Creates connections using `XMLHttpRequest`. Given a fully-qualified
 * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the
 * request.
 *
 * This class would typically not be created or interacted with directly inside applications, though
 * the {\@link MockConnection} may be interacted with in tests.
 *
 * \@experimental
 */var XHRConnection=function(){/**
     * @param {?} req
     * @param {?} browserXHR
     * @param {?=} baseResponseOptions
     */function XHRConnection(req,browserXHR,baseResponseOptions){var _this13=this;_classCallCheck$5(this,XHRConnection);this.request=req;this.response=new Observable$$1(function(responseObserver){var _xhr=browserXHR.build();_xhr.open(RequestMethod[req.method].toUpperCase(),req.url);if(req.withCredentials!=null){_xhr.withCredentials=req.withCredentials;}// load event handler
var onLoad=function onLoad(){// normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
var status=_xhr.status===1223?204:_xhr.status;var body=null;// HTTP 204 means no content
if(status!==204){// responseText is the old-school way of retrieving response (supported by IE8 & 9)
// response/responseType properties were introduced in ResourceLoader Level2 spec
// (supported by IE10)
body=typeof _xhr.response==='undefined'?_xhr.responseText:_xhr.response;// Implicitly strip a potential XSSI prefix.
if(typeof body==='string'){body=body.replace(XSSI_PREFIX,'');}}// fix status code when it is 0 (0 status is undocumented).
// Occurs when accessing file resources or on Android 4.1 stock browser
// while retrieving files from application cache.
if(status===0){status=body?200:0;}var headers=Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());// IE 9 does not provide the way to get URL of response
var url=getResponseURL(_xhr)||req.url;var statusText=_xhr.statusText||'OK';var responseOptions=new ResponseOptions({body:body,status:status,headers:headers,statusText:statusText,url:url});if(baseResponseOptions!=null){responseOptions=baseResponseOptions.merge(responseOptions);}var response=new Response(responseOptions);response.ok=isSuccess(status);if(response.ok){responseObserver.next(response);// TODO(gdi2290): defer complete if array buffer until done
responseObserver.complete();return;}responseObserver.error(response);};// error event handler
var onError=function onError(err){var responseOptions=new ResponseOptions({body:err,type:ResponseType.Error,status:_xhr.status,statusText:_xhr.statusText});if(baseResponseOptions!=null){responseOptions=baseResponseOptions.merge(responseOptions);}responseObserver.error(new Response(responseOptions));};_this13.setDetectedContentType(req,_xhr);if(req.headers==null){req.headers=new Headers();}if(!req.headers.has('Accept')){req.headers.append('Accept','application/json, text/plain, */*');}req.headers.forEach(function(values,name){return _xhr.setRequestHeader(name,values.join(','));});// Select the correct buffer type to store the response
if(req.responseType!=null&&_xhr.responseType!=null){switch(req.responseType){case ResponseContentType.ArrayBuffer:_xhr.responseType='arraybuffer';break;case ResponseContentType.Json:_xhr.responseType='json';break;case ResponseContentType.Text:_xhr.responseType='text';break;case ResponseContentType.Blob:_xhr.responseType='blob';break;default:throw new Error('The selected responseType is not supported');}}_xhr.addEventListener('load',onLoad);_xhr.addEventListener('error',onError);_xhr.send(_this13.request.getBody());return function(){_xhr.removeEventListener('load',onLoad);_xhr.removeEventListener('error',onError);_xhr.abort();};});}/**
     * @param {?} req
     * @param {?} _xhr
     * @return {?}
     */_createClass$5(XHRConnection,[{key:'setDetectedContentType',value:function setDetectedContentType(req/** TODO Request */,_xhr/** XMLHttpRequest */){// Skip if a custom Content-Type header is provided
if(req.headers!=null&&req.headers.get('Content-Type')!=null){return;}// Set the detected content type
switch(req.contentType){case ContentType.NONE:break;case ContentType.JSON:_xhr.setRequestHeader('content-type','application/json');break;case ContentType.FORM:_xhr.setRequestHeader('content-type','application/x-www-form-urlencoded;charset=UTF-8');break;case ContentType.TEXT:_xhr.setRequestHeader('content-type','text/plain');break;case ContentType.BLOB:var/** @type {?} */blob=req.blob();if(blob.type){_xhr.setRequestHeader('content-type',blob.type);}break;}}}]);return XHRConnection;}();/**
 * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application
 * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)
 * for more information on XSRF.
 *
 * Applications can configure custom cookie and header names by binding an instance of this class
 * with different `cookieName` and `headerName` values. See the main HTTP documentation for more
 * details.
 *
 * \@experimental
 */var CookieXSRFStrategy=function(){/**
     * @param {?=} _cookieName
     * @param {?=} _headerName
     */function CookieXSRFStrategy(){var _cookieName=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'XSRF-TOKEN';var _headerName=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'X-XSRF-TOKEN';_classCallCheck$5(this,CookieXSRFStrategy);this._cookieName=_cookieName;this._headerName=_headerName;}/**
     * @param {?} req
     * @return {?}
     */_createClass$5(CookieXSRFStrategy,[{key:'configureRequest',value:function configureRequest(req){var/** @type {?} */xsrfToken=getDOM().getCookie(this._cookieName);if(xsrfToken){req.headers.set(this._headerName,xsrfToken);}}}]);return CookieXSRFStrategy;}();/**
 * Creates {\@link XHRConnection} instances.
 *
 * This class would typically not be used by end users, but could be
 * overridden if a different backend implementation should be used,
 * such as in a node backend.
 *
 * ### Example
 *
 * ```
 * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\@angular/http';
 * \@Component({
 *   viewProviders: [
 *     HTTP_PROVIDERS,
 *     {provide: Http, useFactory: (backend, options) => {
 *       return new Http(backend, options);
 *     }, deps: [MyNodeBackend, BaseRequestOptions]}]
 * })
 * class MyComponent {
 *   constructor(http:Http) {
 *     http.request('people.json').subscribe(res => this.people = res.json());
 *   }
 * }
 * ```
 * \@experimental
 */var XHRBackend=function(){/**
     * @param {?} _browserXHR
     * @param {?} _baseResponseOptions
     * @param {?} _xsrfStrategy
     */function XHRBackend(_browserXHR,_baseResponseOptions,_xsrfStrategy){_classCallCheck$5(this,XHRBackend);this._browserXHR=_browserXHR;this._baseResponseOptions=_baseResponseOptions;this._xsrfStrategy=_xsrfStrategy;}/**
     * @param {?} request
     * @return {?}
     */_createClass$5(XHRBackend,[{key:'createConnection',value:function createConnection(request){this._xsrfStrategy.configureRequest(request);return new XHRConnection(request,this._browserXHR,this._baseResponseOptions);}}]);return XHRBackend;}();XHRBackend.decorators=[{type:Injectable}];/** @nocollapse */XHRBackend.ctorParameters=function(){return[{type:BrowserXhr},{type:ResponseOptions},{type:XSRFStrategy}];};/**
 * Creates a request options object to be optionally provided when instantiating a
 * {\@link Request}.
 *
 * This class is based on the `RequestInit` description in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#requestinit).
 *
 * All values are null by default. Typical defaults can be found in the {\@link BaseRequestOptions}
 * class, which sub-classes `RequestOptions`.
 *
 * ### Example ([live demo](http://plnkr.co/edit/7Wvi3lfLq41aQPKlxB4O?p=preview))
 *
 * ```typescript
 * import {RequestOptions, Request, RequestMethod} from '\@angular/http';
 *
 * var options = new RequestOptions({
 *   method: RequestMethod.Post,
 *   url: 'https://google.com'
 * });
 * var req = new Request(options);
 * console.log('req.method:', RequestMethod[req.method]); // Post
 * console.log('options.url:', options.url); // https://google.com
 * ```
 *
 * \@experimental
 */var RequestOptions=function(){_createClass$5(RequestOptions,[{key:'search',/**
     * @deprecated from 4.0.0. Use params instead.
     * @return {?}
     */get:function get(){return this.params;}/**
     * @deprecated from 4.0.0. Use params instead.
     * @param {?} params
     * @return {?}
     */,set:function set(params){this.params=params;}/**
     * @param {?=} __0
     */}]);function RequestOptions(){var _ref4=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},method=_ref4.method,headers=_ref4.headers,body=_ref4.body,url=_ref4.url,search=_ref4.search,params=_ref4.params,withCredentials=_ref4.withCredentials,responseType=_ref4.responseType;_classCallCheck$5(this,RequestOptions);this.method=method!=null?normalizeMethodName(method):null;this.headers=headers!=null?headers:null;this.body=body!=null?body:null;this.url=url!=null?url:null;this.params=this._mergeSearchParams(params||search);this.withCredentials=withCredentials!=null?withCredentials:null;this.responseType=responseType!=null?responseType:null;}/**
     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override
     * existing values. This method will not change the values of the instance on which it is being
     * called.
     *
     * Note that `headers` and `search` will override existing values completely if present in
     * the `options` object. If these values should be merged, it should be done prior to calling
     * `merge` on the `RequestOptions` instance.
     *
     * ### Example ([live demo](http://plnkr.co/edit/6w8XA8YTkDRcPYpdB9dk?p=preview))
     *
     * ```typescript
     * import {RequestOptions, Request, RequestMethod} from '\@angular/http';
     *
     * var options = new RequestOptions({
     *   method: RequestMethod.Post
     * });
     * var req = new Request(options.merge({
     *   url: 'https://google.com'
     * }));
     * console.log('req.method:', RequestMethod[req.method]); // Post
     * console.log('options.url:', options.url); // null
     * console.log('req.url:', req.url); // https://google.com
     * ```
     * @param {?=} options
     * @return {?}
     */_createClass$5(RequestOptions,[{key:'merge',value:function merge(options){return new RequestOptions({method:options&&options.method!=null?options.method:this.method,headers:options&&options.headers!=null?options.headers:new Headers(this.headers),body:options&&options.body!=null?options.body:this.body,url:options&&options.url!=null?options.url:this.url,params:options&&this._mergeSearchParams(options.params||options.search),withCredentials:options&&options.withCredentials!=null?options.withCredentials:this.withCredentials,responseType:options&&options.responseType!=null?options.responseType:this.responseType});}/**
     * @param {?} params
     * @return {?}
     */},{key:'_mergeSearchParams',value:function _mergeSearchParams(params){if(!params)return this.params;if(params instanceof URLSearchParams){return params.clone();}if(typeof params==='string'){return new URLSearchParams(params);}return this._parseParams(params);}/**
     * @param {?=} objParams
     * @return {?}
     */},{key:'_parseParams',value:function _parseParams(){var _this14=this;var objParams=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var/** @type {?} */params=new URLSearchParams();Object.keys(objParams).forEach(function(key){var/** @type {?} */value=objParams[key];if(Array.isArray(value)){value.forEach(function(item){return _this14._appendParam(key,item,params);});}else{_this14._appendParam(key,value,params);}});return params;}/**
     * @param {?} key
     * @param {?} value
     * @param {?} params
     * @return {?}
     */},{key:'_appendParam',value:function _appendParam(key,value,params){if(typeof value!=='string'){value=JSON.stringify(value);}params.append(key,value);}}]);return RequestOptions;}();/**
 * Subclass of {\@link RequestOptions}, with default values.
 *
 * Default values:
 *  * method: {\@link RequestMethod RequestMethod.Get}
 *  * headers: empty {\@link Headers} object
 *
 * This class could be extended and bound to the {\@link RequestOptions} class
 * when configuring an {\@link Injector}, in order to override the default options
 * used by {\@link Http} to create and send {\@link Request Requests}.
 *
 * ### Example ([live demo](http://plnkr.co/edit/LEKVSx?p=preview))
 *
 * ```typescript
 * import {provide} from '\@angular/core';
 * import {bootstrap} from '\@angular/platform-browser/browser';
 * import {HTTP_PROVIDERS, Http, BaseRequestOptions, RequestOptions} from '\@angular/http';
 * import {App} from './myapp';
 *
 * class MyOptions extends BaseRequestOptions {
 *   search: string = 'coreTeam=true';
 * }
 *
 * bootstrap(App, [HTTP_PROVIDERS, {provide: RequestOptions, useClass: MyOptions}]);
 * ```
 *
 * The options could also be extended when manually creating a {\@link Request}
 * object.
 *
 * ### Example ([live demo](http://plnkr.co/edit/oyBoEvNtDhOSfi9YxaVb?p=preview))
 *
 * ```
 * import {BaseRequestOptions, Request, RequestMethod} from '\@angular/http';
 *
 * var options = new BaseRequestOptions();
 * var req = new Request(options.merge({
 *   method: RequestMethod.Post,
 *   url: 'https://google.com'
 * }));
 * console.log('req.method:', RequestMethod[req.method]); // Post
 * console.log('options.url:', options.url); // null
 * console.log('req.url:', req.url); // https://google.com
 * ```
 *
 * \@experimental
 */var BaseRequestOptions=function(_RequestOptions){_inherits$5(BaseRequestOptions,_RequestOptions);function BaseRequestOptions(){_classCallCheck$5(this,BaseRequestOptions);return _possibleConstructorReturn$5(this,(BaseRequestOptions.__proto__||Object.getPrototypeOf(BaseRequestOptions)).call(this,{method:RequestMethod.Get,headers:new Headers()}));}return BaseRequestOptions;}(RequestOptions);BaseRequestOptions.decorators=[{type:Injectable}];/** @nocollapse */BaseRequestOptions.ctorParameters=function(){return[];};/**
 * Creates `Request` instances from provided values.
 *
 * The Request's interface is inspired by the Request constructor defined in the [Fetch
 * Spec](https://fetch.spec.whatwg.org/#request-class),
 * but is considered a static value whose body can be accessed many times. There are other
 * differences in the implementation, but this is the most significant.
 *
 * `Request` instances are typically created by higher-level classes, like {\@link Http} and
 * {\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.
 * One such example is when creating services that wrap higher-level services, like {\@link Http},
 * where it may be useful to generate a `Request` with arbitrary headers and search params.
 *
 * ```typescript
 * import {Injectable, Injector} from '\@angular/core';
 * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\@angular/http';
 *
 * \@Injectable()
 * class AutoAuthenticator {
 *   constructor(public http:Http) {}
 *   request(url:string) {
 *     return this.http.request(new Request({
 *       method: RequestMethod.Get,
 *       url: url,
 *       search: 'password=123'
 *     }));
 *   }
 * }
 *
 * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);
 * var authenticator = injector.get(AutoAuthenticator);
 * authenticator.request('people.json').subscribe(res => {
 *   //URL should have included '?password=123'
 *   console.log('people', res.json());
 * });
 * ```
 *
 * \@experimental
 */var Request=function(_Body2){_inherits$5(Request,_Body2);/**
     * @param {?} requestOptions
     */function Request(requestOptions){_classCallCheck$5(this,Request);// TODO: assert that url is present
var _this16=_possibleConstructorReturn$5(this,(Request.__proto__||Object.getPrototypeOf(Request)).call(this));var url=requestOptions.url;_this16.url=requestOptions.url;if(requestOptions.params){var params=requestOptions.params.toString();if(params.length>0){var prefix='?';if(_this16.url.indexOf('?')!=-1){prefix=_this16.url[_this16.url.length-1]=='&'?'':'&';}// TODO: just delete search-query-looking string in url?
_this16.url=url+prefix+params;}}_this16._body=requestOptions.body;_this16.method=normalizeMethodName(requestOptions.method);// TODO(jeffbcross): implement behavior
// Defaults to 'omit', consistent with browser
_this16.headers=new Headers(requestOptions.headers);_this16.contentType=_this16.detectContentType();_this16.withCredentials=requestOptions.withCredentials;_this16.responseType=requestOptions.responseType;return _this16;}/**
     * Returns the content type enum based on header options.
     * @return {?}
     */_createClass$5(Request,[{key:'detectContentType',value:function detectContentType(){switch(this.headers.get('content-type')){case'application/json':return ContentType.JSON;case'application/x-www-form-urlencoded':return ContentType.FORM;case'multipart/form-data':return ContentType.FORM_DATA;case'text/plain':case'text/html':return ContentType.TEXT;case'application/octet-stream':return this._body instanceof ArrayBuffer$1?ContentType.ARRAY_BUFFER:ContentType.BLOB;default:return this.detectContentTypeFromBody();}}/**
     * Returns the content type of request's body based on its type.
     * @return {?}
     */},{key:'detectContentTypeFromBody',value:function detectContentTypeFromBody(){if(this._body==null){return ContentType.NONE;}else if(this._body instanceof URLSearchParams){return ContentType.FORM;}else if(this._body instanceof FormData){return ContentType.FORM_DATA;}else if(this._body instanceof Blob$1){return ContentType.BLOB;}else if(this._body instanceof ArrayBuffer$1){return ContentType.ARRAY_BUFFER;}else if(this._body&&_typeof$4(this._body)==='object'){return ContentType.JSON;}else{return ContentType.TEXT;}}/**
     * Returns the request's body according to its type. If body is undefined, return
     * null.
     * @return {?}
     */},{key:'getBody',value:function getBody(){switch(this.contentType){case ContentType.JSON:return this.text();case ContentType.FORM:return this.text();case ContentType.FORM_DATA:return this._body;case ContentType.TEXT:return this.text();case ContentType.BLOB:return this.blob();case ContentType.ARRAY_BUFFER:return this.arrayBuffer();default:return null;}}}]);return Request;}(Body);var noop$1=function noop(){};var w=(typeof window==='undefined'?'undefined':_typeof$4(window))=='object'?window:noop$1;var FormData=w[/** TODO #9100 */'FormData']||noop$1;var Blob$1=w[/** TODO #9100 */'Blob']||noop$1;var ArrayBuffer$1=w[/** TODO #9100 */'ArrayBuffer']||noop$1;/**
 * @param {?} backend
 * @param {?} request
 * @return {?}
 */function httpRequest(backend,request){return backend.createConnection(request).response;}/**
 * @param {?} defaultOpts
 * @param {?} providedOpts
 * @param {?} method
 * @param {?} url
 * @return {?}
 */function mergeOptions(defaultOpts,providedOpts,method,url){var/** @type {?} */newOptions=defaultOpts;if(providedOpts){// Hack so Dart can used named parameters
return newOptions.merge(new RequestOptions({method:providedOpts.method||method,url:providedOpts.url||url,search:providedOpts.search,params:providedOpts.params,headers:providedOpts.headers,body:providedOpts.body,withCredentials:providedOpts.withCredentials,responseType:providedOpts.responseType}));}return newOptions.merge(new RequestOptions({method:method,url:url}));}/**
 * Performs http requests using `XMLHttpRequest` as the default backend.
 *
 * `Http` is available as an injectable class, with methods to perform http requests. Calling
 * `request` returns an `Observable` which will emit a single {\@link Response} when a
 * response is received.
 *
 * ### Example
 *
 * ```typescript
 * import {Http, HTTP_PROVIDERS} from '\@angular/http';
 * import 'rxjs/add/operator/map'
 * \@Component({
 *   selector: 'http-app',
 *   viewProviders: [HTTP_PROVIDERS],
 *   templateUrl: 'people.html'
 * })
 * class PeopleComponent {
 *   constructor(http: Http) {
 *     http.get('people.json')
 *       // Call map on the response observable to get the parsed people object
 *       .map(res => res.json())
 *       // Subscribe to the observable to get the parsed people object and attach it to the
 *       // component
 *       .subscribe(people => this.people = people);
 *   }
 * }
 * ```
 *
 *
 * ### Example
 *
 * ```
 * http.get('people.json').subscribe((res:Response) => this.people = res.json());
 * ```
 *
 * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a "Backend" (
 * {\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing
 * the {\@link XHRBackend} provider, as in the following example:
 *
 * ### Example
 *
 * ```typescript
 * import {BaseRequestOptions, Http} from '\@angular/http';
 * import {MockBackend} from '\@angular/http/testing';
 * var injector = Injector.resolveAndCreate([
 *   BaseRequestOptions,
 *   MockBackend,
 *   {provide: Http, useFactory:
 *       function(backend, defaultOptions) {
 *         return new Http(backend, defaultOptions);
 *       },
 *       deps: [MockBackend, BaseRequestOptions]}
 * ]);
 * var http = injector.get(Http);
 * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));
 * ```
 *
 * \@experimental
 */var Http=function(){/**
     * @param {?} _backend
     * @param {?} _defaultOptions
     */function Http(_backend,_defaultOptions){_classCallCheck$5(this,Http);this._backend=_backend;this._defaultOptions=_defaultOptions;}/**
     * Performs any type of http request. First argument is required, and can either be a url or
     * a {\@link Request} instance. If the first argument is a url, an optional {\@link RequestOptions}
     * object can be provided as the 2nd argument. The options object will be merged with the values
     * of {\@link BaseRequestOptions} before performing the request.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */_createClass$5(Http,[{key:'request',value:function request(url,options){var/** @type {?} */responseObservable=void 0;if(typeof url==='string'){responseObservable=httpRequest(this._backend,new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Get,/** @type {?} */url)));}else if(url instanceof Request){responseObservable=httpRequest(this._backend,url);}else{throw new Error('First argument must be a url string or Request instance.');}return responseObservable;}/**
     * Performs a request with `get` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'get',value:function get(url,options){return this.request(new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Get,url)));}/**
     * Performs a request with `post` http method.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */},{key:'post',value:function post(url,body,options){return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({body:body})),options,RequestMethod.Post,url)));}/**
     * Performs a request with `put` http method.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */},{key:'put',value:function put(url,body,options){return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({body:body})),options,RequestMethod.Put,url)));}/**
     * Performs a request with `delete` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'delete',value:function _delete(url,options){return this.request(new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Delete,url)));}/**
     * Performs a request with `patch` http method.
     * @param {?} url
     * @param {?} body
     * @param {?=} options
     * @return {?}
     */},{key:'patch',value:function patch(url,body,options){return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({body:body})),options,RequestMethod.Patch,url)));}/**
     * Performs a request with `head` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'head',value:function head(url,options){return this.request(new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Head,url)));}/**
     * Performs a request with `options` http method.
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */},{key:'options',value:function options(url,_options){return this.request(new Request(mergeOptions(this._defaultOptions,_options,RequestMethod.Options,url)));}}]);return Http;}();Http.decorators=[{type:Injectable}];/** @nocollapse */Http.ctorParameters=function(){return[{type:ConnectionBackend},{type:RequestOptions}];};/**
 * \@experimental
 */var Jsonp=function(_Http){_inherits$5(Jsonp,_Http);/**
     * @param {?} backend
     * @param {?} defaultOptions
     */function Jsonp(backend,defaultOptions){_classCallCheck$5(this,Jsonp);return _possibleConstructorReturn$5(this,(Jsonp.__proto__||Object.getPrototypeOf(Jsonp)).call(this,backend,defaultOptions));}/**
     * Performs any type of http request. First argument is required, and can either be a url or
     * a {\@link Request} instance. If the first argument is a url, an optional {\@link RequestOptions}
     * object can be provided as the 2nd argument. The options object will be merged with the values
     * of {\@link BaseRequestOptions} before performing the request.
     *
     * \@security Regular XHR is the safest alternative to JSONP for most applications, and is
     * supported by all current browsers. Because JSONP creates a `<script>` element with
     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted
     * source could expose your application to XSS risks. Data exposed by JSONP may also be
     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for
     * future security issues (e.g. content sniffing).  For more detail, see the
     * [Security Guide](http://g.co/ng/security).
     * @param {?} url
     * @param {?=} options
     * @return {?}
     */_createClass$5(Jsonp,[{key:'request',value:function request(url,options){var/** @type {?} */responseObservable=void 0;if(typeof url==='string'){url=new Request(mergeOptions(this._defaultOptions,options,RequestMethod.Get,/** @type {?} */url));}if(url instanceof Request){if(url.method!==RequestMethod.Get){throw new Error('JSONP requests must use GET request method.');}responseObservable=httpRequest(this._backend,url);}else{throw new Error('First argument must be a url string or Request instance.');}return responseObservable;}}]);return Jsonp;}(Http);Jsonp.decorators=[{type:Injectable}];/** @nocollapse */Jsonp.ctorParameters=function(){return[{type:ConnectionBackend},{type:RequestOptions}];};/**
 * @return {?}
 */function _createDefaultCookieXSRFStrategy(){return new CookieXSRFStrategy();}/**
 * @param {?} xhrBackend
 * @param {?} requestOptions
 * @return {?}
 */function httpFactory(xhrBackend,requestOptions){return new Http(xhrBackend,requestOptions);}/**
 * @param {?} jsonpBackend
 * @param {?} requestOptions
 * @return {?}
 */function jsonpFactory(jsonpBackend,requestOptions){return new Jsonp(jsonpBackend,requestOptions);}/**
 * The module that includes http's providers
 *
 * \@experimental
 */var HttpModule=function HttpModule(){_classCallCheck$5(this,HttpModule);};HttpModule.decorators=[{type:NgModule,args:[{providers:[// TODO(pascal): use factory type annotations once supported in DI
// issue: https://github.com/angular/angular/issues/3183
{provide:Http,useFactory:httpFactory,deps:[XHRBackend,RequestOptions]},BrowserXhr,{provide:RequestOptions,useClass:BaseRequestOptions},{provide:ResponseOptions,useClass:BaseResponseOptions},XHRBackend,{provide:XSRFStrategy,useFactory:_createDefaultCookieXSRFStrategy}]}]}];/** @nocollapse */HttpModule.ctorParameters=function(){return[];};/**
 * The module that includes jsonp's providers
 *
 * \@experimental
 */var JsonpModule=function JsonpModule(){_classCallCheck$5(this,JsonpModule);};JsonpModule.decorators=[{type:NgModule,args:[{providers:[// TODO(pascal): use factory type annotations once supported in DI
// issue: https://github.com/angular/angular/issues/3183
{provide:Jsonp,useFactory:jsonpFactory,deps:[JSONPBackend,RequestOptions]},BrowserJsonp,{provide:RequestOptions,useClass:BaseRequestOptions},{provide:ResponseOptions,useClass:BaseResponseOptions},{provide:JSONPBackend,useClass:JSONPBackend_}]}]}];/** @nocollapse */JsonpModule.ctorParameters=function(){return[];};/**
 * @stable
 */var VERSION$5=new Version('4.0.0-rc.1');

var switchMap$2 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = OuterSubscriber;
var subscribeToResult_1 = subscribeToResult;
/* tslint:disable:max-line-length */
/**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): Observable} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */
function switchMap(project, resultSelector) {
    return this.lift(new SwitchMapOperator(project, resultSelector));
}
exports.switchMap = switchMap;
var SwitchMapOperator = (function () {
    function SwitchMapOperator(project, resultSelector) {
        this.project = project;
        this.resultSelector = resultSelector;
    }
    SwitchMapOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));
    };
    return SwitchMapOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var SwitchMapSubscriber = (function (_super) {
    __extends(SwitchMapSubscriber, _super);
    function SwitchMapSubscriber(destination, project, resultSelector) {
        _super.call(this, destination);
        this.project = project;
        this.resultSelector = resultSelector;
        this.index = 0;
    }
    SwitchMapSubscriber.prototype._next = function (value) {
        var result;
        var index = this.index++;
        try {
            result = this.project(value, index);
        }
        catch (error) {
            this.destination.error(error);
            return;
        }
        this._innerSub(result, value, index);
    };
    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
            innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));
    };
    SwitchMapSubscriber.prototype._complete = function () {
        var innerSubscription = this.innerSubscription;
        if (!innerSubscription || innerSubscription.closed) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype._unsubscribe = function () {
        this.innerSubscription = null;
    };
    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
        this.remove(innerSub);
        this.innerSubscription = null;
        if (this.isStopped) {
            _super.prototype._complete.call(this);
        }
    };
    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        if (this.resultSelector) {
            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);
        }
        else {
            this.destination.next(innerValue);
        }
    };
    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
        var result;
        try {
            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);
        }
        catch (err) {
            this.destination.error(err);
            return;
        }
        this.destination.next(result);
    };
    return SwitchMapSubscriber;
}(OuterSubscriber_1.OuterSubscriber));

});

var switchMap = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var switchMap_1 = switchMap$2;
Observable_1.Observable.prototype.switchMap = switchMap_1.switchMap;

});

var toPromise$2 = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var toPromise_1 = toPromise;
Observable_1.Observable.prototype.toPromise = toPromise_1.toPromise;

});

var HttpSample = (function () {
    function HttpSample(http) {
        this.postResponse = new Person();
        this.country = new Subject$$1();
        this.http = http;
        this.loadFriendsSuccessFully();
        this.loadFriendsWithError();
        this.loadContractByCustomer();
        this.loadFriendsAndCustomers();
        this.loadFriendsAsPromise();
        this.getCapitol();
    }
    HttpSample.prototype.getCapitol = function () {
        var _this = this;
        this.country.switchMap(function (country) { return _this.http.get('./country-info/' + country + '.json'); })
            .map(function (res) { return res.json(); })
            .subscribe(function (res) { return _this.capitol = res.capitol; });
    };
    HttpSample.prototype.isActive = function (country) {
        return this.activeCountry === country;
    };
    HttpSample.prototype.loadFriendsAsPromise = function () {
        var _this = this;
        this.friendsAsPromise = {};
        this.http.get('./friends.json').toPromise()
            .then(function (res) {
            _this.friendsAsPromise.friends = res.json().friends;
        });
    };
    HttpSample.prototype.loadFriendsAndCustomers = function () {
        var _this = this;
        this.combined = { friends: [], customer: {} };
        Observable$$1.forkJoin(this.http.get('./friends.json').map(function (res) { return res.json(); }), this.http.get('./customer.json').map(function (res) { return res.json(); })).subscribe(function (res) { return _this.combined = { friends: res[0].friends, customer: res[1] }; });
    };
    HttpSample.prototype.loadFriendsSuccessFully = function () {
        var _this = this;
        this.result = { friends: [] };
        this.http.get('./friends.json').map(function (res) { return res.json(); }).subscribe(function (res) { return _this.result = res; });
    };
    HttpSample.prototype.loadContractByCustomer = function () {
        var _this = this;
        this.http.get('./customer.json').map(function (res) {
            _this.customer = res.json();
            return _this.customer;
        })
            .flatMap(function (customer) { return _this.http.get(customer.contractUrl); }).map(function (res) { return res.json(); })
            .subscribe(function (res) { return _this.contract = res; });
    };
    HttpSample.prototype.loadFriendsWithError = function () {
        var _this = this;
        this.result = { friends: [] };
        this.http.get('./friends2.json').map(function (res) { return res.json(); }).subscribe(function (res) { return _this.result = res; }, function (error) { return _this.error = error; });
    };
    HttpSample.prototype.postData = function () {
        var _this = this;
        var headers = new Headers();
        headers.append('Content-Type', 'application/json');
        this.http.post('http://www.syntaxsuccess.com/poc-post/', { firstName: 'Joe', lastName: 'Smith' }, { headers: headers })
            .map(function (res) { return res.json(); })
            .subscribe(function (res) { return _this.postResponse = res; });
    };
    return HttpSample;
}());
HttpSample.ctorParameters = function () { return [
    { type: Http, },
]; };
var Person = (function () {
    function Person() {
    }
    return Person;
}());

var KeyMap = (function () {
    function KeyMap() {
    }
    KeyMap.getNavigationDirection = function (keyCode) {
        var direction = new KeyDirection();
        if (keyCode === 38) {
            direction.up = true;
        }
        if (keyCode === 40) {
            direction.down = true;
        }
        if (keyCode === 39) {
            direction.right = true;
        }
        if (keyCode === 9) {
            direction.tab = true;
        }
        if (keyCode === 37) {
            direction.left = true;
        }
        return direction;
    };
    return KeyMap;
}());
var KeyDirection = (function () {
    function KeyDirection() {
    }
    return KeyDirection;
}());

var Column$1 = (function () {
    function Column(columnIndex, rowIndex) {
        this.columnIndex = columnIndex;
        this.rowIndex = rowIndex;
        this.cellValue = '';
    }
    return Column;
}());

var Row = (function () {
    function Row(rowIndex, columnCount) {
        this.rowIndex = rowIndex;
        this.columnCount = columnCount;
        this.columns = [];
        for (var j = 0; j < this.columnCount; j++) {
            this.columns.push(new Column$1(j, this.rowIndex));
        }
    }
    return Row;
}());

var SpreadsheetModel = (function () {
    function SpreadsheetModel(rowCount, columnCount) {
        this.rowCount = rowCount;
        this.columnCount = columnCount;
        this.rows = [];
        this.start = 0;
        this.end = rowCount;
        for (var i = 0; i < this.rowCount; i++) {
            this.rows.push(new Row(i, this.columnCount));
        }
        this.current = this.rows[0].columns[0];
    }
    SpreadsheetModel.prototype.selectColumn = function (col) {
        this.current = col;
    };
    SpreadsheetModel.prototype.navigate = function (keyCode) {
        var navDirection = KeyMap.getNavigationDirection(keyCode);
        if (navDirection.down) {
            this.ensureRow();
            this.current = this.rows[this.current.rowIndex + 1].columns[this.current.columnIndex];
            this.adjustRowRangeDownward();
        }
        if (navDirection.up) {
            if (this.current.rowIndex === 0) {
                return;
            }
            this.current = this.rows[this.current.rowIndex - 1].columns[this.current.columnIndex];
            this.adjustRowRangeUpward();
        }
        if (navDirection.left) {
            if (this.current.columnIndex === 0) {
                return;
            }
            this.current = this.rows[this.current.rowIndex].columns[this.current.columnIndex - 1];
        }
        if (navDirection.right) {
            if (this.current.columnIndex === this.columnCount - 1) {
                return;
            }
            this.current = this.rows[this.current.rowIndex].columns[this.current.columnIndex + 1];
        }
        if (navDirection.tab) {
            if (this.current.columnIndex === this.columnCount - 1) {
                this.ensureRow();
                this.current = this.rows[this.current.rowIndex + 1].columns[0];
                this.adjustRowRangeDownward();
            }
            else {
                this.current = this.rows[this.current.rowIndex].columns[this.current.columnIndex + 1];
            }
        }
    };
    SpreadsheetModel.prototype.adjustRowRangeUpward = function () {
        if (this.current.rowIndex < this.start) {
            this.shiftRowsBy(-1);
        }
    };
    SpreadsheetModel.prototype.adjustRowRangeDownward = function () {
        if (this.current.rowIndex === this.end) {
            this.shiftRowsBy(1);
        }
    };
    SpreadsheetModel.prototype.shiftRowsBy = function (offset) {
        this.start = this.start + offset;
        this.end = this.end + offset;
    };
    SpreadsheetModel.prototype.ensureRow = function () {
        if (this.current.rowIndex + 1 >= this.rows.length) {
            this.rows.push(new Row(this.current.rowIndex + 1, this.columnCount));
        }
    };
    return SpreadsheetModel;
}());

var HeaderRowService = (function () {
    function HeaderRowService() {
    }
    HeaderRowService.createHeader = function (length) {
        var alpha = 'abcdefghijklmnopqrstuvwxyz';
        var headerLength = 1;
        var header = [];
        var prefix = '';
        var pass = 0;
        var charCounter = 0;
        for (var i = 0; i < length; i++) {
            if (charCounter === alpha.length) {
                prefix += alpha.substr(pass, 1);
                charCounter = 0;
            }
            header.push(prefix + alpha.substr(charCounter, headerLength));
            charCounter++;
        }
        return header;
    };
    return HeaderRowService;
}());

var Spreadsheet = (function () {
    function Spreadsheet() {
        this.header = [];
        this.visibleRows = [];
        this.model = new SpreadsheetModel(10, 4);
        this.header = HeaderRowService.createHeader(this.model.rows[0].columns.length);
        this.visibleRows = this.getVisibleRows();
    }
    Spreadsheet.prototype.getHeader = function () {
        return HeaderRowService.createHeader(this.model.rows[0].columns.length);
    };
    Spreadsheet.prototype.navigate = function ($event) {
        this.model.navigate($event.keyCode);
        this.visibleRows = this.getVisibleRows();
    };
    Spreadsheet.prototype.ngAfterViewChecked = function () {
        var cell = document.getElementById(this.model.current.rowIndex + '-' + this.model.current.columnIndex);
        cell.focus();
    };
    Spreadsheet.prototype.getVisibleRows = function () {
        var _this = this;
        return this.model.rows.filter(function (row) { return row.rowIndex >= _this.model.start && row.rowIndex < _this.model.end; });
    };
    Spreadsheet.prototype.getActive = function (col) {
        if (col === this.model.current) {
            return 'active-cell';
        }
    };
    return Spreadsheet;
}());
Spreadsheet.ctorParameters = function () { return []; };
Spreadsheet.propDecorators = {
    'rows': [{ type: Input },],
    'columns': [{ type: Input },],
};

var Algorithms = (function () {
    function Algorithms() {
    }
    return Algorithms;
}());
Algorithms.ctorParameters = function () { return []; };

var CountryViewModelFactory = (function () {
    function CountryViewModelFactory() {
    }
    CountryViewModelFactory.prototype.createModel = function () {
        var countries = [];
        var america = new CountryModel('North America');
        america.visible = true;
        var usa = new CountryModel('USA');
        usa.children.push(new CountryModel('New York'));
        usa.children.push(new CountryModel('Texas'));
        usa.children.push(new CountryModel('Oregon'));
        usa.children.push(new CountryModel('South Dakota'));
        america.children.push(usa);
        america.children.push(new CountryModel('Canada'));
        america.children.push(new CountryModel('Mexico'));
        var europe = new CountryModel('Europe');
        europe.children.push(new CountryModel('Norway'));
        europe.children.push(new CountryModel('Sweden'));
        europe.children.push(new CountryModel('France'));
        europe.children.push(new CountryModel('Germany'));
        europe.visible = true;
        countries.push(america);
        countries.push(europe);
        return countries;
    };
    return CountryViewModelFactory;
}());
var CountryModel = (function () {
    function CountryModel(text) {
        this.visible = true;
        this.children = [];
        this.text = text;
        this.icon = this.getIcon();
    }
    CountryModel.prototype.getIcon = function () {
        if (this.children.length > 0) {
            if (this.children[0].visible === false) {
                return '+ ';
            }
            return '- ';
        }
        return null;
    };
    return CountryModel;
}());

var React = __React;
var AppDispatcher = new Dispatcher();
AppDispatcher.handleViewAction = function (action) {
    this.dispatch({
        source: 'VIEW_ACTION',
        action: action
    });
};
AppDispatcher.register(function (payload) {
    switch (payload.eventName) {
        case 'expand-collapse':
            NodeStore.toggleNode(payload.node);
            break;
    }
    return true;
});
var NodeStore = _.extend({}, EventEmitter.prototype, {
    _nodes: new CountryViewModelFactory().createModel(),
    getNodes: function () {
        return this._nodes;
    },
    toggleNode: function (node) {
        for (var i = 0; i < node.children.length; i++) {
            node.children[i].visible = !node.children[i].visible;
        }
        this.emit('change');
    },
    addChangeListener: function (callback) {
        this.on('change', callback);
    },
    removeChangeListener: function (callback) {
        this.removeListener('change', callback);
    }
});
var TreeNode$1 = React.createClass({
    toggle: function (e) {
        AppDispatcher.dispatch({
            eventName: 'expand-collapse',
            node: this.props.node
        });
    },
    render: function () {
        var nodes = this.props.children.map(function (n) {
            if (n.visible) {
                return React.createElement(TreeNode$1, { node: n, children: n.children });
            }
        });
        return (React.createElement("li", null,
            React.createElement("span", { onClick: this.toggle }, this.props.node.getIcon()),
            React.createElement("span", null, this.props.node.text),
            React.createElement("ul", null, nodes)));
    }
});
var TreeView = React.createClass({
    getInitialState: function () {
        return { countries: NodeStore.getNodes() };
    },
    onChange: function () {
        this.setState({ countries: NodeStore.getNodes() });
    },
    componentDidMount: function () {
        NodeStore.addChangeListener(this.onChange);
    },
    componentWillUnmount: function () {
        NodeStore.removeChangeListener(this.onChange);
    },
    render: function () {
        var countries = this.state.countries;
        var nodes = countries.map(function (n) {
            return React.createElement(TreeNode$1, { node: n, children: n.children });
        });
        return (React.createElement("div", null,
            React.createElement("h2", null, this.props.title),
            React.createElement("ul", null, nodes)));
    }
});
var ReactTreeView = (function () {
    function ReactTreeView() {
    }
    ReactTreeView.initialize = function (title) {
        React.render(React.createElement(TreeView, { title: title }), document.getElementById('react-tree-view'));
    };
    return ReactTreeView;
}());

var Angular2Host = (function () {
    function Angular2Host() {
    }
    Angular2Host.prototype.ngOnInit = function () {
        ReactTreeView.initialize('Locations');
    };
    return Angular2Host;
}());
Angular2Host.ctorParameters = function () { return []; };

var JqueryIntegration = (function () {
    function JqueryIntegration(elementRef) {
        this.elementRef = elementRef;
    }
    JqueryIntegration.prototype.ngOnInit = function () {
        jQuery(this.elementRef.nativeElement).find('.moving-box').draggable({ containment: '#draggable-parent' });
    };
    return JqueryIntegration;
}());
JqueryIntegration.ctorParameters = function () { return [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] },] },
]; };

var InputControls = (function () {
    function InputControls() {
        this.javascript = false;
        this.angular = false;
        this.csharp = false;
        this.name = 'Two way bound';
    }
    return InputControls;
}());
InputControls.ctorParameters = function () { return []; };

var AddressBookService = (function () {
    function AddressBookService(http) {
        console.log('Creating AddressBookService');
        this.http = http;
    }
    AddressBookService.prototype.getEntries = function () {
        return this.http.get('./people.json').map(function (res) { return res.json(); });
    };
    return AddressBookService;
}());
AddressBookService.ctorParameters = function () { return [
    { type: Http, },
]; };

var AddressBookTitleService = (function () {
    function AddressBookTitleService() {
        this.callCount = 0;
        console.log('AddressBookTitleService');
    }
    AddressBookTitleService.prototype.getTitle = function () {
        this.callCount++;
        return "My Address Book";
    };
    return AddressBookTitleService;
}());

var AddressBook = (function () {
    function AddressBook(addressBookService, addressBookTitleService) {
        var _this = this;
        console.log('Creating AddressBook');
        this.result = { people: [] };
        addressBookService.getEntries().subscribe(function (res) { return _this.result = res; });
        this.title = addressBookTitleService.getTitle();
        console.log(addressBookTitleService.callCount);
    }
    return AddressBook;
}());
AddressBook.ctorParameters = function () { return [
    { type: AddressBookService, },
    { type: AddressBookTitleService, },
]; };

function zipValidator(zip) {
    var valid = /^\d{5}$/.test(zip.value);
    if (valid) {
        return null;
    }
    return { "invalidZip": true };
}
var AddressForm = (function () {
    function AddressForm() {
        this.payLoad = null;
        var group$$1 = {};
        group$$1.firstName = new FormControl('', Validators.required);
        group$$1.streetAddress = new FormControl('', Validators.required);
        group$$1.zip = new FormControl('', zipValidator);
        group$$1.type = new FormControl('home');
        this.form = new FormGroup(group$$1);
    }
    AddressForm.prototype.onSubmit = function () {
        this.payLoad = JSON.stringify(this.form.value);
    };
    return AddressForm;
}());
AddressForm.ctorParameters = function () { return []; };

var bufferCount$2 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */
function bufferCount(bufferSize, startBufferEvery) {
    if (startBufferEvery === void 0) { startBufferEvery = null; }
    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));
}
exports.bufferCount = bufferCount;
var BufferCountOperator = (function () {
    function BufferCountOperator(bufferSize, startBufferEvery) {
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
    }
    BufferCountOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));
    };
    return BufferCountOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var BufferCountSubscriber = (function (_super) {
    __extends(BufferCountSubscriber, _super);
    function BufferCountSubscriber(destination, bufferSize, startBufferEvery) {
        _super.call(this, destination);
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        this.buffers = [];
        this.count = 0;
    }
    BufferCountSubscriber.prototype._next = function (value) {
        var count = this.count++;
        var _a = this, destination = _a.destination, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers;
        var startOn = (startBufferEvery == null) ? bufferSize : startBufferEvery;
        if (count % startOn === 0) {
            buffers.push([]);
        }
        for (var i = buffers.length; i--;) {
            var buffer = buffers[i];
            buffer.push(value);
            if (buffer.length === bufferSize) {
                buffers.splice(i, 1);
                destination.next(buffer);
            }
        }
    };
    BufferCountSubscriber.prototype._complete = function () {
        var destination = this.destination;
        var buffers = this.buffers;
        while (buffers.length > 0) {
            var buffer = buffers.shift();
            if (buffer.length > 0) {
                destination.next(buffer);
            }
        }
        _super.prototype._complete.call(this);
    };
    return BufferCountSubscriber;
}(Subscriber_1.Subscriber));

});

var bufferCount = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var bufferCount_1 = bufferCount$2;
Observable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;

});

var __extends$1 = (undefined && undefined.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var EdgeService = (function (_super) {
    __extends$1(EdgeService, _super);
    function EdgeService() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EdgeService.prototype.getCoordinates = function () {
        return this.asObservable().bufferCount(2).map(function (buffer) { return { first: buffer[0], second: buffer[1] }; });
    };
    return EdgeService;
}(Subject$$1));

var Edge = (function () {
    function Edge() {
        this.style = {};
    }
    Edge.prototype.setCoordinates = function (first, second) {
        this.x1 = first.x;
        this.y1 = first.y;
        this.x2 = second.x;
        this.y2 = second.y;
        this.drawLine(this.x1, this.y1, this.x2, this.y2);
    };
    Edge.prototype.drawLine = function (x1, y1, x2, y2) {
        var length = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
        var angle = Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;
        var transform = 'rotate(' + angle + 'deg)';
        this.style = {
            'position': 'absolute',
            'transform': transform,
            'width': length
        };
    };
    return Edge;
}());
Edge.ctorParameters = function () { return []; };

var Graph = (function () {
    function Graph(componentResolver, edgeService) {
        this.componentResolver = componentResolver;
        this.edgeService = edgeService;
    }
    Graph.prototype.ngOnInit = function () {
        var _this = this;
        this.edgeService.getCoordinates().subscribe(function (coordinates) {
            var factory = _this.componentResolver.resolveComponentFactory(Edge);
            var res = coordinates.first.viewContainer.createComponent(factory);
            res.instance.setCoordinates(coordinates.first, coordinates.second);
        });
    };
    return Graph;
}());
Graph.ctorParameters = function () { return [
    { type: ComponentFactoryResolver, },
    { type: EdgeService, },
]; };

var __extends$2 = (undefined && undefined.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var CustomerEventEmitter = (function (_super) {
    __extends$2(CustomerEventEmitter, _super);
    function CustomerEventEmitter() {
        return _super.call(this) || this;
    }
    CustomerEventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };
    return CustomerEventEmitter;
}(Subject$$1));

var PubSubService = (function () {
    function PubSubService() {
        this.Stream = new CustomerEventEmitter();
    }
    return PubSubService;
}());

var PubSub = (function () {
    function PubSub() {
    }
    return PubSub;
}());
PubSub.ctorParameters = function () { return []; };

var FromEventObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = Observable;
var tryCatch_1 = tryCatch;
var isFunction_1 = isFunction;
var errorObject_1 = errorObject;
var Subscription_1 = Subscription;
var toString = Object.prototype.toString;
function isNodeStyleEventEmmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
}
function isJQueryStyleEventEmitter(sourceObj) {
    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
}
function isNodeList(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';
}
function isHTMLCollection(sourceObj) {
    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';
}
function isEventTarget(sourceObj) {
    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
}
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var FromEventObservable = (function (_super) {
    __extends(FromEventObservable, _super);
    function FromEventObservable(sourceObj, eventName, selector, options) {
        _super.call(this);
        this.sourceObj = sourceObj;
        this.eventName = eventName;
        this.selector = selector;
        this.options = options;
    }
    /* tslint:enable:max-line-length */
    /**
     * Creates an Observable that emits events of a specific type coming from the
     * given event target.
     *
     * <span class="informal">Creates an Observable from DOM events, or Node
     * EventEmitter events or others.</span>
     *
     * <img src="./img/fromEvent.png" width="100%">
     *
     * Creates an Observable by attaching an event listener to an "event target",
     * which may be an object with `addEventListener` and `removeEventListener`,
     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the
     * DOM, or an HTMLCollection from the DOM. The event handler is attached when
     * the output Observable is subscribed, and removed when the Subscription is
     * unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * var clicks = Rx.Observable.fromEvent(document, 'click');
     * clicks.subscribe(x => console.log(x));
     *
     * // Results in:
     * // MouseEvent object logged to console everytime a click
     * // occurs on the document.
     *
     * @see {@link from}
     * @see {@link fromEventPattern}
     *
     * @param {EventTargetLike} target The DOMElement, event target, Node.js
     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.
     * @param {string} eventName The event name of interest, being emitted by the
     * `target`.
     * @param {EventListenerOptions} [options] Options to pass through to addEventListener
     * @param {SelectorMethodSignature<T>} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEvent
     * @owner Observable
     */
    FromEventObservable.create = function (target, eventName, options, selector) {
        if (isFunction_1.isFunction(options)) {
            selector = options;
            options = undefined;
        }
        return new FromEventObservable(target, eventName, selector, options);
    };
    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {
        var unsubscribe;
        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {
            for (var i = 0, len = sourceObj.length; i < len; i++) {
                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
            }
        }
        else if (isEventTarget(sourceObj)) {
            var source_1 = sourceObj;
            sourceObj.addEventListener(eventName, handler, options);
            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };
        }
        else if (isJQueryStyleEventEmitter(sourceObj)) {
            var source_2 = sourceObj;
            sourceObj.on(eventName, handler);
            unsubscribe = function () { return source_2.off(eventName, handler); };
        }
        else if (isNodeStyleEventEmmitter(sourceObj)) {
            var source_3 = sourceObj;
            sourceObj.addListener(eventName, handler);
            unsubscribe = function () { return source_3.removeListener(eventName, handler); };
        }
        else {
            throw new TypeError('Invalid event target');
        }
        subscriber.add(new Subscription_1.Subscription(unsubscribe));
    };
    FromEventObservable.prototype._subscribe = function (subscriber) {
        var sourceObj = this.sourceObj;
        var eventName = this.eventName;
        var options = this.options;
        var selector = this.selector;
        var handler = selector ? function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);
            if (result === errorObject_1.errorObject) {
                subscriber.error(errorObject_1.errorObject.e);
            }
            else {
                subscriber.next(result);
            }
        } : function (e) { return subscriber.next(e); };
        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);
    };
    return FromEventObservable;
}(Observable_1.Observable));
exports.FromEventObservable = FromEventObservable;

});

var fromEvent$2 = createCommonjsModule(function (module, exports) {
"use strict";
var FromEventObservable_1 = FromEventObservable;
exports.fromEvent = FromEventObservable_1.FromEventObservable.create;

});

var fromEvent = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var fromEvent_1 = fromEvent$2;
Observable_1.Observable.fromEvent = fromEvent_1.fromEvent;

});

var _do$2 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
/* tslint:disable:max-line-length */
/**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @method do
 * @name do
 * @owner Observable
 */
function _do(nextOrObserver, error, complete) {
    return this.lift(new DoOperator(nextOrObserver, error, complete));
}
exports._do = _do;
var DoOperator = (function () {
    function DoOperator(nextOrObserver, error, complete) {
        this.nextOrObserver = nextOrObserver;
        this.error = error;
        this.complete = complete;
    }
    DoOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
    };
    return DoOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var DoSubscriber = (function (_super) {
    __extends(DoSubscriber, _super);
    function DoSubscriber(destination, nextOrObserver, error, complete) {
        _super.call(this, destination);
        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);
        safeSubscriber.syncErrorThrowable = true;
        this.add(safeSubscriber);
        this.safeSubscriber = safeSubscriber;
    }
    DoSubscriber.prototype._next = function (value) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.next(value);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.next(value);
        }
    };
    DoSubscriber.prototype._error = function (err) {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.error(err);
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.error(err);
        }
    };
    DoSubscriber.prototype._complete = function () {
        var safeSubscriber = this.safeSubscriber;
        safeSubscriber.complete();
        if (safeSubscriber.syncErrorThrown) {
            this.destination.error(safeSubscriber.syncErrorValue);
        }
        else {
            this.destination.complete();
        }
    };
    return DoSubscriber;
}(Subscriber_1.Subscriber));

});

var _do = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var do_1 = _do$2;
Observable_1.Observable.prototype.do = do_1._do;
Observable_1.Observable.prototype._do = do_1._do;

});

var map$2 = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var map_1 = map;
Observable_1.Observable.prototype.map = map_1.map;

});

var filter$2 = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var filter_1 = filter;
Observable_1.Observable.prototype.filter = filter_1.filter;

});

var mergeMap$2 = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var mergeMap_1 = mergeMap;
Observable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;
Observable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;

});

var takeUntil$2 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var OuterSubscriber_1 = OuterSubscriber;
var subscribeToResult_1 = subscribeToResult;
/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value or a complete notification, the output Observable stops
 * mirroring the source Observable and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */
function takeUntil(notifier) {
    return this.lift(new TakeUntilOperator(notifier));
}
exports.takeUntil = takeUntil;
var TakeUntilOperator = (function () {
    function TakeUntilOperator(notifier) {
        this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeUntilSubscriber(subscriber, this.notifier));
    };
    return TakeUntilOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeUntilSubscriber = (function (_super) {
    __extends(TakeUntilSubscriber, _super);
    function TakeUntilSubscriber(destination, notifier) {
        _super.call(this, destination);
        this.notifier = notifier;
        this.add(subscribeToResult_1.subscribeToResult(this, notifier));
    }
    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.complete();
    };
    TakeUntilSubscriber.prototype.notifyComplete = function () {
        // noop
    };
    return TakeUntilSubscriber;
}(OuterSubscriber_1.OuterSubscriber));

});

var takeUntil = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var takeUntil_1 = takeUntil$2;
Observable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;

});

var repeat$2 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
var EmptyObservable_1 = EmptyObservable;
/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,
 * on a particular Scheduler.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {Scheduler} [scheduler] the Scheduler to emit the items on.
 * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */
function repeat(count) {
    if (count === void 0) { count = -1; }
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else if (count < 0) {
        return this.lift(new RepeatOperator(-1, this));
    }
    else {
        return this.lift(new RepeatOperator(count - 1, this));
    }
}
exports.repeat = repeat;
var RepeatOperator = (function () {
    function RepeatOperator(count, source) {
        this.count = count;
        this.source = source;
    }
    RepeatOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
    };
    return RepeatOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var RepeatSubscriber = (function (_super) {
    __extends(RepeatSubscriber, _super);
    function RepeatSubscriber(destination, count, source) {
        _super.call(this, destination);
        this.count = count;
        this.source = source;
    }
    RepeatSubscriber.prototype.complete = function () {
        if (!this.isStopped) {
            var _a = this, source = _a.source, count = _a.count;
            if (count === 0) {
                return _super.prototype.complete.call(this);
            }
            else if (count > -1) {
                this.count = count - 1;
            }
            this.unsubscribe();
            this.isStopped = false;
            this.closed = false;
            source.subscribe(this);
        }
    };
    return RepeatSubscriber;
}(Subscriber_1.Subscriber));

});

var repeat = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var repeat_1 = repeat$2;
Observable_1.Observable.prototype.repeat = repeat_1.repeat;

});

var merge$6 = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var merge_1 = merge$3;
Observable_1.Observable.prototype.merge = merge_1.merge;

});

var KeyMap$1 = (function () {
    function KeyMap() {
    }
    return KeyMap;
}());
KeyMap$1.spaceBar = 32;
KeyMap$1.enter = 13;
KeyMap$1.a = 65;
KeyMap$1.z = 90;
KeyMap$1.backSpace = 8;
KeyMap$1.zero = 48;
KeyMap$1.nine = 57;

var Character = (function () {
    function Character(keyCode) {
        this.isCurrent = false;
        this.lineBreak = false;
        this.placeHolder = false;
        this.deleteChar = false;
        this.isSelected = false;
        if (keyCode === KeyMap$1.enter) {
            this.value = '\n';
            this.lineBreak = true;
        }
        else if (keyCode === -1) {
            this.value = '';
            this.placeHolder = true;
        }
        else if (keyCode === KeyMap$1.backSpace) {
            this.deleteChar = true;
        }
        else {
            this.value = String.fromCharCode(keyCode).toLowerCase();
        }
    }
    return Character;
}());

var Document = (function () {
    function Document() {
        this.characters = [];
        this.firstSelectedCharacter = -1;
        this.currentChar = new Character(-1);
        this.characters.push(this.currentChar);
        this.characters[0].isCurrent = true;
    }
    Document.prototype.deselectPreviousCharacter = function () {
        if (this.currentChar) {
            var index = this.characters.indexOf(this.currentChar);
            this.characters[index].isCurrent = false;
        }
    };
    Document.prototype.clearSelection = function (e) {
        this.firstSelectedCharacter = -1;
        if (e) {
            this.firstSelectedCharacter = this.characters.indexOf(e.character);
        }
        this.characters.forEach(function (c) { return c.isSelected = false; });
    };
    Document.prototype.edit = function (character, index) {
        if (character.deleteChar) {
            var deleteIndex = this.characters.indexOf(this.currentChar);
            if (deleteIndex >= 1) {
                this.characters.splice(deleteIndex, 1);
                if (this.characters.length > 1) {
                    this.characters[deleteIndex - 1].isCurrent = true;
                    this.currentChar = this.characters[deleteIndex - 1];
                }
                else if (this.characters.length === 1) {
                    this.characters[0].isCurrent = true;
                    this.currentChar = this.characters[0];
                }
            }
        }
        else {
            this.characters.splice(index, 0, character);
            if (character.lineBreak) {
                this.deselectPreviousCharacter();
                var placeHolder = new Character(-1);
                this.characters.splice(index + 1, 0, placeHolder);
                this.placeCursor(placeHolder);
            }
            else {
                this.placeCursor(character);
            }
        }
    };
    Document.prototype.placeCursor = function (character) {
        this.deselectPreviousCharacter();
        var index = this.characters.indexOf(character);
        this.characters[index].isCurrent = true;
        this.currentChar = character;
    };
    Document.prototype.selectCharacter = function (character) {
        var index = this.characters.indexOf(character);
        for (var i = this.firstSelectedCharacter; i <= index; i++) {
            this.characters[i].isSelected = true;
        }
    };
    Document.prototype.processInput = function (character, operation) {
        if (operation === 'modify') {
            var index = this.characters.indexOf(this.currentChar);
            if (index < 0) {
                index = this.characters.length - 1;
            }
            this.edit(character, index + 1);
        }
        if (operation === 'select') {
            this.placeCursor(character);
        }
        if (operation === 'range') {
            this.selectCharacter(character);
        }
    };
    return Document;
}());

var TextEditor = (function () {
    function TextEditor() {
        this.currentDocument = new Document();
    }
    TextEditor.prototype.isSuportedCharacter = function (keyCode) {
        if (keyCode >= KeyMap$1.a && keyCode < KeyMap$1.z) {
            return true;
        }
        if (keyCode === KeyMap$1.enter || keyCode === KeyMap$1.spaceBar || keyCode === KeyMap$1.backSpace) {
            return true;
        }
        if (keyCode >= KeyMap$1.zero && keyCode <= KeyMap$1.nine) {
            return true;
        }
        return false;
    };
    TextEditor.prototype.getCharacterFromElement = function (e, operation) {
        var index = [].slice.call(this.editor.children).indexOf(e.target);
        if (index >= 0) {
            return { operation: operation, character: this.currentDocument.characters[index], element: e };
        }
        return null;
    };
    TextEditor.prototype.ngOnInit = function () {
        var _this = this;
        this.editor = document.getElementById('page');
        this.keyUp = Observable$$1.fromEvent(document, 'keyup')
            .filter(function (k) { return _this.isSuportedCharacter(k.which); })
            .map(function (k) {
            return { operation: 'modify', character: new Character(k.which), element: k };
        });
        this.mouseDown = Observable$$1.fromEvent(this.editor, 'mousedown')
            .do(function (e) { return _this.currentDocument.clearSelection(_this.getCharacterFromElement(e, 'range')); })
            .flatMap(function (m) { return Observable$$1.fromEvent(_this.editor, 'mousemove'); })
            .map(function (e) { return _this.getCharacterFromElement(e, 'range'); })
            .filter(function (e) { return e !== null; })
            .takeUntil(Observable$$1.fromEvent(this.editor, 'mouseup')).repeat();
        this.click = Observable$$1.fromEvent(this.editor, 'click')
            .map(function (e) { return _this.getCharacterFromElement(e, 'select'); })
            .filter(function (e) { return e !== null; });
        this.keyDown = Observable$$1.fromEvent(document, 'keydown')
            .filter(function (k) { return k.which === KeyMap$1.spaceBar || k.which === KeyMap$1.backSpace; })
            .map(function (k) {
            return { element: k };
        });
        this.keyUp
            .merge(this.click)
            .merge(this.mouseDown)
            .merge(this.keyDown).subscribe(function (e) {
            _this.currentDocument.processInput(e.character, e.operation);
            e.element.preventDefault();
        });
    };
    return TextEditor;
}());
TextEditor.ctorParameters = function () { return []; };

var CommentDemo = (function () {
    function CommentDemo() {
        this.counter = 0;
    }
    CommentDemo.prototype.count = function () {
        this.counter++;
    };
    return CommentDemo;
}());
CommentDemo.ctorParameters = function () { return []; };

var Child = (function () {
    function Child() {
    }
    Child.prototype.setTime = function (time) {
        this.time = time;
    };
    return Child;
}());
Child.ctorParameters = function () { return []; };

var Parent = (function () {
    function Parent() {
    }
    Parent.prototype.updateViewChildren = function () {
        this.viewChildren.toArray().forEach(function (child) { return child.setTime(new Date().toTimeString()); });
    };
    return Parent;
}());
Parent.ctorParameters = function () { return []; };
Parent.propDecorators = {
    'viewChildren': [{ type: ViewChildren, args: [Child,] },],
};

var QuestionModel = (function () {
    function QuestionModel() {
        this.questions = [];
    }
    QuestionModel.prototype.toGroup = function () {
        var group = {};
        this.questions.forEach(function (question) {
            if (question.required) {
                group[question.key] = new FormControl('', Validators.required);
            }
            else {
                group[question.key] = new FormControl('');
            }
        });
        return new FormGroup(group);
    };
    return QuestionModel;
}());

var QuestionBase = (function () {
    function QuestionBase() {
    }
    return QuestionBase;
}());

var __extends$3 = (undefined && undefined.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var TextboxQuestion = (function (_super) {
    __extends$3(TextboxQuestion, _super);
    function TextboxQuestion() {
        var _this = _super.call(this) || this;
        _this.controlType = 'textbox';
        return _this;
    }
    return TextboxQuestion;
}(QuestionBase));

var __extends$4 = (undefined && undefined.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var DropDownQuestion = (function (_super) {
    __extends$4(DropDownQuestion, _super);
    function DropDownQuestion() {
        var _this = _super.call(this) || this;
        _this.options = [];
        _this.controlType = 'dropdown';
        return _this;
    }
    return DropDownQuestion;
}(QuestionBase));

var SurveyDemo = (function () {
    function SurveyDemo() {
        this.questionModel = new QuestionModel();
        var question = new TextboxQuestion();
        question.key = 'lastName';
        question.text = 'Last name';
        question.required = true;
        question.order = 2;
        this.questionModel.questions.push(question);
        question = new TextboxQuestion();
        question.key = 'firstName';
        question.text = 'First name';
        question.required = true;
        question.order = 1;
        this.questionModel.questions.push(question);
        question = new TextboxQuestion();
        question.key = 'emailAddress';
        question.text = 'Email';
        question.required = false;
        question.type = 'email';
        question.order = 3;
        this.questionModel.questions.push(question);
        var ddQuestion = new DropDownQuestion();
        ddQuestion.key = 'country';
        ddQuestion.text = 'Country';
        ddQuestion.options.push({ key: 'usa', value: 'USA' });
        ddQuestion.options.push({ key: 'germany', value: 'Germany' });
        ddQuestion.options.push({ key: 'canada', value: 'Canada' });
        ddQuestion.options.push({ key: 'australia', value: 'Australia' });
        ddQuestion.order = 4;
        this.questionModel.questions.push(ddQuestion);
        this.questionModel.questions.sort(function (a, b) { return a.order - b.order; });
    }
    return SurveyDemo;
}());
SurveyDemo.ctorParameters = function () { return []; };

var logReducer = function (state, action) {
    if (state === void 0) { state = []; }
    switch (action.type) {
        case 'ADD_ENTRY':
            return state.concat([action.data]);
        case 'LOAD_ENTRIES':
            return action.data;
        default:
            return state;
    }
};

var Store = (function () {
    function Store() {
        var _this = this;
        this.dispatcher = new Subject$$1();
        this.log = new Subject$$1();
        this.logItems = [];
        this.dispatcher.subscribe(function (action) { return _this.handleAction(action); });
        this.logEntries = this.log.asObservable();
    }
    Store.prototype.handleAction = function (action) {
        this.logItems = logReducer(this.logItems, action);
        this.log.next(this.logItems);
    };
    Store.prototype.dispatchAction = function (action) {
        this.dispatcher.next(action);
    };
    return Store;
}());

var LogAction = (function () {
    function LogAction(type, data) {
        this.type = type;
        this.data = data;
    }
    return LogAction;
}());

var LogEntry = (function () {
    function LogEntry(text, severity) {
        this.text = text;
        this.severity = severity;
    }
    return LogEntry;
}());

var LogTailService = (function () {
    function LogTailService(http) {
        this.http = http;
    }
    LogTailService.prototype.getLogEntries = function () {
        return this.http.get('./components/log-tail/log.json').map(function (res) { return res.json(); });
    };
    return LogTailService;
}());
LogTailService.ctorParameters = function () { return [
    { type: Http, },
]; };

var LogDemo = (function () {
    function LogDemo(store, logTailService) {
        this.store = store;
        this.logTailService = logTailService;
    }
    LogDemo.prototype.generateLogEntry = function () {
        var entry = new LogEntry(this.msg, this.severity);
        this.store.dispatchAction(new LogAction('ADD_ENTRY', entry));
        this.msg = '';
        this.severity = undefined;
    };
    LogDemo.prototype.ngOnInit = function () {
        var _this = this;
        this.logTailService.getLogEntries().subscribe(function (res) { return _this.store.dispatchAction(new LogAction('LOAD_ENTRIES', res.entries)); });
    };
    return LogDemo;
}());
LogDemo.ctorParameters = function () { return [
    { type: Store, },
    { type: LogTailService, },
]; };

var InputOutputDemo = (function () {
    function InputOutputDemo() {
        this.count = 0;
        this.runningTotal = 0;
        this.myString = '';
        this.myTitle = 'Input/Output Demo';
    }
    InputOutputDemo.prototype.update = function () {
        this.count++;
        this.runningTotal += this.count;
        this.myString += 'A';
    };
    InputOutputDemo.prototype.myStringChanged = function (val) {
        console.log(val);
    };
    return InputOutputDemo;
}());
InputOutputDemo.ctorParameters = function () { return []; };

var TreeNode$2 = (function () {
    function TreeNode(key, url, name) {
        this.key = key;
        this.url = url;
        this.name = name;
        this.showIcon = false;
        this.expanded = false;
        this.icon = null;
        if (url) {
            this.showIcon = true;
            this.icon = this.getIcon();
        }
    }
    TreeNode.prototype.expand = function () {
        this.expanded = !this.expanded;
        this.icon = this.getIcon();
    };
    TreeNode.prototype.getIcon = function () {
        if (this.showIcon === true) {
            if (this.expanded) {
                return '- ';
            }
            return '+ ';
        }
        return null;
    };
    return TreeNode;
}());

var treeNodeReducer = function (state, action) {
    if (state === void 0) { state = []; }
    switch (action.name) {
        case 'LOAD_NODES':
            return state.nodes.map(function (n) {
                return new TreeNode$2(n.key, n.url, n.name);
            });
    }
};

var Store$1 = (function () {
    function Store(_http) {
        var _this = this;
        this._http = _http;
        this.dispatcher = new Subject$$1();
        this.treeNodes = {};
        this.nodes = {};
        this.dispatcher.subscribe(function (action) { return _this.handleAction(action); });
    }
    Store.prototype.handleAction = function (action) {
        var _this = this;
        if (action.name === 'LOAD_NODES') {
            if (this.nodes[action.key]) {
                this.treeNodes[action.key].next(this.nodes[action.key]);
            }
            else {
                this._http
                    .get(action.url)
                    .map(function (res) { return res.json(); })
                    .subscribe(function (res) {
                    _this.nodes[action.key] = treeNodeReducer(res, action);
                    _this.treeNodes[action.key].next(_this.nodes[action.key]);
                });
            }
        }
    };
    Store.prototype.getTreeNodes = function (key) {
        if (!this.treeNodes.hasOwnProperty(key)) {
            this.treeNodes[key] = new Subject$$1();
        }
        return this.treeNodes[key].asObservable();
    };
    Store.prototype.dispatchAction = function (action) {
        this.dispatcher.next(action);
    };
    return Store;
}());
Store$1.ctorParameters = function () { return [
    { type: Http, },
]; };

var TreeNodeService = (function () {
    function TreeNodeService(_store) {
        this._store = _store;
    }
    TreeNodeService.prototype.loadTreeNodes = function (root) {
        if (root.url) {
            this._store.dispatchAction({ key: root.key, url: root.url, name: 'LOAD_NODES' });
        }
    };
    return TreeNodeService;
}());
TreeNodeService.ctorParameters = function () { return [
    { type: Store$1, },
]; };

var CountryDemo = (function () {
    function CountryDemo() {
        this.node = null;
    }
    CountryDemo.prototype.ngOnInit = function () {
        this.node = new TreeNode$2('root', './tree-view-data/countries.json', '');
    };
    return CountryDemo;
}());
CountryDemo.ctorParameters = function () { return []; };

var isNumeric = createCommonjsModule(function (module, exports) {
"use strict";
var isArray_1 = isArray;
function isNumeric(val) {
    // parseFloat NaNs numeric-cast false positives (null|true|false|"")
    // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
    // subtraction forces infinities to NaN
    // adding 1 corrects loss of precision from parseFloat (#15100)
    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;
}
exports.isNumeric = isNumeric;


});

var Action = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscription_1 = Subscription;
/**
 * A unit of work to be executed in a {@link Scheduler}. An action is typically
 * created from within a Scheduler and an RxJS user does not need to concern
 * themselves about creating and manipulating an Action.
 *
 * ```ts
 * class Action<T> extends Subscription {
 *   new (scheduler: Scheduler, work: (state?: T) => void);
 *   schedule(state?: T, delay: number = 0): Subscription;
 * }
 * ```
 *
 * @class Action<T>
 */
var Action = (function (_super) {
    __extends(Action, _super);
    function Action(scheduler, work) {
        _super.call(this);
    }
    /**
     * Schedules this action on its parent Scheduler for execution. May be passed
     * some context object, `state`. May happen at some point in the future,
     * according to the `delay` parameter, if specified.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler.
     * @return {void}
     */
    Action.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        return this;
    };
    return Action;
}(Subscription_1.Subscription));
exports.Action = Action;

});

var AsyncAction = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var root_1 = root;
var Action_1 = Action;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var AsyncAction = (function (_super) {
    __extends(AsyncAction, _super);
    function AsyncAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
        this.pending = false;
    }
    AsyncAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (this.closed) {
            return this;
        }
        // Always replace the current state with the new state.
        this.state = state;
        // Set the pending flag indicating that this action has been scheduled, or
        // has recursively rescheduled itself.
        this.pending = true;
        var id = this.id;
        var scheduler = this.scheduler;
        //
        // Important implementation note:
        //
        // Actions only execute once by default, unless rescheduled from within the
        // scheduled callback. This allows us to implement single and repeat
        // actions via the same code path, without adding API surface area, as well
        // as mimic traditional recursion but across asynchronous boundaries.
        //
        // However, JS runtimes and timers distinguish between intervals achieved by
        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of
        // serial `setTimeout` calls can be individually delayed, which delays
        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to
        // guarantee the interval callback will be invoked more precisely to the
        // interval period, regardless of load.
        //
        // Therefore, we use `setInterval` to schedule single and repeat actions.
        // If the action reschedules itself with the same delay, the interval is not
        // canceled. If the action doesn't reschedule, or reschedules with a
        // different delay, the interval will be canceled after scheduled callback
        // execution.
        //
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, delay);
        }
        this.delay = delay;
        // If this action has already an async Id, don't request a new one.
        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
        return this;
    };
    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        return root_1.root.setInterval(scheduler.flush.bind(scheduler, this), delay);
    };
    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If this action is rescheduled with the same delay time, don't clear the interval id.
        if (delay !== null && this.delay === delay) {
            return id;
        }
        // Otherwise, if the action's delay time is different from the current delay,
        // clear the interval id
        return root_1.root.clearInterval(id) && undefined || undefined;
    };
    /**
     * Immediately executes this action and the `work` it contains.
     * @return {any}
     */
    AsyncAction.prototype.execute = function (state, delay) {
        if (this.closed) {
            return new Error('executing a cancelled action');
        }
        this.pending = false;
        var error = this._execute(state, delay);
        if (error) {
            return error;
        }
        else if (this.pending === false && this.id != null) {
            // Dequeue if the action didn't reschedule itself. Don't call
            // unsubscribe(), because the action could reschedule later.
            // For example:
            // ```
            // scheduler.schedule(function doWork(counter) {
            //   /* ... I'm a busy worker bee ... */
            //   var originalAction = this;
            //   /* wait 100ms before rescheduling the action */
            //   setTimeout(function () {
            //     originalAction.schedule(counter + 1);
            //   }, 100);
            // }, 1000);
            // ```
            this.id = this.recycleAsyncId(this.scheduler, this.id, null);
        }
    };
    AsyncAction.prototype._execute = function (state, delay) {
        var errored = false;
        var errorValue = undefined;
        try {
            this.work(state);
        }
        catch (e) {
            errored = true;
            errorValue = !!e && e || new Error(e);
        }
        if (errored) {
            this.unsubscribe();
            return errorValue;
        }
    };
    AsyncAction.prototype._unsubscribe = function () {
        var id = this.id;
        var scheduler = this.scheduler;
        var actions = scheduler.actions;
        var index = actions.indexOf(this);
        this.work = null;
        this.delay = null;
        this.state = null;
        this.pending = false;
        this.scheduler = null;
        if (index !== -1) {
            actions.splice(index, 1);
        }
        if (id != null) {
            this.id = this.recycleAsyncId(scheduler, id, null);
        }
    };
    return AsyncAction;
}(Action_1.Action));
exports.AsyncAction = AsyncAction;

});

var Scheduler = createCommonjsModule(function (module, exports) {
"use strict";
/**
 * An execution context and a data structure to order tasks and schedule their
 * execution. Provides a notion of (potentially virtual) time, through the
 * `now()` getter method.
 *
 * Each unit of work in a Scheduler is called an {@link Action}.
 *
 * ```ts
 * class Scheduler {
 *   now(): number;
 *   schedule(work, delay?, state?): Subscription;
 * }
 * ```
 *
 * @class Scheduler
 */
var Scheduler = (function () {
    function Scheduler(SchedulerAction, now) {
        if (now === void 0) { now = Scheduler.now; }
        this.SchedulerAction = SchedulerAction;
        this.now = now;
    }
    /**
     * Schedules a function, `work`, for execution. May happen at some point in
     * the future, according to the `delay` parameter, if specified. May be passed
     * some context object, `state`, which will be passed to the `work` function.
     *
     * The given arguments will be processed an stored as an Action object in a
     * queue of actions.
     *
     * @param {function(state: ?T): ?Subscription} work A function representing a
     * task, or some unit of work to be executed by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler itself.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @return {Subscription} A subscription in order to be able to unsubscribe
     * the scheduled work.
     */
    Scheduler.prototype.schedule = function (work, delay, state) {
        if (delay === void 0) { delay = 0; }
        return new this.SchedulerAction(this, work).schedule(state, delay);
    };
    Scheduler.now = Date.now ? Date.now : function () { return +new Date(); };
    return Scheduler;
}());
exports.Scheduler = Scheduler;

});

var AsyncScheduler = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Scheduler_1 = Scheduler;
var AsyncScheduler = (function (_super) {
    __extends(AsyncScheduler, _super);
    function AsyncScheduler() {
        _super.apply(this, arguments);
        this.actions = [];
        /**
         * A flag to indicate whether the Scheduler is currently executing a batch of
         * queued actions.
         * @type {boolean}
         */
        this.active = false;
        /**
         * An internal ID used to track the latest asynchronous task such as those
         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and
         * others.
         * @type {any}
         */
        this.scheduled = undefined;
    }
    AsyncScheduler.prototype.flush = function (action) {
        var actions = this.actions;
        if (this.active) {
            actions.push(action);
            return;
        }
        var error;
        this.active = true;
        do {
            if (error = action.execute(action.state, action.delay)) {
                break;
            }
        } while (action = actions.shift()); // exhaust the scheduler queue
        this.active = false;
        if (error) {
            while (action = actions.shift()) {
                action.unsubscribe();
            }
            throw error;
        }
    };
    return AsyncScheduler;
}(Scheduler_1.Scheduler));
exports.AsyncScheduler = AsyncScheduler;

});

var async = createCommonjsModule(function (module, exports) {
"use strict";
var AsyncAction_1 = AsyncAction;
var AsyncScheduler_1 = AsyncScheduler;
exports.async = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);

});

var isDate$1 = createCommonjsModule(function (module, exports) {
"use strict";
function isDate(value) {
    return value instanceof Date && !isNaN(+value);
}
exports.isDate = isDate;

});

var TimerObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var isNumeric_1 = isNumeric;
var Observable_1 = Observable;
var async_1 = async;
var isScheduler_1 = isScheduler;
var isDate_1 = isDate$1;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var TimerObservable = (function (_super) {
    __extends(TimerObservable, _super);
    function TimerObservable(dueTime, period, scheduler) {
        if (dueTime === void 0) { dueTime = 0; }
        _super.call(this);
        this.period = -1;
        this.dueTime = 0;
        if (isNumeric_1.isNumeric(period)) {
            this.period = Number(period) < 1 && 1 || Number(period);
        }
        else if (isScheduler_1.isScheduler(period)) {
            scheduler = period;
        }
        if (!isScheduler_1.isScheduler(scheduler)) {
            scheduler = async_1.async;
        }
        this.scheduler = scheduler;
        this.dueTime = isDate_1.isDate(dueTime) ?
            (+dueTime - this.scheduler.now()) :
            dueTime;
    }
    /**
     * Creates an Observable that starts emitting after an `initialDelay` and
     * emits ever increasing numbers after each `period` of time thereafter.
     *
     * <span class="informal">Its like {@link interval}, but you can specify when
     * should the emissions start.</span>
     *
     * <img src="./img/timer.png" width="100%">
     *
     * `timer` returns an Observable that emits an infinite sequence of ascending
     * integers, with a constant interval of time, `period` of your choosing
     * between those emissions. The first emission happens after the specified
     * `initialDelay`. The initial delay may be a {@link Date}. By default, this
     * operator uses the `async` Scheduler to provide a notion of time, but you
     * may pass any Scheduler to it. If `period` is not specified, the output
     * Observable emits only one value, `0`. Otherwise, it emits an infinite
     * sequence.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>
     * var numbers = Rx.Observable.timer(3000, 1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @example <caption>Emits one number after five seconds</caption>
     * var numbers = Rx.Observable.timer(5000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link interval}
     * @see {@link delay}
     *
     * @param {number|Date} initialDelay The initial delay time to wait before
     * emitting the first value of `0`.
     * @param {number} [period] The period of time between emissions of the
     * subsequent numbers.
     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a `0` after the
     * `initialDelay` and ever increasing numbers after each `period` of time
     * thereafter.
     * @static true
     * @name timer
     * @owner Observable
     */
    TimerObservable.create = function (initialDelay, period, scheduler) {
        if (initialDelay === void 0) { initialDelay = 0; }
        return new TimerObservable(initialDelay, period, scheduler);
    };
    TimerObservable.dispatch = function (state) {
        var index = state.index, period = state.period, subscriber = state.subscriber;
        var action = this;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        else if (period === -1) {
            return subscriber.complete();
        }
        state.index = index + 1;
        action.schedule(state, period);
    };
    TimerObservable.prototype._subscribe = function (subscriber) {
        var index = 0;
        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;
        return scheduler.schedule(TimerObservable.dispatch, dueTime, {
            index: index, period: period, subscriber: subscriber
        });
    };
    return TimerObservable;
}(Observable_1.Observable));
exports.TimerObservable = TimerObservable;

});

var timer$2 = createCommonjsModule(function (module, exports) {
"use strict";
var TimerObservable_1 = TimerObservable;
exports.timer = TimerObservable_1.TimerObservable.create;

});

var timer = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var timer_1 = timer$2;
Observable_1.Observable.timer = timer_1.timer;

});

var ForkJoinObservable = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Observable_1 = Observable;
var EmptyObservable_1 = EmptyObservable;
var isArray_1 = isArray;
var subscribeToResult_1 = subscribeToResult;
var OuterSubscriber_1 = OuterSubscriber;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
var ForkJoinObservable = (function (_super) {
    __extends(ForkJoinObservable, _super);
    function ForkJoinObservable(sources, resultSelector) {
        _super.call(this);
        this.sources = sources;
        this.resultSelector = resultSelector;
    }
    /* tslint:enable:max-line-length */
    /**
     * @param sources
     * @return {any}
     * @static true
     * @name forkJoin
     * @owner Observable
     */
    ForkJoinObservable.create = function () {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i - 0] = arguments[_i];
        }
        if (sources === null || arguments.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        var resultSelector = null;
        if (typeof sources[sources.length - 1] === 'function') {
            resultSelector = sources.pop();
        }
        // if the first and only other argument besides the resultSelector is an array
        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`
        if (sources.length === 1 && isArray_1.isArray(sources[0])) {
            sources = sources[0];
        }
        if (sources.length === 0) {
            return new EmptyObservable_1.EmptyObservable();
        }
        return new ForkJoinObservable(sources, resultSelector);
    };
    ForkJoinObservable.prototype._subscribe = function (subscriber) {
        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);
    };
    return ForkJoinObservable;
}(Observable_1.Observable));
exports.ForkJoinObservable = ForkJoinObservable;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var ForkJoinSubscriber = (function (_super) {
    __extends(ForkJoinSubscriber, _super);
    function ForkJoinSubscriber(destination, sources, resultSelector) {
        _super.call(this, destination);
        this.sources = sources;
        this.resultSelector = resultSelector;
        this.completed = 0;
        this.haveValues = 0;
        var len = sources.length;
        this.total = len;
        this.values = new Array(len);
        for (var i = 0; i < len; i++) {
            var source = sources[i];
            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);
            if (innerSubscription) {
                innerSubscription.outerIndex = i;
                this.add(innerSubscription);
            }
        }
    }
    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
        this.values[outerIndex] = innerValue;
        if (!innerSub._hasValue) {
            innerSub._hasValue = true;
            this.haveValues++;
        }
    };
    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {
        var destination = this.destination;
        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;
        var len = values.length;
        if (!innerSub._hasValue) {
            destination.complete();
            return;
        }
        this.completed++;
        if (this.completed !== len) {
            return;
        }
        if (haveValues === len) {
            var value = resultSelector ? resultSelector.apply(this, values) : values;
            destination.next(value);
        }
        destination.complete();
    };
    return ForkJoinSubscriber;
}(OuterSubscriber_1.OuterSubscriber));

});

var forkJoin$2 = createCommonjsModule(function (module, exports) {
"use strict";
var ForkJoinObservable_1 = ForkJoinObservable;
exports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;

});

var forkJoin = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var forkJoin_1 = forkJoin$2;
Observable_1.Observable.forkJoin = forkJoin_1.forkJoin;

});

var of$2 = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var of_1 = of;
Observable_1.Observable.of = of_1.of;

});

var ArgumentOutOfRangeError = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */
var ArgumentOutOfRangeError = (function (_super) {
    __extends(ArgumentOutOfRangeError, _super);
    function ArgumentOutOfRangeError() {
        var err = _super.call(this, 'argument out of range');
        this.name = err.name = 'ArgumentOutOfRangeError';
        this.stack = err.stack;
        this.message = err.message;
    }
    return ArgumentOutOfRangeError;
}(Error));
exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;

});

var take$2 = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subscriber_1 = Subscriber;
var ArgumentOutOfRangeError_1 = ArgumentOutOfRangeError;
var EmptyObservable_1 = EmptyObservable;
/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */
function take(count) {
    if (count === 0) {
        return new EmptyObservable_1.EmptyObservable();
    }
    else {
        return this.lift(new TakeOperator(count));
    }
}
exports.take = take;
var TakeOperator = (function () {
    function TakeOperator(total) {
        this.total = total;
        if (this.total < 0) {
            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
        }
    }
    TakeOperator.prototype.call = function (subscriber, source) {
        return source.subscribe(new TakeSubscriber(subscriber, this.total));
    };
    return TakeOperator;
}());
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var TakeSubscriber = (function (_super) {
    __extends(TakeSubscriber, _super);
    function TakeSubscriber(destination, total) {
        _super.call(this, destination);
        this.total = total;
        this.count = 0;
    }
    TakeSubscriber.prototype._next = function (value) {
        var total = this.total;
        var count = ++this.count;
        if (count <= total) {
            this.destination.next(value);
            if (count === total) {
                this.destination.complete();
                this.unsubscribe();
            }
        }
    };
    return TakeSubscriber;
}(Subscriber_1.Subscriber));

});

var take = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var take_1 = take$2;
Observable_1.Observable.prototype.take = take_1.take;

});

var concat$2 = createCommonjsModule(function (module, exports) {
"use strict";
var isScheduler_1 = isScheduler;
var ArrayObservable_1 = ArrayObservable;
var mergeAll_1 = mergeAll;
/* tslint:disable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */
function concat() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));
}
exports.concat = concat;
/* tslint:enable:max-line-length */
/**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins multiple Observables together by subscribing to them one at a time and
 * merging their results into the output Observable. Will wait for each
 * Observable to complete before moving on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat(timer1, timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {Observable} input1 An input Observable to concatenate with others.
 * @param {Observable} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */
function concatStatic() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i - 0] = arguments[_i];
    }
    var scheduler = null;
    var args = observables;
    if (isScheduler_1.isScheduler(args[observables.length - 1])) {
        scheduler = args.pop();
    }
    if (scheduler === null && observables.length === 1) {
        return observables[0];
    }
    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));
}
exports.concatStatic = concatStatic;

});

var concat = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var concat_1 = concat$2;
Observable_1.Observable.prototype.concat = concat_1.concat;

});

var RxJsStreams = (function () {
    function RxJsStreams() {
        this.concatStream = [];
        this.mergeStream = [];
        this.forkJoinStream = [];
        this.flatMappedStreams = {};
    }
    RxJsStreams.prototype.flatMapStreams = function () {
        var _this = this;
        var first = Observable$$1.of(10);
        first.flatMap(function (operand1) {
            return Observable$$1.of(operand1 + 10);
        })
            .subscribe(function (res) { return _this.flatMappedStreams = { msg: '10 + 10 = ' + res }; });
    };
    RxJsStreams.prototype.concatStreams = function () {
        var _this = this;
        var first = Observable$$1.timer(10, 500).map(function (r) {
            return { source: 1, value: r };
        }).take(4);
        var second = Observable$$1.timer(10, 500).map(function (r) {
            return { source: 2, value: r };
        }).take(4);
        first.concat(second).subscribe(function (res) { return _this.concatStream.push(res); });
    };
    RxJsStreams.prototype.mergeStreams = function () {
        var _this = this;
        var first = Observable$$1.timer(10, 500).map(function (r) {
            return { source: 1, value: r };
        }).take(4);
        var second = Observable$$1.timer(10, 500).map(function (r) {
            return { source: 2, value: r };
        }).take(4);
        first.merge(second).subscribe(function (res) { return _this.mergeStream.push(res); });
    };
    RxJsStreams.prototype.forkJoinStreams = function () {
        var _this = this;
        var first = Observable$$1.of({ source: 1, value: 1 });
        var second = Observable$$1.of({ source: 2, value: 1 });
        Observable$$1.forkJoin(first, second)
            .subscribe(function (res) { return _this.forkJoinStream = res; });
    };
    return RxJsStreams;
}());
RxJsStreams.ctorParameters = function () { return []; };

var QueueAction = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncAction_1 = AsyncAction;
/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
var QueueAction = (function (_super) {
    __extends(QueueAction, _super);
    function QueueAction(scheduler, work) {
        _super.call(this, scheduler, work);
        this.scheduler = scheduler;
        this.work = work;
    }
    QueueAction.prototype.schedule = function (state, delay) {
        if (delay === void 0) { delay = 0; }
        if (delay > 0) {
            return _super.prototype.schedule.call(this, state, delay);
        }
        this.delay = delay;
        this.state = state;
        this.scheduler.flush(this);
        return this;
    };
    QueueAction.prototype.execute = function (state, delay) {
        return (delay > 0 || this.closed) ?
            _super.prototype.execute.call(this, state, delay) :
            this._execute(state, delay);
    };
    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
        if (delay === void 0) { delay = 0; }
        // If delay exists and is greater than 0, or if the delay is null (the
        // action wasn't rescheduled) but was originally scheduled as an async
        // action, then recycle as an async action.
        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
        }
        // Otherwise flush the scheduler starting with this action.
        return scheduler.flush(this);
    };
    return QueueAction;
}(AsyncAction_1.AsyncAction));
exports.QueueAction = QueueAction;

});

var QueueScheduler = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AsyncScheduler_1 = AsyncScheduler;
var QueueScheduler = (function (_super) {
    __extends(QueueScheduler, _super);
    function QueueScheduler() {
        _super.apply(this, arguments);
    }
    return QueueScheduler;
}(AsyncScheduler_1.AsyncScheduler));
exports.QueueScheduler = QueueScheduler;

});

var queue = createCommonjsModule(function (module, exports) {
"use strict";
var QueueAction_1 = QueueAction;
var QueueScheduler_1 = QueueScheduler;
exports.queue = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);

});

var ReplaySubject = createCommonjsModule(function (module, exports) {
"use strict";
var __extends = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Subject_1 = Subject;
var queue_1 = queue;
var Subscription_1 = Subscription;
var observeOn_1 = observeOn;
var ObjectUnsubscribedError_1 = ObjectUnsubscribedError;
var SubjectSubscription_1 = SubjectSubscription;
/**
 * @class ReplaySubject<T>
 */
var ReplaySubject = (function (_super) {
    __extends(ReplaySubject, _super);
    function ReplaySubject(bufferSize, windowTime, scheduler) {
        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
        _super.call(this);
        this.scheduler = scheduler;
        this._events = [];
        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
        this._windowTime = windowTime < 1 ? 1 : windowTime;
    }
    ReplaySubject.prototype.next = function (value) {
        var now = this._getNow();
        this._events.push(new ReplayEvent(now, value));
        this._trimBufferThenGetEvents();
        _super.prototype.next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function (subscriber) {
        var _events = this._trimBufferThenGetEvents();
        var scheduler = this.scheduler;
        var subscription;
        if (this.closed) {
            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
        }
        else if (this.hasError) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else if (this.isStopped) {
            subscription = Subscription_1.Subscription.EMPTY;
        }
        else {
            this.observers.push(subscriber);
            subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);
        }
        if (scheduler) {
            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));
        }
        var len = _events.length;
        for (var i = 0; i < len && !subscriber.closed; i++) {
            subscriber.next(_events[i].value);
        }
        if (this.hasError) {
            subscriber.error(this.thrownError);
        }
        else if (this.isStopped) {
            subscriber.complete();
        }
        return subscription;
    };
    ReplaySubject.prototype._getNow = function () {
        return (this.scheduler || queue_1.queue).now();
    };
    ReplaySubject.prototype._trimBufferThenGetEvents = function () {
        var now = this._getNow();
        var _bufferSize = this._bufferSize;
        var _windowTime = this._windowTime;
        var _events = this._events;
        var eventsCount = _events.length;
        var spliceCount = 0;
        // Trim events that fall out of the time window.
        // Start at the front of the list. Break early once
        // we encounter an event that falls within the window.
        while (spliceCount < eventsCount) {
            if ((now - _events[spliceCount].time) < _windowTime) {
                break;
            }
            spliceCount++;
        }
        if (eventsCount > _bufferSize) {
            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
        }
        if (spliceCount > 0) {
            _events.splice(0, spliceCount);
        }
        return _events;
    };
    return ReplaySubject;
}(Subject_1.Subject));
exports.ReplaySubject = ReplaySubject;
var ReplayEvent = (function () {
    function ReplayEvent(time, value) {
        this.time = time;
        this.value = value;
    }
    return ReplayEvent;
}());

});

var publishReplay$2 = createCommonjsModule(function (module, exports) {
"use strict";
var ReplaySubject_1 = ReplaySubject;
var multicast_1 = multicast;
/**
 * @param bufferSize
 * @param windowTime
 * @param scheduler
 * @return {ConnectableObservable<T>}
 * @method publishReplay
 * @owner Observable
 */
function publishReplay(bufferSize, windowTime, scheduler) {
    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));
}
exports.publishReplay = publishReplay;

});

var publishReplay = createCommonjsModule(function (module) {
"use strict";
var Observable_1 = Observable;
var publishReplay_1 = publishReplay$2;
Observable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;

});

var FriendsService = (function () {
    function FriendsService(_http) {
        this._http = _http;
        this._friends = null;
    }
    FriendsService.prototype.clearCache = function () {
        this._friends = null;
    };
    FriendsService.prototype.getFriends = function () {
        if (!this._friends) {
            this._friends = this._http.get('./components/rxjs-caching/friends.json')
                .map(function (res) { return res.json().friends; })
                .do(function (friends) { return console.log('fetched friends'); })
                .publishReplay(1)
                .refCount();
        }
        return this._friends;
    };
    return FriendsService;
}());
FriendsService.ctorParameters = function () { return [
    { type: Http, },
]; };

var CachingDemo = (function () {
    function CachingDemo(_friendsService) {
        this._friendsService = _friendsService;
        this.display = { first: true, second: true };
    }
    CachingDemo.prototype.remove = function (list) {
        this.display[list] = false;
    };
    CachingDemo.prototype.reset = function () {
        this.display = { first: true, second: true };
    };
    CachingDemo.prototype.clearCache = function () {
        this._friendsService.clearCache();
    };
    return CachingDemo;
}());
CachingDemo.ctorParameters = function () { return [
    { type: FriendsService, },
]; };

var RxJsBuffering = (function () {
    function RxJsBuffering() {
        this.numbers = [1, 2, 3, 4, 5];
        this.sum = new Subject$$1();
        this.calculation = {};
        this.showSum = false;
    }
    RxJsBuffering.prototype.add = function (number) {
        this.sum.next(number);
    };
    RxJsBuffering.prototype.ngOnInit = function () {
        var _this = this;
        this.series = this.sum
            .asObservable()
            .do(function (a) { return _this.showSum = false; })
            .bufferCount(3)
            .subscribe(function (res) {
            _this.calculation = { sum: res.reduce(function (a, b) { return a + b; }) };
            _this.showSum = true;
        });
    };
    return RxJsBuffering;
}());
RxJsBuffering.ctorParameters = function () { return []; };

var routes = [
    {
        path: '',
        redirectTo: '/about',
        pathMatch: 'full'
    },
    { path: 'about', component: About },
    {
        path: 'demo',
        component: DemoPage,
        children: [
            { path: 'spreadsheet', component: Spreadsheet },
            { path: 'jquery', component: JqueryIntegration },
            { path: 'react', component: Angular2Host },
            { path: 'algorithms', component: Algorithms },
            { path: 'graph', component: Graph },
            { path: 'pub-sub', component: PubSub },
            { path: 'text-editor', component: TextEditor },
            { path: 'address', component: AddressBook },
            { path: 'http', component: HttpSample },
            { path: 'treeview', component: TreeViewDemo },
            { path: 'grid', component: GridDemo },
            { path: 'input', component: InputControls },
            { path: 'contact', component: ContactList },
            { path: 'textbox', component: BoundTextbox },
            { path: 'non-bindable', component: IgnoreBindings },
            { path: 'form', component: AddressForm },
            { path: 'change', component: CommentDemo },
            { path: 'parent-child', component: Parent },
            { path: 'survey', component: SurveyDemo },
            { path: 'redux', component: LogDemo },
            { path: 'iodemo', component: InputOutputDemo },
            { path: 'rxjs', component: RxJsStreams },
            { path: 'friends', component: CachingDemo },
            { path: 'buffering', component: RxJsBuffering },
            { path: 'countries', component: CountryDemo }
        ]
    }
];
var routing = RouterModule.forRoot(routes);

var TreeView$1 = (function () {
    function TreeView() {
    }
    return TreeView;
}());
TreeView$1.ctorParameters = function () { return []; };
TreeView$1.propDecorators = {
    'directories': [{ type: Input },],
};

var LazyTreeView = (function () {
    function LazyTreeView(_store, _treeNodeService) {
        this._store = _store;
        this._treeNodeService = _treeNodeService;
        this.items = [];
    }
    LazyTreeView.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this._store.getTreeNodes(this.root.key).subscribe(function (res) {
            _this.items = res;
        });
        this._treeNodeService.loadTreeNodes(this.root);
    };
    LazyTreeView.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    return LazyTreeView;
}());
LazyTreeView.ctorParameters = function () { return [
    { type: Store$1, },
    { type: TreeNodeService, },
]; };
LazyTreeView.propDecorators = {
    'root': [{ type: Input },],
};

var Survey = (function () {
    function Survey() {
        this.payLoad = null;
    }
    Survey.prototype.ngOnInit = function () {
        this.form = this.model.toGroup();
    };
    Survey.prototype.onSubmit = function () {
        this.payLoad = JSON.stringify(this.form.value);
    };
    return Survey;
}());
Survey.ctorParameters = function () { return []; };
Survey.propDecorators = {
    'model': [{ type: Input },],
};

var FriendsList = (function () {
    function FriendsList(_friendsServce) {
        this._friendsServce = _friendsServce;
        this.friends = [];
    }
    FriendsList.prototype.loadData = function () {
        var _this = this;
        this.subscription = this._friendsServce
            .getFriends()
            .subscribe(function (res) { return _this.friends = res; }, function (error) { return console.log(error); });
    };
    FriendsList.prototype.ngOnInit = function () {
        this.loadData();
    };
    FriendsList.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
        console.log('Destroyed');
    };
    return FriendsList;
}());
FriendsList.ctorParameters = function () { return [
    { type: FriendsService, },
]; };

var Customer = (function () {
    function Customer() {
    }
    return Customer;
}());

var Producer = (function () {
    function Producer(pubSubService) {
        this.pubSubService = pubSubService;
        this.firstName = '';
        this.lastName = '';
    }
    Producer.prototype.createCustomer = function () {
        var customer = new Customer();
        customer.firstName = this.firstName;
        customer.lastName = this.lastName;
        this.pubSubService.Stream.emit(customer);
    };
    return Producer;
}());
Producer.ctorParameters = function () { return [
    { type: PubSubService, },
]; };
Producer.propDecorators = {
    'firstName': [{ type: Input },],
    'lastName': [{ type: Input },],
};

var Consumer = (function () {
    function Consumer(pubSubService) {
        this.pubSubService = pubSubService;
        this.processed = [];
        this.subscription = null;
    }
    Consumer.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.pubSubService.Stream.subscribe(function (customer) { return _this.processCustomer(customer); });
    };
    Consumer.prototype.processCustomer = function (customer) {
        this.processed.push(customer);
    };
    Consumer.prototype.stopProcessing = function () {
        this.subscription.unsubscribe();
    };
    return Consumer;
}());
Consumer.ctorParameters = function () { return [
    { type: PubSubService, },
]; };

var InputOutput = (function () {
    function InputOutput(el, plain) {
        this.stringChanged = new EventEmitter$1();
        console.log(plain);
        this.el = el;
    }
    Object.defineProperty(InputOutput.prototype, "growingString", {
        get: function () {
            return this._growingString;
        },
        set: function (value) {
            this._growingString = value.toLowerCase();
            this.stringChanged.next({ value: 'changed to ' + this._growingString });
        },
        enumerable: true,
        configurable: true
    });
    InputOutput.prototype.ngOnInit = function () {
        console.log(this.fixedValue);
    };
    return InputOutput;
}());
InputOutput.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: undefined, decorators: [{ type: Attribute, args: ['plain',] },] },
]; };
InputOutput.propDecorators = {
    'stringChanged': [{ type: Output },],
    'counter': [{ type: Input },],
    'fixedValue': [{ type: Input },],
    'sum': [{ type: Input, args: ['mySum',] },],
    'headline': [{ type: Input },],
    'growingString': [{ type: Input },],
};

var Sorter = (function () {
    function Sorter() {
        this.direction = 1;
    }
    Sorter.prototype.sort = function (key, data) {
        var _this = this;
        if (this.key === key) {
            this.direction = -this.direction;
        }
        else {
            this.direction = 1;
        }
        this.key = key;
        data.sort(function (a, b) {
            if (a[key] === b[key]) {
                return 0;
            }
            else if (a[key] > b[key]) {
                return _this.direction;
            }
            else {
                return -_this.direction;
            }
        });
    };
    return Sorter;
}());

var Grid = (function () {
    function Grid() {
        this.sorter = new Sorter();
    }
    Grid.prototype.sort = function (key) {
        this.sorter.sort(key, this.rows);
    };
    Grid.prototype.ngOnInit = function () {
        console.log(this.name);
    };
    return Grid;
}());
Grid.ctorParameters = function () { return []; };
Grid.propDecorators = {
    'columns': [{ type: Input },],
    'rows': [{ type: Input },],
    'name': [{ type: Input },],
};

var Comment = (function () {
    function Comment() {
    }
    return Comment;
}());

var BaseComment = (function () {
    function BaseComment() {
        this.comments = [];
    }
    BaseComment.prototype.addComment = function () {
        var comment = new Comment();
        comment.text = this.text;
        comment.author = this.author;
        this.comments.push(comment);
    };
    BaseComment.prototype.lastUpdated = function () {
        return Date().toString();
    };
    return BaseComment;
}());

var __extends$5 = (undefined && undefined.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var CommentSection1 = (function (_super) {
    __extends$5(CommentSection1, _super);
    function CommentSection1() {
        var _this = _super.call(this) || this;
        _this.message = 'Using ChangeDetectionStrategy.OnPush';
        return _this;
    }
    return CommentSection1;
}(BaseComment));
CommentSection1.ctorParameters = function () { return []; };

var __extends$6 = (undefined && undefined.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var CommentSection2 = (function (_super) {
    __extends$6(CommentSection2, _super);
    function CommentSection2() {
        var _this = _super.call(this) || this;
        _this.message = 'Using ChangeDetectionStrategy.Default';
        return _this;
    }
    return CommentSection2;
}(BaseComment));
CommentSection2.ctorParameters = function () { return []; };

var Coordinates = (function () {
    function Coordinates(x, y, viewContainer) {
        this.x = x;
        this.y = y;
        this.viewContainer = viewContainer;
    }
    return Coordinates;
}());

var Vertex = (function () {
    function Vertex(edgeService, vc) {
        this.edgeService = edgeService;
        this.vc = vc;
    }
    Vertex.prototype.setCoordinates = function () {
        var offsetLeft = this.element.nativeElement.offsetLeft;
        var offsetTop = this.element.nativeElement.offsetTop;
        this.edgeService.next(new Coordinates(offsetLeft, offsetTop, this.vc));
    };
    return Vertex;
}());
Vertex.ctorParameters = function () { return [
    { type: EdgeService, },
    { type: ViewContainerRef, },
]; };
Vertex.propDecorators = {
    'element': [{ type: ViewChild, args: ['vertex',] },],
};

var Insertion = (function () {
    function Insertion() {
    }
    Insertion.sort = function (input) {
        for (var j = 1; j < input.items.length; j++) {
            (function (j) {
                setTimeout(function () {
                    var key = input.items[j].val;
                    var i = j - 1;
                    while (i >= 0 && input.items[i].val > key) {
                        input.items[i + 1].val = input.items[i].val;
                        i = i - 1;
                    }
                    input.items[i + 1].val = key;
                    input.setCurrent(input.items[i + 1]);
                }, 1000 * j);
            })(j);
        }
    };
    return Insertion;
}());

var InsertionSort = (function () {
    function InsertionSort() {
        this.list = new ValList();
        this.list.items = [
            new ListItem(5),
            new ListItem(33),
            new ListItem(5),
            new ListItem(5),
            new ListItem(2),
            new ListItem(-2),
            new ListItem(4),
            new ListItem(88),
            new ListItem(6),
            new ListItem(400),
            new ListItem(1),
            new ListItem(58),
            new ListItem(30)
        ];
    }
    InsertionSort.prototype.sortList = function () {
        Insertion.sort(this.list);
    };
    return InsertionSort;
}());
InsertionSort.ctorParameters = function () { return []; };
var ValList = (function () {
    function ValList() {
    }
    ValList.prototype.setCurrent = function (item) {
        this.clearAll();
        item.current = true;
    };
    ValList.prototype.clearAll = function () {
        this.items.forEach(function (i) { return i.current = false; });
    };
    return ValList;
}());
var ListItem = (function () {
    function ListItem(val) {
        this.val = val;
        this.current = false;
    }
    ListItem.prototype.getClass = function () {
        if (this.current) {
            return 'current-item';
        }
        return null;
    };
    return ListItem;
}());

var AppModule = (function () {
    function AppModule() {
    }
    return AppModule;
}());
AppModule.ctorParameters = function () { return []; };

var styles_About = [];
var RenderType_About = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_About,
    data: { animation: [] }
});
function View_About_0() {
    return viewDef(0, [
        elementDef(0, null, null, 27, 'div', [[
                'class',
                'container'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Welcome']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'p', [], null, null, null, null, null),
        textDef(null, ['\n        This is a live demo of my Angular sample components.\n    ']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 6, 'p', [], null, null, null, null, null),
        textDef(null, ['\n        I hope you will find these ']),
        elementDef(0, null, null, 3, 'a', [], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 11).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['demos']),
        textDef(null, [' useful and educational. Stay tuned for more progress soon.\n        Don\'t hesitate to tweet me at @helgevold with suggestions for more components.\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 4, 'p', [], null, null, null, null, null),
        textDef(null, ['\n        Click ']),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/angular-2-articles'
            ]
        ], null, null, null, null, null),
        textDef(null, ['here']),
        textDef(null, [' for a full list of my Angular articles.\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 4, 'p', [], null, null, null, null, null),
        textDef(null, ['\n        The source code for the full set of components is available on ']),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'https://github.com/thelgevold/angular-2-samples'
            ]
        ], null, null, null, null, null),
        textDef(null, ['GitHub']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = check(view, 12, 0, '/Demo/Spreadsheet');
        check(view, 11, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 11).target;
        var currVal_1 = nodeValue(view, 11).href;
        check(view, 10, 0, currVal_0, currVal_1);
    });
}
var RenderType_About_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_About_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'about', [], null, null, null, View_About_0, RenderType_About),
        directiveDef(1024, null, 0, About, [], null, null)
    ], null, null);
}
var AboutNgFactory = createComponentFactory('about', About, View_About_Host_0);

var styles_DemoPage = [];
var RenderType_DemoPage = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_DemoPage,
    data: { animation: [] }
});
function View_DemoPage_0() {
    return viewDef(0, [
        elementDef(0, null, null, 153, 'div', [[
                'class',
                'container'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 13, 'div', [[
                'class',
                'jumbotron'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Angular sample components']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 4, 'p', [], null, null, null, null, null),
        textDef(null, ['\n            More documentation about each specific component can be found\n            ']),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/angular-2.0-examples'
            ]
        ], null, null, null, null, null),
        textDef(null, ['here']),
        textDef(null, ['.\n        ']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'p', [], null, null, null, null, null),
        textDef(null, ['Current version: Angular 4.0-rc1']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 135, 'div', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 126, 'div', [[
                'class',
                'list-group col-md-3'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 22).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Virtualized Spreadsheet']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 27).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Lazy Loaded Tree View']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 32).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['RxJs Streams']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 37).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['RxJs Caching']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 42).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['React Integration']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 47).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Graph']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 52).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Insertion Sort']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 57).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Redux']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 62).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Buffering in RxJs']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 67).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Dynamic Form']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 72).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Pub Sub']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 77).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Text Editor']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 82).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Form']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 87).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Change Detection']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 92).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Http']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 97).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Input Controls']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 102).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Recursive tree view']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 107).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Data Grid']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 112).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Address Book']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 117).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['JQuery Integration']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 122).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Access Child Component']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 127).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Interactive contact list']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 132).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Bound Textbox']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 137).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Input/Output']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'list-group-item'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ],
            [
                1,
                'active'
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 142).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Non Bindable']),
        textDef(null, ['\n       ']),
        textDef(null, ['\n\n        ']),
        elementDef(0, null, null, 4, 'div', [[
                'class',
                'col-md-9'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(256, null, null, 1, 'router-outlet', [], null, null, null, null, null),
        directiveDef(2, null, 0, RouterOutlet, [
            RouterOutletMap,
            ViewContainerRef,
            ComponentFactoryResolver,
            [
                8,
                null
            ]
        ], null, null),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = check(view, 23, 0, '/demo/spreadsheet');
        check(view, 22, 0, currVal_0);
        var currVal_1 = check(view, 28, 0, '/demo/countries');
        check(view, 27, 0, currVal_1);
        var currVal_2 = check(view, 33, 0, '/demo/rxjs');
        check(view, 32, 0, currVal_2);
        var currVal_3 = check(view, 38, 0, '/demo/friends');
        check(view, 37, 0, currVal_3);
        var currVal_4 = check(view, 43, 0, '/demo/react');
        check(view, 42, 0, currVal_4);
        var currVal_5 = check(view, 48, 0, '/demo/graph');
        check(view, 47, 0, currVal_5);
        var currVal_6 = check(view, 53, 0, '/demo/algorithms');
        check(view, 52, 0, currVal_6);
        var currVal_7 = check(view, 58, 0, '/demo/redux');
        check(view, 57, 0, currVal_7);
        var currVal_8 = check(view, 63, 0, '/demo/buffering');
        check(view, 62, 0, currVal_8);
        var currVal_9 = check(view, 68, 0, '/demo/survey');
        check(view, 67, 0, currVal_9);
        var currVal_10 = check(view, 73, 0, '/demo/pub-sub');
        check(view, 72, 0, currVal_10);
        var currVal_11 = check(view, 78, 0, '/demo/text-editor');
        check(view, 77, 0, currVal_11);
        var currVal_12 = check(view, 83, 0, '/demo/form');
        check(view, 82, 0, currVal_12);
        var currVal_13 = check(view, 88, 0, '/demo/change');
        check(view, 87, 0, currVal_13);
        var currVal_14 = check(view, 93, 0, '/demo/http');
        check(view, 92, 0, currVal_14);
        var currVal_15 = check(view, 98, 0, '/demo/input');
        check(view, 97, 0, currVal_15);
        var currVal_16 = check(view, 103, 0, '/demo/treeview');
        check(view, 102, 0, currVal_16);
        var currVal_17 = check(view, 108, 0, '/demo/grid');
        check(view, 107, 0, currVal_17);
        var currVal_18 = check(view, 113, 0, '/demo/address');
        check(view, 112, 0, currVal_18);
        var currVal_19 = check(view, 118, 0, '/demo/jquery');
        check(view, 117, 0, currVal_19);
        var currVal_20 = check(view, 123, 0, '/demo/parent-child');
        check(view, 122, 0, currVal_20);
        var currVal_21 = check(view, 128, 0, '/demo/contact');
        check(view, 127, 0, currVal_21);
        var currVal_22 = check(view, 133, 0, '/demo/textbox');
        check(view, 132, 0, currVal_22);
        var currVal_23 = check(view, 138, 0, '/demo/iodemo');
        check(view, 137, 0, currVal_23);
        var currVal_24 = check(view, 143, 0, '/demo/non-bindable');
        check(view, 142, 0, currVal_24);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 22).target;
        var currVal_1 = nodeValue(view, 22).href;
        var currVal_2 = comp.getLinkStyle('/demo/spreadsheet');
        check(view, 21, 0, currVal_0, currVal_1, currVal_2);
        var currVal_3 = nodeValue(view, 27).target;
        var currVal_4 = nodeValue(view, 27).href;
        var currVal_5 = comp.getLinkStyle('/demo/countries');
        check(view, 26, 0, currVal_3, currVal_4, currVal_5);
        var currVal_6 = nodeValue(view, 32).target;
        var currVal_7 = nodeValue(view, 32).href;
        var currVal_8 = comp.getLinkStyle('/demo/rxjs');
        check(view, 31, 0, currVal_6, currVal_7, currVal_8);
        var currVal_9 = nodeValue(view, 37).target;
        var currVal_10 = nodeValue(view, 37).href;
        var currVal_11 = comp.getLinkStyle('/demo/friends');
        check(view, 36, 0, currVal_9, currVal_10, currVal_11);
        var currVal_12 = nodeValue(view, 42).target;
        var currVal_13 = nodeValue(view, 42).href;
        var currVal_14 = comp.getLinkStyle('/demo/react');
        check(view, 41, 0, currVal_12, currVal_13, currVal_14);
        var currVal_15 = nodeValue(view, 47).target;
        var currVal_16 = nodeValue(view, 47).href;
        var currVal_17 = comp.getLinkStyle('/demo/graph');
        check(view, 46, 0, currVal_15, currVal_16, currVal_17);
        var currVal_18 = nodeValue(view, 52).target;
        var currVal_19 = nodeValue(view, 52).href;
        var currVal_20 = comp.getLinkStyle('/demo/algorithms');
        check(view, 51, 0, currVal_18, currVal_19, currVal_20);
        var currVal_21 = nodeValue(view, 57).target;
        var currVal_22 = nodeValue(view, 57).href;
        var currVal_23 = comp.getLinkStyle('/demo/redux');
        check(view, 56, 0, currVal_21, currVal_22, currVal_23);
        var currVal_24 = nodeValue(view, 62).target;
        var currVal_25 = nodeValue(view, 62).href;
        var currVal_26 = comp.getLinkStyle('/demo/buffering');
        check(view, 61, 0, currVal_24, currVal_25, currVal_26);
        var currVal_27 = nodeValue(view, 67).target;
        var currVal_28 = nodeValue(view, 67).href;
        var currVal_29 = comp.getLinkStyle('/demo/survey');
        check(view, 66, 0, currVal_27, currVal_28, currVal_29);
        var currVal_30 = nodeValue(view, 72).target;
        var currVal_31 = nodeValue(view, 72).href;
        var currVal_32 = comp.getLinkStyle('/demo/pub-sub');
        check(view, 71, 0, currVal_30, currVal_31, currVal_32);
        var currVal_33 = nodeValue(view, 77).target;
        var currVal_34 = nodeValue(view, 77).href;
        var currVal_35 = comp.getLinkStyle('/demo/text-editor');
        check(view, 76, 0, currVal_33, currVal_34, currVal_35);
        var currVal_36 = nodeValue(view, 82).target;
        var currVal_37 = nodeValue(view, 82).href;
        var currVal_38 = comp.getLinkStyle('/demo/form');
        check(view, 81, 0, currVal_36, currVal_37, currVal_38);
        var currVal_39 = nodeValue(view, 87).target;
        var currVal_40 = nodeValue(view, 87).href;
        var currVal_41 = comp.getLinkStyle('/demo/change');
        check(view, 86, 0, currVal_39, currVal_40, currVal_41);
        var currVal_42 = nodeValue(view, 92).target;
        var currVal_43 = nodeValue(view, 92).href;
        var currVal_44 = comp.getLinkStyle('/demo/http');
        check(view, 91, 0, currVal_42, currVal_43, currVal_44);
        var currVal_45 = nodeValue(view, 97).target;
        var currVal_46 = nodeValue(view, 97).href;
        var currVal_47 = comp.getLinkStyle('/demo/input');
        check(view, 96, 0, currVal_45, currVal_46, currVal_47);
        var currVal_48 = nodeValue(view, 102).target;
        var currVal_49 = nodeValue(view, 102).href;
        var currVal_50 = comp.getLinkStyle('/demo/treeview');
        check(view, 101, 0, currVal_48, currVal_49, currVal_50);
        var currVal_51 = nodeValue(view, 107).target;
        var currVal_52 = nodeValue(view, 107).href;
        var currVal_53 = comp.getLinkStyle('/demo/grid');
        check(view, 106, 0, currVal_51, currVal_52, currVal_53);
        var currVal_54 = nodeValue(view, 112).target;
        var currVal_55 = nodeValue(view, 112).href;
        var currVal_56 = comp.getLinkStyle('/demo/address');
        check(view, 111, 0, currVal_54, currVal_55, currVal_56);
        var currVal_57 = nodeValue(view, 117).target;
        var currVal_58 = nodeValue(view, 117).href;
        var currVal_59 = comp.getLinkStyle('/demo/jquery');
        check(view, 116, 0, currVal_57, currVal_58, currVal_59);
        var currVal_60 = nodeValue(view, 122).target;
        var currVal_61 = nodeValue(view, 122).href;
        var currVal_62 = comp.getLinkStyle('/demo/parent-child');
        check(view, 121, 0, currVal_60, currVal_61, currVal_62);
        var currVal_63 = nodeValue(view, 127).target;
        var currVal_64 = nodeValue(view, 127).href;
        var currVal_65 = comp.getLinkStyle('/demo/contact');
        check(view, 126, 0, currVal_63, currVal_64, currVal_65);
        var currVal_66 = nodeValue(view, 132).target;
        var currVal_67 = nodeValue(view, 132).href;
        var currVal_68 = comp.getLinkStyle('/demo/textbox');
        check(view, 131, 0, currVal_66, currVal_67, currVal_68);
        var currVal_69 = nodeValue(view, 137).target;
        var currVal_70 = nodeValue(view, 137).href;
        var currVal_71 = comp.getLinkStyle('/demo/iodemo');
        check(view, 136, 0, currVal_69, currVal_70, currVal_71);
        var currVal_72 = nodeValue(view, 142).target;
        var currVal_73 = nodeValue(view, 142).href;
        var currVal_74 = comp.getLinkStyle('/demo/non-bindable');
        check(view, 141, 0, currVal_72, currVal_73, currVal_74);
    });
}
var RenderType_DemoPage_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_DemoPage_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'demo-page', [], null, null, null, View_DemoPage_0, RenderType_DemoPage),
        directiveDef(1024, null, 0, DemoPage, [Location], null, null)
    ], null, null);
}
var DemoPageNgFactory = createComponentFactory('demo-page', DemoPage, View_DemoPage_Host_0);

var styles_Spreadsheet = [];
var RenderType_Spreadsheet = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Spreadsheet,
    data: { animation: [] }
});
function View_Spreadsheet_1() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'td', [[
                'class',
                'columnHeader'
            ]
        ], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit;
        check(view, 1, 0, currVal_0);
    });
}
function View_Spreadsheet_3() {
    return viewDef(0, [
        elementDef(0, null, null, 3, 'td', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 0, 'input', [], [
            [
                3,
                'id',
                0
            ],
            [
                3,
                'value',
                0
            ]
        ], [
            [
                null,
                'input'
            ],
            [
                null,
                'click'
            ],
            [
                null,
                'keyup'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = ((view.context.$implicit.cellValue = $event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('click' === eventName)) {
                var pd_1 = (comp.model.selectColumn(view.context.$implicit) !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('keyup' === eventName)) {
                var pd_2 = (comp.navigate($event) !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['\n        '])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = inlineInterpolate(2, '', view.context.$implicit.rowIndex, '-', view.context.$implicit.columnIndex, '');
        var currVal_1 = view.context.$implicit.cellValue;
        check(view, 2, 0, currVal_0, currVal_1);
    });
}
function View_Spreadsheet_2() {
    return viewDef(0, [
        elementDef(0, null, null, 7, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'td', [[
                'class',
                'row-number-column'
            ]
        ], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_Spreadsheet_3),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.columns;
        check(view, 6, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.rowIndex;
        check(view, 3, 0, currVal_0);
    });
}
function View_Spreadsheet_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Virtualized Spreadsheet']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 13, 'table', [[
                'id',
                'spreadsheet'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 11, 'tbody', [], null, null, null, null, null),
        elementDef(0, null, null, 6, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 0, 'td', [[
                'class',
                'row-number-column'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_Spreadsheet_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_Spreadsheet_2),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/virtualized-spreadsheet-component-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.header;
        check(view, 11, 0, currVal_0);
        var currVal_1 = comp.visibleRows;
        check(view, 15, 0, currVal_1);
    }, null);
}
var RenderType_Spreadsheet_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Spreadsheet_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'spreadsheet', [], null, null, null, View_Spreadsheet_0, RenderType_Spreadsheet),
        directiveDef(1152, null, 0, Spreadsheet, [], null, null)
    ], null, null);
}
var SpreadsheetNgFactory = createComponentFactory('spreadsheet', Spreadsheet, View_Spreadsheet_Host_0);

var styles_JqueryIntegration = [];
var RenderType_JqueryIntegration = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_JqueryIntegration,
    data: { animation: [] }
});
function View_JqueryIntegration_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Integrating jQuery with Angular 2.0']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'moving-box'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    Drag this box around\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/using-jquery-with-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], null, null);
}
var RenderType_JqueryIntegration_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_JqueryIntegration_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'jquery-integration', [], null, null, null, View_JqueryIntegration_0, RenderType_JqueryIntegration),
        directiveDef(1025, null, 0, JqueryIntegration, [ElementRef], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var JqueryIntegrationNgFactory = createComponentFactory('jquery-integration', JqueryIntegration, View_JqueryIntegration_Host_0);

var styles_Angular2Host = [];
var RenderType_Angular2Host = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Angular2Host,
    data: { animation: [] }
});
function View_Angular2Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 9, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Integrating React with Angular 2.0']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'p', [], null, null, null, null, null),
        textDef(null, ['This component integrates a FLUX based React component with Angular 2.0.\n       The treeview supports expanding and collapsing of nodes. Click the "icon" next to the node text to expand or\n       collapse a node.\n    ']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 0, 'div', [[
                'id',
                'react-tree-view'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/integrating-react-with-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], null, null);
}
var RenderType_Angular2Host_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Angular2Host_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'angular-2-host', [], null, null, null, View_Angular2Host_0, RenderType_Angular2Host),
        directiveDef(1025, null, 0, Angular2Host, [], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var Angular2HostNgFactory = createComponentFactory('angular-2-host', Angular2Host, View_Angular2Host_Host_0);

var styles_InsertionSort = [];
var RenderType_InsertionSort = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_InsertionSort,
    data: { animation: [] }
});
function View_InsertionSort_1() {
    return viewDef(0, [
        elementDef(0, null, null, 5, 'td', [], null, null, null, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngClass: [
                0,
                'ngClass'
            ]
        }, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'span', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n        '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.getClass();
        check(view, 1, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.val;
        check(view, 4, 0, currVal_0);
    });
}
function View_InsertionSort_0() {
    return viewDef(0, [
        elementDef(0, null, null, 8, 'table', [[
                'class',
                'sort'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 6, 'tbody', [], null, null, null, null, null),
        elementDef(0, null, null, 4, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_InsertionSort_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 4, 'div', [[
                'style',
                'margin-top: 10px;'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.sortList() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Sort list']),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.list.items;
        check(view, 6, 0, currVal_0);
    }, null);
}
var RenderType_InsertionSort_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_InsertionSort_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'insertion-sort', [], null, null, null, View_InsertionSort_0, RenderType_InsertionSort),
        directiveDef(1024, null, 0, InsertionSort, [], null, null)
    ], null, null);
}
var InsertionSortNgFactory = createComponentFactory('insertion-sort', InsertionSort, View_InsertionSort_Host_0);

var styles_Algorithms = [];
var RenderType_Algorithms = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Algorithms,
    data: { animation: [] }
});
function View_Algorithms_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Insertion Sort Demo']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Watch the list get sorted as the algorithm traverses the list']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'insertion-sort', [], null, null, null, View_InsertionSort_0, RenderType_InsertionSort),
        directiveDef(1024, null, 0, InsertionSort, [], null, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/timeouts-and-timerwrapper-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], null, null);
}
var RenderType_Algorithms_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Algorithms_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'algorithms', [], null, null, null, View_Algorithms_0, RenderType_Algorithms),
        directiveDef(1024, null, 0, Algorithms, [], null, null)
    ], null, null);
}
var AlgorithmsNgFactory = createComponentFactory('algorithms', Algorithms, View_Algorithms_Host_0);

var styles_Vertex = [];
var RenderType_Vertex = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Vertex,
    data: { animation: [] }
});
function View_Vertex_0() {
    return viewDef(0, [
        queryDef(20480, 1, { element: 0 }),
        elementDef(0, [
            [
                1,
                0
            ],
            [
                'vertex',
                1
            ]
        ], null, 2, 'div', [[
                'class',
                'vertex'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.setCoordinates() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        elementDef(0, null, null, 1, 'span', [[
                'class',
                'vertex-text'
            ]
        ], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.value;
        check(view, 3, 0, currVal_0);
    });
}
var RenderType_Vertex_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Vertex_Host_0() {
    return viewDef(0, [
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], null, null)
    ], null, null);
}
var VertexNgFactory = createComponentFactory('vertex', Vertex, View_Vertex_Host_0);

var styles_Graph = [];
var RenderType_Graph = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Graph,
    data: { animation: [] }
});
function View_Graph_0() {
    return viewDef(0, [
        elementDef(0, null, null, 46, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Create a Graph']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-info'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        Click any pair of nodes to connect them with an edge\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 34, 'table', [[
                'class',
                'graph-table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 32, 'tbody', [], null, null, null, null, null),
        elementDef(0, null, null, 8, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 8, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        textDef(null, ['\n        ']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 11, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(256, null, null, 1, 'vertex', [], null, null, null, View_Vertex_0, RenderType_Vertex),
        directiveDef(1024, null, 0, Vertex, [
            EdgeService,
            ViewContainerRef
        ], { value: [
                0,
                'value'
            ]
        }, null),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/loading-components-dynamically-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = 'A';
        check(view, 9, 0, currVal_0);
        var currVal_1 = 'B';
        check(view, 18, 0, currVal_1);
        var currVal_2 = 'C';
        check(view, 21, 0, currVal_2);
        var currVal_3 = 'E';
        check(view, 27, 0, currVal_3);
        var currVal_4 = 'F';
        check(view, 30, 0, currVal_4);
        var currVal_5 = 'G';
        check(view, 37, 0, currVal_5);
        var currVal_6 = 'H';
        check(view, 40, 0, currVal_6);
        var currVal_7 = 'I';
        check(view, 43, 0, currVal_7);
    }, null);
}
var RenderType_Graph_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Graph_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 2, 'graph', [], null, null, null, View_Graph_0, RenderType_Graph),
        providerDef(0, null, 1, EdgeService, EdgeService, []),
        directiveDef(1025, null, 0, Graph, [
            ComponentFactoryResolver,
            EdgeService
        ], null, null)
    ], function (check, view) {
        check(view, 2, 0);
    }, null);
}
var GraphNgFactory = createComponentFactory('graph', Graph, View_Graph_Host_0);

var styles_Producer = [];
var RenderType_Producer = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Producer,
    data: { animation: [] }
});
function View_Producer_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['First Name']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 5, 'input', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 4).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 4).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 6).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 6).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.firstName = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Last Name']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 5, 'input', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 14).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 14).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 16).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 16).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.lastName = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 4, 'div', [[
                'style',
                'margin-top: 10px;'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.createCustomer() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Create Customer']),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.firstName;
        check(view, 6, 0, currVal_0);
        var currVal_1 = comp.lastName;
        check(view, 16, 0, currVal_1);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 8).ngClassUntouched;
        var currVal_1 = nodeValue(view, 8).ngClassTouched;
        var currVal_2 = nodeValue(view, 8).ngClassPristine;
        var currVal_3 = nodeValue(view, 8).ngClassDirty;
        var currVal_4 = nodeValue(view, 8).ngClassValid;
        var currVal_5 = nodeValue(view, 8).ngClassInvalid;
        var currVal_6 = nodeValue(view, 8).ngClassPending;
        check(view, 3, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
        var currVal_7 = nodeValue(view, 18).ngClassUntouched;
        var currVal_8 = nodeValue(view, 18).ngClassTouched;
        var currVal_9 = nodeValue(view, 18).ngClassPristine;
        var currVal_10 = nodeValue(view, 18).ngClassDirty;
        var currVal_11 = nodeValue(view, 18).ngClassValid;
        var currVal_12 = nodeValue(view, 18).ngClassInvalid;
        var currVal_13 = nodeValue(view, 18).ngClassPending;
        check(view, 13, 0, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13);
    });
}
var RenderType_Producer_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Producer_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'producer', [], null, null, null, View_Producer_0, RenderType_Producer),
        directiveDef(1024, null, 0, Producer, [PubSubService], null, null)
    ], null, null);
}
var ProducerNgFactory = createComponentFactory('producer', Producer, View_Producer_Host_0);

var styles_Consumer = [];
var RenderType_Consumer = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Consumer,
    data: { animation: [] }
});
function View_Consumer_2() {
    return viewDef(0, [
        elementDef(0, null, null, 7, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n            '])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.firstName;
        check(view, 3, 0, currVal_0);
        var currVal_1 = view.context.$implicit.lastName;
        check(view, 6, 0, currVal_1);
    });
}
function View_Consumer_1() {
    return viewDef(0, [
        elementDef(0, null, null, 27, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['Processed Customers']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 18, 'table', [[
                'class',
                'table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 9, 'thead', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 6, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, ['First Name']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, ['Last Name']),
        textDef(null, ['\n            ']),
        textDef(null, ['\n        ']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 4, 'tbody', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        anchorDef(256, null, null, 1, null, View_Consumer_2),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.stopProcessing() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Stop Processing']),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.processed;
        check(view, 21, 0, currVal_0);
    }, null);
}
function View_Consumer_0() {
    return viewDef(0, [
        anchorDef(256, null, null, 1, null, View_Consumer_1),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null)
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = (comp.processed.length > 0);
        check(view, 1, 0, currVal_0);
    }, null);
}
var RenderType_Consumer_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Consumer_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'consumer', [], null, null, null, View_Consumer_0, RenderType_Consumer),
        directiveDef(1025, null, 0, Consumer, [PubSubService], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var ConsumerNgFactory = createComponentFactory('consumer', Consumer, View_Consumer_Host_0);

var styles_PubSub = [];
var RenderType_PubSub = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_PubSub,
    data: { animation: [] }
});
function View_PubSub_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Pub Sub Using Observables']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'producer', [], null, null, null, View_Producer_0, RenderType_Producer),
        directiveDef(1024, null, 0, Producer, [PubSubService], null, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'consumer', [], null, null, null, View_Consumer_0, RenderType_Consumer),
        directiveDef(1025, null, 0, Consumer, [PubSubService], null, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/pub-sub-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        check(view, 10, 0);
    }, null);
}
var RenderType_PubSub_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_PubSub_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 2, 'pub-sub', [], null, null, null, View_PubSub_0, RenderType_PubSub),
        directiveDef(1024, null, 0, PubSub, [], null, null),
        providerDef(32768, null, 1, PubSubService, PubSubService, [])
    ], null, null);
}
var PubSubNgFactory = createComponentFactory('pub-sub', PubSub, View_PubSub_Host_0);

var styles_TextEditor = [];
var RenderType_TextEditor = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_TextEditor,
    data: { animation: [] }
});
function View_TextEditor_1() {
    return viewDef(0, [
        elementDef(0, null, null, 3, 'span', [], null, null, null, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngClass: [
                0,
                'ngClass'
            ]
        }, null),
        pureObjectDef([
            'currentChar',
            'selectedChar'
        ]),
        textDef(null, [
            '',
            ''
        ])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = check(view, 2, 0, view.context.$implicit.isCurrent, view.context.$implicit.isSelected);
        check(view, 1, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.value;
        check(view, 3, 0, currVal_0);
    });
}
function View_TextEditor_0() {
    return viewDef(0, [
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Text editor based on Observables']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-success'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    Supports typing of letters and numbers. Basic text selection and cursor placement is also supported.\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 5, 'div', [[
                'class',
                'editor'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 2, 'div', [
            [
                'class',
                'page noselect'
            ],
            [
                'id',
                'page'
            ]
        ], null, null, null, null, null),
        anchorDef(256, null, null, 1, null, View_TextEditor_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/observables-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.currentDocument.characters;
        check(view, 11, 0, currVal_0);
    }, null);
}
var RenderType_TextEditor_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_TextEditor_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'editor', [], null, null, null, View_TextEditor_0, RenderType_TextEditor),
        directiveDef(1025, null, 0, TextEditor, [], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var TextEditorNgFactory = createComponentFactory('editor', TextEditor, View_TextEditor_Host_0);

var styles_AddressBook = [];
var RenderType_AddressBook = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_AddressBook,
    data: { animation: [] }
});
function View_AddressBook_1() {
    return viewDef(0, [
        elementDef(0, null, null, 7, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n        '])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.name;
        check(view, 3, 0, currVal_0);
        var currVal_1 = view.context.$implicit.address;
        check(view, 6, 0, currVal_1);
    });
}
function View_AddressBook_0() {
    return viewDef(0, [
        elementDef(0, null, null, 14, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Dependency Injection']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h2', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 5, 'table', [[
                'class',
                'table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 3, 'tbody', [], null, null, null, null, null),
        anchorDef(256, null, null, 1, null, View_AddressBook_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/dependency-injection-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.result.people;
        check(view, 12, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.title;
        check(view, 6, 0, currVal_0);
    });
}
var RenderType_AddressBook_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_AddressBook_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 2, 'address-book', [], null, null, null, View_AddressBook_0, RenderType_AddressBook),
        providerDef(0, null, 1, AddressBookService, AddressBookService, [Http]),
        directiveDef(1024, null, 0, AddressBook, [
            AddressBookService,
            AddressBookTitleService
        ], null, null)
    ], null, null);
}
var AddressBookNgFactory = createComponentFactory('address-book', AddressBook, View_AddressBook_Host_0);

var styles_HttpSample = [];
var RenderType_HttpSample = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_HttpSample,
    data: { animation: [] }
});
function View_HttpSample_1() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '\n    ',
            '\n'
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit;
        check(view, 1, 0, currVal_0);
    });
}
function View_HttpSample_2() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '\n    ',
            '\n'
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit;
        check(view, 1, 0, currVal_0);
    });
}
function View_HttpSample_3() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '\n    ',
            '\n'
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit;
        check(view, 1, 0, currVal_0);
    });
}
function View_HttpSample_4() {
    return viewDef(0, [
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-danger'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        There was an error loading the list of friends (Intentional error testing)\n    ']),
        textDef(null, ['\n'])
    ], null, null);
}
function View_HttpSample_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Making Http Requests']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-success'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    Click a country to display that country\'s capitol. Observables in flight will be cancelled prior to loading new data.\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 26, 'table', [[
                'class',
                'table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 24, 'tbody', [], null, null, null, null, null),
        elementDef(0, null, null, 4, 'tr', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                comp.country.next('usa');
                var pd_0 = ((comp.activeCountry = 'usa') !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngClass: [
                0,
                'ngClass'
            ]
        }, null),
        pureObjectDef(['active']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, ['USA']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 4, 'tr', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                comp.country.next('denmark');
                var pd_0 = ((comp.activeCountry = 'denmark') !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngClass: [
                0,
                'ngClass'
            ]
        }, null),
        pureObjectDef(['active']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, ['Denmark']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 4, 'tr', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                comp.country.next('germany');
                var pd_0 = ((comp.activeCountry = 'germany') !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngClass: [
                0,
                'ngClass'
            ]
        }, null),
        pureObjectDef(['active']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, ['Germany']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 4, 'tr', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                comp.country.next('argentina');
                var pd_0 = ((comp.activeCountry = 'argentina') !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngClass: [
                0,
                'ngClass'
            ]
        }, null),
        pureObjectDef(['active']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, ['Argentina']),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 3, 'div', [[
                'style',
                'margin-left: 10px;'
            ]
        ], null, null, null, null, null),
        textDef(null, ['The capitol is ']),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-success'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    List of friends using Observables\n']),
        textDef(null, ['\n']),
        anchorDef(256, null, null, 1, null, View_HttpSample_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-success'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    List of friends loaded using Promises\n']),
        textDef(null, ['\n']),
        anchorDef(256, null, null, 1, null, View_HttpSample_2),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-success'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    List of friends and customer loaded successfully in parallel\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Friends:']),
        textDef(null, ['\n']),
        anchorDef(256, null, null, 1, null, View_HttpSample_3),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Customer:']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-success'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    Loaded a contract after first loading a customer\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 7, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            'Customer: ',
            ''
        ]),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            'Product: ',
            ''
        ]),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n']),
        anchorDef(256, null, null, 1, null, View_HttpSample_4),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-success'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    Making a post request\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 13, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.postData() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Post Data']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'p', [], null, null, null, null, null),
        textDef(null, ['Posted the following values:']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/angular-2.0-and-http'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = check(view, 11, 0, comp.isActive('usa'));
        check(view, 10, 0, currVal_0);
        var currVal_1 = check(view, 17, 0, comp.isActive('denmark'));
        check(view, 16, 0, currVal_1);
        var currVal_2 = check(view, 23, 0, comp.isActive('germany'));
        check(view, 22, 0, currVal_2);
        var currVal_3 = check(view, 29, 0, comp.isActive('argentina'));
        check(view, 28, 0, currVal_3);
        var currVal_4 = comp.result.friends;
        check(view, 45, 0, currVal_4);
        var currVal_5 = comp.friendsAsPromise.friends;
        check(view, 53, 0, currVal_5);
        var currVal_6 = comp.combined.friends;
        check(view, 64, 0, currVal_6);
        var currVal_7 = comp.error;
        check(view, 91, 0, currVal_7);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.capitol;
        check(view, 37, 0, currVal_0);
        var currVal_1 = comp.combined.customer.name;
        check(view, 72, 0, currVal_1);
        var currVal_2 = ((comp.customer == null) ? null : comp.customer.name);
        check(view, 82, 0, currVal_2);
        var currVal_3 = ((comp.contract == null) ? null : comp.contract.product);
        check(view, 85, 0, currVal_3);
        var currVal_4 = comp.postResponse.firstName;
        check(view, 105, 0, currVal_4);
        var currVal_5 = comp.postResponse.lastName;
        check(view, 108, 0, currVal_5);
    });
}
var RenderType_HttpSample_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_HttpSample_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'ng-component', [], null, null, null, View_HttpSample_0, RenderType_HttpSample),
        directiveDef(1024, null, 0, HttpSample, [Http], null, null)
    ], null, null);
}
var HttpSampleNgFactory = createComponentFactory('ng-component', HttpSample, View_HttpSample_Host_0);

var styles_TreeView = [];
var RenderType_TreeView = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_TreeView,
    data: { animation: [] }
});
function View_TreeView_3() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'li', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit;
        check(view, 1, 0, currVal_0);
    });
}
function View_TreeView_2() {
    return viewDef(0, [
        elementDef(0, null, null, 10, 'div', [], null, null, null, null, null),
        textDef(null, ['\n\n            ']),
        elementDef(0, null, null, 4, 'ul', [], null, null, null, null, null),
        textDef(null, ['\n                ']),
        anchorDef(256, null, null, 1, null, View_TreeView_3),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n            ']),
        textDef(null, ['\n\n            ']),
        elementDef(0, null, null, 1, 'tree-view', [], null, null, null, View_TreeView_0, RenderType_TreeView),
        directiveDef(1024, null, 0, TreeView$1, [], { directories: [
                0,
                'directories'
            ]
        }, null),
        textDef(null, ['\n\n        '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.parent.context.$implicit.files;
        check(view, 5, 0, currVal_0);
        var currVal_1 = view.parent.context.$implicit.directories;
        check(view, 9, 0, currVal_1);
    }, null);
}
function View_TreeView_1() {
    return viewDef(0, [
        elementDef(0, null, null, 8, 'li', [], null, null, null, null, null),
        textDef(null, ['\n\n        ']),
        elementDef(0, null, null, 1, 'span', [[
                'class',
                'iconButton'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (view.context.$implicit.toggle() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, [
            '',
            ''
        ]),
        elementDef(0, null, null, 0, 'input', [[
                'type',
                'checkbox'
            ]
        ], [[
                3,
                'checked',
                0
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (view.context.$implicit.check() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, [
            ' ',
            '\n\n        '
        ]),
        anchorDef(256, null, null, 1, null, View_TreeView_2),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n\n    '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.expanded;
        check(view, 7, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.getIcon();
        check(view, 3, 0, currVal_0);
        var currVal_1 = view.context.$implicit.checked;
        check(view, 4, 0, currVal_1);
        var currVal_2 = view.context.$implicit.name;
        check(view, 5, 0, currVal_2);
    });
}
function View_TreeView_0() {
    return viewDef(0, [
        elementDef(0, null, null, 4, 'ul', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_TreeView_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        textDef(null, ['\n\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.directories;
        check(view, 3, 0, currVal_0);
    }, null);
}
var RenderType_TreeView_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_TreeView_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'tree-view', [], null, null, null, View_TreeView_0, RenderType_TreeView),
        directiveDef(1024, null, 0, TreeView$1, [], null, null)
    ], null, null);
}
var TreeViewNgFactory = createComponentFactory('tree-view', TreeView$1, View_TreeView_Host_0);

var styles_TreeViewDemo = [];
var RenderType_TreeViewDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_TreeViewDemo,
    data: { animation: [] }
});
function View_TreeViewDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Recursive TreeView']),
        elementDef(0, null, null, 1, 'tree-view', [], null, null, null, View_TreeView_0, RenderType_TreeView),
        directiveDef(1024, null, 0, TreeView$1, [], { directories: [
                0,
                'directories'
            ]
        }, null),
        textDef(null, ['          ']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/recursive-treeview-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.directories;
        check(view, 3, 0, currVal_0);
    }, null);
}
var RenderType_TreeViewDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_TreeViewDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'ng-component', [], null, null, null, View_TreeViewDemo_0, RenderType_TreeViewDemo),
        directiveDef(1024, null, 0, TreeViewDemo, [], null, null)
    ], null, null);
}
var TreeViewDemoNgFactory = createComponentFactory('ng-component', TreeViewDemo, View_TreeViewDemo_Host_0);

var styles_Grid = [];
var RenderType_Grid = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Grid,
    data: { animation: [] }
});
function View_Grid_1() {
    return viewDef(0, [
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.sort(view.context.$implicit.name) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.descr;
        check(view, 2, 0, currVal_0);
    });
}
function View_Grid_3() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.parent.context.$implicit[view.context.$implicit.name];
        check(view, 1, 0, currVal_0);
    });
}
function View_Grid_2() {
    return viewDef(0, [
        elementDef(0, null, null, 4, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_Grid_3),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.columns;
        check(view, 3, 0, currVal_0);
    }, null);
}
function View_Grid_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Sortable Grid']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 11, 'table', [[
                'class',
                'table table-striped'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 9, 'tbody', [], null, null, null, null, null),
        elementDef(0, null, null, 4, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_Grid_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_Grid_2),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.columns;
        check(view, 9, 0, currVal_0);
        var currVal_1 = comp.rows;
        check(view, 13, 0, currVal_1);
    }, null);
}
var RenderType_Grid_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Grid_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'grid', [], null, null, null, View_Grid_0, RenderType_Grid),
        directiveDef(1025, null, 0, Grid, [], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var GridNgFactory = createComponentFactory('grid', Grid, View_Grid_Host_0);

var styles_GridDemo = [];
var RenderType_GridDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_GridDemo,
    data: { animation: [] }
});
function View_GridDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'grid', [[
                'name',
                'person grid'
            ]
        ], null, null, null, View_Grid_0, RenderType_Grid),
        directiveDef(1025, null, 0, Grid, [], {
            columns: [
                0,
                'columns'
            ],
            rows: [
                1,
                'rows'
            ],
            name: [
                2,
                'name'
            ]
        }, null)
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.columns;
        var currVal_1 = comp.people;
        var currVal_2 = 'person grid';
        check(view, 1, 0, currVal_0, currVal_1, currVal_2);
    }, null);
}
var RenderType_GridDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_GridDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'ng-component', [], null, null, null, View_GridDemo_0, RenderType_GridDemo),
        directiveDef(1024, null, 0, GridDemo, [], null, null)
    ], null, null);
}
var GridDemoNgFactory = createComponentFactory('ng-component', GridDemo, View_GridDemo_Host_0);

var styles_InputControls = [];
var RenderType_InputControls = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_InputControls,
    data: { animation: [] }
});
function View_InputControls_1() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'li', [], null, null, null, null, null),
        textDef(null, ['Angular'])
    ], null, null);
}
function View_InputControls_2() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'li', [], null, null, null, null, null),
        textDef(null, ['JavaScript'])
    ], null, null);
}
function View_InputControls_3() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'li', [], null, null, null, null, null),
        textDef(null, ['C#'])
    ], null, null);
}
function View_InputControls_0() {
    return viewDef(0, [
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Input Controls']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 14, 'div', [[
                'class',
                'input-controls'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['"Two way bindings"']),
        textDef(null, ['\n\n                ']),
        elementDef(0, null, null, 5, 'input', [[
                'id',
                'name'
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 10).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 10).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 12).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 12).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.name = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n\n                ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            'Current Value: ',
            ''
        ]),
        textDef(null, ['\n            ']),
        textDef(null, ['\n\n            ']),
        elementDef(0, null, null, 26, 'div', [[
                'class',
                'input-controls'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['Select a gender']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 3, 'label', [], null, null, null, null, null),
        textDef(null, ['\n                        ']),
        elementDef(0, [[
                'male',
                1
            ]
        ], null, 0, 'input', [
            [
                'name',
                'gender'
            ],
            [
                'type',
                'radio'
            ],
            [
                'value',
                'Male'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = ((comp.gender = nodeValue(view, 29).value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['\n                        Male\n                    ']),
        textDef(null, ['\n                ']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 3, 'label', [], null, null, null, null, null),
        textDef(null, ['\n                        ']),
        elementDef(0, [[
                'female',
                1
            ]
        ], null, 0, 'input', [
            [
                'name',
                'gender'
            ],
            [
                'type',
                'radio'
            ],
            [
                'value',
                'Female'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = ((comp.gender = nodeValue(view, 37).value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['\n                        Female\n                    ']),
        textDef(null, ['\n                ']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                    Selected gender is ']),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n                ']),
        textDef(null, ['\n            ']),
        textDef(null, ['\n\n            ']),
        elementDef(0, null, null, 28, 'div', [[
                'class',
                'input-controls'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['Select your programming skills']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 3, 'label', [], null, null, null, null, null),
        textDef(null, ['\n                        ']),
        elementDef(0, [[
                'angularcb',
                1
            ]
        ], null, 0, 'input', [[
                'type',
                'checkbox'
            ]
        ], null, [[
                null,
                'change'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('change' === eventName)) {
                var pd_0 = ((comp.angular = nodeValue(view, 57).checked) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['\n                        Angular\n                    ']),
        textDef(null, ['\n                ']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 3, 'label', [], null, null, null, null, null),
        textDef(null, ['\n                        ']),
        elementDef(0, [[
                'javascriptcb',
                1
            ]
        ], null, 0, 'input', [[
                'type',
                'checkbox'
            ]
        ], null, [[
                null,
                'change'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('change' === eventName)) {
                var pd_0 = ((comp.javascript = nodeValue(view, 65).checked) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['\n                        JavaScript\n                    ']),
        textDef(null, ['\n                ']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 3, 'label', [], null, null, null, null, null),
        textDef(null, ['\n                        ']),
        elementDef(0, [[
                'csharpcb',
                1
            ]
        ], null, 0, 'input', [[
                'type',
                'checkbox'
            ]
        ], null, [[
                null,
                'change'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('change' === eventName)) {
                var pd_0 = ((comp.csharp = nodeValue(view, 73).checked) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['\n                        C#\n                    ']),
        textDef(null, ['\n                ']),
        textDef(null, ['\n            ']),
        textDef(null, ['\n\n            ']),
        elementDef(0, null, null, 13, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                Selected Skills:\n                ']),
        elementDef(0, null, null, 10, 'ul', [], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        anchorDef(256, null, null, 1, null, View_InputControls_1),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n                    ']),
        anchorDef(256, null, null, 1, null, View_InputControls_2),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n                    ']),
        anchorDef(256, null, null, 1, null, View_InputControls_3),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n                ']),
        textDef(null, ['\n            ']),
        textDef(null, ['\n\n            ']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/input-controls-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.name;
        check(view, 12, 0, currVal_0);
        var currVal_1 = comp.angular;
        check(view, 83, 0, currVal_1);
        var currVal_2 = comp.javascript;
        check(view, 86, 0, currVal_2);
        var currVal_3 = comp.csharp;
        check(view, 89, 0, currVal_3);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 14).ngClassUntouched;
        var currVal_1 = nodeValue(view, 14).ngClassTouched;
        var currVal_2 = nodeValue(view, 14).ngClassPristine;
        var currVal_3 = nodeValue(view, 14).ngClassDirty;
        var currVal_4 = nodeValue(view, 14).ngClassValid;
        var currVal_5 = nodeValue(view, 14).ngClassInvalid;
        var currVal_6 = nodeValue(view, 14).ngClassPending;
        check(view, 9, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
        var currVal_7 = comp.name;
        check(view, 17, 0, currVal_7);
        var currVal_8 = comp.gender;
        check(view, 44, 0, currVal_8);
    });
}
var RenderType_InputControls_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_InputControls_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'input-controls', [], null, null, null, View_InputControls_0, RenderType_InputControls),
        directiveDef(1024, null, 0, InputControls, [], null, null)
    ], null, null);
}
var InputControlsNgFactory = createComponentFactory('input-controls', InputControls, View_InputControls_Host_0);

var styles_ContactList = [];
var RenderType_ContactList = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_ContactList,
    data: { animation: [] }
});
function View_ContactList_1() {
    return viewDef(0, [
        elementDef(0, null, null, 8, 'tr', [[
                'style',
                'margin-bottom: 10px;'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, [' ']),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'button', [[
                'class',
                'btn btn-primary btn-xs'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.removeContact(view.context.$implicit) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Delete']),
        textDef(null, ['\n            '])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.descr;
        check(view, 3, 0, currVal_0);
    });
}
function View_ContactList_0() {
    return viewDef(0, [
        elementDef(0, null, null, 32, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Contact List']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 16, 'table', [[
                'class',
                'table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 7, 'thead', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 4, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, ['Name and phone number']),
        textDef(null, ['\n            ']),
        textDef(null, ['\n        ']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 4, 'tbody', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        anchorDef(256, null, null, 1, null, View_ContactList_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 8, 'div', [[
                'class',
                'addContactControls'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, [[
                'name',
                1
            ]
        ], null, 0, 'input', [[
                'placeholder',
                'name'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, [[
                'phone',
                1
            ]
        ], null, 0, 'input', [[
                'placeholder',
                'phone'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'button', [[
                'class',
                'btn btn-primary btn-xs'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.addContact(nodeValue(view, 25), nodeValue(view, 27)) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Add Contact']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.contacts;
        check(view, 19, 0, currVal_0);
    }, null);
}
var RenderType_ContactList_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_ContactList_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'contact-list', [], null, null, null, View_ContactList_0, RenderType_ContactList),
        directiveDef(1024, null, 0, ContactList, [], null, null)
    ], null, null);
}
var ContactListNgFactory = createComponentFactory('contact-list', ContactList, View_ContactList_Host_0);

var styles_BoundTextbox = [];
var RenderType_BoundTextbox = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_BoundTextbox,
    data: { animation: [] }
});
function View_BoundTextbox_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Bound Textbox']),
        elementDef(0, null, null, 0, 'input', [], [[
                3,
                'value',
                0
            ]
        ], [[
                null,
                'keyup'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('keyup' === eventName)) {
                var pd_0 = (comp.typing($event) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        elementDef(0, null, null, 1, 'span', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.text;
        check(view, 2, 0, currVal_0);
        var currVal_1 = comp.text;
        check(view, 4, 0, currVal_1);
    });
}
var RenderType_BoundTextbox_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_BoundTextbox_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'bound-textbox', [], null, null, null, View_BoundTextbox_0, RenderType_BoundTextbox),
        directiveDef(1024, null, 0, BoundTextbox, [], null, null)
    ], null, null);
}
var BoundTextboxNgFactory = createComponentFactory('bound-textbox', BoundTextbox, View_BoundTextbox_Host_0);

var styles_IgnoreBindings = [];
var RenderType_IgnoreBindings = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_IgnoreBindings,
    data: { animation: [] }
});
function View_IgnoreBindings_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Ignoring Bindings']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        textDef(null, ['Ignored Binding:\n    ']),
        elementDef(0, null, null, 1, 'div', [[
                'ngNonBindable',
                ''
            ]
        ], null, null, null, null, null),
        textDef(null, ['{{10 * 10}}']),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    Executed Binding:\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n']),
        textDef(null, ['\n\n'])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = (10 * 10);
        check(view, 12, 0, currVal_0);
    });
}
var RenderType_IgnoreBindings_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_IgnoreBindings_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'ignore-bindings', [], null, null, null, View_IgnoreBindings_0, RenderType_IgnoreBindings),
        directiveDef(1024, null, 0, IgnoreBindings, [], null, null)
    ], null, null);
}
var IgnoreBindingsNgFactory = createComponentFactory('ignore-bindings', IgnoreBindings, View_IgnoreBindings_Host_0);

var styles_AddressForm = [];
var RenderType_AddressForm = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_AddressForm,
    data: { animation: [] }
});
function View_AddressForm_1() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'errorMessage'
            ]
        ], null, null, null, null, null),
        textDef(null, ['First Name is required'])
    ], null, null);
}
function View_AddressForm_2() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'errorMessage'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Street Address is required'])
    ], null, null);
}
function View_AddressForm_3() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'errorMessage'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Zip code has to be 5 digits long'])
    ], null, null);
}
function View_AddressForm_4() {
    return viewDef(0, [
        elementDef(0, null, null, 2, 'div', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, ['The form contains the following values'])
    ], null, null);
}
function View_AddressForm_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Address Form']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 1, 'div', [
            [
                'class',
                'alert alert-info'
            ],
            [
                'role',
                'alert'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    Error messages per field and disabled save button until entire form is valid.\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 83, 'form', [[
                'novalidate',
                ''
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngSubmit'
            ],
            [
                null,
                'submit'
            ],
            [
                null,
                'reset'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('submit' === eventName)) {
                var pd_0 = (nodeValue(view, 8).onSubmit($event) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('reset' === eventName)) {
                var pd_1 = (nodeValue(view, 8).onReset() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('ngSubmit' === eventName)) {
                var pd_2 = (comp.onSubmit() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, NgNoValidate, [], null, null),
        directiveDef(8, null, 0, FormGroupDirective, [
            [
                8,
                null
            ],
            [
                8,
                null
            ]
        ], { form: [
                0,
                'form'
            ]
        }, { ngSubmit: 'ngSubmit' }),
        providerDef(0, null, 3, ControlContainer, null, [FormGroupDirective]),
        directiveDef(0, null, 0, NgControlStatusGroup, [ControlContainer], null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 14, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'formHeading'
            ]
        ], null, null, null, null, null),
        textDef(null, ['First Name']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 5, 'input', [
            [
                'formControlName',
                'firstName'
            ],
            [
                'id',
                'firstName'
            ],
            [
                'type',
                'text'
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 18).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 18).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, FormControlName, [
            [
                3,
                ControlContainer
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { name: [
                0,
                'name'
            ]
        }, null),
        providerDef(0, null, 3, NgControl, null, [FormControlName]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_AddressForm_1),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 14, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'formHeading'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Street Address']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 5, 'input', [
            [
                'formControlName',
                'streetAddress'
            ],
            [
                'id',
                'streetAddress'
            ],
            [
                'type',
                'text'
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 34).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 34).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, FormControlName, [
            [
                3,
                ControlContainer
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { name: [
                0,
                'name'
            ]
        }, null),
        providerDef(0, null, 3, NgControl, null, [FormControlName]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_AddressForm_2),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 14, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'formHeading'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Zip Code']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 5, 'input', [
            [
                'formControlName',
                'zip'
            ],
            [
                'id',
                'zip'
            ],
            [
                'type',
                'text'
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 50).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 50).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, FormControlName, [
            [
                3,
                ControlContainer
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { name: [
                0,
                'name'
            ]
        }, null),
        providerDef(0, null, 3, NgControl, null, [FormControlName]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_AddressForm_3),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 22, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'formHeading'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Address Type']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 16, 'select', [
            [
                'formControlName',
                'type'
            ],
            [
                'id',
                'type'
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'change'
            ],
            [
                null,
                'blur'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('change' === eventName)) {
                var pd_0 = (nodeValue(view, 66).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 66).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, SelectControlValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [SelectControlValueAccessor]),
        directiveDef(10, null, 0, FormControlName, [
            [
                3,
                ControlContainer
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { name: [
                0,
                'name'
            ]
        }, null),
        providerDef(0, null, 3, NgControl, null, [FormControlName]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'option', [], null, null, null, null, null),
        directiveDef(2, null, 0, NgSelectOption, [
            ElementRef,
            RendererV1,
            [
                2,
                SelectControlValueAccessor
            ]
        ], { value: [
                0,
                'value'
            ]
        }, null),
        directiveDef(2, null, 0, NgSelectMultipleOption, [
            ElementRef,
            RendererV1,
            [
                8,
                null
            ]
        ], { value: [
                0,
                'value'
            ]
        }, null),
        textDef(null, ['Home Address']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 3, 'option', [], null, null, null, null, null),
        directiveDef(2, null, 0, NgSelectOption, [
            ElementRef,
            RendererV1,
            [
                2,
                SelectControlValueAccessor
            ]
        ], { value: [
                0,
                'value'
            ]
        }, null),
        directiveDef(2, null, 0, NgSelectMultipleOption, [
            ElementRef,
            RendererV1,
            [
                8,
                null
            ]
        ], { value: [
                0,
                'value'
            ]
        }, null),
        textDef(null, ['Billing Address']),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 4, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'button', [[
                'type',
                'submit'
            ]
        ], [[
                3,
                'disabled',
                0
            ]
        ], null, null, null, null),
        textDef(null, ['Save']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 7, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_AddressForm_4),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '\n        ',
            '\n    '
        ]),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/forms-and-validation-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.form;
        check(view, 8, 0, currVal_0);
        var currVal_1 = 'firstName';
        check(view, 20, 0, currVal_1);
        var currVal_2 = (comp.form.controls.firstName.touched && !comp.form.controls.firstName.valid);
        check(view, 25, 0, currVal_2);
        var currVal_3 = 'streetAddress';
        check(view, 36, 0, currVal_3);
        var currVal_4 = (comp.form.controls.streetAddress.touched && !comp.form.controls.streetAddress.valid);
        check(view, 41, 0, currVal_4);
        var currVal_5 = 'zip';
        check(view, 52, 0, currVal_5);
        var currVal_6 = (comp.form.controls.zip.touched && !comp.form.controls.zip.valid);
        check(view, 57, 0, currVal_6);
        var currVal_7 = 'type';
        check(view, 68, 0, currVal_7);
        var currVal_8 = 'home';
        check(view, 73, 0, currVal_8);
        var currVal_9 = 'home';
        check(view, 74, 0, currVal_9);
        var currVal_10 = 'billing';
        check(view, 78, 0, currVal_10);
        var currVal_11 = 'billing';
        check(view, 79, 0, currVal_11);
        var currVal_12 = comp.payLoad;
        check(view, 94, 0, currVal_12);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 10).ngClassUntouched;
        var currVal_1 = nodeValue(view, 10).ngClassTouched;
        var currVal_2 = nodeValue(view, 10).ngClassPristine;
        var currVal_3 = nodeValue(view, 10).ngClassDirty;
        var currVal_4 = nodeValue(view, 10).ngClassValid;
        var currVal_5 = nodeValue(view, 10).ngClassInvalid;
        var currVal_6 = nodeValue(view, 10).ngClassPending;
        check(view, 6, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
        var currVal_7 = nodeValue(view, 22).ngClassUntouched;
        var currVal_8 = nodeValue(view, 22).ngClassTouched;
        var currVal_9 = nodeValue(view, 22).ngClassPristine;
        var currVal_10 = nodeValue(view, 22).ngClassDirty;
        var currVal_11 = nodeValue(view, 22).ngClassValid;
        var currVal_12 = nodeValue(view, 22).ngClassInvalid;
        var currVal_13 = nodeValue(view, 22).ngClassPending;
        check(view, 17, 0, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13);
        var currVal_14 = nodeValue(view, 38).ngClassUntouched;
        var currVal_15 = nodeValue(view, 38).ngClassTouched;
        var currVal_16 = nodeValue(view, 38).ngClassPristine;
        var currVal_17 = nodeValue(view, 38).ngClassDirty;
        var currVal_18 = nodeValue(view, 38).ngClassValid;
        var currVal_19 = nodeValue(view, 38).ngClassInvalid;
        var currVal_20 = nodeValue(view, 38).ngClassPending;
        check(view, 33, 0, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20);
        var currVal_21 = nodeValue(view, 54).ngClassUntouched;
        var currVal_22 = nodeValue(view, 54).ngClassTouched;
        var currVal_23 = nodeValue(view, 54).ngClassPristine;
        var currVal_24 = nodeValue(view, 54).ngClassDirty;
        var currVal_25 = nodeValue(view, 54).ngClassValid;
        var currVal_26 = nodeValue(view, 54).ngClassInvalid;
        var currVal_27 = nodeValue(view, 54).ngClassPending;
        check(view, 49, 0, currVal_21, currVal_22, currVal_23, currVal_24, currVal_25, currVal_26, currVal_27);
        var currVal_28 = nodeValue(view, 70).ngClassUntouched;
        var currVal_29 = nodeValue(view, 70).ngClassTouched;
        var currVal_30 = nodeValue(view, 70).ngClassPristine;
        var currVal_31 = nodeValue(view, 70).ngClassDirty;
        var currVal_32 = nodeValue(view, 70).ngClassValid;
        var currVal_33 = nodeValue(view, 70).ngClassInvalid;
        var currVal_34 = nodeValue(view, 70).ngClassPending;
        check(view, 65, 0, currVal_28, currVal_29, currVal_30, currVal_31, currVal_32, currVal_33, currVal_34);
        var currVal_35 = !comp.form.valid;
        check(view, 86, 0, currVal_35);
        var currVal_36 = comp.payLoad;
        check(view, 97, 0, currVal_36);
    });
}
var RenderType_AddressForm_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_AddressForm_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'address-form', [], null, null, null, View_AddressForm_0, RenderType_AddressForm),
        directiveDef(1024, null, 0, AddressForm, [], null, null)
    ], null, null);
}
var AddressFormNgFactory = createComponentFactory('address-form', AddressForm, View_AddressForm_Host_0);

var styles_CommentSection1 = [];
var RenderType_CommentSection1 = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_CommentSection1,
    data: { animation: [] }
});
function View_CommentSection1_1() {
    return viewDef(0, [
        elementDef(0, null, null, 7, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n        '])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.author;
        check(view, 3, 0, currVal_0);
        var currVal_1 = view.context.$implicit.text;
        check(view, 6, 0, currVal_1);
    });
}
function View_CommentSection1_0() {
    return viewDef(2, [
        elementDef(0, null, null, 47, 'div', [[
                'style',
                'border: 1px solid black;padding: 5px;'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'alert alert-info'
            ]
        ], null, null, null, null, null),
        textDef(null, [
            '\n        ',
            '\n    '
        ]),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 2, 'div', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.addComment() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Add Comment']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Author']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 5, 'input', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 21).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 21).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 23).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 23).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.author = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Text']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 5, 'input', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 31).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 31).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 33).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 33).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.text = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 5, 'table', [[
                'class',
                'table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 3, 'tbody', [], null, null, null, null, null),
        anchorDef(256, null, null, 1, null, View_CommentSection1_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n']),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.author;
        check(view, 23, 0, currVal_0);
        var currVal_1 = comp.text;
        check(view, 33, 0, currVal_1);
        var currVal_2 = comp.comments;
        check(view, 45, 0, currVal_2);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.message;
        check(view, 3, 0, currVal_0);
        var currVal_1 = comp.lastUpdated();
        check(view, 7, 0, currVal_1);
        var currVal_2 = nodeValue(view, 25).ngClassUntouched;
        var currVal_3 = nodeValue(view, 25).ngClassTouched;
        var currVal_4 = nodeValue(view, 25).ngClassPristine;
        var currVal_5 = nodeValue(view, 25).ngClassDirty;
        var currVal_6 = nodeValue(view, 25).ngClassValid;
        var currVal_7 = nodeValue(view, 25).ngClassInvalid;
        var currVal_8 = nodeValue(view, 25).ngClassPending;
        check(view, 20, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8);
        var currVal_9 = nodeValue(view, 35).ngClassUntouched;
        var currVal_10 = nodeValue(view, 35).ngClassTouched;
        var currVal_11 = nodeValue(view, 35).ngClassPristine;
        var currVal_12 = nodeValue(view, 35).ngClassDirty;
        var currVal_13 = nodeValue(view, 35).ngClassValid;
        var currVal_14 = nodeValue(view, 35).ngClassInvalid;
        var currVal_15 = nodeValue(view, 35).ngClassPending;
        check(view, 30, 0, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15);
    });
}
var RenderType_CommentSection1_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_CommentSection1_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'comment-section-1', [], null, null, null, View_CommentSection1_0, RenderType_CommentSection1),
        directiveDef(1024, null, 0, CommentSection1, [], null, null)
    ], null, null);
}
var CommentSection1NgFactory = createComponentFactory('comment-section-1', CommentSection1, View_CommentSection1_Host_0);

var styles_CommentSection2 = [];
var RenderType_CommentSection2 = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_CommentSection2,
    data: { animation: [] }
});
function View_CommentSection2_1() {
    return viewDef(0, [
        elementDef(0, null, null, 7, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n        '])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.author;
        check(view, 3, 0, currVal_0);
        var currVal_1 = view.context.$implicit.text;
        check(view, 6, 0, currVal_1);
    });
}
function View_CommentSection2_0() {
    return viewDef(0, [
        elementDef(0, null, null, 47, 'div', [[
                'style',
                'border: 1px solid black;padding: 5px;'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'alert alert-info'
            ]
        ], null, null, null, null, null),
        textDef(null, [
            '\n        ',
            '\n    '
        ]),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 2, 'div', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.addComment() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Add Comment']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Author']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 5, 'input', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 21).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 21).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 23).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 23).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.author = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, ['Text']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 5, 'input', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 31).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 31).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 33).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 33).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.text = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 5, 'table', [[
                'class',
                'table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 3, 'tbody', [], null, null, null, null, null),
        anchorDef(256, null, null, 1, null, View_CommentSection2_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n']),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.author;
        check(view, 23, 0, currVal_0);
        var currVal_1 = comp.text;
        check(view, 33, 0, currVal_1);
        var currVal_2 = comp.comments;
        check(view, 45, 0, currVal_2);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.message;
        check(view, 3, 0, currVal_0);
        var currVal_1 = comp.lastUpdated();
        check(view, 7, 0, currVal_1);
        var currVal_2 = nodeValue(view, 25).ngClassUntouched;
        var currVal_3 = nodeValue(view, 25).ngClassTouched;
        var currVal_4 = nodeValue(view, 25).ngClassPristine;
        var currVal_5 = nodeValue(view, 25).ngClassDirty;
        var currVal_6 = nodeValue(view, 25).ngClassValid;
        var currVal_7 = nodeValue(view, 25).ngClassInvalid;
        var currVal_8 = nodeValue(view, 25).ngClassPending;
        check(view, 20, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8);
        var currVal_9 = nodeValue(view, 35).ngClassUntouched;
        var currVal_10 = nodeValue(view, 35).ngClassTouched;
        var currVal_11 = nodeValue(view, 35).ngClassPristine;
        var currVal_12 = nodeValue(view, 35).ngClassDirty;
        var currVal_13 = nodeValue(view, 35).ngClassValid;
        var currVal_14 = nodeValue(view, 35).ngClassInvalid;
        var currVal_15 = nodeValue(view, 35).ngClassPending;
        check(view, 30, 0, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15);
    });
}
var RenderType_CommentSection2_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_CommentSection2_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'comment-section-2', [], null, null, null, View_CommentSection2_0, RenderType_CommentSection2),
        directiveDef(1024, null, 0, CommentSection2, [], null, null)
    ], null, null);
}
var CommentSection2NgFactory = createComponentFactory('comment-section-2', CommentSection2, View_CommentSection2_Host_0);

var styles_CommentDemo = [];
var RenderType_CommentDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_CommentDemo,
    data: { animation: [] }
});
function View_CommentDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Change Detection']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 13, 'div', [[
                'class',
                'row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 4, 'div', [[
                'class',
                'col-md-6'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n\n        ']),
        elementDef(0, null, null, 1, 'comment-section-1', [], null, null, null, View_CommentSection1_0, RenderType_CommentSection1),
        directiveDef(1024, null, 0, CommentSection1, [], null, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 4, 'div', [[
                'class',
                'col-md-6'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'comment-section-2', [], null, null, null, View_CommentSection2_0, RenderType_CommentSection2),
        directiveDef(1024, null, 0, CommentSection2, [], null, null),
        textDef(null, ['\n    ']),
        textDef(null, ['\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 11, 'div', [[
                'class',
                'row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 8, 'div', [[
                'style',
                'margin: 15px;'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.count() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Increment Counter']),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 2, 'div', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n    ']),
        textDef(null, ['\n']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/change-detection-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here'])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.counter;
        check(view, 27, 0, currVal_0);
    });
}
var RenderType_CommentDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_CommentDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'comment-demo', [], null, null, null, View_CommentDemo_0, RenderType_CommentDemo),
        directiveDef(1024, null, 0, CommentDemo, [], null, null)
    ], null, null);
}
var CommentDemoNgFactory = createComponentFactory('comment-demo', CommentDemo, View_CommentDemo_Host_0);

var styles_Child = [];
var RenderType_Child = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Child,
    data: { animation: [] }
});
function View_Child_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.time;
        check(view, 1, 0, currVal_0);
    });
}
var RenderType_Child_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Child_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'child', [], null, null, null, View_Child_0, RenderType_Child),
        directiveDef(1024, null, 0, Child, [], null, null)
    ], null, null);
}
var ChildNgFactory = createComponentFactory('child', Child, View_Child_Host_0);

var styles_Parent = [];
var RenderType_Parent = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Parent,
    data: { animation: [] }
});
function View_Parent_0() {
    return viewDef(0, [
        queryDef(20480, 1, { viewChildren: 1 }),
        elementDef(0, null, null, 10, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.updateViewChildren() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Update Time via ViewChildren']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'child', [], null, null, null, View_Child_0, RenderType_Child),
        directiveDef(1024, [[
                1,
                4
            ]
        ], 0, Child, [], null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'child', [], null, null, null, View_Child_0, RenderType_Child),
        directiveDef(1024, [[
                1,
                4
            ]
        ], 0, Child, [], null, null),
        textDef(null, ['\n              '])
    ], null, null);
}
var RenderType_Parent_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Parent_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'parent', [], null, null, null, View_Parent_0, RenderType_Parent),
        directiveDef(1024, null, 0, Parent, [], null, null)
    ], null, null);
}
var ParentNgFactory = createComponentFactory('parent', Parent, View_Parent_Host_0);

var styles_Survey = [];
var RenderType_Survey = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Survey,
    data: { animation: [] }
});
function View_Survey_2() {
    return viewDef(0, [
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        elementDef(0, null, null, 5, 'input', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ],
            [
                3,
                'type',
                0
            ],
            [
                3,
                'id',
                0
            ]
        ], [
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 2).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 2).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, FormControlName, [
            [
                3,
                ControlContainer
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { name: [
                0,
                'name'
            ]
        }, null),
        providerDef(0, null, 3, NgControl, null, [FormControlName]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null)
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.parent.context.$implicit.key;
        check(view, 4, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 6).ngClassUntouched;
        var currVal_1 = nodeValue(view, 6).ngClassTouched;
        var currVal_2 = nodeValue(view, 6).ngClassPristine;
        var currVal_3 = nodeValue(view, 6).ngClassDirty;
        var currVal_4 = nodeValue(view, 6).ngClassValid;
        var currVal_5 = nodeValue(view, 6).ngClassInvalid;
        var currVal_6 = nodeValue(view, 6).ngClassPending;
        var currVal_7 = inlineInterpolate(1, '', view.parent.context.$implicit.type, '');
        var currVal_8 = inlineInterpolate(1, '', view.parent.context.$implicit.key, '');
        check(view, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8);
    });
}
function View_Survey_4() {
    return viewDef(0, [
        elementDef(0, null, null, 3, 'option', [], null, null, null, null, null),
        directiveDef(2, null, 0, NgSelectOption, [
            ElementRef,
            RendererV1,
            [
                2,
                SelectControlValueAccessor
            ]
        ], { value: [
                0,
                'value'
            ]
        }, null),
        directiveDef(2, null, 0, NgSelectMultipleOption, [
            ElementRef,
            RendererV1,
            [
                8,
                null
            ]
        ], { value: [
                0,
                'value'
            ]
        }, null),
        textDef(null, [
            '',
            ''
        ])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.key;
        check(view, 1, 0, currVal_0);
        var currVal_1 = view.context.$implicit.key;
        check(view, 2, 0, currVal_1);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.value;
        check(view, 3, 0, currVal_0);
    });
}
function View_Survey_3() {
    return viewDef(0, [
        elementDef(0, null, null, 12, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 9, 'select', [], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'change'
            ],
            [
                null,
                'blur'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('change' === eventName)) {
                var pd_0 = (nodeValue(view, 3).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 3).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, SelectControlValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [SelectControlValueAccessor]),
        directiveDef(10, null, 0, FormControlName, [
            [
                3,
                ControlContainer
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { name: [
                0,
                'name'
            ]
        }, null),
        providerDef(0, null, 3, NgControl, null, [FormControlName]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n                        ']),
        anchorDef(256, null, null, 1, null, View_Survey_4),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n                    ']),
        textDef(null, ['\n                '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.parent.context.$implicit.key;
        check(view, 5, 0, currVal_0);
        var currVal_1 = view.parent.context.$implicit.options;
        check(view, 10, 0, currVal_1);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 7).ngClassUntouched;
        var currVal_1 = nodeValue(view, 7).ngClassTouched;
        var currVal_2 = nodeValue(view, 7).ngClassPristine;
        var currVal_3 = nodeValue(view, 7).ngClassDirty;
        var currVal_4 = nodeValue(view, 7).ngClassValid;
        var currVal_5 = nodeValue(view, 7).ngClassInvalid;
        var currVal_6 = nodeValue(view, 7).ngClassPending;
        check(view, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
    });
}
function View_Survey_5() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'errorMessage'
            ]
        ], null, null, null, null, null),
        textDef(null, ['*required'])
    ], null, null);
}
function View_Survey_1() {
    return viewDef(0, [
        elementDef(0, null, null, 17, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'formHeading'
            ]
        ], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n\n            ']),
        elementDef(0, null, null, 8, 'div', [], null, null, null, null, null),
        directiveDef(0, null, 0, NgSwitch, [], { ngSwitch: [
                0,
                'ngSwitch'
            ]
        }, null),
        textDef(null, ['\n                ']),
        anchorDef(256, null, null, 1, null, View_Survey_2),
        directiveDef(4, null, 0, NgSwitchCase, [
            ViewContainerRef,
            TemplateRef,
            NgSwitch
        ], { ngSwitchCase: [
                0,
                'ngSwitchCase'
            ]
        }, null),
        textDef(null, ['\n                ']),
        anchorDef(256, null, null, 1, null, View_Survey_3),
        directiveDef(4, null, 0, NgSwitchCase, [
            ViewContainerRef,
            TemplateRef,
            NgSwitch
        ], { ngSwitchCase: [
                0,
                'ngSwitchCase'
            ]
        }, null),
        textDef(null, ['\n            ']),
        textDef(null, ['\n\n            ']),
        anchorDef(256, null, null, 1, null, View_Survey_5),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n        '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.controlType;
        check(view, 6, 0, currVal_0);
        var currVal_1 = 'textbox';
        check(view, 9, 0, currVal_1);
        var currVal_2 = 'dropdown';
        check(view, 12, 0, currVal_2);
        var currVal_3 = !comp.form.controls[view.context.$implicit.key].valid;
        check(view, 16, 0, currVal_3);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.text;
        check(view, 3, 0, currVal_0);
    });
}
function View_Survey_6() {
    return viewDef(0, [
        elementDef(0, null, null, 2, 'div', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, ['The form contains the following values'])
    ], null, null);
}
function View_Survey_0() {
    return viewDef(0, [
        elementDef(0, null, null, 30, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 14, 'form', [[
                'novalidate',
                ''
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngSubmit'
            ],
            [
                null,
                'submit'
            ],
            [
                null,
                'reset'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('submit' === eventName)) {
                var pd_0 = (nodeValue(view, 4).onSubmit($event) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('reset' === eventName)) {
                var pd_1 = (nodeValue(view, 4).onReset() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('ngSubmit' === eventName)) {
                var pd_2 = (comp.onSubmit() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, NgNoValidate, [], null, null),
        directiveDef(8, null, 0, FormGroupDirective, [
            [
                8,
                null
            ],
            [
                8,
                null
            ]
        ], { form: [
                0,
                'form'
            ]
        }, { ngSubmit: 'ngSubmit' }),
        providerDef(0, null, 3, ControlContainer, null, [FormGroupDirective]),
        directiveDef(0, null, 0, NgControlStatusGroup, [ControlContainer], null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_Survey_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n\n        ']),
        elementDef(0, null, null, 4, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'button', [[
                'type',
                'submit'
            ]
        ], [[
                3,
                'disabled',
                0
            ]
        ], null, null, null, null),
        textDef(null, ['Save']),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 7, 'div', [[
                'class',
                'form-row'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        anchorDef(256, null, null, 1, null, View_Survey_6),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '\n            ',
            '\n        '
        ]),
        textDef(null, ['\n    ']),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/dynamic-form-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here']),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.form;
        check(view, 4, 0, currVal_0);
        var currVal_1 = comp.model.questions;
        check(view, 9, 0, currVal_1);
        var currVal_2 = comp.payLoad;
        check(view, 21, 0, currVal_2);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 6).ngClassUntouched;
        var currVal_1 = nodeValue(view, 6).ngClassTouched;
        var currVal_2 = nodeValue(view, 6).ngClassPristine;
        var currVal_3 = nodeValue(view, 6).ngClassDirty;
        var currVal_4 = nodeValue(view, 6).ngClassValid;
        var currVal_5 = nodeValue(view, 6).ngClassInvalid;
        var currVal_6 = nodeValue(view, 6).ngClassPending;
        check(view, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
        var currVal_7 = !comp.form.valid;
        check(view, 13, 0, currVal_7);
        var currVal_8 = comp.payLoad;
        check(view, 24, 0, currVal_8);
    });
}
var RenderType_Survey_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Survey_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'survey', [], null, null, null, View_Survey_0, RenderType_Survey),
        directiveDef(1025, null, 0, Survey, [], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var SurveyNgFactory = createComponentFactory('survey', Survey, View_Survey_Host_0);

var styles_SurveyDemo = [];
var RenderType_SurveyDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_SurveyDemo,
    data: { animation: [] }
});
function View_SurveyDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Survey using Dynamic Form']),
        elementDef(0, null, null, 1, 'survey', [], null, null, null, View_Survey_0, RenderType_Survey),
        directiveDef(1025, null, 0, Survey, [], { model: [
                0,
                'model'
            ]
        }, null)
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.questionModel;
        check(view, 4, 0, currVal_0);
    }, null);
}
var RenderType_SurveyDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_SurveyDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'survey-demo', [], null, null, null, View_SurveyDemo_0, RenderType_SurveyDemo),
        directiveDef(1024, null, 0, SurveyDemo, [], null, null)
    ], null, null);
}
var SurveyDemoNgFactory = createComponentFactory('survey-demo', SurveyDemo, View_SurveyDemo_Host_0);

var styles_LogDemo = [];
var RenderType_LogDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_LogDemo,
    data: { animation: [] }
});
function View_LogDemo_1() {
    return viewDef(0, [
        elementDef(0, null, null, 7, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n                        ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n                        ']),
        elementDef(0, null, null, 1, 'td', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n                     '])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.text;
        check(view, 3, 0, currVal_0);
        var currVal_1 = view.context.$implicit.severity;
        check(view, 6, 0, currVal_1);
    });
}
function View_LogDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 44, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Error log state managed using Redux']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 1, 'button', [[
                'style',
                'margin-bottom: 10px;'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.generateLogEntry() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Add new log entry']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 5, 'input', [
            [
                'placeholder',
                'message'
            ],
            [
                'type',
                'text'
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 9).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 9).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_2 = (nodeValue(view, 11).compositionStart() !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_3 = (nodeValue(view, 11).compositionEnd() !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_4 = ((comp.msg = $event) !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [DefaultValueAccessor]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 6, 'input', [
            [
                'placeholder',
                'severity'
            ],
            [
                'type',
                'number'
            ]
        ], [
            [
                1,
                'ng-untouched'
            ],
            [
                1,
                'ng-touched'
            ],
            [
                1,
                'ng-pristine'
            ],
            [
                1,
                'ng-dirty'
            ],
            [
                1,
                'ng-valid'
            ],
            [
                1,
                'ng-invalid'
            ],
            [
                1,
                'ng-pending'
            ]
        ], [
            [
                null,
                'ngModelChange'
            ],
            [
                null,
                'input'
            ],
            [
                null,
                'blur'
            ],
            [
                null,
                'change'
            ],
            [
                null,
                'compositionstart'
            ],
            [
                null,
                'compositionend'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('input' === eventName)) {
                var pd_0 = (nodeValue(view, 16).onChange($event.target.value) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_1 = (nodeValue(view, 16).onTouched() !== false);
                allowDefault = (pd_1 && allowDefault);
            }
            if (('change' === eventName)) {
                var pd_2 = (nodeValue(view, 17).onChange($event.target.value) !== false);
                allowDefault = (pd_2 && allowDefault);
            }
            if (('input' === eventName)) {
                var pd_3 = (nodeValue(view, 17).onChange($event.target.value) !== false);
                allowDefault = (pd_3 && allowDefault);
            }
            if (('blur' === eventName)) {
                var pd_4 = (nodeValue(view, 17).onTouched() !== false);
                allowDefault = (pd_4 && allowDefault);
            }
            if (('compositionstart' === eventName)) {
                var pd_5 = (nodeValue(view, 19).compositionStart() !== false);
                allowDefault = (pd_5 && allowDefault);
            }
            if (('compositionend' === eventName)) {
                var pd_6 = (nodeValue(view, 19).compositionEnd() !== false);
                allowDefault = (pd_6 && allowDefault);
            }
            if (('ngModelChange' === eventName)) {
                var pd_7 = ((comp.severity = $event) !== false);
                allowDefault = (pd_7 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(0, null, 0, DefaultValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        directiveDef(0, null, 0, NumberValueAccessor, [
            RendererV1,
            ElementRef
        ], null, null),
        providerDef(0, null, 2, NG_VALUE_ACCESSOR, function (p0_0, p1_0) {
            return [
                p0_0,
                p1_0
            ];
        }, [
            DefaultValueAccessor,
            NumberValueAccessor
        ]),
        directiveDef(10, null, 0, NgModel, [
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                8,
                null
            ],
            [
                2,
                NG_VALUE_ACCESSOR
            ]
        ], { model: [
                0,
                'model'
            ]
        }, { update: 'ngModelChange' }),
        providerDef(0, null, 3, NgControl, null, [NgModel]),
        directiveDef(0, null, 0, NgControlStatus, [NgControl], null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 16, 'table', [[
                'class',
                'table'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n                     ']),
        elementDef(0, null, null, 14, 'tbody', [], null, null, null, null, null),
        elementDef(0, null, null, 8, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n                        ']),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, ['Message']),
        elementDef(0, null, null, 2, 'td', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'strong', [], null, null, null, null, null),
        textDef(null, ['Severity']),
        textDef(null, ['\n                     ']),
        textDef(null, ['\n                     ']),
        anchorDef(256, null, null, 2, null, View_LogDemo_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        pipeDef(2, AsyncPipe, [ChangeDetectorRef]),
        textDef(null, ['\n                ']),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 2, 'h4', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [[
                'href',
                'http://www.syntaxsuccess.com/viewarticle/redux-in-angular-2.0'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Read more here']),
        textDef(null, ['\n              '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.msg;
        check(view, 11, 0, currVal_0);
        var currVal_1 = comp.severity;
        check(view, 19, 0, currVal_1);
        var currVal_2 = unwrapValue(nodeValue(view, 38).transform(comp.store.logEntries));
        check(view, 37, 0, currVal_2);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = nodeValue(view, 13).ngClassUntouched;
        var currVal_1 = nodeValue(view, 13).ngClassTouched;
        var currVal_2 = nodeValue(view, 13).ngClassPristine;
        var currVal_3 = nodeValue(view, 13).ngClassDirty;
        var currVal_4 = nodeValue(view, 13).ngClassValid;
        var currVal_5 = nodeValue(view, 13).ngClassInvalid;
        var currVal_6 = nodeValue(view, 13).ngClassPending;
        check(view, 8, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
        var currVal_7 = nodeValue(view, 21).ngClassUntouched;
        var currVal_8 = nodeValue(view, 21).ngClassTouched;
        var currVal_9 = nodeValue(view, 21).ngClassPristine;
        var currVal_10 = nodeValue(view, 21).ngClassDirty;
        var currVal_11 = nodeValue(view, 21).ngClassValid;
        var currVal_12 = nodeValue(view, 21).ngClassInvalid;
        var currVal_13 = nodeValue(view, 21).ngClassPending;
        check(view, 15, 0, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13);
    });
}
var RenderType_LogDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_LogDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 3, 'ng-component', [], null, null, null, View_LogDemo_0, RenderType_LogDemo),
        providerDef(0, null, 1, Store, Store, []),
        providerDef(0, null, 1, LogTailService, LogTailService, [Http]),
        directiveDef(1025, null, 0, LogDemo, [
            Store,
            LogTailService
        ], null, null)
    ], function (check, view) {
        check(view, 3, 0);
    }, null);
}
var LogDemoNgFactory = createComponentFactory('ng-component', LogDemo, View_LogDemo_Host_0);

var styles_InputOutput = [];
var RenderType_InputOutput = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_InputOutput,
    data: { animation: [] }
});
function View_InputOutput_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n              ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            'Counter: ',
            ''
        ]),
        textDef(null, ['\n              ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            'Running total of counter values: ',
            ''
        ]),
        textDef(null, ['\n              ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            'Growing string: ',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.headline;
        check(view, 1, 0, currVal_0);
        var currVal_1 = comp.counter;
        check(view, 4, 0, currVal_1);
        var currVal_2 = comp.sum;
        check(view, 7, 0, currVal_2);
        var currVal_3 = comp.growingString;
        check(view, 10, 0, currVal_3);
    });
}
var RenderType_InputOutput_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_InputOutput_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'input-output', [], null, null, null, View_InputOutput_0, RenderType_InputOutput),
        directiveDef(1025, null, 0, InputOutput, [
            ElementRef,
            [
                8,
                null
            ]
        ], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var InputOutputNgFactory = createComponentFactory('input-output', InputOutput, View_InputOutput_Host_0);

var styles_InputOutputDemo = [];
var RenderType_InputOutputDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_InputOutputDemo,
    data: { animation: [] }
});
function View_InputOutputDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.update() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Update']),
        textDef(null, ['\n              ']),
        elementDef(0, null, null, 2, 'input-output', [
            [
                'fixedValue',
                'another hard coded value'
            ],
            [
                'plain',
                'just a simple attribute'
            ]
        ], null, [[
                null,
                'stringChanged'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('stringChanged' === eventName)) {
                var pd_0 = (comp.myStringChanged($event) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, View_InputOutput_0, RenderType_InputOutput),
        directiveDef(1025, null, 0, InputOutput, [
            ElementRef,
            [
                8,
                'just a simple attribute'
            ]
        ], {
            counter: [
                0,
                'counter'
            ],
            fixedValue: [
                1,
                'fixedValue'
            ],
            sum: [
                2,
                'sum'
            ],
            headline: [
                3,
                'headline'
            ],
            growingString: [
                4,
                'growingString'
            ]
        }, { stringChanged: 'stringChanged' }),
        textDef(null, ['\n              '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.count;
        var currVal_1 = 'another hard coded value';
        var currVal_2 = comp.runningTotal;
        var currVal_3 = comp.myTitle;
        var currVal_4 = comp.myString;
        check(view, 4, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4);
    }, null);
}
var RenderType_InputOutputDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_InputOutputDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'ng-component', [], null, null, null, View_InputOutputDemo_0, RenderType_InputOutputDemo),
        directiveDef(1024, null, 0, InputOutputDemo, [], null, null)
    ], null, null);
}
var InputOutputDemoNgFactory = createComponentFactory('ng-component', InputOutputDemo, View_InputOutputDemo_Host_0);

var styles_RxJsStreams = [];
var RenderType_RxJsStreams = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_RxJsStreams,
    data: { animation: [] }
});
function View_RxJsStreams_1() {
    return viewDef(0, [
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 3, 'div', [[
                'class',
                'floatLeft'
            ]
        ], null, null, null, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], {
            klass: [
                0,
                'klass'
            ],
            ngClass: [
                1,
                'ngClass'
            ]
        }, null),
        pureObjectDef([
            'stream1',
            'stream2'
        ]),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n  '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = 'floatLeft';
        var currVal_1 = check(view, 4, 0, (view.context.$implicit.source === 1), (view.context.$implicit.source === 2));
        check(view, 3, 0, currVal_0, currVal_1);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.value;
        check(view, 5, 0, currVal_0);
    });
}
function View_RxJsStreams_2() {
    return viewDef(0, [
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 3, 'div', [[
                'class',
                'floatLeft'
            ]
        ], null, null, null, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], {
            klass: [
                0,
                'klass'
            ],
            ngClass: [
                1,
                'ngClass'
            ]
        }, null),
        pureObjectDef([
            'stream1',
            'stream2'
        ]),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n  '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = 'floatLeft';
        var currVal_1 = check(view, 4, 0, (view.context.$implicit.source === 1), (view.context.$implicit.source === 2));
        check(view, 3, 0, currVal_0, currVal_1);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.value;
        check(view, 5, 0, currVal_0);
    });
}
function View_RxJsStreams_3() {
    return viewDef(0, [
        elementDef(0, null, null, 6, 'div', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 3, 'div', [], null, null, null, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngClass: [
                0,
                'ngClass'
            ]
        }, null),
        pureObjectDef([
            'stream1',
            'stream2'
        ]),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n  '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = check(view, 4, 0, (view.context.$implicit.source === 1), (view.context.$implicit.source === 2));
        check(view, 3, 0, currVal_0);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.value;
        check(view, 5, 0, currVal_0);
    });
}
function View_RxJsStreams_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'stream1'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Stream1']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'stream2'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Stream2']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.mergeStreams() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Merge Streams']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.concatStreams() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Concat Streams']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.forkJoinStreams() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['ForkJoin Streams']),
        textDef(null, ['\n']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.flatMapStreams() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['FlatMap Streams']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 7, 'div', [[
                'class',
                'stream-section'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n  ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['Concatenated Streams']),
        textDef(null, ['\n  ']),
        anchorDef(256, null, null, 1, null, View_RxJsStreams_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 7, 'div', [[
                'class',
                'stream-section'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n  ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['Merged Streams']),
        textDef(null, ['\n  ']),
        anchorDef(256, null, null, 1, null, View_RxJsStreams_2),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 7, 'div', [[
                'class',
                'stream-section'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n  ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['ForkJoined Streams']),
        textDef(null, ['\n  ']),
        anchorDef(256, null, null, 1, null, View_RxJsStreams_3),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 0, 'br', [], null, null, null, null, null),
        textDef(null, ['\n']),
        elementDef(0, null, null, 7, 'div', [], null, null, null, null, null),
        textDef(null, ['\n  ']),
        elementDef(0, null, null, 1, 'h4', [], null, null, null, null, null),
        textDef(null, ['Flatmapped Streams']),
        textDef(null, ['\n  ']),
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n']),
        textDef(null, ['\n\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.concatStream;
        check(view, 26, 0, currVal_0);
        var currVal_1 = comp.mergeStream;
        check(view, 35, 0, currVal_1);
        var currVal_2 = comp.forkJoinStream;
        check(view, 44, 0, currVal_2);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.flatMappedStreams.msg;
        check(view, 55, 0, currVal_0);
    });
}
var RenderType_RxJsStreams_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_RxJsStreams_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'rxjs-streams', [], null, null, null, View_RxJsStreams_0, RenderType_RxJsStreams),
        directiveDef(1024, null, 0, RxJsStreams, [], null, null)
    ], null, null);
}
var RxJsStreamsNgFactory = createComponentFactory('rxjs-streams', RxJsStreams, View_RxJsStreams_Host_0);

var styles_FriendsList = [];
var RenderType_FriendsList = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_FriendsList,
    data: { animation: [] }
});
function View_FriendsList_1() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [], null, null, null, null, null),
        textDef(null, [
            '\n      ',
            '\n    '
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit;
        check(view, 1, 0, currVal_0);
    });
}
function View_FriendsList_0() {
    return viewDef(0, [
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_FriendsList_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.loadData() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Reload']),
        textDef(null, ['\n  '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.friends;
        check(view, 2, 0, currVal_0);
    }, null);
}
var RenderType_FriendsList_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_FriendsList_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'friends-list', [], null, null, null, View_FriendsList_0, RenderType_FriendsList),
        directiveDef(1027, null, 0, FriendsList, [FriendsService], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var FriendsListNgFactory = createComponentFactory('friends-list', FriendsList, View_FriendsList_Host_0);

var styles_CachingDemo = [];
var RenderType_CachingDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_CachingDemo,
    data: { animation: [] }
});
function View_CachingDemo_1() {
    return viewDef(0, [
        elementDef(0, null, null, 13, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 10, 'td', [], null, null, null, null, null),
        textDef(null, ['    \n            ']),
        elementDef(0, null, null, 1, 'h2', [], null, null, null, null, null),
        textDef(null, ['Friends 1']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'friends-list', [], null, null, null, View_FriendsList_0, RenderType_FriendsList),
        directiveDef(1027, null, 0, FriendsList, [FriendsService], null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.remove('first') !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Remove']),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    '])
    ], function (check, view) {
        var comp = view.component;
        check(view, 8, 0);
    }, null);
}
function View_CachingDemo_2() {
    return viewDef(0, [
        elementDef(0, null, null, 13, 'tr', [], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 10, 'td', [], null, null, null, null, null),
        textDef(null, ['    \n            ']),
        elementDef(0, null, null, 1, 'h2', [], null, null, null, null, null),
        textDef(null, ['Friends 2']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'friends-list', [], null, null, null, View_FriendsList_0, RenderType_FriendsList),
        directiveDef(1027, null, 0, FriendsList, [FriendsService], null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.remove('second') !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Remove']),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    '])
    ], function (check, view) {
        var comp = view.component;
        check(view, 8, 0);
    }, null);
}
function View_CachingDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 7, 'div', [], null, null, null, null, null),
        textDef(null, ['\n  ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.clearCache() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Clear Cache']),
        textDef(null, ['\n  ']),
        elementDef(0, null, null, 1, 'button', [], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.reset() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, ['Reset']),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 8, 'table', [], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 6, 'tbody', [], null, null, null, null, null),
        anchorDef(256, null, null, 1, null, View_CachingDemo_1),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_CachingDemo_2),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.display.first;
        check(view, 13, 0, currVal_0);
        var currVal_1 = comp.display.second;
        check(view, 16, 0, currVal_1);
    }, null);
}
var RenderType_CachingDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_CachingDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 2, 'ng-component', [], null, null, null, View_CachingDemo_0, RenderType_CachingDemo),
        providerDef(0, null, 1, FriendsService, FriendsService, [Http]),
        directiveDef(1024, null, 0, CachingDemo, [FriendsService], null, null)
    ], null, null);
}
var CachingDemoNgFactory = createComponentFactory('ng-component', CachingDemo, View_CachingDemo_Host_0);

var styles_RxJsBuffering = [];
var RenderType_RxJsBuffering = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_RxJsBuffering,
    data: { animation: [] }
});
function View_RxJsBuffering_1() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'box'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (comp.add(view.context.$implicit) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        textDef(null, [
            '',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit;
        check(view, 1, 0, currVal_0);
    });
}
function View_RxJsBuffering_2() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'sum'
            ]
        ], null, null, null, null, null),
        textDef(null, [
            'SUM: ',
            ''
        ])
    ], null, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.calculation.sum;
        check(view, 1, 0, currVal_0);
    });
}
function View_RxJsBuffering_0() {
    return viewDef(0, [
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'h3', [], null, null, null, null, null),
        textDef(null, ['Click three numbers to add']),
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_RxJsBuffering_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n    ']),
        anchorDef(256, null, null, 1, null, View_RxJsBuffering_2),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n  '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.numbers;
        check(view, 5, 0, currVal_0);
        var currVal_1 = comp.showSum;
        check(view, 8, 0, currVal_1);
    }, null);
}
var RenderType_RxJsBuffering_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_RxJsBuffering_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'ng-component', [], null, null, null, View_RxJsBuffering_0, RenderType_RxJsBuffering),
        directiveDef(1025, null, 0, RxJsBuffering, [], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var RxJsBufferingNgFactory = createComponentFactory('ng-component', RxJsBuffering, View_RxJsBuffering_Host_0);

var styles_LazyTreeView = [];
var RenderType_LazyTreeView = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_LazyTreeView,
    data: { animation: [] }
});
function View_LazyTreeView_2() {
    return viewDef(0, [
        elementDef(0, null, null, 4, 'div', [], null, null, null, null, null),
        textDef(null, ['\n      ']),
        elementDef(0, null, null, 1, 'lazy-tree-view', [], null, null, null, View_LazyTreeView_0, RenderType_LazyTreeView),
        directiveDef(1027, null, 0, LazyTreeView, [
            Store$1,
            TreeNodeService
        ], { root: [
                0,
                'root'
            ]
        }, null),
        textDef(null, ['\n    '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = view.parent.context.$implicit;
        check(view, 3, 0, currVal_0);
    }, null);
}
function View_LazyTreeView_1() {
    return viewDef(0, [
        elementDef(0, null, null, 12, 'li', [], null, null, null, null, null),
        textDef(null, ['\n\n    ']),
        elementDef(0, null, null, 3, 'span', [[
                'class',
                'iconButton'
            ]
        ], null, [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (view.context.$implicit.expand() !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(4, null, 0, NgClass, [
            IterableDiffers,
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], {
            klass: [
                0,
                'klass'
            ],
            ngClass: [
                1,
                'ngClass'
            ]
        }, null),
        pureObjectDef(['tree-node-no-children']),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 1, 'span', [], null, null, null, null, null),
        textDef(null, [
            '',
            ''
        ]),
        textDef(null, ['\n\n    ']),
        anchorDef(256, null, null, 1, null, View_LazyTreeView_2),
        directiveDef(0, null, 0, NgIf, [
            ViewContainerRef,
            TemplateRef
        ], { ngIf: [
                0,
                'ngIf'
            ]
        }, null),
        textDef(null, ['\n  '])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = 'iconButton';
        var currVal_1 = check(view, 4, 0, !view.context.$implicit.showIcon);
        check(view, 3, 0, currVal_0, currVal_1);
        var currVal_2 = view.context.$implicit.expanded;
        check(view, 11, 0, currVal_2);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = view.context.$implicit.icon;
        check(view, 5, 0, currVal_0);
        var currVal_1 = view.context.$implicit.name;
        check(view, 8, 0, currVal_1);
    });
}
function View_LazyTreeView_0() {
    return viewDef(0, [
        elementDef(0, null, null, 4, 'ul', [], null, null, null, null, null),
        textDef(null, ['\n  ']),
        anchorDef(256, null, null, 1, null, View_LazyTreeView_1),
        directiveDef(12, null, 0, NgForOf, [
            ViewContainerRef,
            TemplateRef,
            IterableDiffers
        ], { ngForOf: [
                0,
                'ngForOf'
            ]
        }, null),
        textDef(null, ['\n']),
        textDef(null, ['\n\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.items;
        check(view, 3, 0, currVal_0);
    }, null);
}
var RenderType_LazyTreeView_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_LazyTreeView_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'lazy-tree-view', [], null, null, null, View_LazyTreeView_0, RenderType_LazyTreeView),
        directiveDef(1027, null, 0, LazyTreeView, [
            Store$1,
            TreeNodeService
        ], null, null)
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var LazyTreeViewNgFactory = createComponentFactory('lazy-tree-view', LazyTreeView, View_LazyTreeView_Host_0);

var styles_CountryDemo = [];
var RenderType_CountryDemo = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_CountryDemo,
    data: { animation: [] }
});
function View_CountryDemo_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'h1', [], null, null, null, null, null),
        textDef(null, ['Lazy loaded TreeView using Redux and RxJs']),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 1, 'lazy-tree-view', [], null, null, null, View_LazyTreeView_0, RenderType_LazyTreeView),
        directiveDef(1027, null, 0, LazyTreeView, [
            Store$1,
            TreeNodeService
        ], { root: [
                0,
                'root'
            ]
        }, null)
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.node;
        check(view, 4, 0, currVal_0);
    }, null);
}
var RenderType_CountryDemo_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_CountryDemo_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 3, 'country-demo', [], null, null, null, View_CountryDemo_0, RenderType_CountryDemo),
        directiveDef(1025, null, 0, CountryDemo, [], null, null),
        providerDef(32768, null, 1, Store$1, Store$1, [Http]),
        providerDef(32768, null, 1, TreeNodeService, TreeNodeService, [Store$1])
    ], function (check, view) {
        check(view, 1, 0);
    }, null);
}
var CountryDemoNgFactory = createComponentFactory('country-demo', CountryDemo, View_CountryDemo_Host_0);

var styles_Edge = [];
var RenderType_Edge = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_Edge,
    data: { animation: [] }
});
function View_Edge_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'div', [[
                'class',
                'edge'
            ]
        ], null, null, null, null, null),
        directiveDef(4, null, 0, NgStyle, [
            KeyValueDiffers,
            ElementRef,
            RendererV1
        ], { ngStyle: [
                0,
                'ngStyle'
            ]
        }, null)
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.style;
        check(view, 1, 0, currVal_0);
    }, null);
}
var RenderType_Edge_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_Edge_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'edge', [], null, null, null, View_Edge_0, RenderType_Edge),
        directiveDef(1024, null, 0, Edge, [], null, null)
    ], null, null);
}
var EdgeNgFactory = createComponentFactory('edge', Edge, View_Edge_Host_0);

var styles_AppComponent = [];
var RenderType_AppComponent = createRendererTypeV2({
    encapsulation: 2,
    styles: styles_AppComponent,
    data: { animation: [] }
});
function View_AppComponent_0() {
    return viewDef(0, [
        elementDef(0, null, null, 42, 'div', [[
                'class',
                'container'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(0, null, null, 39, 'nav', [[
                'class',
                'navbar navbar-default'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n        ']),
        elementDef(0, null, null, 36, 'div', [[
                'class',
                'container-fluid'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n            ']),
        elementDef(0, null, null, 33, 'div', [], null, null, null, null, null),
        textDef(null, ['\n                ']),
        elementDef(0, null, null, 30, 'ul', [[
                'class',
                'nav navbar-nav'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 2, 'li', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [
            [
                'class',
                'link'
            ],
            [
                'href',
                'http://www.syntaxsuccess.com'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Home']),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 4, 'li', [], [[
                1,
                'active'
            ]
        ], null, null, null, null),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'link'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 16).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['About']),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 4, 'li', [], [[
                1,
                'active'
            ]
        ], null, null, null, null),
        elementDef(0, null, null, 3, 'a', [[
                'class',
                'link'
            ]
        ], [
            [
                0,
                'target',
                0
            ],
            [
                3,
                'href',
                4
            ]
        ], [[
                null,
                'click'
            ]
        ], function (view, eventName, $event) {
            var allowDefault = true;
            var comp = view.component;
            if (('click' === eventName)) {
                var pd_0 = (nodeValue(view, 22).onClick($event.button, $event.ctrlKey, $event.metaKey) !== false);
                allowDefault = (pd_0 && allowDefault);
            }
            return allowDefault;
        }, null, null),
        directiveDef(10, null, 0, RouterLinkWithHref, [
            Router,
            ActivatedRoute,
            LocationStrategy
        ], { routerLink: [
                0,
                'routerLink'
            ]
        }, null),
        pureArrayDef(1),
        textDef(null, ['Demos']),
        textDef(null, ['\n                    ']),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 2, 'li', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [
            [
                'class',
                'link'
            ],
            [
                'href',
                'components/web-workers/web-worker-demo.html'
            ]
        ], null, null, null, null, null),
        textDef(null, ['Web Workers']),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 2, 'li', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [
            [
                'class',
                'link'
            ],
            [
                'href',
                'upgrade.html'
            ]
        ], null, null, null, null, null),
        textDef(null, ['NgUpgrade']),
        textDef(null, ['\n                    ']),
        elementDef(0, null, null, 2, 'li', [], null, null, null, null, null),
        elementDef(0, null, null, 1, 'a', [
            [
                'class',
                'link'
            ],
            [
                'href',
                'i18n.html'
            ]
        ], null, null, null, null, null),
        textDef(null, ['i18n']),
        textDef(null, ['\n                ']),
        textDef(null, ['\n            ']),
        textDef(null, ['\n        ']),
        textDef(null, ['\n    ']),
        textDef(null, ['\n']),
        textDef(null, ['\n\n']),
        elementDef(0, null, null, 4, 'div', [[
                'class',
                'container'
            ]
        ], null, null, null, null, null),
        textDef(null, ['\n    ']),
        elementDef(256, null, null, 1, 'router-outlet', [[
                'name',
                'msg'
            ]
        ], null, null, null, null, null),
        directiveDef(2, null, 0, RouterOutlet, [
            RouterOutletMap,
            ViewContainerRef,
            ComponentFactoryResolver,
            [
                8,
                'msg'
            ]
        ], null, null),
        textDef(null, ['\n']),
        textDef(null, ['\n']),
        elementDef(256, null, null, 1, 'router-outlet', [], null, null, null, null, null),
        directiveDef(2, null, 0, RouterOutlet, [
            RouterOutletMap,
            ViewContainerRef,
            ComponentFactoryResolver,
            [
                8,
                null
            ]
        ], null, null),
        textDef(null, ['\n'])
    ], function (check, view) {
        var comp = view.component;
        var currVal_0 = check(view, 17, 0, '/about');
        check(view, 16, 0, currVal_0);
        var currVal_1 = check(view, 23, 0, '/demo/spreadsheet');
        check(view, 22, 0, currVal_1);
    }, function (check, view) {
        var comp = view.component;
        var currVal_0 = comp.getLinkStyle('');
        check(view, 14, 0, currVal_0);
        var currVal_1 = nodeValue(view, 16).target;
        var currVal_2 = nodeValue(view, 16).href;
        check(view, 15, 0, currVal_1, currVal_2);
        var currVal_3 = comp.getLinkStyle('/demo');
        check(view, 20, 0, currVal_3);
        var currVal_4 = nodeValue(view, 22).target;
        var currVal_5 = nodeValue(view, 22).href;
        check(view, 21, 0, currVal_4, currVal_5);
    });
}
var RenderType_AppComponent_Host = createRendererTypeV2({
    encapsulation: 2,
    styles: [],
    data: { animation: [] }
});
function View_AppComponent_Host_0() {
    return viewDef(0, [
        elementDef(0, null, null, 1, 'demo-app', [], null, null, null, View_AppComponent_0, RenderType_AppComponent),
        directiveDef(1024, null, 0, AppComponent, [Location], null, null)
    ], null, null);
}
var AppComponentNgFactory = createComponentFactory('demo-app', AppComponent, View_AppComponent_Host_0);

var __extends = (undefined && undefined.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var AppModuleInjector = (function (_super) {
    __extends(AppModuleInjector, _super);
    function AppModuleInjector(parent) {
        return _super.call(this, parent, [
            AboutNgFactory,
            DemoPageNgFactory,
            SpreadsheetNgFactory,
            JqueryIntegrationNgFactory,
            Angular2HostNgFactory,
            AlgorithmsNgFactory,
            GraphNgFactory,
            PubSubNgFactory,
            TextEditorNgFactory,
            AddressBookNgFactory,
            HttpSampleNgFactory,
            TreeViewDemoNgFactory,
            GridDemoNgFactory,
            InputControlsNgFactory,
            ContactListNgFactory,
            BoundTextboxNgFactory,
            IgnoreBindingsNgFactory,
            AddressFormNgFactory,
            CommentDemoNgFactory,
            ParentNgFactory,
            SurveyDemoNgFactory,
            LogDemoNgFactory,
            InputOutputDemoNgFactory,
            RxJsStreamsNgFactory,
            CachingDemoNgFactory,
            RxJsBufferingNgFactory,
            CountryDemoNgFactory,
            EdgeNgFactory,
            AppComponentNgFactory
        ], [AppComponentNgFactory]) || this;
    }
    Object.defineProperty(AppModuleInjector.prototype, "_LOCALE_ID_10", {
        get: function () {
            if ((this.__LOCALE_ID_10 == null)) {
                (this.__LOCALE_ID_10 = _localeFactory(this.parent.get(LOCALE_ID, null)));
            }
            return this.__LOCALE_ID_10;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_NgLocalization_11", {
        get: function () {
            if ((this.__NgLocalization_11 == null)) {
                (this.__NgLocalization_11 = new NgLocaleLocalization(this._LOCALE_ID_10));
            }
            return this.__NgLocalization_11;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_ApplicationRef_17", {
        get: function () {
            if ((this.__ApplicationRef_17 == null)) {
                (this.__ApplicationRef_17 = this._ɵf_16);
            }
            return this.__ApplicationRef_17;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_Compiler_18", {
        get: function () {
            if ((this.__Compiler_18 == null)) {
                (this.__Compiler_18 = new Compiler());
            }
            return this.__Compiler_18;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_APP_ID_19", {
        get: function () {
            if ((this.__APP_ID_19 == null)) {
                (this.__APP_ID_19 = _appIdRandomProviderFactory());
            }
            return this.__APP_ID_19;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_HAMMER_GESTURE_CONFIG_20", {
        get: function () {
            if ((this.__HAMMER_GESTURE_CONFIG_20 == null)) {
                (this.__HAMMER_GESTURE_CONFIG_20 = new HammerGestureConfig());
            }
            return this.__HAMMER_GESTURE_CONFIG_20;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_EVENT_MANAGER_PLUGINS_21", {
        get: function () {
            if ((this.__EVENT_MANAGER_PLUGINS_21 == null)) {
                (this.__EVENT_MANAGER_PLUGINS_21 = [
                    new DomEventsPlugin(this.parent.get(DOCUMENT)),
                    new KeyEventsPlugin(this.parent.get(DOCUMENT)),
                    new HammerGesturesPlugin(this.parent.get(DOCUMENT), this._HAMMER_GESTURE_CONFIG_20)
                ]);
            }
            return this.__EVENT_MANAGER_PLUGINS_21;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_EventManager_22", {
        get: function () {
            if ((this.__EventManager_22 == null)) {
                (this.__EventManager_22 = new EventManager(this._EVENT_MANAGER_PLUGINS_21, this.parent.get(NgZone)));
            }
            return this.__EventManager_22;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_AnimationDriver_24", {
        get: function () {
            if ((this.__AnimationDriver_24 == null)) {
                (this.__AnimationDriver_24 = _resolveDefaultAnimationDriver());
            }
            return this.__AnimationDriver_24;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_\u0275DomRootRenderer_25", {
        get: function () {
            if ((this.__ɵDomRootRenderer_25 == null)) {
                (this.__ɵDomRootRenderer_25 = new DomRootRenderer_(this.parent.get(DOCUMENT), this._EventManager_22, this._ɵDomSharedStylesHost_23, this._AnimationDriver_24, this._APP_ID_19));
            }
            return this.__ɵDomRootRenderer_25;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_NgProbeToken_26", {
        get: function () {
            if ((this.__NgProbeToken_26 == null)) {
                (this.__NgProbeToken_26 = [routerNgProbeToken()]);
            }
            return this.__NgProbeToken_26;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_RootRenderer_27", {
        get: function () {
            if ((this.__RootRenderer_27 == null)) {
                (this.__RootRenderer_27 = _createConditionalRootRenderer(this._ɵDomRootRenderer_25, this.parent.get(NgProbeToken$$1, null), this._NgProbeToken_26));
            }
            return this.__RootRenderer_27;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_DomSanitizer_28", {
        get: function () {
            if ((this.__DomSanitizer_28 == null)) {
                (this.__DomSanitizer_28 = new DomSanitizerImpl(this.parent.get(DOCUMENT)));
            }
            return this.__DomSanitizer_28;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_Sanitizer_29", {
        get: function () {
            if ((this.__Sanitizer_29 == null)) {
                (this.__Sanitizer_29 = this._DomSanitizer_28);
            }
            return this.__Sanitizer_29;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_\u0275z_30", {
        get: function () {
            if ((this.__ɵz_30 == null)) {
                (this.__ɵz_30 = new AnimationQueue(this.parent.get(NgZone)));
            }
            return this.__ɵz_30;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_\u0275ViewUtils_31", {
        get: function () {
            if ((this.__ɵViewUtils_31 == null)) {
                (this.__ɵViewUtils_31 = new ViewUtils(this._RootRenderer_27, this._Sanitizer_29, this._ɵz_30));
            }
            return this.__ɵViewUtils_31;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_IterableDiffers_32", {
        get: function () {
            if ((this.__IterableDiffers_32 == null)) {
                (this.__IterableDiffers_32 = _iterableDiffersFactory());
            }
            return this.__IterableDiffers_32;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_KeyValueDiffers_33", {
        get: function () {
            if ((this.__KeyValueDiffers_33 == null)) {
                (this.__KeyValueDiffers_33 = _keyValueDiffersFactory());
            }
            return this.__KeyValueDiffers_33;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_\u0275DomRendererFactoryV2_34", {
        get: function () {
            if ((this.__ɵDomRendererFactoryV2_34 == null)) {
                (this.__ɵDomRendererFactoryV2_34 = new DomRendererFactoryV2(this._EventManager_22, this._ɵDomSharedStylesHost_23));
            }
            return this.__ɵDomRendererFactoryV2_34;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_RendererFactoryV2_35", {
        get: function () {
            if ((this.__RendererFactoryV2_35 == null)) {
                (this.__RendererFactoryV2_35 = this._ɵDomRendererFactoryV2_34);
            }
            return this.__RendererFactoryV2_35;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_\u0275SharedStylesHost_36", {
        get: function () {
            if ((this.__ɵSharedStylesHost_36 == null)) {
                (this.__ɵSharedStylesHost_36 = this._ɵDomSharedStylesHost_23);
            }
            return this.__ɵSharedStylesHost_36;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_Meta_37", {
        get: function () {
            if ((this.__Meta_37 == null)) {
                (this.__Meta_37 = new Meta(this.parent.get(DOCUMENT)));
            }
            return this.__Meta_37;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_Title_38", {
        get: function () {
            if ((this.__Title_38 == null)) {
                (this.__Title_38 = new Title(this.parent.get(DOCUMENT)));
            }
            return this.__Title_38;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_FormBuilder_39", {
        get: function () {
            if ((this.__FormBuilder_39 == null)) {
                (this.__FormBuilder_39 = new FormBuilder());
            }
            return this.__FormBuilder_39;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_\u0275i_40", {
        get: function () {
            if ((this.__ɵi_40 == null)) {
                (this.__ɵi_40 = new RadioControlRegistry());
            }
            return this.__ɵi_40;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_BrowserXhr_41", {
        get: function () {
            if ((this.__BrowserXhr_41 == null)) {
                (this.__BrowserXhr_41 = new BrowserXhr());
            }
            return this.__BrowserXhr_41;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_ResponseOptions_42", {
        get: function () {
            if ((this.__ResponseOptions_42 == null)) {
                (this.__ResponseOptions_42 = new BaseResponseOptions());
            }
            return this.__ResponseOptions_42;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_XSRFStrategy_43", {
        get: function () {
            if ((this.__XSRFStrategy_43 == null)) {
                (this.__XSRFStrategy_43 = _createDefaultCookieXSRFStrategy());
            }
            return this.__XSRFStrategy_43;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_XHRBackend_44", {
        get: function () {
            if ((this.__XHRBackend_44 == null)) {
                (this.__XHRBackend_44 = new XHRBackend(this._BrowserXhr_41, this._ResponseOptions_42, this._XSRFStrategy_43));
            }
            return this.__XHRBackend_44;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_RequestOptions_45", {
        get: function () {
            if ((this.__RequestOptions_45 == null)) {
                (this.__RequestOptions_45 = new BaseRequestOptions());
            }
            return this.__RequestOptions_45;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_Http_46", {
        get: function () {
            if ((this.__Http_46 == null)) {
                (this.__Http_46 = httpFactory(this._XHRBackend_44, this._RequestOptions_45));
            }
            return this.__Http_46;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_LocationStrategy_47", {
        get: function () {
            if ((this.__LocationStrategy_47 == null)) {
                (this.__LocationStrategy_47 = new HashLocationStrategy(this.parent.get(PlatformLocation), this.parent.get(APP_BASE_HREF, null)));
            }
            return this.__LocationStrategy_47;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_Location_48", {
        get: function () {
            if ((this.__Location_48 == null)) {
                (this.__Location_48 = new Location(this._LocationStrategy_47));
            }
            return this.__Location_48;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_UrlSerializer_49", {
        get: function () {
            if ((this.__UrlSerializer_49 == null)) {
                (this.__UrlSerializer_49 = new DefaultUrlSerializer());
            }
            return this.__UrlSerializer_49;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_RouterOutletMap_50", {
        get: function () {
            if ((this.__RouterOutletMap_50 == null)) {
                (this.__RouterOutletMap_50 = new RouterOutletMap());
            }
            return this.__RouterOutletMap_50;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_NgModuleFactoryLoader_51", {
        get: function () {
            if ((this.__NgModuleFactoryLoader_51 == null)) {
                (this.__NgModuleFactoryLoader_51 = new SystemJsNgModuleLoader(this._Compiler_18, this.parent.get(SystemJsNgModuleLoaderConfig, null)));
            }
            return this.__NgModuleFactoryLoader_51;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_ROUTES_52", {
        get: function () {
            if ((this.__ROUTES_52 == null)) {
                (this.__ROUTES_52 = [[
                        {
                            path: '',
                            redirectTo: '/about',
                            pathMatch: 'full'
                        },
                        {
                            path: 'about',
                            component: About
                        },
                        {
                            path: 'demo',
                            component: DemoPage,
                            children: [
                                {
                                    path: 'spreadsheet',
                                    component: Spreadsheet
                                },
                                {
                                    path: 'jquery',
                                    component: JqueryIntegration
                                },
                                {
                                    path: 'react',
                                    component: Angular2Host
                                },
                                {
                                    path: 'algorithms',
                                    component: Algorithms
                                },
                                {
                                    path: 'graph',
                                    component: Graph
                                },
                                {
                                    path: 'pub-sub',
                                    component: PubSub
                                },
                                {
                                    path: 'text-editor',
                                    component: TextEditor
                                },
                                {
                                    path: 'address',
                                    component: AddressBook
                                },
                                {
                                    path: 'http',
                                    component: HttpSample
                                },
                                {
                                    path: 'treeview',
                                    component: TreeViewDemo
                                },
                                {
                                    path: 'grid',
                                    component: GridDemo
                                },
                                {
                                    path: 'input',
                                    component: InputControls
                                },
                                {
                                    path: 'contact',
                                    component: ContactList
                                },
                                {
                                    path: 'textbox',
                                    component: BoundTextbox
                                },
                                {
                                    path: 'non-bindable',
                                    component: IgnoreBindings
                                },
                                {
                                    path: 'form',
                                    component: AddressForm
                                },
                                {
                                    path: 'change',
                                    component: CommentDemo
                                },
                                {
                                    path: 'parent-child',
                                    component: Parent
                                },
                                {
                                    path: 'survey',
                                    component: SurveyDemo
                                },
                                {
                                    path: 'redux',
                                    component: LogDemo
                                },
                                {
                                    path: 'iodemo',
                                    component: InputOutputDemo
                                },
                                {
                                    path: 'rxjs',
                                    component: RxJsStreams
                                },
                                {
                                    path: 'friends',
                                    component: CachingDemo
                                },
                                {
                                    path: 'buffering',
                                    component: RxJsBuffering
                                },
                                {
                                    path: 'countries',
                                    component: CountryDemo
                                }
                            ]
                        }
                    ]
                ]);
            }
            return this.__ROUTES_52;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_ROUTER_CONFIGURATION_53", {
        get: function () {
            if ((this.__ROUTER_CONFIGURATION_53 == null)) {
                (this.__ROUTER_CONFIGURATION_53 = {});
            }
            return this.__ROUTER_CONFIGURATION_53;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_Router_54", {
        get: function () {
            if ((this.__Router_54 == null)) {
                (this.__Router_54 = setupRouter(this._ApplicationRef_17, this._UrlSerializer_49, this._RouterOutletMap_50, this._Location_48, this, this._NgModuleFactoryLoader_51, this._Compiler_18, this._ROUTES_52, this._ROUTER_CONFIGURATION_53, this.parent.get(UrlHandlingStrategy, null), this.parent.get(RouteReuseStrategy, null)));
            }
            return this.__Router_54;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_ActivatedRoute_55", {
        get: function () {
            if ((this.__ActivatedRoute_55 == null)) {
                (this.__ActivatedRoute_55 = rootRoute(this._Router_54));
            }
            return this.__ActivatedRoute_55;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_PreloadAllModules_59", {
        get: function () {
            if ((this.__PreloadAllModules_59 == null)) {
                (this.__PreloadAllModules_59 = new PreloadAllModules());
            }
            return this.__PreloadAllModules_59;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_ROUTER_INITIALIZER_60", {
        get: function () {
            if ((this.__ROUTER_INITIALIZER_60 == null)) {
                (this.__ROUTER_INITIALIZER_60 = initialRouterNavigation(this._Router_54, this._ApplicationRef_17, this._RouterPreloader_58, this._ROUTER_CONFIGURATION_53));
            }
            return this.__ROUTER_INITIALIZER_60;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_APP_BOOTSTRAP_LISTENER_61", {
        get: function () {
            if ((this.__APP_BOOTSTRAP_LISTENER_61 == null)) {
                (this.__APP_BOOTSTRAP_LISTENER_61 = [this._ROUTER_INITIALIZER_60]);
            }
            return this.__APP_BOOTSTRAP_LISTENER_61;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppModuleInjector.prototype, "_AddressBookTitleService_62", {
        get: function () {
            if ((this.__AddressBookTitleService_62 == null)) {
                (this.__AddressBookTitleService_62 = new AddressBookTitleService());
            }
            return this.__AddressBookTitleService_62;
        },
        enumerable: true,
        configurable: true
    });
    AppModuleInjector.prototype.createInternal = function () {
        this._CommonModule_0 = new CommonModule();
        this._ApplicationModule_1 = new ApplicationModule();
        this._BrowserModule_2 = new BrowserModule(this.parent.get(BrowserModule, null));
        this._ɵba_3 = new InternalFormsSharedModule();
        this._ReactiveFormsModule_4 = new ReactiveFormsModule();
        this._ɵa_5 = provideForRootGuard(this.parent.get(Router, null));
        this._RouterModule_6 = new RouterModule(this._ɵa_5);
        this._FormsModule_7 = new FormsModule();
        this._HttpModule_8 = new HttpModule();
        this._AppModule_9 = new AppModule();
        this._ErrorHandler_12 = errorHandler();
        this._APP_INITIALIZER_13 = [_initViewEngine];
        this._ApplicationInitStatus_14 = new ApplicationInitStatus(this._APP_INITIALIZER_13);
        this._Testability_15 = new Testability(this.parent.get(NgZone));
        this._ɵf_16 = new ApplicationRef_(this.parent.get(NgZone), this.parent.get(Console), this, this._ErrorHandler_12, this, this._ApplicationInitStatus_14, this.parent.get(TestabilityRegistry, null), this._Testability_15);
        this._ɵDomSharedStylesHost_23 = new DomSharedStylesHost(this.parent.get(DOCUMENT));
        this._NoPreloading_56 = new NoPreloading();
        this._PreloadingStrategy_57 = this._NoPreloading_56;
        this._RouterPreloader_58 = new RouterPreloader(this._Router_54, this._NgModuleFactoryLoader_51, this._Compiler_18, this, this._PreloadingStrategy_57);
        return this._AppModule_9;
    };
    AppModuleInjector.prototype.getInternal = function (token, notFoundResult) {
        if ((token === CommonModule)) {
            return this._CommonModule_0;
        }
        if ((token === ApplicationModule)) {
            return this._ApplicationModule_1;
        }
        if ((token === BrowserModule)) {
            return this._BrowserModule_2;
        }
        if ((token === InternalFormsSharedModule)) {
            return this._ɵba_3;
        }
        if ((token === ReactiveFormsModule)) {
            return this._ReactiveFormsModule_4;
        }
        if ((token === ROUTER_FORROOT_GUARD)) {
            return this._ɵa_5;
        }
        if ((token === RouterModule)) {
            return this._RouterModule_6;
        }
        if ((token === FormsModule)) {
            return this._FormsModule_7;
        }
        if ((token === HttpModule)) {
            return this._HttpModule_8;
        }
        if ((token === AppModule)) {
            return this._AppModule_9;
        }
        if ((token === LOCALE_ID)) {
            return this._LOCALE_ID_10;
        }
        if ((token === NgLocalization)) {
            return this._NgLocalization_11;
        }
        if ((token === ErrorHandler)) {
            return this._ErrorHandler_12;
        }
        if ((token === APP_INITIALIZER)) {
            return this._APP_INITIALIZER_13;
        }
        if ((token === ApplicationInitStatus)) {
            return this._ApplicationInitStatus_14;
        }
        if ((token === Testability)) {
            return this._Testability_15;
        }
        if ((token === ApplicationRef_)) {
            return this._ɵf_16;
        }
        if ((token === ApplicationRef)) {
            return this._ApplicationRef_17;
        }
        if ((token === Compiler)) {
            return this._Compiler_18;
        }
        if ((token === APP_ID)) {
            return this._APP_ID_19;
        }
        if ((token === HAMMER_GESTURE_CONFIG)) {
            return this._HAMMER_GESTURE_CONFIG_20;
        }
        if ((token === EVENT_MANAGER_PLUGINS)) {
            return this._EVENT_MANAGER_PLUGINS_21;
        }
        if ((token === EventManager)) {
            return this._EventManager_22;
        }
        if ((token === DomSharedStylesHost)) {
            return this._ɵDomSharedStylesHost_23;
        }
        if ((token === AnimationDriver)) {
            return this._AnimationDriver_24;
        }
        if ((token === DomRootRenderer)) {
            return this._ɵDomRootRenderer_25;
        }
        if ((token === NgProbeToken$1)) {
            return this._NgProbeToken_26;
        }
        if ((token === RootRenderer)) {
            return this._RootRenderer_27;
        }
        if ((token === DomSanitizer)) {
            return this._DomSanitizer_28;
        }
        if ((token === Sanitizer)) {
            return this._Sanitizer_29;
        }
        if ((token === AnimationQueue)) {
            return this._ɵz_30;
        }
        if ((token === ViewUtils)) {
            return this._ɵViewUtils_31;
        }
        if ((token === IterableDiffers)) {
            return this._IterableDiffers_32;
        }
        if ((token === KeyValueDiffers)) {
            return this._KeyValueDiffers_33;
        }
        if ((token === DomRendererFactoryV2)) {
            return this._ɵDomRendererFactoryV2_34;
        }
        if ((token === RendererFactoryV2)) {
            return this._RendererFactoryV2_35;
        }
        if ((token === SharedStylesHost)) {
            return this._ɵSharedStylesHost_36;
        }
        if ((token === Meta)) {
            return this._Meta_37;
        }
        if ((token === Title)) {
            return this._Title_38;
        }
        if ((token === FormBuilder)) {
            return this._FormBuilder_39;
        }
        if ((token === RadioControlRegistry)) {
            return this._ɵi_40;
        }
        if ((token === BrowserXhr)) {
            return this._BrowserXhr_41;
        }
        if ((token === ResponseOptions)) {
            return this._ResponseOptions_42;
        }
        if ((token === XSRFStrategy)) {
            return this._XSRFStrategy_43;
        }
        if ((token === XHRBackend)) {
            return this._XHRBackend_44;
        }
        if ((token === RequestOptions)) {
            return this._RequestOptions_45;
        }
        if ((token === Http)) {
            return this._Http_46;
        }
        if ((token === LocationStrategy)) {
            return this._LocationStrategy_47;
        }
        if ((token === Location)) {
            return this._Location_48;
        }
        if ((token === UrlSerializer)) {
            return this._UrlSerializer_49;
        }
        if ((token === RouterOutletMap)) {
            return this._RouterOutletMap_50;
        }
        if ((token === NgModuleFactoryLoader)) {
            return this._NgModuleFactoryLoader_51;
        }
        if ((token === ROUTES)) {
            return this._ROUTES_52;
        }
        if ((token === ROUTER_CONFIGURATION)) {
            return this._ROUTER_CONFIGURATION_53;
        }
        if ((token === Router)) {
            return this._Router_54;
        }
        if ((token === ActivatedRoute)) {
            return this._ActivatedRoute_55;
        }
        if ((token === NoPreloading)) {
            return this._NoPreloading_56;
        }
        if ((token === PreloadingStrategy)) {
            return this._PreloadingStrategy_57;
        }
        if ((token === RouterPreloader)) {
            return this._RouterPreloader_58;
        }
        if ((token === PreloadAllModules)) {
            return this._PreloadAllModules_59;
        }
        if ((token === ROUTER_INITIALIZER)) {
            return this._ROUTER_INITIALIZER_60;
        }
        if ((token === APP_BOOTSTRAP_LISTENER)) {
            return this._APP_BOOTSTRAP_LISTENER_61;
        }
        if ((token === AddressBookTitleService)) {
            return this._AddressBookTitleService_62;
        }
        return notFoundResult;
    };
    AppModuleInjector.prototype.destroyInternal = function () {
        this._ɵf_16.ngOnDestroy();
        this._ɵDomSharedStylesHost_23.ngOnDestroy();
        this._RouterPreloader_58.ngOnDestroy();
    };
    return AppModuleInjector;
}(NgModuleInjector));
var AppModuleNgFactory = new NgModuleFactory(AppModuleInjector, AppModule);

enableProdMode();
platformBrowser().bootstrapModuleFactory(AppModuleNgFactory);

}());
